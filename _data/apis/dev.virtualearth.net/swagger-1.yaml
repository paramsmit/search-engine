---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:20:\"Location Recognition\";s:11:\"description\";s:13:\"Bing
  Maps API\";s:7:\"version\";s:32:\"Build_air_bing_bingmaps_bingmaps\";}"
host: dev.virtualearth.net
paths:
  /REST/v1/LocationRecog/{point}:
    get:
      tags:
      - Location V1
      summary: Location Recognition
      operationId: getRESTV1LocationRecogByPoint
      produces:
      - application/json
      parameters:
      - in: path
        name: point
        description: Point
        required: true
        type: string
      - in: query
        name: radius
        description: Radius
        type: string
      - in: query
        name: top
        description: Top
        type: string
      - in: query
        name: dateTime
        description: Datetime Stamp
        type: string
      - in: query
        name: distanceUnit
        description: Distance Unit
        type: string
      - in: query
        name: verboseplacenames
        description: Verbose Names
        type: string
      - in: query
        name: includeEntityTypes
        description: Entity Types
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.LocationRecogResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Elevation/List:
    get:
      tags:
      - Elevation V1
      summary: Get Elevation for Latitude and Longitude
      operationId: getRESTV1ElevationList
      produces:
      - application/xml
      - application/json
      parameters:
      - in: query
        name: points
        description: Comma-separated list of latitude and longitude values
        required: true
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
    post:
      tags:
      - Elevation V1
      summary: Get Elevation for Latitude and Longitude
      operationId: postRESTV1ElevationList
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: header
        name: Content-Length
        description: Size of entity body, in OCTETs
        type: string
      - in: header
        name: Content-Type
        description: Set to `text/plain; charset=utf-8`
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: body
        name: body
        description: Comma-seperated list of lat/longs, e.g. `points=38.8895,77.0501,38.8877,-77.0472,38.8904,-77.0474,38.8896,77.0351`
        required: true
        schema:
          type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Elevation/Polyline:
    get:
      tags:
      - Elevation V1
      summary: Get elevations at equally-spaced locations along a polyline path
      operationId: getRESTV1ElevationPolyline
      produces:
      - application/xml
      - application/json
      parameters:
      - in: query
        name: points
        description: Comma-separated list of latitude and longitude values
        required: true
        type: string
      - in: query
        name: samples
        description: Specifies the number of equally-spaced elevation values to provide
          along a polyline path
        required: true
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: query
        name: heights
        description: Specifies which sea level model to use to calculate elevation
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
    post:
      tags:
      - Elevation V1
      summary: Get elevations at equally-spaced locations along a polyline path
      operationId: postRESTV1ElevationPolyline
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: header
        name: Content-Length
        description: Size of entity body, in OCTETs
        type: string
      - in: header
        name: Content-Type
        description: Set to `text/plain; charset=utf-8`
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: query
        name: heights
        description: Specifies which sea level model to use to calculate elevation
        type: string
      - in: body
        name: body
        description: Comma-seperated list of lat/longs, e.g. `points=38.8895,77.0501,38.8877,-77.0472,38.8904,-77.0474,38.8896,77.0351`
        required: true
        schema:
          type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Elevation/Bounds:
    get:
      tags:
      - Elevation V1
      summary: Get elevations at equally-spaced locations within an area on the Earth
        defined as a bounding box
      operationId: getRESTV1ElevationBounds
      produces:
      - application/xml
      - application/json
      parameters:
      - in: query
        name: bounds
        description: Specifies the rectangular area over which to provide elevation
          values
        type: string
      - in: query
        name: rows
        description: Specifies the number of rows to use to divide the bounding box
          area into a grid
        type: string
      - in: query
        name: cols
        description: Specifies the number of columns to use to divide the bounding
          box area into a grid
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: query
        name: heights
        description: Specifies which sea level model to use to calculate elevation
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Elevation/SeaLevel:
    get:
      tags:
      - Elevation V1
      summary: Get the offset of the geoid sea level Earth model from the ellipsoid
        Earth model at a set of latitude and longitude coordinates
      operationId: getRESTV1ElevationSeaLevel
      produces:
      - application/json
      - application/xml
      parameters:
      - in: query
        name: points
        description: Comma-separated list of latitude and longitude values
        required: true
        type: string
      - in: query
        name: heights
        description: Specifies which sea level model to use to calculate elevation
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
    post:
      tags:
      - Elevation V1
      summary: Get the offset of the geoid sea level Earth model from the ellipsoid
        Earth model at a set of latitude and longitude coordinates
      operationId: postRESTV1ElevationSeaLevel
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: header
        name: Content-Length
        description: Size of entity body, in OCTETs
        type: string
      - in: header
        name: Content-Type
        description: Set to `text/plain; charset=utf-8`
        type: string
      - in: query
        name: heights
        description: Specifies which sea level model to use to calculate elevation
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: body
        name: body
        description: Comma-seperated list of lat/longs, e.g. `points=38.8895,77.0501,38.8877,-77.0472,38.8904,-77.0474,38.8896,77.0351`
        required: true
        schema:
          type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations/{countryRegion}/{adminDistrict}/{postalCode}/{locality}:
    get:
      tags:
      - Location V1
      summary: Find a Location by Address
      operationId: getRESTV1LocationsByCountryRegionByAdminDistrictByPostalCodeByLocality
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: adminDistrict
        description: Country or Region
        required: true
        type: string
      - in: path
        name: locality
        description: City or Neighborhood
        required: true
        type: string
      - in: path
        name: postalCode
        description: Postal Code
        required: true
        type: string
      - in: query
        name: addressLine
        description: Official Street Address
        type: string
      - in: path
        name: countryRegion
        description: ISO Country Code
        required: true
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: maxResults
        description: Max number of locations to return
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations/{countryRegion}/{adminDistrict}/{postalCode}:
    get:
      tags:
      - Location V1
      summary: Find a Location by Address
      operationId: getRESTV1LocationsByCountryRegionByAdminDistrictByPostalCode
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: adminDistrict
        description: Country or Region
        required: true
        type: string
      - in: path
        name: postalCode
        description: Postal Code
        required: true
        type: string
      - in: query
        name: addressLine
        description: Official Street Address
        type: string
      - in: path
        name: countryRegion
        description: ISO Country Code
        required: true
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: maxResults
        description: Max number of locations to return
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations/{countryRegion}/{adminDistrict}:
    get:
      tags:
      - Location V1
      summary: Find a Location by Address
      operationId: getRESTV1LocationsByCountryRegionByAdminDistrict
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: adminDistrict
        description: Country or Region
        required: true
        type: string
      - in: query
        name: addressLine
        description: Official Street Address
        type: string
      - in: path
        name: countryRegion
        description: ISO Country Code
        required: true
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: maxResults
        description: Max number of locations to return
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations/{countryRegion}:
    get:
      tags:
      - Location V1
      summary: Find a Location by Address
      operationId: getRESTV1LocationsByCountryRegion
      produces:
      - application/json
      - application/xml
      parameters:
      - in: query
        name: addressLine
        description: Official Street Address
        type: string
      - in: path
        name: countryRegion
        description: ISO Country Code
        required: true
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: maxResults
        description: Max number of locations to return
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations:
    get:
      tags:
      - Location V1
      summary: Find a Location by Address
      operationId: getRESTV1Locations
      produces:
      - application/json
      - application/xml
      parameters:
      - in: query
        name: addressLine
        description: Official Street Address
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: maxResults
        description: Max number of locations to return
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations/{query}:
    get:
      tags:
      - Location V1
      summary: Find a Location by Query
      operationId: getRESTV1LocationsByQuery
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: query
        description: A string that contains information about a location, such as
          an address or landmark name.
        required: true
        type: string
      - in: query
        name: maxResults
        description: Max number of locations to return
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Locations/{point}:
    get:
      tags:
      - Location V1
      summary: Find a Location by Point
      operationId: getRESTV1LocationsByPoint
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: point
        description: Latitude,Longitude
        required: true
        type: string
      - in: query
        name: includeEntityTypes
        description: Specifies the entity types that you want to return in the response.
        type: string
      - in: query
        name: includeNeighborhood
        description: Specifies whether to include neighborhood in response (`1` is
          true, `0` if false)
        type: string
      - in: query
        name: include
        description: Only valid value is `ciso2`, which includes the ISO country code
          in response addresses
        type: string
      - in: query
        name: output
        description: Output Format
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.MultipleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
  /REST/v1/Imagery/Map/{imagerySet}/{centerPoint}/{zoomLevel}:
    get:
      tags:
      - Imagery V1
      summary: Get a map that is centered at a specified point
      operationId: getRESTV1ImageryMapByImagerySetByCenterPointByZoomLevel
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: path
        name: centerPoint
        description: A point on the Earth where the map is centered
        required: true
        type: string
      - in: path
        name: zoomLevel
        description: The level of zoom to display
        required: true
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Map/{imagerySet}/{centerPoint}:
    get:
      tags:
      - Imagery V1
      summary: Get a map that is centered at a specified point
      operationId: getRESTV1ImageryMapByImagerySetByCenterPoint
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: path
        name: centerPoint
        description: A point on the Earth where the map is centered
        required: true
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Map/{imagerySet}:
    get:
      tags:
      - Imagery V1
      summary: Get a map that is centered at a specified point
      operationId: getRESTV1ImageryMapByImagerySet
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Map/{imagerySet}/{centerPoint}/{zoomLevel}/Routes:
    get:
      tags:
      - Imagery V1
      summary: Get a map with the specified route.
      operationId: getRESTV1ImageryMapByImagerySetByCenterPointByZoomLevelRoutes
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: path
        name: centerPoint
        description: A point on the Earth where the map is centered
        required: true
        type: string
      - in: path
        name: zoomLevel
        description: The level of zoom to display
        required: true
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: avoid
        description: 'Specifies the road type or types (deliminated with a comma)
          to minimize or avoid when the route is created for the driving travel mode:
          `highways`, `tolls`, `minimizeTolls`, `minimizeHighways`.'
        type: string
      - in: query
        name: distanceBeforeFirstTurn
        description: Specifies the distance before the first turn is allowed in the
          route. This option only applies to the driving travel mode
        type: string
      - in: query
        name: dateTime
        description: The desired transit time
        type: string
      - in: query
        name: maxSolutions
        description: Specifies the maximum number of transit routes to return
        type: string
      - in: query
        name: optimize
        description: 'Specifies what parameters to use to optimize the route on the
          map: `distance`, `time`, or `timeWithTraffic`'
        type: string
      - in: query
        name: timeType
        description: 'Specifies how to interpret the date and transit time value that
          is specified by the dateTime parameter: `Arrival`, `Departure`, `LastAvailable`'
        type: string
      - in: query
        name: travelMode
        description: 'The mode of travel for the route: `Driving`, `Walking`, or `Transit`'
        type: string
      - in: query
        name: waypoint.n
        description: A list of two or more waypoints (e.g. `wp.1`, wp.2`, etc. for
          the route), e.g. `waypoint.1=San%20Francisco&amp;waypoint.2=Seattle`
        required: true
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Map/{imagerySet}/{centerPoint}/Routes:
    get:
      tags:
      - Imagery V1
      summary: Get a map with the specified route.
      operationId: getRESTV1ImageryMapByImagerySetByCenterPointRoutes
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: path
        name: centerPoint
        description: A point on the Earth where the map is centered
        required: true
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: avoid
        description: 'Specifies the road type or types (deliminated with a comma)
          to minimize or avoid when the route is created for the driving travel mode:
          `highways`, `tolls`, `minimizeTolls`, `minimizeHighways`.'
        type: string
      - in: query
        name: distanceBeforeFirstTurn
        description: Specifies the distance before the first turn is allowed in the
          route. This option only applies to the driving travel mode
        type: string
      - in: query
        name: dateTime
        description: The desired transit time
        type: string
      - in: query
        name: maxSolutions
        description: Specifies the maximum number of transit routes to return
        type: string
      - in: query
        name: optimize
        description: 'Specifies what parameters to use to optimize the route on the
          map: `distance`, `time`, or `timeWithTraffic`'
        type: string
      - in: query
        name: timeType
        description: 'Specifies how to interpret the date and transit time value that
          is specified by the dateTime parameter: `Arrival`, `Departure`, `LastAvailable`'
        type: string
      - in: query
        name: travelMode
        description: 'The mode of travel for the route: `Driving`, `Walking`, or `Transit`'
        type: string
      - in: query
        name: waypoint.n
        description: A list of two or more waypoints (e.g. `wp.1`, wp.2`, etc. for
          the route), e.g. `waypoint.1=San%20Francisco&amp;waypoint.2=Seattle`
        required: true
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Map/{imagerySet}/Routes:
    get:
      tags:
      - Imagery V1
      summary: Get a map with the specified route.
      operationId: getRESTV1ImageryMapByImagerySetRoutes
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: avoid
        description: 'Specifies the road type or types (deliminated with a comma)
          to minimize or avoid when the route is created for the driving travel mode:
          `highways`, `tolls`, `minimizeTolls`, `minimizeHighways`.'
        type: string
      - in: query
        name: distanceBeforeFirstTurn
        description: Specifies the distance before the first turn is allowed in the
          route. This option only applies to the driving travel mode
        type: string
      - in: query
        name: dateTime
        description: The desired transit time
        type: string
      - in: query
        name: maxSolutions
        description: Specifies the maximum number of transit routes to return
        type: string
      - in: query
        name: optimize
        description: 'Specifies what parameters to use to optimize the route on the
          map: `distance`, `time`, or `timeWithTraffic`'
        type: string
      - in: query
        name: timeType
        description: 'Specifies how to interpret the date and transit time value that
          is specified by the dateTime parameter: `Arrival`, `Departure`, `LastAvailable`'
        type: string
      - in: query
        name: travelMode
        description: 'The mode of travel for the route: `Driving`, `Walking`, or `Transit`'
        type: string
      - in: query
        name: waypoint.n
        description: A list of two or more waypoints (e.g. `wp.1`, wp.2`, etc. for
          the route), e.g. `waypoint.1=San%20Francisco&amp;waypoint.2=Seattle`
        required: true
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Map/{imagerySet}/{query}:
    get:
      tags:
      - Imagery V1
      summary: Get a map that is based on a query
      operationId: getRESTV1ImageryMapByImagerySetByQuery
      parameters:
      - in: path
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `CanvasDark`, `CanvasLight`, `CanvasGray`, `Road`'
        required: true
        type: string
      - in: path
        name: query
        description: A query string that is used to determine the map location to
          display -- *Required when route, center point, or map area is not specified*
        required: true
        type: string
      - in: query
        name: centerPoint
        description: A point on the Earth where the map is centered
        type: string
      - in: query
        name: zoomLevel
        description: The level of zoom to display
        type: string
      - in: query
        name: mapSize
        description: The width and height in pixels of the static map output, e.g.
          `mapSize=100,600`
        type: string
      - in: query
        name: pushpin
        description: One or more pushpin locations to display on the map. A series
          of values that include a Point value (latitude and longitude) with options
          to add a label of up to three (3) characters and to specify an icon style,
          e.g., `pushpin=47.610,-122.107;5;P10`
        type: string
      - in: query
        name: mapLayer
        description: 'A display layer that renders on top of the imagery set: Default
          is `TrafficFlow` and, in the UK, `OrdnanceSurvey` is available.'
        type: string
      - in: query
        name: format
        description: 'The image format to use for the static map: `gif`, `jpeg`, or
          `png`'
        type: string
      - in: query
        name: mapMetadata
        description: 'Specifies whether to return metadata for the static map instead
          of the image: `1` to return metadata with image, and `0` (default) to not
          return metadata.'
        type: string
      - in: query
        name: mapArea
        description: A rectangular area specified as a bounding box to display on
          the map, e.g. `45.219,-122.325,47.610,-122.107`
        type: string
      - in: query
        name: dpi
        description: 'Specifies the resolution of the labels on the image to retrieve:
          `large` or `null`'
        type: string
      - in: query
        name: highlightEntity
        description: Highlights a polygon for an entity, `1` to turn highligh on and
          `0` to turn highlight off
        type: string
      - in: query
        name: declutterPins
        description: 'Specifies whether to change the display of overlapping pushpins
          so that they display separately on a map: `1` to declutter, `0` no decluter
          (default). This feature is only supported when using the default pushpin
          style'
        type: string
      - in: query
        name: style
        description: Specifies a custom map style to apply to the road maps
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Image of Map
  /REST/v1/Imagery/Metadata:
    get:
      tags:
      - Imagery V1
      summary: Get the metadata for an imagery set
      operationId: getRESTV1ImageryMetadata
      produces:
      - application/json
      - application/xml
      parameters:
      - in: query
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `Birdseye`, `BirdseyeWithLabels`, `BirdseyeV2`, `BirdseyeV2WithLabels`,
          `RoadOnDemand`, `OrdnanceSurvey`, `CanvasDark`, `CanvasLight`, `CanvasGray`,
          `Road`'
        required: true
        type: string
      - in: query
        name: centerPoint
        description: A point on the Earth where the map is centered
        type: string
      - in: query
        name: include
        description: 'Specifies to provide additional information about the imagery
          as part of the response: if set to `ImageryProviders` then information about
          imagery providers is returned in the response'
        type: string
      - in: query
        name: orientation
        description: The orientation of the viewport to use for the imagery metadata
          -- this option only applies to Birdseye imagery
        type: string
      - in: query
        name: uriScheme
        description: 'Specifies the scheme that image URL in the response should use:
          either `http` or `https`'
        type: string
      - in: query
        name: zoomLevel
        description: The level of zoom to use for the imagery metadata -- *Required
          if a centerPoint is specified and imagerySet is set to Road, Aerial or AerialWithLabels*
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
  /REST/v1/Imagery/BasicMetadata:
    get:
      tags:
      - Imagery V1
      summary: Get only the basic metadata for an imagery set at a specific location
      operationId: getRESTV1ImageryBasicMetadata
      produces:
      - application/json
      - application/xml
      parameters:
      - in: query
        name: imagerySet
        description: 'The type of imagery: `Aerial`, `Aerial imagery`, `AerialWithLabelsOnDemand`,
          `Birdseye`, `BirdseyeWithLabels`, `BirdseyeV2`, `BirdseyeV2WithLabels`,
          `RoadOnDemand`, `OrdnanceSurvey`, `CanvasDark`, `CanvasLight`, `CanvasGray`,
          `Road`'
        required: true
        type: string
      - in: query
        name: centerPoint
        description: A point on the Earth where the map is centered
        type: string
      - in: query
        name: include
        description: 'Specifies to provide additional information about the imagery
          as part of the response: if set to `ImageryProviders` then information about
          imagery providers is returned in the response'
        type: string
      - in: query
        name: orientation
        description: The orientation of the viewport to use for the imagery metadata
          -- this option only applies to Birdseye imagery
        type: string
      - in: query
        name: uriScheme
        description: 'Specifies the scheme that image URL in the response should use:
          either `http` or `https`'
        type: string
      - in: query
        name: zoomLevel
        description: The level of zoom to use for the imagery metadata -- *Required
          if a centerPoint is specified and imagerySet is set to Road, Aerial or AerialWithLabels*
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
  /REST/v1/Routes/DistanceMatrix:
    get:
      tags:
      - Routes V1
      summary: 'Synchronous: Retrieves a distance matrix for a set of origins and
        destinations'
      operationId: getRESTV1RoutesDistanceMatrix
      parameters:
      - in: query
        name: origins
        description: List of origins described as coordinate pairs with latitudes
          and longitudes, e.g. `origins=37.77916,-122.42;32.71568,-117.16172`
        required: true
        type: string
      - in: query
        name: destinations
        description: List of destinations described as coordinate pairs with latitudes
          and longitudes, e.g. `destinations=37.77916,-122.42;32.71568,-117.16172`
        type: string
      - in: query
        name: travelMode
        description: 'Specifies the mode of transportation to use when calculating
          the distance matrix: `driving`, `walking`, or `transit`'
        required: true
        type: string
      - in: query
        name: startTime
        description: Specifies the start or departure time of the matrix to calculate
          and uses predictive traffic data -- *required if making asynchronous Driving
          request*
        type: string
      - in: query
        name: endTime
        description: A matrix based on traffic data with contain a histogram of travel
          times and distances for the specified resolution intervals (default is 15
          minutes) between the start and end times
        type: string
      - in: query
        name: resolution
        description: The number of intervals to calculate a histogram of data for
          each cell where a single interval is a quarter of an hour -- *Optional for
          driving*
        type: string
      - in: query
        name: distanceUnit
        description: The units to use for distances in the response
        type: string
      - in: query
        name: timeUnit
        description: 'The units to use for time durations in the response: `minute`
          or `second`'
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        default:
          description: Responses cannot be located for this operation.
    post:
      tags:
      - Routes V1
      summary: 'Synchronous: Retrieves a distance matrix for a set of origins and
        destinations'
      operationId: postRESTV1RoutesDistanceMatrix
      consumes:
      - application/json
      parameters:
      - in: header
        name: Content-Type
        description: Set to `application/json`
        type: string
      - in: header
        name: Content-Length
        description: Size of entity body, in OCTETs
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: body
        name: body
        description: HTTP POST Body
        required: true
        schema:
          $ref: '#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.DistanceMatrixParameters'
      responses:
        default:
          description: Responses cannot be located for this operation.
  /REST/v1/Routes/DistanceMatrixAsync:
    get:
      tags:
      - Routes V1
      summary: 'Asynchronous: Retrieves a distance matrix for a set of origins and
        destinations'
      operationId: getRESTV1RoutesDistanceMatrixAsync
      parameters:
      - in: query
        name: origins
        description: List of origins described as coordinate pairs with latitudes
          and longitudes, e.g. `origins=37.77916,-122.42;32.71568,-117.16172`
        required: true
        type: string
      - in: query
        name: destinations
        description: List of destinations described as coordinate pairs with latitudes
          and longitudes, e.g. `destinations=37.77916,-122.42;32.71568,-117.16172`
        type: string
      - in: query
        name: travelMode
        description: 'Specifies the mode of transportation to use when calculating
          the distance matrix: `driving`, `walking`, or `transit`'
        required: true
        type: string
      - in: query
        name: startTime
        description: Specifies the start or departure time of the matrix to calculate
          and uses predictive traffic data -- *required if making asynchronous Driving
          request*
        type: string
      - in: query
        name: endTime
        description: A matrix based on traffic data with contain a histogram of travel
          times and distances for the specified resolution intervals (default is 15
          minutes) between the start and end times
        type: string
      - in: query
        name: resolution
        description: The number of intervals to calculate a histogram of data for
          each cell where a single interval is a quarter of an hour -- *Optional for
          driving*
        type: string
      - in: query
        name: distanceUnit
        description: The units to use for distances in the response
        type: string
      - in: query
        name: timeUnit
        description: 'The units to use for time durations in the response: `minute`
          or `second`'
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        default:
          description: Responses cannot be located for this operation.
    post:
      tags:
      - Routes V1
      summary: 'Asynchronous: Retrieves a distance matrix for a set of origins and
        destinations'
      operationId: postRESTV1RoutesDistanceMatrixAsync
      consumes:
      - application/json
      parameters:
      - in: header
        name: Content-Type
        description: Set to `application/json`
        type: string
      - in: header
        name: Content-Length
        description: Size of entity body, in OCTETs
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      - in: body
        name: body
        description: HTTP POST Body
        required: true
        schema:
          $ref: '#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.DistanceMatrixParameters'
      responses:
        default:
          description: Responses cannot be located for this operation.
  /REST/v1/Routes/DistanceMatrixAsyncCallback:
    get:
      tags:
      - Routes V1
      summary: URL for checking Asynchronous Request status
      operationId: getRESTV1RoutesDistanceMatrixAsyncCallback
      parameters:
      - in: query
        name: requestId
        description: Returned in body of the initial asynchronous request
        type: string
      - in: query
        name: key
        description: API Key
        required: true
        type: string
      responses:
        default:
          description: Responses cannot be located for this operation.
  /REST/v1/Traffic/Incidents/mapArea/:
    get:
      tags:
      - Traffic V1
      summary: Get Traffic Incident Information for a location
      operationId: getRESTV1TrafficIncidentsMapArea
      produces:
      - application/xml
      - application/json
      parameters:
      - in: query
        name: includeLocationCodes
        description: 'Specifies whether to include traffic location codes in the response:
          `true` or `false`'
        type: string
      - in: query
        name: severity
        description: 'Integer specifying severity level of traffic incidents to return:
          `1`: LowImpact, `2`: Minor, `3`: Moderate, `4`: Serious'
        type: string
      - in: query
        name: type
        description: 'Integer specifying the type of traffic incidents to return:
          `1`: Accident, `2`: Congestion, `3`: DisabledVehicle, `4`: MassTransit,
          `5`: Miscellaneous, `6`: OtherNews, `7`: PlannedEvent, `8`: RoadHazard,
          `9`: Construction, `10`: Alert, `11`: Weather'
        type: string
      responses:
        200:
          description: Sample Result
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.SingleResourceResult'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult'
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":22:{s:62:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.LocationRecogResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:18:\"isPrivateResidence\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"businessesAtLocation\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:79:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.BusinessLocationEntity\";}}s:20:\"naturalPOIAtLocation\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:60:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Poi\";}}s:17:\"addressOfLocation\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:68:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.AddressInfo\";}}s:9:\"vendorIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"Id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:61:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Link\";}}s:5:\"Point\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Point\";}s:15:\"JsonBoundingBox\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}s:11:\"BoundingBox\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:68:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.BoundingBox\";}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}}}s:65:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.BusinessLocationEntity\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"businessAddress\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:72:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.BusinessAddress\";}s:12:\"businessInfo\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:69:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.BusinessInfo\";}}}s:58:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.BusinessAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:8:\"latitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:9:\"longitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:12:\"intersection\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"addressLine\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"locality\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"adminDivision\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"countryIso2\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"countryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"postalCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"formattedAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:55:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.BusinessInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"entityName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"otherTypeIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"otherTypes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:15:\"transitStopCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"nameOfParentTransportHub\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"wheelchairAccessible\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:46:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.Poi\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"entityName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"latitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:9:\"longitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"alternateNames\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:54:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.AddressInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:8:\"latitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:9:\"longitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:11:\"addressLine\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"locality\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"neighborhood\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"adminDivision\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"adminDivision2\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"countryIso2\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"countryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"postalCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"formattedAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:47:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.Link\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"Role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"Url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}}}s:48:\"System.Runtime.Serialization.ExtensionDataObject\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:48:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.Point\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"ShapeType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"Coordinates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}s:8:\"Latitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:9:\"Longitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:11:\"BoundingBox\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}}}s:54:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.BoundingBox\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"Northeast\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Point\";}s:9:\"Southwest\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Point\";}s:13:\"SouthLatitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:13:\"WestLongitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:13:\"NorthLatitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:13:\"EastLongitude\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}}s:67:\"Microsoft.VirtualEarth.Support.Services.AuthenticationFailureResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:12:\"ErrorDetails\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:24:\"AuthenticationResultCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:7:{i:0;s:4:\"None\";i:1;s:13:\"NoCredentials\";i:2;s:16:\"ValidCredentials\";i:3;s:18:\"InvalidCredentials\";i:4;s:18:\"CredentialsExpired\";i:5;s:13:\"NotAuthorized\";i:6;s:17:\"DeniedCredentials\";}s:4:\"type\";s:6:\"string\";}s:7:\"Content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Response\";}s:15:\"ContentLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ResponseFormat\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"Default\";i:1;s:4:\"Json\";i:2;s:3:\"Xml\";}s:4:\"type\";s:6:\"string\";}s:11:\"ContentType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"ETag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Lifetime\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/System.Nullable_System.TimeSpan_\";}s:20:\"HasCustomCacheHeader\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"StatusCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:47:{i:0;s:8:\"Continue\";i:1;s:18:\"SwitchingProtocols\";i:2;s:2:\"OK\";i:3;s:7:\"Created\";i:4;s:8:\"Accepted\";i:5;s:27:\"NonAuthoritativeInformation\";i:6;s:9:\"NoContent\";i:7;s:12:\"ResetContent\";i:8;s:14:\"PartialContent\";i:9;s:15:\"MultipleChoices\";i:10;s:9:\"Ambiguous\";i:11;s:16:\"MovedPermanently\";i:12;s:5:\"Moved\";i:13;s:5:\"Found\";i:14;s:8:\"Redirect\";i:15;s:8:\"SeeOther\";i:16;s:14:\"RedirectMethod\";i:17;s:11:\"NotModified\";i:18;s:8:\"UseProxy\";i:19;s:6:\"Unused\";i:20;s:17:\"TemporaryRedirect\";i:21;s:16:\"RedirectKeepVerb\";i:22;s:10:\"BadRequest\";i:23;s:12:\"Unauthorized\";i:24;s:15:\"PaymentRequired\";i:25;s:9:\"Forbidden\";i:26;s:8:\"NotFound\";i:27;s:16:\"MethodNotAllowed\";i:28;s:13:\"NotAcceptable\";i:29;s:27:\"ProxyAuthenticationRequired\";i:30;s:14:\"RequestTimeout\";i:31;s:8:\"Conflict\";i:32;s:4:\"Gone\";i:33;s:14:\"LengthRequired\";i:34;s:18:\"PreconditionFailed\";i:35;s:21:\"RequestEntityTooLarge\";i:36;s:17:\"RequestUriTooLong\";i:37;s:20:\"UnsupportedMediaType\";i:38;s:28:\"RequestedRangeNotSatisfiable\";i:39;s:17:\"ExpectationFailed\";i:40;s:15:\"UpgradeRequired\";i:41;s:19:\"InternalServerError\";i:42;s:14:\"NotImplemented\";i:43;s:10:\"BadGateway\";i:44;s:18:\"ServiceUnavailable\";i:45;s:14:\"GatewayTimeout\";i:46;s:23:\"HttpVersionNotSupported\";}s:4:\"type\";s:6:\"string\";}s:17:\"StatusDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"CustomResponseHeaders\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"DebugInfoCollection\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Common.DebugInfo\";}}}}s:51:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.Response\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:9:\"Copyright\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"BrandLogoUri\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"StatusCode\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"StatusDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"AuthenticationResultCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:7:{i:0;s:4:\"None\";i:1;s:13:\"NoCredentials\";i:2;s:16:\"ValidCredentials\";i:3;s:18:\"InvalidCredentials\";i:4;s:18:\"CredentialsExpired\";i:5;s:13:\"NotAuthorized\";i:6;s:17:\"DeniedCredentials\";}s:4:\"type\";s:6:\"string\";}s:28:\"JsonAuthenticationResultCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ErrorDetails\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:13:\"ServiceErrors\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:69:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.ServiceError\";}}s:7:\"TraceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ResourceSets\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:68:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.ResourceSet\";}}s:19:\"DebugInfoCollection\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Common.DebugInfo\";}}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}}}s:55:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.ServiceError\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"ErrorDetails\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:9:\"ErrorCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}}}s:54:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.ResourceSet\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"ResourceType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"EstimatedTotal\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:9:\"Resources\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Resource\";}}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}s:13:\"ResourceSetId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}}s:51:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.Resource\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"Id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:61:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Link\";}}s:5:\"Point\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Point\";}s:15:\"JsonBoundingBox\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}s:11:\"BoundingBox\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:68:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.BoundingBox\";}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}}}s:51:\"Microsoft.VirtualEarth.PublicTypes.Common.DebugInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"ServiceName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"RequestString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ResponseString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"RequestHeaders\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:13:\"ExtensionData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:62:\"#/definitions/System.Runtime.Serialization.ExtensionDataObject\";}}}s:32:\"System.Nullable_System.TimeSpan_\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"HasValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"Value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/System.TimeSpan\";}}}s:15:\"System.TimeSpan\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:5:\"Ticks\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"Days\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"Hours\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"Milliseconds\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"Minutes\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"Seconds\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:9:\"TotalDays\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:10:\"TotalHours\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:17:\"TotalMilliseconds\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:12:\"TotalMinutes\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:12:\"TotalSeconds\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}}s:62:\"Microsoft.VirtualEarth.Support.Services.ResourceNotFoundResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:12:\"ErrorDetails\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:24:\"AuthenticationResultCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:7:{i:0;s:4:\"None\";i:1;s:13:\"NoCredentials\";i:2;s:16:\"ValidCredentials\";i:3;s:18:\"InvalidCredentials\";i:4;s:18:\"CredentialsExpired\";i:5;s:13:\"NotAuthorized\";i:6;s:17:\"DeniedCredentials\";}s:4:\"type\";s:6:\"string\";}s:7:\"Content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Response\";}s:15:\"ContentLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ResponseFormat\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"Default\";i:1;s:4:\"Json\";i:2;s:3:\"Xml\";}s:4:\"type\";s:6:\"string\";}s:11:\"ContentType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"ETag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Lifetime\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/System.Nullable_System.TimeSpan_\";}s:20:\"HasCustomCacheHeader\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"StatusCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:47:{i:0;s:8:\"Continue\";i:1;s:18:\"SwitchingProtocols\";i:2;s:2:\"OK\";i:3;s:7:\"Created\";i:4;s:8:\"Accepted\";i:5;s:27:\"NonAuthoritativeInformation\";i:6;s:9:\"NoContent\";i:7;s:12:\"ResetContent\";i:8;s:14:\"PartialContent\";i:9;s:15:\"MultipleChoices\";i:10;s:9:\"Ambiguous\";i:11;s:16:\"MovedPermanently\";i:12;s:5:\"Moved\";i:13;s:5:\"Found\";i:14;s:8:\"Redirect\";i:15;s:8:\"SeeOther\";i:16;s:14:\"RedirectMethod\";i:17;s:11:\"NotModified\";i:18;s:8:\"UseProxy\";i:19;s:6:\"Unused\";i:20;s:17:\"TemporaryRedirect\";i:21;s:16:\"RedirectKeepVerb\";i:22;s:10:\"BadRequest\";i:23;s:12:\"Unauthorized\";i:24;s:15:\"PaymentRequired\";i:25;s:9:\"Forbidden\";i:26;s:8:\"NotFound\";i:27;s:16:\"MethodNotAllowed\";i:28;s:13:\"NotAcceptable\";i:29;s:27:\"ProxyAuthenticationRequired\";i:30;s:14:\"RequestTimeout\";i:31;s:8:\"Conflict\";i:32;s:4:\"Gone\";i:33;s:14:\"LengthRequired\";i:34;s:18:\"PreconditionFailed\";i:35;s:21:\"RequestEntityTooLarge\";i:36;s:17:\"RequestUriTooLong\";i:37;s:20:\"UnsupportedMediaType\";i:38;s:28:\"RequestedRangeNotSatisfiable\";i:39;s:17:\"ExpectationFailed\";i:40;s:15:\"UpgradeRequired\";i:41;s:19:\"InternalServerError\";i:42;s:14:\"NotImplemented\";i:43;s:10:\"BadGateway\";i:44;s:18:\"ServiceUnavailable\";i:45;s:14:\"GatewayTimeout\";i:46;s:23:\"HttpVersionNotSupported\";}s:4:\"type\";s:6:\"string\";}s:17:\"StatusDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"CustomResponseHeaders\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"DebugInfoCollection\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Common.DebugInfo\";}}}}s:60:\"Microsoft.VirtualEarth.Support.Services.SingleResourceResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:9:\"Resources\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Resource\";}}s:24:\"AuthenticationResultCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:7:{i:0;s:4:\"None\";i:1;s:13:\"NoCredentials\";i:2;s:16:\"ValidCredentials\";i:3;s:18:\"InvalidCredentials\";i:4;s:18:\"CredentialsExpired\";i:5;s:13:\"NotAuthorized\";i:6;s:17:\"DeniedCredentials\";}s:4:\"type\";s:6:\"string\";}s:7:\"Content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Response\";}s:15:\"ContentLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ResponseFormat\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"Default\";i:1;s:4:\"Json\";i:2;s:3:\"Xml\";}s:4:\"type\";s:6:\"string\";}s:11:\"ContentType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"ETag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Lifetime\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/System.Nullable_System.TimeSpan_\";}s:20:\"HasCustomCacheHeader\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"StatusCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:47:{i:0;s:8:\"Continue\";i:1;s:18:\"SwitchingProtocols\";i:2;s:2:\"OK\";i:3;s:7:\"Created\";i:4;s:8:\"Accepted\";i:5;s:27:\"NonAuthoritativeInformation\";i:6;s:9:\"NoContent\";i:7;s:12:\"ResetContent\";i:8;s:14:\"PartialContent\";i:9;s:15:\"MultipleChoices\";i:10;s:9:\"Ambiguous\";i:11;s:16:\"MovedPermanently\";i:12;s:5:\"Moved\";i:13;s:5:\"Found\";i:14;s:8:\"Redirect\";i:15;s:8:\"SeeOther\";i:16;s:14:\"RedirectMethod\";i:17;s:11:\"NotModified\";i:18;s:8:\"UseProxy\";i:19;s:6:\"Unused\";i:20;s:17:\"TemporaryRedirect\";i:21;s:16:\"RedirectKeepVerb\";i:22;s:10:\"BadRequest\";i:23;s:12:\"Unauthorized\";i:24;s:15:\"PaymentRequired\";i:25;s:9:\"Forbidden\";i:26;s:8:\"NotFound\";i:27;s:16:\"MethodNotAllowed\";i:28;s:13:\"NotAcceptable\";i:29;s:27:\"ProxyAuthenticationRequired\";i:30;s:14:\"RequestTimeout\";i:31;s:8:\"Conflict\";i:32;s:4:\"Gone\";i:33;s:14:\"LengthRequired\";i:34;s:18:\"PreconditionFailed\";i:35;s:21:\"RequestEntityTooLarge\";i:36;s:17:\"RequestUriTooLong\";i:37;s:20:\"UnsupportedMediaType\";i:38;s:28:\"RequestedRangeNotSatisfiable\";i:39;s:17:\"ExpectationFailed\";i:40;s:15:\"UpgradeRequired\";i:41;s:19:\"InternalServerError\";i:42;s:14:\"NotImplemented\";i:43;s:10:\"BadGateway\";i:44;s:18:\"ServiceUnavailable\";i:45;s:14:\"GatewayTimeout\";i:46;s:23:\"HttpVersionNotSupported\";}s:4:\"type\";s:6:\"string\";}s:17:\"StatusDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"CustomResponseHeaders\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"DebugInfoCollection\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Common.DebugInfo\";}}}}s:62:\"Microsoft.VirtualEarth.Support.Services.MultipleResourceResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:9:\"Resources\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Resource\";}}s:24:\"AuthenticationResultCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:7:{i:0;s:4:\"None\";i:1;s:13:\"NoCredentials\";i:2;s:16:\"ValidCredentials\";i:3;s:18:\"InvalidCredentials\";i:4;s:18:\"CredentialsExpired\";i:5;s:13:\"NotAuthorized\";i:6;s:17:\"DeniedCredentials\";}s:4:\"type\";s:6:\"string\";}s:7:\"Content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Rest.V1.Response\";}s:15:\"ContentLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ResponseFormat\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"Default\";i:1;s:4:\"Json\";i:2;s:3:\"Xml\";}s:4:\"type\";s:6:\"string\";}s:11:\"ContentType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"ETag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Lifetime\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/System.Nullable_System.TimeSpan_\";}s:20:\"HasCustomCacheHeader\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"StatusCode\";O:8:\"stdClass\":2:{s:4:\"enum\";a:47:{i:0;s:8:\"Continue\";i:1;s:18:\"SwitchingProtocols\";i:2;s:2:\"OK\";i:3;s:7:\"Created\";i:4;s:8:\"Accepted\";i:5;s:27:\"NonAuthoritativeInformation\";i:6;s:9:\"NoContent\";i:7;s:12:\"ResetContent\";i:8;s:14:\"PartialContent\";i:9;s:15:\"MultipleChoices\";i:10;s:9:\"Ambiguous\";i:11;s:16:\"MovedPermanently\";i:12;s:5:\"Moved\";i:13;s:5:\"Found\";i:14;s:8:\"Redirect\";i:15;s:8:\"SeeOther\";i:16;s:14:\"RedirectMethod\";i:17;s:11:\"NotModified\";i:18;s:8:\"UseProxy\";i:19;s:6:\"Unused\";i:20;s:17:\"TemporaryRedirect\";i:21;s:16:\"RedirectKeepVerb\";i:22;s:10:\"BadRequest\";i:23;s:12:\"Unauthorized\";i:24;s:15:\"PaymentRequired\";i:25;s:9:\"Forbidden\";i:26;s:8:\"NotFound\";i:27;s:16:\"MethodNotAllowed\";i:28;s:13:\"NotAcceptable\";i:29;s:27:\"ProxyAuthenticationRequired\";i:30;s:14:\"RequestTimeout\";i:31;s:8:\"Conflict\";i:32;s:4:\"Gone\";i:33;s:14:\"LengthRequired\";i:34;s:18:\"PreconditionFailed\";i:35;s:21:\"RequestEntityTooLarge\";i:36;s:17:\"RequestUriTooLong\";i:37;s:20:\"UnsupportedMediaType\";i:38;s:28:\"RequestedRangeNotSatisfiable\";i:39;s:17:\"ExpectationFailed\";i:40;s:15:\"UpgradeRequired\";i:41;s:19:\"InternalServerError\";i:42;s:14:\"NotImplemented\";i:43;s:10:\"BadGateway\";i:44;s:18:\"ServiceUnavailable\";i:45;s:14:\"GatewayTimeout\";i:46;s:23:\"HttpVersionNotSupported\";}s:4:\"type\";s:6:\"string\";}s:17:\"StatusDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"CustomResponseHeaders\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"DebugInfoCollection\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:65:\"#/definitions/Microsoft.VirtualEarth.PublicTypes.Common.DebugInfo\";}}}}s:67:\"Microsoft.VirtualEarth.PublicTypes.Rest.V1.DistanceMatrixParameters\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}"
...
