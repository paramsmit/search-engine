---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:19:\"ApiManagementClient\";s:11:\"description\";s:134:\"Use
  these REST APIs for performing operations on API entity and their Operations associated
  with your Azure API Management deployment.\";s:7:\"version\";s:10:\"2018-01-01\";}"
host: management.azure.com
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis:
    get:
      tags:
      - Apis
      operationId: Api_ListByService
      description: Lists all APIs of the API Management service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis
      x-ms-examples:
        ApiManagementListApis:
          $ref: ./examples/ApiManagementListApis.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| path        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - name: expandApiVersionSet
        in: query
        type: boolean
        required: false
        default: false
        description: Include full ApiVersionSet resource in response
      responses:
        200:
          description: Paged Result response of Apis.
          schema:
            $ref: '#/definitions/ApiCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/ApiContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}
  : head:
      tags:
      - Apis
      operationId: Api_GetEntityTag
      description: Gets the entity state (Etag) version of the API specified by its
        identifier.
      x-ms-examples:
        ApiManagementHeadApi:
          $ref: ./examples/ApiManagementHeadApi.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Specified API entity exists and current entity state version
            is present in the ETag header.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - Apis
      operationId: Api_Get
      description: Gets the details of the API specified by its identifier.
      x-ms-examples:
        ApiManagementGetApiContract:
          $ref: ./examples/ApiManagementGetApiContract.json
      produces:
      - application/json
      - application/vnd.sun.wadl+xml
      - application/vnd.swagger.doc+json
      - application/wsdl+xml
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The response body contains the specified API entity.
          schema:
            $ref: '#/definitions/ApiContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - Apis
      operationId: Api_CreateOrUpdate
      description: Creates new or updates existing specified API of the API Management
        service instance.
      x-ms-examples:
        ApiManagementCreateApiUsingSwaggerImport:
          $ref: ./examples/ApiManagementCreateApiUsingSwaggerImport.json
        ApiManagementCreateApiUsingWadlImport:
          $ref: ./examples/ApiManagementCreateApiUsingWadlImport.json
        ApiManagementCreateSoapToRestApiUsingWsdlImport:
          $ref: ./examples/ApiManagementCreateSoapToRestApiUsingWsdlImport.json
        ApiManagementCreateSoapPassThroughApiUsingWsdlImport:
          $ref: ./examples/ApiManagementCreateSoapPassThroughApiUsingWsdlImport.json
        ApiManagementCreateApi:
          $ref: ./examples/ApiManagementCreateApi.json
        ApiManagementCreateApiRevision:
          $ref: ./examples/ApiManagementCreateApiRevision.json
      consumes:
      - application/json
      - application/vnd.sun.wadl+xml
      - application/vnd.swagger.doc+json
      - application/wsdl+xml
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApiCreateOrUpdateParameter'
        description: Create or update parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchOptionalParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: API was successfully created.
          schema:
            $ref: '#/definitions/ApiContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        200:
          description: API was successfully updated.
          schema:
            $ref: '#/definitions/ApiContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    patch:
      tags:
      - Apis
      operationId: Api_Update
      description: Updates the specified API of the API Management service instance.
      x-ms-examples:
        ApiManagementUpdateApi.json:
          $ref: ./examples/ApiManagementUpdateApi.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApiUpdateContract'
        description: API Update Contract parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        204:
          description: The API was successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - Apis
      operationId: Api_Delete
      description: Deletes the specified API of the API Management service instance.
      x-ms-examples:
        ApiManagementDeleteApi.json:
          $ref: ./examples/ApiManagementDeleteApi.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - name: deleteRevisions
        in: query
        required: false
        type: boolean
        description: Delete all revisions of the Api.
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The API was successfully deleted.
        204:
          description: The API was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions
  : get:
      tags:
      - Revisions
      operationId: ApiRevisions_List
      description: Lists all revisions of an API.
      x-ms-examples:
        ApiManagementListApiRevisions:
          $ref: ./examples/ApiManagementListApiRevisions.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: '#/parameters/ApiIdParameter'
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|nrn|apiRevision
          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|n'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: The operation returns a list of revision details.
          schema:
            $ref: '#/definitions/ApiRevisionCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/ApiRevisionContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases
  : get:
      tags:
      - Releases
      operationId: ApiRelease_List
      description: Lists all releases of an API. An API release is created when making
        an API Revision current. Releases are also used to rollback to previous revisions.
        Results will be paged and can be constrained by the $top and $skip parameters.
      x-ms-examples:
        ApiManagementListApiReleases:
          $ref: ./examples/ApiManagementListApiReleases.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field | Supported operators    | Supported functions                         |n|-------|------------------------|---------------------------------------------|n|
          name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith
          |n|notes|ge le eq ne gt lt|substringof contains startswith endswith|'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: The operation returns a list of API Releases.
          schema:
            $ref: '#/definitions/ApiReleaseCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/ApiReleaseContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}
  : head:
      tags:
      - Releases
      operationId: ApiRelease_GetEntityTag
      description: Returns the etag of an API release.
      x-ms-examples:
        ApiManagementHeadApiRelease:
          $ref: ./examples/ApiManagementHeadApiRelease.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/ReleaseIdParameter'
      responses:
        200:
          description: The operation returns the details of an API Release.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - Releases
      operationId: ApiRelease_Get
      description: Returns the details of an API release.
      x-ms-examples:
        ApiManagementGetApiRelease:
          $ref: ./examples/ApiManagementGetApiRelease.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/ReleaseIdParameter'
      responses:
        200:
          description: The operation returns the details of an API Release.
          schema:
            $ref: '#/definitions/ApiReleaseContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - Releases
      operationId: ApiRelease_Create
      description: Creates a new Release for the API.
      x-ms-examples:
        ApiManagementCreateApiRelease:
          $ref: ./examples/ApiManagementCreateApiRelease.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/ReleaseIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApiReleaseContract'
        description: Create parameters.
      responses:
        201:
          description: Release was successfully created.
          schema:
            $ref: '#/definitions/ApiReleaseContract'
        200:
          description: Release was successfully updated.
          schema:
            $ref: '#/definitions/ApiReleaseContract'
        default:
          description: Error response describing why the release failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    patch:
      tags:
      - Releases
      operationId: ApiRelease_Update
      description: Updates the details of the release of the API specified by its
        identifier.
      x-ms-examples:
        ApiManagementUpdateApiRelease:
          $ref: ./examples/ApiManagementUpdateApiRelease.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/ReleaseIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApiReleaseContract'
        description: API Release Update parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      responses:
        204:
          description: The operation was successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - Releases
      operationId: ApiRelease_Delete
      description: Deletes the specified release in the API.
      x-ms-examples:
        ApiManagementDeleteApiRelease:
          $ref: ./examples/ApiManagementDeleteApiRelease.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/ReleaseIdParameter'
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      responses:
        200:
          description: The release was successfully deleted.
        204:
          description: The release was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations
  : get:
      tags:
      - Operations
      operationId: ApiOperation_ListByApi
      description: Lists a collection of the operations for the specified API.
      x-ms-examples:
        ApiManagementListApiOperations:
          $ref: ./examples/ApiManagementListApiOperations.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| method      | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| urlTemplate | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: A collection of operation summary entities at the API level.
          schema:
            $ref: '#/definitions/OperationCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/OperationContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}
  : head:
      tags:
      - Operations
      operationId: ApiOperation_GetEntityTag
      description: Gets the entity state (Etag) version of the API operation specified
        by its identifier.
      x-ms-examples:
        ApiManagementHeadApiOperation:
          $ref: ./examples/ApiManagementHeadApiOperation.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Specified API operation entity exists and current entity state
            version is present in the ETag header.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - Operations
      operationId: ApiOperation_Get
      description: Gets the details of the API Operation specified by its identifier.
      x-ms-examples:
        ApiManagementGetApiOperation:
          $ref: ./examples/ApiManagementGetApiOperation.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The response body contains the specified Operation entity.
          schema:
            $ref: '#/definitions/OperationContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - Operations
      operationId: ApiOperation_CreateOrUpdate
      description: Creates a new operation in the API or updates an existing one.
      x-ms-examples:
        ApiManagementCreateApiOperation:
          $ref: ./examples/ApiManagementCreateApiOperation.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/OperationContract'
        description: Create parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchOptionalParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Operation was successfully created.
          schema:
            $ref: '#/definitions/OperationContract'
        200:
          description: Operation was successfully updated.
          schema:
            $ref: '#/definitions/OperationContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    patch:
      tags:
      - Operations
      operationId: ApiOperation_Update
      description: Updates the details of the operation in the API specified by its
        identifier.
      x-ms-examples:
        ApiManagementUpdateApiOperation:
          $ref: ./examples/ApiManagementUpdateApiOperation.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/OperationUpdateContract'
        description: API Operation Update parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        204:
          description: The operation was successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - Operations
      operationId: ApiOperation_Delete
      description: Deletes the specified operation in the API.
      x-ms-examples:
        ApiManagementDeleteApiOperation:
          $ref: ./examples/ApiManagementDeleteApiOperation.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The operation was successfully deleted.
        204:
          description: The operation was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies
  : get:
      tags:
      - ApiOperationPolicies
      operationId: ApiOperationPolicy_ListByOperation
      description: Get the list of policy configuration at the API Operation level.
      x-ms-examples:
        ApiManagementListApiOperationPolicies:
          $ref: ./examples/ApiManagementListApiOperationPolicies.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Api Operations Policy Collection.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyCollection
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}
  : head:
      tags:
      - ApiOperationPolicies
      operationId: ApiOperationPolicy_GetEntityTag
      description: Gets the entity state (Etag) version of the API operation policy
        specified by its identifier.
      x-ms-examples:
        ApiManagementHeadApiOperationPolicy:
          $ref: ./examples/ApiManagementHeadApiOperationPolicy.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Specified API operation policy entity exists and current entity
            state version is present in the ETag header.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiOperationPolicies
      operationId: ApiOperationPolicy_Get
      description: Get the policy configuration at the API Operation level.
      x-ms-examples:
        ApiManagementGetApiOperationPolicy:
          $ref: ./examples/ApiManagementGetApiOperationPolicy.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Api Operation Policy information.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyContract
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiOperationPolicies
      operationId: ApiOperationPolicy_CreateOrUpdate
      description: Creates or updates policy configuration for the API Operation level.
      x-ms-examples:
        ApiManagementCreateApiOperationPolicy:
          $ref: ./examples/ApiManagementCreateApiOperationPolicy.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - name: parameters
        in: body
        schema:
          $ref: ./apimanagement.json#/definitions/PolicyContract
        required: true
        description: The policy contents to apply.
      - $ref: ./apimanagement.json#/parameters/IfMatchOptionalParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Api Operation policy configuration was successfully created.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyContract
        200:
          description: Api Operation policy configuration of the tenant was successfully
            updated.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyContract
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiOperationPolicies
      operationId: ApiOperationPolicy_Delete
      description: Deletes the policy configuration at the Api Operation.
      x-ms-examples:
        ApiManagementDeleteOperationPolicy:
          $ref: ./examples/ApiManagementDeleteOperationPolicy.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/OperationIdParameter'
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Successfully deleted the policy configuration at the API Operation
            level.
        204:
          description: Successfully deleted the policy configuration at the API Operation
            level.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products
  : get:
      tags:
      - ApiProduct
      operationId: ApiProduct_ListByApis
      description: Lists all Products, which the API is part of.
      x-ms-examples:
        ApiManagementGetProductsForApi:
          $ref: ./examples/ApiManagementGetProductsForApi.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field | Supported operators    | Supported functions                         |n|-------|------------------------|---------------------------------------------|n|
          name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith
          |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The operation returns a collection of products which have the
            Api entity.
          schema:
            $ref: ./apimproducts.json#/definitions/ProductCollection
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./apimproducts.json#/definitions/ProductContract
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies
  : get:
      tags:
      - ApiPolicy
      operationId: ApiPolicy_ListByApi
      description: Get the policy configuration at the API level.
      x-ms-examples:
        ApiManagementListApiPolicies:
          $ref: ./examples/ApiManagementListApiPolicies.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Apis Policy Collection.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyCollection
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}
  : head:
      tags:
      - ApiPolicy
      operationId: ApiPolicy_GetEntityTag
      description: Gets the entity state (Etag) version of the API policy specified
        by its identifier.
      x-ms-examples:
        ApiManagementHeadApiPolicy:
          $ref: ./examples/ApiManagementHeadApiPolicy.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Specified API Policy entity exists and current entity state
            version is present in the ETag header.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiPolicy
      operationId: ApiPolicy_Get
      description: Get the policy configuration at the API level.
      x-ms-examples:
        ApiManagementGetApiPolicy:
          $ref: ./examples/ApiManagementGetApiPolicy.json
      produces:
      - application/json
      - application/vnd.ms-azure-apim.policy+xml
      - application/vnd.ms-azure-apim.policy.raw+xml
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Api Policy information.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyContract
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiPolicy
      operationId: ApiPolicy_CreateOrUpdate
      description: Creates or updates policy configuration for the API.
      x-ms-examples:
        ApiManagementCreateApiPolicy:
          $ref: ./examples/ApiManagementCreateApiPolicy.json
        ApiManagementCreateApiPolicyNonXmlEncoded:
          $ref: ./examples/ApiManagementCreateApiPolicyNonXmlEncoded.json
      consumes:
      - application/json
      - application/vnd.ms-azure-apim.policy+xml
      - application/vnd.ms-azure-apim.policy.raw+xml
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - name: parameters
        in: body
        schema:
          $ref: ./apimanagement.json#/definitions/PolicyContract
        required: true
        description: The policy contents to apply.
      - $ref: ./apimanagement.json#/parameters/IfMatchOptionalParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Api policy configuration was successfully created.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyContract
        200:
          description: Api policy configuration of the tenant was successfully updated.
          schema:
            $ref: ./apimanagement.json#/definitions/PolicyContract
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiPolicy
      operationId: ApiPolicy_Delete
      description: Deletes the policy configuration at the Api.
      x-ms-examples:
        ApiManagementDeleteApiPolicy:
          $ref: ./examples/ApiManagementDeleteApiPolicy.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/PolicyIdParameter
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Successfully deleted the policy configuration at the API level.
        204:
          description: Successfully deleted the policy configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas
  : get:
      tags:
      - ApiSchema
      operationId: ApiSchema_ListByApi
      description: Get the schema configuration at the API level.
      x-ms-examples:
        ApiManagementListApiSchemas:
          $ref: ./examples/ApiManagementListApiSchemas.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Apis Schema Collection.
          schema:
            $ref: '#/definitions/SchemaCollection'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}
  : head:
      tags:
      - ApiSchema
      operationId: ApiSchema_GetEntityTag
      description: Gets the entity state (Etag) version of the schema specified by
        its identifier.
      x-ms-examples:
        ApiManagementHeadApiSchema:
          $ref: ./examples/ApiManagementHeadApiSchema.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/SchemaIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Specified schema entity exists and current entity state version
            is present in the ETag header.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiSchema
      operationId: ApiSchema_Get
      description: Get the schema configuration at the API level.
      x-ms-examples:
        ApiManagementGetApiSchema:
          $ref: ./examples/ApiManagementGetApiSchema.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/SchemaIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Api Schema information.
          schema:
            $ref: '#/definitions/SchemaContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiSchema
      operationId: ApiSchema_CreateOrUpdate
      description: Creates or updates schema configuration for the API.
      x-ms-examples:
        ApiManagementCreateApiSchema:
          $ref: ./examples/ApiManagementCreateApiSchema.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/SchemaIdParameter'
      - name: parameters
        in: body
        schema:
          $ref: '#/definitions/SchemaContract'
        required: true
        description: The schema contents to apply.
      - $ref: ./apimanagement.json#/parameters/IfMatchOptionalParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Api schema configuration was successfully created.
          schema:
            $ref: '#/definitions/SchemaContract'
        200:
          description: Api schema configuration of the tenant was successfully updated.
          schema:
            $ref: '#/definitions/SchemaContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiSchema
      operationId: ApiSchema_Delete
      description: Deletes the schema configuration at the Api.
      x-ms-examples:
        ApiManagementDeleteApiSchema:
          $ref: ./examples/ApiManagementDeleteApiSchema.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdRevParameter'
      - $ref: '#/parameters/SchemaIdParameter'
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Successfully deleted the schema configuration at the API level.
        204:
          description: Successfully deleted the schema configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags
  : get:
      tags:
      - ApisByTags
      operationId: Api_ListByTags
      description: Lists a collection of apis associated with tags.
      x-ms-examples:
        ApiManagementListApisByTags:
          $ref: ./examples/ApiManagementListApisByTags.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions                         |n|-------------|------------------------|---------------------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
          endswith |n| name        | ge, le, eq, ne, gt, lt | substringof, contains,
          startswith, endswith |n| aid         | ge, le, eq, ne, gt, lt | substringof,
          contains, startswith, endswith |n| apiRevision | ge, le, eq, ne, gt, lt
          | substringof, contains, startswith, endswith |n| path        | ge, le,
          eq, ne, gt, lt | substringof, contains, startswith, endswith |n| description
          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |n|
          serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
          endswith |n| isCurrent   | eq                     | substringof, contains,
          startswith, endswith |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Lists a collection of TagResource entities.
          schema:
            $ref: ./apimtagresources.json#/definitions/TagResourceCollection
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./apimtagresources.json#/definitions/TagResourceContract
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics
  : get:
      tags:
      - ApiDiagnostics
      operationId: ApiDiagnostic_ListByService
      description: Lists all diagnostics of an API.
      x-ms-examples:
        ApiManagementListApiDiagnostics:
          $ref: ./examples/ApiManagementListApiDiagnostics.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: Paged Result reponse of diagnostics for an API.
          schema:
            $ref: ./apimdiagnostics.json#/definitions/DiagnosticCollection
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./apimdiagnostics.json#/definitions/DiagnosticContract
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}
  : head:
      tags:
      - ApiDiagnostics
      operationId: ApiDiagnostic_GetEntityTag
      description: Gets the entity state (Etag) version of the Diagnostic for an API
        specified by its identifier.
      x-ms-examples:
        ApiManagementHeadApiDiagnostic:
          $ref: ./examples/ApiManagementHeadApiDiagnostic.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Operation completed successfully.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiDiagnostics
      operationId: ApiDiagnostic_Get
      description: Gets the details of the Diagnostic for an API specified by its
        identifier.
      x-ms-examples:
        ApiManagementGetApiDiagnostic:
          $ref: ./examples/ApiManagementGetApiDiagnostic.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The response body contains the specified Diagnostic entity.
          schema:
            $ref: ./apimdiagnostics.json#/definitions/DiagnosticContract
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiDiagnostics
      operationId: ApiDiagnostic_CreateOrUpdate
      description: Creates a new Diagnostic for an API or updates an existing one.
      x-ms-examples:
        ApiManagementCreateApiDiagnostic:
          $ref: ./examples/ApiManagementCreateApiDiagnostic.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - name: parameters
        in: body
        required: true
        schema:
          $ref: ./apimdiagnostics.json#/definitions/DiagnosticContract
        description: Create parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchOptionalParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Diagnostic was successfully created.
          schema:
            $ref: ./apimdiagnostics.json#/definitions/DiagnosticContract
        200:
          description: Diagnostic was successfully updated.
          schema:
            $ref: ./apimdiagnostics.json#/definitions/DiagnosticContract
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    patch:
      tags:
      - ApiDiagnostics
      operationId: ApiDiagnostic_Update
      description: Updates the details of the Diagnostic for an API specified by its
        identifier.
      x-ms-examples:
        ApiManagementUpdateApiDiagnostic:
          $ref: ./examples/ApiManagementUpdateApiDiagnostic.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - name: parameters
        in: body
        required: true
        schema:
          $ref: ./apimdiagnostics.json#/definitions/DiagnosticContract
        description: Diagnostic Update parameters.
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        204:
          description: The Diagnostic was successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiDiagnostics
      operationId: ApiDiagnostic_Delete
      description: Deletes the specified Diagnostic from an API.
      x-ms-examples:
        ApiManagementDeleteApiDiagnostic:
          $ref: ./examples/ApiManagementDeleteApiDiagnostic.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - $ref: ./apimanagement.json#/parameters/IfMatchRequiredParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The Diagnostic was successfully deleted.
        204:
          description: The Diagnostic was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}/loggers
  : get:
      tags:
      - ApiDiagnosticLoggers
      operationId: ApiDiagnosticLogger_ListByService
      description: Lists all loggers assosiated with the specified Diagnostic of an
        API.
      x-ms-examples:
        ApiManagementListApiDiagnosticLoggers:
          $ref: ./examples/ApiManagementListApiDiagnosticLoggers.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| type        | eq                     |                                   |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: Paged Result reponse of loggers assigned to the specified Diagnostic.
          schema:
            $ref: ./apimloggers.json#/definitions/LoggerCollection
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./apimloggers.json#/definitions/LoggerContract
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}/loggers/{loggerid}
  : head:
      tags:
      - ApiDiagnosticLoggers
      operationId: ApiDiagnosticLogger_CheckEntityExists
      description: Checks that logger entity specified by identifier is associated
        with the diagnostics entity.
      x-ms-examples:
        ApiManagementHeadApiDiagnosticLogger:
          $ref: ./examples/ApiManagementHeadApiDiagnosticLogger.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - $ref: ./apimloggers.json#/parameters/LoggerIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        204:
          description: Entity exists
        404:
          description: Entity does not exists.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiDiagnosticLoggers
      operationId: ApiDiagnosticLogger_CreateOrUpdate
      description: Attaches a logger to a dignostic for an API.
      x-ms-examples:
        ApiManagementCreateApiDiagnosticLogger:
          $ref: ./examples/ApiManagementCreateApiDiagnosticLogger.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - $ref: ./apimloggers.json#/parameters/LoggerIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Logger was successfully attached to Diagnostic.
          schema:
            $ref: ./apimloggers.json#/definitions/LoggerContract
        200:
          description: Logger to Diagnostic link was successfully updated.
          schema:
            $ref: ./apimloggers.json#/definitions/LoggerContract
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiDiagnosticLoggers
      operationId: ApiDiagnosticLogger_Delete
      description: Deletes the specified Logger from Diagnostic for an API.
      x-ms-examples:
        ApiManagementDeleteApiDiagnosticLogger:
          $ref: ./examples/ApiManagementDeleteApiDiagnosticLogger.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimdiagnostics.json#/parameters/DiagnosticIdParameter
      - $ref: ./apimloggers.json#/parameters/LoggerIdParameter
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The Logger was successfully detached from Diagnostic.
        204:
          description: The Logger was successfully detached from Diagnostic.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues
  : get:
      tags:
      - ApiIssues
      operationId: ApiIssue_ListByService
      description: Lists all issues assosiated with the specified API.
      x-ms-examples:
        ApiManagementListApiIssues:
          $ref: ./examples/ApiManagementListApiIssues.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| state        | eq                     |                                   |n|
          userId          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: Paged Result reponse of issues for the API.
          schema:
            $ref: '#/definitions/IssueCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/IssueContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
  : head:
      tags:
      - ApiIssues
      operationId: ApiIssue_GetEntityTag
      description: Gets the entity state (Etag) version of the Issue for an API specified
        by its identifier.
      x-ms-examples:
        ApiManagementHeadApiIssue:
          $ref: ./examples/ApiManagementHeadApiIssue.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Operation completed successfully.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiIssues
      operationId: ApiIssue_Get
      description: Gets the details of the Issue for an API specified by its identifier.
      x-ms-examples:
        ApiManagementGetApiIssue:
          $ref: ./examples/ApiManagementGetApiIssue.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The response body contains the specified Issue entity.
          schema:
            $ref: '#/definitions/IssueContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiIssues
      operationId: ApiIssue_CreateOrUpdate
      description: Creates a new Issue for an API or updates an existing one.
      x-ms-examples:
        ApiManagementCreateApiIssue:
          $ref: ./examples/ApiManagementCreateApiIssue.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/IssueContract'
        description: Create parameters.
      - name: If-Match
        in: header
        required: false
        description: ETag of the Issue Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        type: string
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Issue was successfully created.
          schema:
            $ref: '#/definitions/IssueContract'
        200:
          description: Issue was successfully updated.
          schema:
            $ref: '#/definitions/IssueContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiIssues
      operationId: ApiIssue_Delete
      description: Deletes the specified Issue from an API.
      x-ms-examples:
        ApiManagementDeleteApiIssue:
          $ref: ./examples/ApiManagementDeleteApiIssue.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - name: If-Match
        in: header
        required: true
        description: ETag of the Issue Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        type: string
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The Issue was successfully deleted.
        204:
          description: The Issue was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments
  : get:
      tags:
      - ApiIssueComments
      operationId: ApiIssueComment_ListByService
      description: Lists all comments for the Issue assosiated with the specified
        API.
      x-ms-examples:
        ApiManagementListApiIssueComments:
          $ref: ./examples/ApiManagementListApiIssueComments.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| userId          | ge, le, eq, ne, gt, lt | substringof, startswith,
          endswith |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: Paged Result reponse of issue comments for the API.
          schema:
            $ref: '#/definitions/IssueCommentCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/IssueCommentContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}
  : head:
      tags:
      - ApiIssueComments
      operationId: ApiIssueComment_GetEntityTag
      description: Gets the entity state (Etag) version of the issue Comment for an
        API specified by its identifier.
      x-ms-examples:
        ApiManagementHeadApiIssueComment:
          $ref: ./examples/ApiManagementHeadApiIssueComment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/CommentIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Operation completed successfully.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiIssueComments
      operationId: ApiIssueComment_Get
      description: Gets the details of the issue Comment for an API specified by its
        identifier.
      x-ms-examples:
        ApiManagementGetApiIssueComment:
          $ref: ./examples/ApiManagementGetApiIssueComment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/CommentIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The response body contains the specified issue Comment entity.
          schema:
            $ref: '#/definitions/IssueCommentContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiIssueComments
      operationId: ApiIssueComment_CreateOrUpdate
      description: Creates a new Comment for the Issue in an API or updates an existing
        one.
      x-ms-examples:
        ApiManagementCreateApiIssueComment:
          $ref: ./examples/ApiManagementCreateApiIssueComment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/CommentIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/IssueCommentContract'
        description: Create parameters.
      - name: If-Match
        in: header
        required: false
        description: ETag of the Issue Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        type: string
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Issue Comment was successfully created.
          schema:
            $ref: '#/definitions/IssueCommentContract'
        200:
          description: Issue Comment was successfully updated.
          schema:
            $ref: '#/definitions/IssueCommentContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiIssueComments
      operationId: ApiIssueComment_Delete
      description: Deletes the specified comment from an Issue.
      x-ms-examples:
        ApiManagementDeleteApiIssueComment:
          $ref: ./examples/ApiManagementDeleteApiIssueComment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/CommentIdParameter'
      - name: If-Match
        in: header
        required: true
        description: ETag of the Issue Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        type: string
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The issue Comment was successfully deleted.
        204:
          description: The issue Comment was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments
  : get:
      tags:
      - ApiIssueAttachments
      operationId: ApiIssueAttachment_ListByService
      description: Lists all comments for the Issue assosiated with the specified
        API.
      x-ms-examples:
        ApiManagementListApiIssueAttachments:
          $ref: ./examples/ApiManagementListApiIssueAttachments.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      - name: $filter
        in: query
        required: false
        type: string
        description: '| Field       | Supported operators    | Supported functions               |n|-------------|------------------------|-----------------------------------|n|
          id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
          |n| userId          | ge, le, eq, ne, gt, lt | substringof, startswith,
          endswith |'
      - $ref: ./apimanagement.json#/parameters/TopQueryParameter
      - $ref: ./apimanagement.json#/parameters/SkipQueryParameter
      responses:
        200:
          description: Paged Result reponse of issue comments for the API.
          schema:
            $ref: '#/definitions/IssueAttachmentCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/definitions/IssueAttachmentContract'
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}
  : head:
      tags:
      - ApiIssueAttachments
      operationId: ApiIssueAttachment_GetEntityTag
      description: Gets the entity state (Etag) version of the issue Attachment for
        an API specified by its identifier.
      x-ms-examples:
        ApiManagementHeadApiIssueAttachment:
          $ref: ./examples/ApiManagementHeadApiIssueAttachment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/AttachmentIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: Operation completed successfully.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    get:
      tags:
      - ApiIssueAttachments
      operationId: ApiIssueAttachment_Get
      description: Gets the details of the issue Attachment for an API specified by
        its identifier.
      x-ms-examples:
        ApiManagementGetApiIssueAttachment:
          $ref: ./examples/ApiManagementGetApiIssueAttachment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/AttachmentIdParameter'
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The response body contains the specified issue Attachment entity.
          schema:
            $ref: '#/definitions/IssueAttachmentContract'
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              type: string
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
      - ApiIssueAttachments
      operationId: ApiIssueAttachment_CreateOrUpdate
      description: Creates a new Attachment for the Issue in an API or updates an
        existing one.
      x-ms-examples:
        ApiManagementCreateApiIssueAttachment:
          $ref: ./examples/ApiManagementCreateApiIssueAttachment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/AttachmentIdParameter'
      - name: parameters
        in: body
        required: true
        schema:
          $ref: '#/definitions/IssueAttachmentContract'
        description: Create parameters.
      - name: If-Match
        in: header
        required: false
        description: ETag of the Issue Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        type: string
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        201:
          description: Issue Attachment was successfully created.
          schema:
            $ref: '#/definitions/IssueAttachmentContract'
        200:
          description: Issue Attachment was successfully updated.
          schema:
            $ref: '#/definitions/IssueAttachmentContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
      - ApiIssueAttachments
      operationId: ApiIssueAttachment_Delete
      description: Deletes the specified comment from an Issue.
      x-ms-examples:
        ApiManagementDeleteApiIssueAttachment:
          $ref: ./examples/ApiManagementDeleteApiIssueAttachment.json
      parameters:
      - $ref: ./apimanagement.json#/parameters/ResourceGroupNameParameter
      - $ref: ./apimanagement.json#/parameters/ServiceNameParameter
      - $ref: '#/parameters/ApiIdParameter'
      - $ref: '#/parameters/IssueIdParameter'
      - $ref: '#/parameters/AttachmentIdParameter'
      - name: If-Match
        in: header
        required: true
        description: ETag of the Issue Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        type: string
      - $ref: ./apimanagement.json#/parameters/ApiVersionParameter
      - $ref: ./apimanagement.json#/parameters/SubscriptionIdParameter
      responses:
        200:
          description: The issue Attachment was successfully deleted.
        204:
          description: The issue Attachment was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: ./apimanagement.json#/definitions/ErrorResponse
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":42:{s:15:\"ApiExportResult\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"link\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:113:\"Link
  to the Storage Blob containing the result of the export operation. The Blob Uri
  is only valid for 5 minutes.\";}}s:11:\"description\";s:27:\"API Export result Blob
  Uri.\";}s:13:\"ApiCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ApiContract\";}s:11:\"description\";s:12:\"Page
  values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:30:\"Paged Api
  list representation.\";}s:11:\"ApiContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:35:\"#/definitions/ApiContractProperties\";s:11:\"description\";s:31:\"Api
  entity contract properties.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:12:\"API
  details.\";}s:26:\"ApiCreateOrUpdateParameter\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:41:\"#/definitions/ApiCreateOrUpdateProperties\";s:11:\"description\";s:39:\"Api
  entity create of update properties.\";}}s:11:\"description\";s:32:\"API Create or
  Update Parameters.\";}s:27:\"ApiCreateOrUpdateProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"contentValue\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:36:\"Content
  value when Importing an API.\";}s:13:\"contentFormat\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:59:\"Format
  of the Content in which the API is getting imported.\";s:4:\"enum\";a:6:{i:0;s:8:\"wadl-xml\";i:1;s:14:\"wadl-link-json\";i:2;s:12:\"swagger-json\";i:3;s:17:\"swagger-link-json\";i:4;s:4:\"wsdl\";i:5;s:9:\"wsdl-link\";}s:9:\"x-ms-enum\";O:8:\"stdClass\":3:{s:4:\"name\";s:13:\"ContentFormat\";s:13:\"modelAsString\";b:1;s:6:\"values\";a:6:{i:0;O:8:\"stdClass\":2:{s:5:\"value\";s:8:\"wadl-xml\";s:11:\"description\";s:60:\"The
  contents are inline and Content type is a WADL document.\";}i:1;O:8:\"stdClass\":2:{s:5:\"value\";s:14:\"wadl-link-json\";s:11:\"description\";s:70:\"The
  WADL document is hosted on a publicly accessible internet address.\";}i:2;O:8:\"stdClass\":2:{s:5:\"value\";s:12:\"swagger-json\";s:11:\"description\";s:67:\"The
  contents are inline and Content Type is a OpenApi 2.0 Document.\";}i:3;O:8:\"stdClass\":2:{s:5:\"value\";s:17:\"swagger-link-json\";s:11:\"description\";s:78:\"The
  Open Api 2.0 document is hosted on a publicly accessible internet address.\";}i:4;O:8:\"stdClass\":2:{s:5:\"value\";s:4:\"wsdl\";s:11:\"description\";s:65:\"The
  contents are inline and the document is a WSDL/Soap document.\";}i:5;O:8:\"stdClass\":2:{s:5:\"value\";s:9:\"wsdl-link\";s:11:\"description\";s:70:\"The
  WSDL document is hosted on a publicly accessible internet address.\";}}}}s:12:\"wsdlSelector\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:61:\"Criteria
  to limit import of WSDL to a subset of the document.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"wsdlServiceName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"Name
  of service to import from WSDL\";}s:16:\"wsdlEndpointName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:42:\"Name
  of endpoint(port) to import from WSDL\";}}}s:7:\"apiType\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:105:\"Type
  of Api to create. \n * `http` creates a SOAP to REST API \n * `soap` creates a SOAP
  pass-through API .\";s:4:\"enum\";a:2:{i:0;s:4:\"http\";i:1;s:4:\"soap\";}s:16:\"x-ms-client-name\";s:11:\"SoapApiType\";s:9:\"x-ms-enum\";O:8:\"stdClass\":3:{s:4:\"name\";s:11:\"SoapApiType\";s:13:\"modelAsString\";b:1;s:6:\"values\";a:2:{i:0;O:8:\"stdClass\":3:{s:5:\"value\";s:4:\"http\";s:11:\"description\";s:46:\"Imports
  a SOAP API having a RESTful front end.\";s:4:\"name\";s:10:\"SoapToRest\";}i:1;O:8:\"stdClass\":3:{s:5:\"value\";s:4:\"soap\";s:11:\"description\";s:45:\"Imports
  the Soap API having a SOAP front end.\";s:4:\"name\";s:15:\"SoapPassThrough\";}}}}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ApiContractProperties\";}}s:11:\"description\";s:32:\"Api
  Create or Update Properties.\";}s:21:\"ApiContractProperties\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"displayName\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:9:\"API
  name.\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:300;}s:10:\"serviceUrl\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:58:\"Absolute
  URL of the backend service implementing this API.\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:2000;}s:4:\"path\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:242:\"Relative
  URL uniquely identifying this API and all of its resource paths within the API Management
  service instance. It is appended to the API endpoint base URL specified during the
  service instance creation to form a public URL for this API.\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:400;}s:9:\"protocols\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"http\";i:1;s:5:\"https\";}s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:4:\"name\";s:8:\"Protocol\";s:13:\"modelAsString\";b:0;}}s:11:\"description\";s:71:\"Describes
  on which protocols the operations in this API can be invoked.\";}s:13:\"apiVersionSet\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/ApiVersionSetContractDetails\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ApiEntityBaseContract\";}}s:8:\"required\";a:1:{i:0;s:4:\"path\";}s:11:\"description\";s:21:\"Api
  Entity Properties\";}s:17:\"ApiUpdateContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:41:\"#/definitions/ApiContractUpdateProperties\";s:11:\"description\";s:49:\"Properties
  of the API entity that can be updated.\";}}s:11:\"description\";s:28:\"API update
  contract details.\";}s:27:\"ApiContractUpdateProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"displayName\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:9:\"API
  name.\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:300;}s:10:\"serviceUrl\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:58:\"Absolute
  URL of the backend service implementing this API.\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:2000;}s:4:\"path\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:242:\"Relative
  URL uniquely identifying this API and all of its resource paths within the API Management
  service instance. It is appended to the API endpoint base URL specified during the
  service instance creation to form a public URL for this API.\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:400;}s:9:\"protocols\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"http\";i:1;s:5:\"https\";}s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:4:\"name\";s:8:\"Protocol\";s:13:\"modelAsString\";b:0;}}s:11:\"description\";s:71:\"Describes
  on which protocols the operations in this API can be invoked.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ApiEntityBaseContract\";}}s:11:\"description\";s:31:\"API
  update contract properties.\";}s:21:\"ApiEntityBaseContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:57:\"Description
  of the API. May include HTML formatting tags.\";}s:22:\"authenticationSettings\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:44:\"#/definitions/AuthenticationSettingsContract\";s:11:\"description\";s:61:\"Collection
  of authentication settings included into this API.\";}s:29:\"subscriptionKeyParameterNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:51:\"#/definitions/SubscriptionKeyParameterNamesContract\";s:11:\"description\";s:43:\"Protocols
  over which API is made available.\";}s:4:\"type\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"Type
  of API.\";s:4:\"enum\";a:2:{i:0;s:4:\"http\";i:1;s:4:\"soap\";}s:16:\"x-ms-client-name\";s:7:\"ApiType\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:4:\"name\";s:7:\"ApiType\";s:13:\"modelAsString\";b:1;}}s:11:\"apiRevision\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:89:\"Describes
  the Revision of the Api. If no value is provided, default revision 1 is created\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:100;}s:10:\"apiVersion\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Indicates
  the Version identifier of the API if the API is versioned\";s:9:\"maxLength\";i:100;}s:9:\"isCurrent\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Indicates
  if API revision is current api revision.\";s:8:\"readOnly\";b:1;}s:8:\"isOnline\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:56:\"Indicates
  if API revision is accessible via the gateway.\";s:8:\"readOnly\";b:1;}s:15:\"apiVersionSetId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"A
  resource identifier for the related ApiVersionSet.\";}}s:11:\"description\";s:26:\"API
  base contract details.\";}s:21:\"ApiRevisionCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/ApiRevisionContract\";}s:11:\"description\";s:12:\"Page
  values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:39:\"Paged Api
  Revision list representation.\";}s:19:\"ApiRevisionContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:5:\"apiId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:11:\"description\";s:31:\"Identifier
  of the API Revision.\";}s:11:\"apiRevision\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:100;s:8:\"readOnly\";b:1;s:11:\"description\";s:23:\"Revision
  number of API.\";}s:15:\"createdDateTime\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:141:\"The
  time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
  as specified by the ISO 8601 standard.\";}s:15:\"updatedDateTime\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:142:\"The
  time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
  as specified by the ISO 8601 standard.\";}s:11:\"description\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:9:\"maxLength\";i:256;s:11:\"description\";s:32:\"Description
  of the API Revision.\";}s:10:\"privateUrl\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:11:\"description\";s:55:\"Gateway
  URL for accessing the non-current API Revision.\";}s:8:\"isOnline\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;s:11:\"description\";s:54:\"Indicates
  if API revision is the current api revision.\";}s:9:\"isCurrent\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;s:11:\"description\";s:56:\"Indicates
  if API revision is accessible via the gateway.\";}}s:11:\"description\";s:29:\"Summary
  of revision metadata.\";}s:23:\"ApiRevisionInfoContract\";O:8:\"stdClass\":2:{s:11:\"description\";s:82:\"Object
  used to create an API Revision or Version based on an existing API Revision\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"sourceApiId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:66:\"Resource
  identifier of API to be used to create the revision from.\";}s:14:\"apiVersionName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:100;s:11:\"description\";s:43:\"Version
  identifier for the new API Version.\";}s:22:\"apiRevisionDescription\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:11:\"description\";s:32:\"Description
  of new API Revision.\";}s:13:\"apiVersionSet\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Version
  set details\";s:4:\"$ref\";s:42:\"#/definitions/ApiVersionSetContractDetails\";}}}s:28:\"ApiVersionSetContractDetails\";O:8:\"stdClass\":2:{s:11:\"description\";s:88:\"An
  API Version Set contains the common configuration for a set of API Versions relating
  \";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:85:\"Identifier
  for existing API Version Set. Omit this value to create a new Version Set.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"Description
  of API Version Set.\";}s:16:\"versioningScheme\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:91:\"An
  value that determines where the API Version identifer will be located in a HTTP
  request.\";s:4:\"enum\";a:3:{i:0;s:7:\"Segment\";i:1;s:5:\"Query\";i:2;s:6:\"Header\";}}s:16:\"versionQueryName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:93:\"Name
  of query parameter that indicates the API Version if versioningScheme is set to
  `query`.\";}s:17:\"versionHeaderName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:100:\"Name
  of HTTP header parameter that indicates the API Version if versioningScheme is set
  to `header`.\";}}}s:20:\"ApiReleaseCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ApiReleaseContract\";}s:11:\"description\";s:12:\"Page
  values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:39:\"Paged Api
  Revision list representation.\";}s:18:\"ApiReleaseContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:42:\"#/definitions/ApiReleaseContractProperties\";s:11:\"description\";s:39:\"Properties
  of the Api Release Contract.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:20:\"Api
  Release details.\";}s:28:\"ApiReleaseContractProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"API
  Release details\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"apiId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"Identifier
  of the API the release belongs to.\";}s:15:\"createdDateTime\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:133:\"The
  time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
  as specified by the ISO 8601 standard.\";}s:15:\"updatedDateTime\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:37:\"The
  time the API release was updated.\";}s:5:\"notes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"Release
  Notes\";}}}s:30:\"AuthenticationSettingsContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"oAuth2\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:50:\"#/definitions/OAuth2AuthenticationSettingsContract\";s:11:\"description\";s:30:\"OAuth2
  Authentication settings\";}}s:11:\"description\";s:28:\"API Authentication Settings.\";}s:36:\"OAuth2AuthenticationSettingsContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:21:\"authorizationServerId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:38:\"OAuth
  authorization server identifier.\";}s:5:\"scope\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:17:\"operations
  scope.\";}}s:11:\"description\";s:43:\"API OAuth2 Authentication settings details.\";}s:19:\"OperationCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/OperationContract\";}s:11:\"description\";s:12:\"Page
  values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:36:\"Paged Operation
  list representation.\";}s:17:\"OperationContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:41:\"#/definitions/OperationContractProperties\";s:11:\"description\";s:37:\"Properties
  of the Operation Contract.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:22:\"Api
  Operation details.\";}s:27:\"OperationContractProperties\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"displayName\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Operation
  Name.\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:300;}s:6:\"method\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:101:\"A
  Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited
  by only them.\";s:12:\"externalDocs\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"As
  defined by RFC.\";s:3:\"url\";s:41:\"http://www.rfc-editor.org/rfc/rfc7230.txt\";}}s:11:\"urlTemplate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:149:\"Relative
  URL template identifying the target resource for this operation. May include parameters.
  Example: /customers/{cid}/orders/{oid}/?date={date}\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:1000;}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/OperationEntityBaseContract\";}}s:8:\"required\";a:3:{i:0;s:11:\"displayName\";i:1;s:6:\"method\";i:2;s:11:\"urlTemplate\";}s:11:\"description\";s:29:\"Operation
  Contract Properties\";}s:33:\"OperationUpdateContractProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"displayName\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Operation
  Name.\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:300;}s:6:\"method\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:101:\"A
  Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited
  by only them.\";s:12:\"externalDocs\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"As
  defined by RFC.\";s:3:\"url\";s:41:\"http://www.rfc-editor.org/rfc/rfc7230.txt\";}}s:11:\"urlTemplate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:149:\"Relative
  URL template identifying the target resource for this operation. May include parameters.
  Example: /customers/{cid}/orders/{oid}/?date={date}\";s:9:\"minLength\";i:1;s:9:\"maxLength\";i:1000;}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/OperationEntityBaseContract\";}}s:11:\"description\";s:37:\"Operation
  Update Contract Properties.\";}s:27:\"OperationEntityBaseContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:18:\"templateParameters\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ParameterContract\";}s:11:\"description\";s:38:\"Collection
  of URL template parameters.\";}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:63:\"Description
  of the operation. May include HTML formatting tags.\";s:9:\"maxLength\";i:1000;}s:7:\"request\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/RequestContract\";s:11:\"description\";s:37:\"An
  entity containing request details.\";}s:9:\"responses\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/ResponseContract\";}s:11:\"description\";s:29:\"Array
  of Operation responses.\";}s:8:\"policies\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"Operation
  Policies\";}}s:11:\"description\";s:43:\"Api Operation Entity Base Contract details.\";}s:23:\"OperationUpdateContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:47:\"#/definitions/OperationUpdateContractProperties\";s:11:\"description\";s:59:\"Properties
  of the API Operation entity that can be updated.\";}}s:11:\"description\";s:38:\"Api
  Operation Update Contract details.\";}s:17:\"ParameterContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Parameter
  name.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Parameter
  description.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Parameter
  type.\";}s:12:\"defaultValue\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"Default
  parameter value.\";}s:8:\"required\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:37:\"whether
  parameter is required or not.\";}s:6:\"values\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:17:\"Parameter
  values.\";}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:4:\"type\";}s:11:\"description\";s:29:\"Operation
  parameters details.\";}s:22:\"RepresentationContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"contentType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:92:\"Specifies
  a registered or custom content type for this representation, e.g. application/xml.\";}s:6:\"sample\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"An
  example of the representation.\";}s:8:\"schemaId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:131:\"Schema
  identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded'
  nor 'multipart/form-data'.\";}s:8:\"typeName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:145:\"Type
  name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded'
  nor 'multipart/form-data'.\";}s:14:\"formParameters\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ParameterContract\";}s:11:\"description\";s:135:\"Collection
  of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded'
  or 'multipart/form-data'..\";}}s:8:\"required\";a:1:{i:0;s:11:\"contentType\";}s:11:\"description\";s:50:\"Operation
  request/response representation details.\";}s:15:\"RequestContract\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"Operation
  request description.\";}s:15:\"queryParameters\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ParameterContract\";}s:11:\"description\";s:49:\"Collection
  of operation request query parameters.\";}s:7:\"headers\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ParameterContract\";}s:11:\"description\";s:40:\"Collection
  of operation request headers.\";}s:15:\"representations\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/RepresentationContract\";}s:11:\"description\";s:48:\"Collection
  of operation request representations.\";}}s:11:\"description\";s:26:\"Operation
  request details.\";}s:16:\"ResponseContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"statusCode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:36:\"Operation
  response HTTP status code.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"Operation
  response description.\";}s:15:\"representations\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/RepresentationContract\";}s:11:\"description\";s:49:\"Collection
  of operation response representations.\";}s:7:\"headers\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ParameterContract\";}s:11:\"description\";s:41:\"Collection
  of operation response headers.\";}}s:8:\"required\";a:1:{i:0;s:10:\"statusCode\";}s:11:\"description\";s:27:\"Operation
  response details.\";}s:37:\"SubscriptionKeyParameterNamesContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"header\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:29:\"Subscription
  key header name.\";}s:5:\"query\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"Subscription
  key query string parameter name.\";}}s:11:\"description\";s:41:\"Subscription key
  parameter names details.\";s:7:\"example\";O:8:\"stdClass\":1:{s:29:\"subscriptionKeyParameterNames\";O:8:\"stdClass\":2:{s:5:\"query\";s:24:\"customQueryParameterName\";s:6:\"header\";s:25:\"customHeaderParameterName\";}}}s:16:\"SchemaCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/SchemaContract\";}s:11:\"description\";s:26:\"Api
  Schema Contract value.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:42:\"The response
  of the list schema operation.\";}s:14:\"SchemaContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:38:\"#/definitions/SchemaContractProperties\";s:11:\"description\";s:25:\"Properties
  of the Schema.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:24:\"Schema
  Contract details.\";}s:24:\"SchemaContractProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"contentType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:162:\"Must
  be a valid a media type used in a Content-Type header as defined in the RFC 2616.
  Media type of the schema document (e.g. application/json, application/xml).\";}s:8:\"document\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:38:\"#/definitions/SchemaDocumentProperties\";s:11:\"description\";s:34:\"Properties
  of the Schema Document.\";}}s:8:\"required\";a:1:{i:0;s:11:\"contentType\";}s:11:\"description\";s:27:\"Schema
  contract Properties.\";}s:24:\"SchemaDocumentProperties\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:66:\"Json
  escaped string defining the document representing the Schema.\";}}s:11:\"description\";s:27:\"Schema
  Document Properties.\";}s:15:\"IssueCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/IssueContract\";}s:11:\"description\";s:13:\"Issue
  values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:32:\"Paged Issue
  list representation.\";}s:13:\"IssueContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:37:\"#/definitions/IssueContractProperties\";s:11:\"description\";s:24:\"Properties
  of the Issue.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:23:\"Issue
  Contract details.\";}s:23:\"IssueContractProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"The
  issue title.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"Text
  describing the issue.\";}s:11:\"createdDate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:41:\"Date
  and time when the issue was created.\";}s:5:\"state\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"Status
  of the issue.\";s:4:\"enum\";a:5:{i:0;s:8:\"proposed\";i:1;s:4:\"open\";i:2;s:7:\"removed\";i:3;s:8:\"resolved\";i:4;s:6:\"closed\";}s:9:\"x-ms-enum\";O:8:\"stdClass\":3:{s:4:\"name\";s:5:\"State\";s:13:\"modelAsString\";b:1;s:6:\"values\";a:5:{i:0;O:8:\"stdClass\":2:{s:5:\"value\";s:8:\"proposed\";s:11:\"description\";s:22:\"The
  issue is proposed.\";}i:1;O:8:\"stdClass\":2:{s:5:\"value\";s:4:\"open\";s:11:\"description\";s:20:\"The
  issue is opened.\";}i:2;O:8:\"stdClass\":2:{s:5:\"value\";s:7:\"removed\";s:11:\"description\";s:22:\"The
  issue was removed.\";}i:3;O:8:\"stdClass\":2:{s:5:\"value\";s:8:\"resolved\";s:11:\"description\";s:26:\"The
  issue is now resolved.\";}i:4;O:8:\"stdClass\":2:{s:5:\"value\";s:6:\"closed\";s:11:\"description\";s:21:\"The
  issue was closed.\";}}}}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:53:\"A
  resource identifier for the user created the issue.\";}s:5:\"apiId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"A
  resource identifier for the API the issue was created for.\";}}s:8:\"required\";a:3:{i:0;s:5:\"title\";i:1;s:11:\"description\";i:2;s:6:\"userId\";}s:11:\"description\";s:26:\"Issue
  contract Properties.\";}s:22:\"IssueCommentCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/IssueCommentContract\";}s:11:\"description\";s:21:\"Issue
  Comment values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:40:\"Paged Issue
  Comment list representation.\";}s:20:\"IssueCommentContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:44:\"#/definitions/IssueCommentContractProperties\";s:11:\"description\";s:32:\"Properties
  of the Issue Comment.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:31:\"Issue
  Comment Contract details.\";}s:30:\"IssueCommentContractProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"Comment
  text.\";}s:11:\"createdDate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:43:\"Date
  and time when the comment was created.\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:56:\"A
  resource identifier for the user who left the comment.\";}}s:8:\"required\";a:2:{i:0;s:4:\"text\";i:1;s:6:\"userId\";}s:11:\"description\";s:34:\"Issue
  Comment contract Properties.\";}s:25:\"IssueAttachmentCollection\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/IssueAttachmentContract\";}s:11:\"description\";s:24:\"Issue
  Attachment values.\";s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Next
  page link if any.\";s:8:\"readOnly\";b:1;}}s:11:\"description\";s:43:\"Paged Issue
  Attachment list representation.\";}s:23:\"IssueAttachmentContract\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"x-ms-client-flatten\";b:1;s:4:\"$ref\";s:47:\"#/definitions/IssueAttachmentContractProperties\";s:11:\"description\";s:35:\"Properties
  of the Issue Attachment.\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"./apimanagement.json#/definitions/Resource\";}}s:11:\"description\";s:34:\"Issue
  Attachment Contract details.\";}s:33:\"IssueAttachmentContractProperties\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:48:\"Filename
  by which the binary data will be saved.\";}s:13:\"contentFormat\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:140:\"Either
  'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded
  binary data provided in the 'content' property.\";}s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"An
  HTTP link or Base64-encoded binary data.\";}}s:8:\"required\";a:3:{i:0;s:5:\"title\";i:1;s:13:\"contentFormat\";i:2;s:7:\"content\";}s:11:\"description\";s:37:\"Issue
  Attachment contract Properties.\";}}"
...
