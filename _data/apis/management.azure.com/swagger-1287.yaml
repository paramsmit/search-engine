---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:11:\"description\";s:69:\"Client that can
  be used to manage Azure Search services and API keys.\";s:5:\"title\";s:22:\"SearchManagementClient\";s:7:\"version\";s:10:\"2015-08-19\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:131:\"https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:152:\"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/search/resource-manager/Microsoft.Search/stable/2015-08-19/search.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:9:\"azure.com\";s:13:\"x-serviceName\";s:6:\"search\";s:6:\"x-tags\";a:2:{i:0;s:5:\"Azure\";i:1;s:9:\"Microsoft\";}s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:12:\"azure_search\";s:4:\"type\";s:7:\"openapi\";}}"
host: management.azure.com
paths:
  /providers/Microsoft.Search/operations:
    get:
      description: Lists all of the available REST API operations of the Microsoft.Search
        provider.
      operationId: Operations_List
      parameters:
      - $ref: '#/parameters/ApiVersionParameter'
      responses:
        200:
          description: Success. The response describes the list of operations.
          schema:
            $ref: '#/definitions/OperationListResult'
      tags:
      - Operations
      x-ms-pageable: []
  /subscriptions/{subscriptionId}/providers/Microsoft.Search/checkNameAvailability:
    post:
      description: Checks whether or not the given Search service name is available
        for use. Search service names must be globally unique since they are part
        of the service URI (https://<name>.search.windows.net).
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: Services_CheckNameAvailability
      parameters:
      - description: The resource name and type to check.
        in: body
        name: checkNameAvailabilityInput
        required: true
        schema:
          $ref: '#/definitions/CheckNameAvailabilityInput'
        x-ms-client-flatten: true
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The name check completed. The response contains details of
            whether the name is valid and available. If the name is invalid, the response
            also contains a message explaining why not.
          schema:
            $ref: '#/definitions/CheckNameAvailabilityOutput'
        default:
          description: 'HTTP 400 (Bad Request): The given resource type is not ''searchServices''.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - Services
      x-ms-examples:
        SearchCheckNameAvailability:
          parameters:
            api-version: "2015-08-19"
            checkNameAvailabilityInput:
              name: mysearchservice
              type: searchServices
            subscriptionId: subid
          responses:
            200:
              body:
                message: ""
                nameAvailable: false
                reason: AlreadyExists
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices:
    get:
      description: Gets a list of all Search services in the given resource group.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: Services_ListByResourceGroup
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The operation succeeded. The response contains the list of
            all Search service definitions for the given resource group.
          schema:
            $ref: '#/definitions/SearchServiceListResult'
        default:
          description: An unexpected error occurred during the operation.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - Services
      x-ms-examples:
        SearchListServicesByResourceGroup:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice
                  location: westus
                  name: mysearchservice
                  properties:
                    hostingMode: default
                    partitionCount: 1
                    provisioningState: succeeded
                    replicaCount: 3
                    status: running
                    statusDetails: ""
                  sku:
                    name: standard
                  tags:
                    app-name: My e-commerce app
                  type: Microsoft.Search/searchServices
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice2
                  location: eastus
                  name: mysearchservice2
                  properties:
                    hostingMode: default
                    partitionCount: 1
                    provisioningState: succeeded
                    replicaCount: 1
                    status: running
                    statusDetails: ""
                  sku:
                    name: basic
                  tags:
                    app-name: My e-commerce app
                  type: Microsoft.Search/searchServices
      x-ms-pageable: []
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}:
    delete:
      description: Deletes a Search service in the given resource group, along with
        its associated resources.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: Services_Delete
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The Search service was successfully deleted.
        204:
          description: The Search service was successfully deleted.
        404:
          description: The subscription, resource group, or Search service could not
            be found.
        default:
          description: An unexpected error occurred during the operation.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - Services
      x-ms-examples:
        SearchDeleteService:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200: []
            204: []
            404: []
    get:
      description: Gets the Search service with the given name in the given resource
        group.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: Services_Get
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The Search service definition was successfully retrieved and
            is in the response. If you are polling for the completion of a provisioning
            or scale operation, you can check its status via the provisioningState
            property.
          schema:
            $ref: '#/definitions/SearchService'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or
            Search service name could not be found.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - Services
      x-ms-examples:
        SearchGetService:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice
                location: westus
                name: mysearchservice
                properties:
                  hostingMode: default
                  partitionCount: 1
                  provisioningState: succeeded
                  replicaCount: 3
                  status: running
                  statusDetails: ""
                sku:
                  name: standard
                tags:
                  app-name: My e-commerce app
                type: Microsoft.Search/searchServices
    patch:
      description: Updates an existing Search service in the given resource group.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: Services_Update
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - description: The name of the Azure Search service to update.
        in: path
        name: searchServiceName
        required: true
        type: string
      - description: The definition of the Search service to update.
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/SearchService'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The existing service definition was successfully updated. If
            you changed the number of replicas or partitions, the scale operation
            will happen asynchronously. You can periodically get your service definition
            and monitor progress via the provisioningState property.
          schema:
            $ref: '#/definitions/SearchService'
        default:
          description: 'HTTP 400 (Bad Request): The given service definition is invalid
            or you attempted to change a property that is immutable; See the error
            code and message in the response for details. HTTP 404 (Not Found): The
            subscription or resource group could not be found. HTTP 409 (Conflict):
            The specified subscription is disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - Services
      x-ms-examples:
        SearchUpdateService:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            service:
              properties:
                replicaCount: 2
              tags:
                app-name: My e-commerce app
                new-tag: Adding a new tag
            subscriptionId: subid
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice
                location: westus
                name: mysearchservice
                properties:
                  hostingMode: default
                  partitionCount: 1
                  provisioningState: provisioning
                  replicaCount: 3
                  status: provisioning
                  statusDetails: ""
                sku:
                  name: standard
                tags:
                  app-name: My e-commerce app
                type: Microsoft.Search/searchServices
    put:
      description: Creates or updates a Search service in the given resource group.
        If the Search service already exists, all properties will be updated with
        the given values.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: Services_CreateOrUpdate
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - description: The name of the Azure Search service to create or update. Search
          service names must only contain lowercase letters, digits or dashes, cannot
          use dash as the first two or last one characters, cannot contain consecutive
          dashes, and must be between 2 and 60 characters in length. Search service
          names must be globally unique since they are part of the service URI (https://<name>.search.windows.net).
          You cannot change the service name after the service is created.
        in: path
        name: searchServiceName
        required: true
        type: string
      - description: The definition of the Search service to create or update.
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/SearchService'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The existing service definition was successfully updated. If
            you changed the number of replicas or partitions, the scale operation
            will happen asynchronously. You can periodically get your service definition
            and monitor progress via the provisioningState property.
          schema:
            $ref: '#/definitions/SearchService'
        201:
          description: If you requested creation of a free Search service, the service
            is now provisioned and ready to use, subject to DNS propagation delay.
            For other SKU types, provisioning happens asynchronously. You can periodically
            get your service definition and monitor progress via the provisioningState
            property.
          schema:
            $ref: '#/definitions/SearchService'
        default:
          description: 'HTTP 400 (Bad Request): The given service name or service
            definition is invalid; See the error code and message in the response
            for details. HTTP 404 (Not Found): The subscription or resource group
            could not be found. HTTP 409 (Conflict): The specified subscription is
            disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - Services
      x-ms-examples:
        SearchCreateOrUpdateService:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            service:
              location: westus
              properties:
                hostingMode: default
                partitionCount: 1
                replicaCount: 3
              sku:
                name: standard
              tags:
                app-name: My e-commerce app
            subscriptionId: subid
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice
                location: westus
                name: mysearchservice
                properties:
                  hostingMode: default
                  partitionCount: 1
                  provisioningState: provisioning
                  replicaCount: 3
                  status: provisioning
                  statusDetails: ""
                sku:
                  name: standard
                tags:
                  app-name: My e-commerce app
                type: Microsoft.Search/searchServices
            201:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice
                location: westus
                name: mysearchservice
                properties:
                  hostingMode: default
                  partitionCount: 1
                  provisioningState: provisioning
                  replicaCount: 3
                  status: provisioning
                  statusDetails: ""
                sku:
                  name: standard
                tags:
                  app-name: My e-commerce app
                type: Microsoft.Search/searchServices
      x-ms-long-running-operation: true
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/createQueryKey/{name}
  : post:
      description: Generates a new query key for the specified Search service. You
        can create up to 50 query keys per service.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: QueryKeys_Create
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - description: The name of the new query API key.
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The query key was successfully created and is in the response.
            You can use the query key as the value of the 'api-key' parameter in the
            Azure Search Service REST API or SDK to perform read-only operations on
            your Search indexes such as querying and looking up documents by ID.
          schema:
            $ref: '#/definitions/QueryKey'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or
            Search service could not be found. HTTP 409 (Conflict): The specified
            subscription is disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - QueryKeys
      x-ms-examples:
        SearchCreateQueryKey:
          parameters:
            api-version: "2015-08-19"
            name: Query key for browser-based clients
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200:
              body:
                key: <a query API key>
                name: Query key for browser-based clients
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/deleteQueryKey/{key}
  : delete:
      description: Deletes the specified query key. Unlike admin keys, query keys
        are not regenerated. The process for regenerating a query key is to delete
        and then recreate it.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: QueryKeys_Delete
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - description: The query key to be deleted. Query keys are identified by value,
          not by name.
        in: path
        name: key
        required: true
        type: string
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The query key was successfully deleted.
        204:
          description: The query key was successfully deleted.
        404:
          description: The subscription, resource group, Search service, or query
            key could not be found.
        default:
          description: 'HTTP 409 (Conflict): The specified subscription is disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - QueryKeys
      x-ms-examples:
        SearchDeleteQueryKey:
          parameters:
            api-version: "2015-08-19"
            key: <a query API key>
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200: []
            204: []
            404: []
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/listAdminKeys
  : post:
      description: Gets the primary and secondary admin API keys for the specified
        Azure Search service.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: AdminKeys_Get
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The admin keys were successfully retrieved and are in the response.
            You can use either the primary or secondary key as the value of the 'api-key'
            parameter in the Azure Search Service REST API or SDK to perform any operations
            on your Search service, including privileged operations. Privileged operations
            include managing resources like indexes and data sources as well as uploading,
            modifying, or deleting data in your indexes.
          schema:
            $ref: '#/definitions/AdminKeyResult'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or
            Search service could not be found. HTTP 409 (Conflict): The specified
            subscription is disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - AdminKeys
      x-ms-examples:
        SearchGetAdminKeys:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200:
              body:
                primaryKey: <your primary admin API key>
                secondaryKey: <your secondary admin API key>
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/listQueryKeys
  : get:
      description: Returns the list of query API keys for the given Azure Search service.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: QueryKeys_ListBySearchService
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: All query keys for the given Search service were successfully
            retrieved and are in the response. You can use any of the query keys as
            the value of the 'api-key' parameter in the Azure Search Service REST
            API or SDK to perform read-only operations on your Search indexes such
            as querying and looking up documents by ID.
          schema:
            $ref: '#/definitions/ListQueryKeysResult'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or
            Search service could not be found. HTTP 409 (Conflict): The specified
            subscription is disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - QueryKeys
      x-ms-examples:
        SearchListQueryKeysBySearchService:
          parameters:
            api-version: "2015-08-19"
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200:
              body:
                value:
                - key: <a query API key>
                  name: Query key for browser-based clients
                - key: <another query API key>
                  name: Query key for mobile clients
      x-ms-pageable: []
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/regenerateAdminKey/{keyKind}
  : post:
      description: Regenerates either the primary or secondary admin API key. You
        can only regenerate one key at a time.
      externalDocs:
        url: https://aka.ms/search-manage
      operationId: AdminKeys_Regenerate
      parameters:
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/SearchServiceNameParameter'
      - description: Specifies which key to regenerate. Valid values include 'primary'
          and 'secondary'.
        enum:
        - primary
        - secondary
        in: path
        name: keyKind
        required: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AdminKeyKind
      - $ref: '#/parameters/ClientRequestIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        200:
          description: The specified admin key was successfully regenerated. Both
            admin keys are included in the response, including the newly-regenerated
            key.
          schema:
            $ref: '#/definitions/AdminKeyResult'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or
            Search service could not be found. HTTP 409 (Conflict): The specified
            subscription is disabled.'
          schema:
            $ref: '#/definitions/CloudError'
      tags:
      - AdminKeys
      x-ms-examples:
        SearchRegenerateAdminKey:
          parameters:
            api-version: "2015-08-19"
            keyKind: primary
            resourceGroupName: rg1
            searchServiceName: mysearchservice
            subscriptionId: subid
          responses:
            200:
              body:
                primaryKey: <your primary admin API key>
                secondaryKey: <your secondary admin API key>
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":14:{s:14:\"AdminKeyResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:94:\"Response
  containing the primary and secondary admin API keys for a given Azure Search service.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"primaryKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"The
  primary admin API key of the Search service.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:12:\"secondaryKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"The
  secondary admin API key of the Search service.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:26:\"CheckNameAvailabilityInput\";O:8:\"stdClass\":4:{s:11:\"description\";s:37:\"Input
  of check name availability API.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:255:\"The
  Search service name to validate. Search service names must only contain lowercase
  letters, digits or dashes, cannot use dash as the first two or last one characters,
  cannot contain consecutive dashes, and must be between 2 and 60 characters in length.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":4:{s:11:\"description\";s:99:\"The
  type of the resource whose name is to be validated. This value must always be 'searchServices'.\";s:4:\"enum\";a:1:{i:0;s:14:\"searchServices\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:12:\"ResourceType\";}}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:4:\"type\";}s:4:\"type\";s:6:\"object\";}s:27:\"CheckNameAvailabilityOutput\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"Output
  of check name availability API.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"message\";O:8:\"stdClass\":3:{s:11:\"description\";s:156:\"A
  message that explains why the name is invalid and provides resource naming requirements.
  Available only if 'Invalid' is returned in the 'reason' property.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:13:\"nameAvailable\";O:8:\"stdClass\":4:{s:11:\"description\";s:49:\"A
  value indicating whether the name is available.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";s:16:\"x-ms-client-name\";s:15:\"IsNameAvailable\";}s:6:\"reason\";O:8:\"stdClass\":5:{s:11:\"description\";s:256:\"The
  reason why the name is not available. 'Invalid' indicates the name provided does
  not match the naming requirements (incorrect length, unsupported characters, etc.).
  'AlreadyExists' indicates that the name is already in use and is therefore unavailable.\";s:4:\"enum\";a:2:{i:0;s:7:\"Invalid\";i:1;s:13:\"AlreadyExists\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:21:\"UnavailableNameReason\";}}}s:4:\"type\";s:6:\"object\";}s:10:\"CloudError\";O:8:\"stdClass\":4:{s:11:\"description\";s:40:\"Contains
  information about an API error.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/CloudErrorBody\";s:11:\"description\";s:66:\"Describes
  a particular API error with an error code and a message.\";}}s:4:\"type\";s:6:\"object\";s:13:\"x-ms-external\";b:1;}s:14:\"CloudErrorBody\";O:8:\"stdClass\":4:{s:11:\"description\";s:66:\"Describes
  a particular API error with an error code and a message.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:149:\"An
  error code that describes the error condition more precisely than an HTTP status
  code. Can be used to programatically handle specific error cases.\";s:4:\"type\";s:6:\"string\";}s:7:\"details\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"Contains
  nested errors that are related to this error.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/CloudErrorBody\";}s:4:\"type\";s:5:\"array\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:80:\"A
  message that describes the error in detail and provides debugging information.\";s:4:\"type\";s:6:\"string\";}s:6:\"target\";O:8:\"stdClass\":2:{s:11:\"description\";s:84:\"The
  target of the particular error (for example, the name of the property in error).\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";s:13:\"x-ms-external\";b:1;}s:19:\"ListQueryKeysResult\";O:8:\"stdClass\":3:{s:11:\"description\";s:72:\"Response
  containing the query API keys for a given Azure Search service.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:44:\"The
  query keys for the Azure Search service.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/QueryKey\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}s:13:\"x-ms-external\";b:1;}s:9:\"Operation\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Describes
  a REST API operation.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"display\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"The
  object that describes the operation.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"The
  friendly name of the operation.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:9:\"operation\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  operation type: read, write, delete, listKeys/action, etc.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"provider\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  friendly name of the resource provider.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"The
  resource type on which the operation is performed.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"The
  name of the operation. This name is of the form {provider}/{resource}/{operation}.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"OperationListResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:130:\"The
  result of the request to list REST API operations. It contains a list of operations
  and a URL  to get the next set of results.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  URL to get the next set of operation list results, if any.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:58:\"The
  list of operations supported by the resource provider.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Operation\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:8:\"QueryKey\";O:8:\"stdClass\":2:{s:11:\"description\";s:101:\"Describes
  an API key for a given Azure Search service that has permissions for query operations
  only.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"The
  value of the query API key.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"The
  name of the query API key; may be empty.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:8:\"Resource\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Base
  type for all Azure resources.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":4:{s:11:\"description\";s:100:\"The
  ID of the resource. This can be used with the Azure Resource Manager to link resources
  together.\";s:12:\"externalDocs\";O:8:\"stdClass\":1:{s:3:\"url\";s:38:\"https://aka.ms/search-linked-resources\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"location\";O:8:\"stdClass\":4:{s:11:\"description\";s:226:\"The
  geographic location of the resource. This must be one of the supported and registered
  Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).
  This property is required when creating a new resource.\";s:12:\"externalDocs\";O:8:\"stdClass\":1:{s:3:\"url\";s:29:\"https://aka.ms/search-rp-info\";}s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:2:{i:0;s:6:\"create\";i:1;s:4:\"read\";}}s:4:\"name\";O:8:\"stdClass\":4:{s:11:\"description\";s:25:\"The
  name of the resource.\";s:12:\"externalDocs\";O:8:\"stdClass\":1:{s:3:\"url\";s:34:\"https://aka.ms/search-naming-rules\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:57:\"Tags
  to help categorize the resource in the Azure portal.\";s:4:\"type\";s:6:\"object\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"The
  resource type.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}s:19:\"x-ms-azure-resource\";b:1;}s:13:\"SearchService\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:56:\"Describes
  an Azure Search service and its current state.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"$ref\";s:37:\"#/definitions/SearchServiceProperties\";s:11:\"description\";s:33:\"Properties
  of the Search service.\";s:19:\"x-ms-client-flatten\";b:1;}s:3:\"sku\";O:8:\"stdClass\":3:{s:4:\"$ref\";s:17:\"#/definitions/Sku\";s:11:\"description\";s:141:\"The
  SKU of the Search Service, which determines price tier and capacity limits. This
  property is required when creating a new Search Service.\";s:12:\"externalDocs\";O:8:\"stdClass\":1:{s:3:\"url\";s:67:\"https://azure.microsoft.com/documentation/articles/search-sku-tier/\";}}}}s:23:\"SearchServiceListResult\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"Response
  containing a list of Azure Search services.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:28:\"The
  list of Search services.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/SearchService\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}s:13:\"x-ms-external\";b:1;}s:23:\"SearchServiceProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Properties
  of the Search service.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"hostingMode\";O:8:\"stdClass\":5:{s:7:\"default\";s:7:\"default\";s:11:\"description\";s:331:\"Applicable
  only for the standard3 SKU. You can set this property to enable up to 3 high density
  partitions that allow up to 1000 indexes, which is much higher than the maximum
  indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default'
  or 'highDensity'. For all other SKUs, this value must be 'default'.\";s:4:\"enum\";a:2:{i:0;s:7:\"default\";i:1;s:11:\"highDensity\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:11:\"HostingMode\";}}s:14:\"partitionCount\";O:8:\"stdClass\":6:{s:7:\"default\";i:1;s:11:\"description\";s:253:\"The
  number of partitions in the Search service; if specified, it can be 1, 2, 3, 4,
  6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3'
  services with hostingMode set to 'highDensity', the allowed values are between 1
  and 3.\";s:6:\"format\";s:5:\"int32\";s:7:\"maximum\";i:12;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:17:\"provisioningState\";O:8:\"stdClass\":5:{s:11:\"description\";s:655:\"The
  state of the last provisioning operation performed on the Search service. Provisioning
  is an intermediate state that occurs while service capacity is being established.
  After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'.
  Client applications can poll provisioning status (the recommended polling interval
  is from 30 seconds to one minute) by using the Get Search Service operation to see
  when an operation is completed. If you are using the free service, this value tends
  to come back as 'succeeded' directly in the call to Create Search service. This
  is because the free service uses capacity that is already set up.\";s:4:\"enum\";a:3:{i:0;s:9:\"succeeded\";i:1;s:12:\"provisioning\";i:2;s:6:\"failed\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:17:\"ProvisioningState\";}}s:12:\"replicaCount\";O:8:\"stdClass\":6:{s:7:\"default\";i:1;s:11:\"description\";s:167:\"The
  number of replicas in the Search service. If specified, it must be a value between
  1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.\";s:6:\"format\";s:5:\"int32\";s:7:\"maximum\";i:12;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:6:\"status\";O:8:\"stdClass\":5:{s:11:\"description\";s:891:\"The
  status of the Search service. Possible values include: 'running': The Search service
  is running and no provisioning operations are underway. 'provisioning': The Search
  service is being provisioned or scaled up or down. 'deleting': The Search service
  is being deleted. 'degraded': The Search service is degraded. This can occur when
  the underlying search units are not healthy. The Search service is most likely operational,
  but performance might be slow and some requests might be dropped. 'disabled': The
  Search service is disabled. In this state, the service will reject all API requests.
  'error': The Search service is in an error state. If your service is in the degraded,
  disabled, or error states, it means the Azure Search team is actively investigating
  the underlying issue. Dedicated services in these states are still chargeable based
  on the number of search units provisioned.\";s:4:\"enum\";a:6:{i:0;s:7:\"running\";i:1;s:12:\"provisioning\";i:2;s:8:\"deleting\";i:3;s:8:\"degraded\";i:4;s:8:\"disabled\";i:5;s:5:\"error\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:19:\"SearchServiceStatus\";}}s:13:\"statusDetails\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"The
  details of the Search service status.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:3:\"Sku\";O:8:\"stdClass\":3:{s:11:\"description\";s:92:\"Defines
  the SKU of an Azure Search Service, which determines price tier and capacity limits.\";s:12:\"externalDocs\";O:8:\"stdClass\":1:{s:3:\"url\";s:67:\"https://azure.microsoft.com/documentation/articles/search-sku-tier/\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":4:{s:11:\"description\";s:467:\"The
  SKU of the Search service. Valid values include: 'free': Shared service. 'basic':
  Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to
  12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity
  per search unit. 'standard3': Offers maximum capacity per search unit with up to
  12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also
  set the hostingMode property to 'highDensity').\";s:4:\"enum\";a:5:{i:0;s:4:\"free\";i:1;s:5:\"basic\";i:2;s:8:\"standard\";i:3;s:9:\"standard2\";i:4;s:9:\"standard3\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:7:\"SkuName\";}}}}}"
...
