---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:11:\"description\";s:59:\"Azure Cosmos DB
  Database Service Resource Provider REST API\";s:5:\"title\";s:9:\"Cosmos DB\";s:7:\"version\";s:10:\"2015-04-08\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:131:\"https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:115:\"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-cosmos-db/2015-04-08/swagger/cosmos-db.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:9:\"azure.com\";s:13:\"x-serviceName\";s:13:\"arm-cosmos-db\";s:6:\"x-tags\";a:2:{i:0;s:5:\"Azure\";i:1;s:9:\"Microsoft\";}s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:19:\"azure_arm_cosmos_db\";s:4:\"type\";s:7:\"openapi\";}}"
host: management.azure.com
paths:
  /providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}:
    head:
      description: Checks that the Azure Cosmos DB account name already exists. A
        valid account name may contain only lowercase letters, numbers, and the '-'
        character, and must be between 3 and 50 characters.
      operationId: DatabaseAccounts_CheckNameExists
      parameters:
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: OK. The account name is valid but is already in use.
        404:
          description: Not Found. The account name is available and valid.
      x-ms-examples:
        CosmosDBDatabaseAccountCheckNameExists:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
          responses:
            200: []
            404: []
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts:
    get:
      description: Lists all the Azure Cosmos DB database accounts available under
        the subscription.
      operationId: DatabaseAccounts_List
      parameters:
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: The operation completed successfully.
          schema:
            $ref: '#/definitions/DatabaseAccountsListResult'
      x-ms-examples:
        CosmosDBDatabaseAccountList:
          parameters:
            api-version: "2015-04-08"
            subscriptionId: subid
          responses:
            200:
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  kind: GlobalDocumentDB
                  location: West US
                  name: ddb1
                  properties:
                    consistencyPolicy:
                      defaultConsistencyLevel: Session
                      maxIntervalInSeconds: 5
                      maxStalenessPrefix: 100
                    databaseAccountOfferType: Standard
                    documentEndpoint: https://ddb1.documents.azure.com:443/
                    failoverPolicies:
                    - failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                    ipRangeFilter: ""
                    provisioningState: Succeeded
                    readLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                    writeLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                  tags: []
                  type: Microsoft.DocumentDB/databaseAccounts
      x-ms-pageable: []
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts:
    get:
      description: Lists all the Azure Cosmos DB database accounts available under
        the given resource group.
      operationId: DatabaseAccounts_ListByResourceGroup
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: The operation completed successfully.
          schema:
            $ref: '#/definitions/DatabaseAccountsListResult'
      x-ms-examples:
        CosmosDBDatabaseAccountListByResourceGroup:
          parameters:
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                  kind: GlobalDocumentDB
                  location: West US
                  name: ddb1
                  properties:
                    consistencyPolicy:
                      defaultConsistencyLevel: Session
                      maxIntervalInSeconds: 5
                      maxStalenessPrefix: 100
                    databaseAccountOfferType: Standard
                    documentEndpoint: https://ddb1.documents.azure.com:443/
                    failoverPolicies:
                    - failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                    ipRangeFilter: ""
                    provisioningState: Succeeded
                    readLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                    writeLocations:
                    - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                      failoverPriority: 0
                      id: ddb1-eastus
                      locationName: East US
                      provisioningState: Succeeded
                  tags: []
                  type: Microsoft.DocumentDB/databaseAccounts
      x-ms-pageable: []
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}:
    delete:
      description: Deletes an existing Azure Cosmos DB database account.
      operationId: DatabaseAccounts_Delete
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        202:
          description: The database account delete operation will complete asynchronously.
        204:
          description: The specified account does not exist in the subscription.
      x-ms-examples:
        CosmosDBDatabaseAccountDelete:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            202: []
            204: []
      x-ms-long-running-operation: true
    get:
      description: Retrieves the properties of an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_Get
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: The database account properties were retrieved successfully.
          schema:
            $ref: '#/definitions/DatabaseAccount'
      x-ms-examples:
        CosmosDBDatabaseAccountGet:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: Session
                    maxIntervalInSeconds: 5
                    maxStalenessPrefix: 100
                  databaseAccountOfferType: Standard
                  documentEndpoint: https://ddb1.documents.azure.com:443/
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                  ipRangeFilter: ""
                  provisioningState: Succeeded
                  readLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                  writeLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                tags: []
                type: Microsoft.DocumentDB/databaseAccounts
    patch:
      description: Patches the properties of an existing Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_Patch
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - description: The tags parameter to patch for the current database account.
        in: body
        name: updateParameters
        required: true
        schema:
          $ref: '#/definitions/DatabaseAccountPatchParameters'
      responses:
        200:
          description: The properties of the database account were patched successfully.
          schema:
            $ref: '#/definitions/DatabaseAccount'
      x-ms-examples:
        CosmosDBDatabaseAccountPatch:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
            updateParameters:
              tags:
                dept: finance
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: Session
                    maxIntervalInSeconds: 5
                    maxStalenessPrefix: 100
                  databaseAccountOfferType: Standard
                  documentEndpoint: https://ddb1.documents.azure.com:443/
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                  ipRangeFilter: ""
                  provisioningState: Succeeded
                  readLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                  writeLocations:
                  - documentEndpoint: https://ddb1-eastus.documents.azure.com:443/
                    failoverPriority: 0
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Succeeded
                tags: []
                type: Microsoft.DocumentDB/databaseAccounts
      x-ms-long-running-operation: true
    put:
      description: Creates or updates an Azure Cosmos DB database account.
      operationId: DatabaseAccounts_CreateOrUpdate
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - description: The parameters to provide for the current database account.
        in: body
        name: createUpdateParameters
        required: true
        schema:
          $ref: '#/definitions/DatabaseAccountCreateUpdateParameters'
      responses:
        200:
          description: The database account create or update operation will complete
            asynchronously.
          schema:
            $ref: '#/definitions/DatabaseAccount'
      x-ms-examples:
        CosmosDBDatabaseAccountCreateMax:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            createUpdateParameters:
              kind: GlobalDocumentDB
              location: westus
              properties:
                consistencyPolicy:
                  defaultConsistencyLevel: BoundedStaleness
                  maxIntervalInSeconds: 10
                  maxStalenessPrefix: 200
                databaseAccountOfferType: Standard
                ipRangeFilter: 10.10.10.10
                locations:
                - failoverPriority: 0
                  locationName: southcentralus
                - failoverPriority: 1
                  locationName: eastus
              tags: []
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: BoundedStaleness
                    maxIntervalInSeconds: 10
                    maxStalenessPrefix: 200
                  databaseAccountOfferType: Standard
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                  - failoverPriority: 1
                    id: ddb1-eastus
                    locationName: East US
                  ipRangeFilter: 10.10.10.10
                  provisioningState: Initializing
                  readLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                    provisioningState: Initializing
                  - failoverPriority: 1
                    id: ddb1-eastus
                    locationName: East US
                    provisioningState: Initializing
                  writeLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                    provisioningState: Initializing
                tags: []
                type: Microsoft.DocumentDB/databaseAccounts
        CosmosDBDatabaseAccountCreateMin:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            createUpdateParameters:
              location: westus
              properties:
                databaseAccountOfferType: Standard
                locations:
                - failoverPriority: 0
                  locationName: southcentralus
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1
                kind: GlobalDocumentDB
                location: West US
                name: ddb1
                properties:
                  consistencyPolicy:
                    defaultConsistencyLevel: Session
                    maxIntervalInSeconds: 5
                    maxStalenessPrefix: 100
                  databaseAccountOfferType: Standard
                  failoverPolicies:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                  ipRangeFilter: ""
                  provisioningState: Initializing
                  readLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                    provisioningState: Initializing
                  writeLocations:
                  - failoverPriority: 0
                    id: ddb1-southcentralus
                    locationName: South Central US
                    provisioningState: Initializing
                tags: []
                type: Microsoft.DocumentDB/databaseAccounts
      x-ms-long-running-operation: true
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange
  : post:
      description: Changes the failover priority for the Azure Cosmos DB database
        account. A failover priority of 0 indicates a write region. The maximum value
        for a failover priority = (total number of regions - 1). Failover priority
        values must be unique for each of the regions in which the database account
        exists.
      operationId: DatabaseAccounts_FailoverPriorityChange
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - description: The new failover policies for the database account.
        in: body
        name: failoverParameters
        required: true
        schema:
          $ref: '#/definitions/FailoverPolicies'
      responses:
        202:
          description: Accepted. The failover policy change operation will complete
            asynchronously.
        204:
          description: No Content
      x-ms-examples:
        CosmosDBDatabaseAccountFailoverPriorityChange:
          parameters:
            accountName: ddb1-failover
            api-version: "2015-04-08"
            failoverParameters:
              failoverPolicies:
              - failoverPriority: 0
                locationName: eastus
              - failoverPriority: 1
                locationName: westus
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            202: []
            204: []
      x-ms-long-running-operation: true
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings
  : post:
      description: Lists the connection strings for the specified Azure Cosmos DB
        database account.
      operationId: DatabaseAccounts_ListConnectionStrings
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: The operation completed successfully.
          schema:
            $ref: '#/definitions/DatabaseAccountListConnectionStringsResult'
      x-ms-examples:
        CosmosDBDatabaseAccountListConnectionStrings:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body: []
        CosmosDBDatabaseAccountListConnectionStringsMongo:
          parameters:
            accountName: mongo-ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                connectionStrings:
                - connectionString: connection-string
                  description: description
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys
  : post:
      description: Lists the access keys for the specified Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_ListKeys
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: The operation completed successfully.
          schema:
            $ref: '#/definitions/DatabaseAccountListKeysResult'
      x-ms-examples:
        CosmosDBDatabaseAccountListKeys:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                primaryMasterKey: primaryMasterKey
                properties:
                  primaryReadonlyMasterKey: primaryReadonlyMasterKey
                  secondaryReadonlyMasterKey: secondaryReadonlyMasterKey
                secondaryMasterKey: secondaryMasterKey
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys
  : get:
      description: Lists the read-only access keys for the specified Azure Cosmos
        DB database account.
      operationId: DatabaseAccounts_ListReadOnlyKeys
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: The operation completed successfully.
          schema:
            $ref: '#/definitions/DatabaseAccountListReadOnlyKeysResult'
      x-ms-examples:
        CosmosDBDatabaseAccountListReadOnlyKeys:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200:
              body:
                primaryReadonlyMasterKey: primaryReadonlyMasterKey
                secondaryReadonlyMasterKey: secondaryReadonlyMasterKey
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey
  : post:
      description: Regenerates an access key for the specified Azure Cosmos DB database
        account.
      operationId: DatabaseAccounts_RegenerateKey
      parameters:
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/accountNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - description: The name of the key to regenerate.
        in: body
        name: keyToRegenerate
        required: true
        schema:
          $ref: '#/definitions/DatabaseAccountRegenerateKeyParameters'
      responses:
        200:
          description: OK
        202:
          description: Accepted. The regenerate key operation will complete asynchronously.
      x-ms-examples:
        CosmosDBDatabaseAccountRegenerateKey:
          parameters:
            accountName: ddb1
            api-version: "2015-04-08"
            keyToRegenerate:
              keyKind: primary
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            200: []
            202: []
      x-ms-long-running-operation: true
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":20:{s:17:\"ConsistencyPolicy\";O:8:\"stdClass\":4:{s:11:\"description\";s:58:\"The
  consistency policy for the Cosmos DB database account.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:23:\"defaultConsistencyLevel\";O:8:\"stdClass\":4:{s:11:\"description\";s:82:\"The
  default consistency level and configuration settings of the Cosmos DB account.\";s:4:\"enum\";a:5:{i:0;s:8:\"Eventual\";i:1;s:7:\"Session\";i:2;s:16:\"BoundedStaleness\";i:3;s:6:\"Strong\";i:4;s:16:\"ConsistentPrefix\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:23:\"DefaultConsistencyLevel\";}}s:20:\"maxIntervalInSeconds\";O:8:\"stdClass\":5:{s:11:\"description\";s:241:\"When
  used with the Bounded Staleness consistency level, this value represents the time
  amount of staleness (in seconds) tolerated. Accepted range for this value is 1 -
  100. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.\";s:6:\"format\";s:5:\"int32\";s:7:\"maximum\";i:100;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:18:\"maxStalenessPrefix\";O:8:\"stdClass\":5:{s:11:\"description\";s:240:\"When
  used with the Bounded Staleness consistency level, this value represents the number
  of stale requests tolerated. Accepted range for this value is 1 \u2013 2,147,483,647.
  Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.\";s:6:\"format\";s:5:\"int64\";s:7:\"maximum\";i:2147483647;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:1:{i:0;s:23:\"defaultConsistencyLevel\";}s:4:\"type\";s:6:\"object\";}s:15:\"DatabaseAccount\";O:8:\"stdClass\":4:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:36:\"An
  Azure Cosmos DB database account.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"kind\";O:8:\"stdClass\":5:{s:7:\"default\";s:16:\"GlobalDocumentDB\";s:11:\"description\";s:90:\"Indicates
  the type of database account. This can only be set at database account creation.\";s:4:\"enum\";a:3:{i:0;s:16:\"GlobalDocumentDB\";i:1;s:7:\"MongoDB\";i:2;s:5:\"Parse\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:19:\"DatabaseAccountKind\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/DatabaseAccountProperties\";s:19:\"x-ms-client-flatten\";b:1;}}s:4:\"type\";s:6:\"object\";}s:31:\"DatabaseAccountConnectionString\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Connection
  string for the Cosmos DB account\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"connectionString\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Value
  of the connection string\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Description
  of the connection string\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:37:\"DatabaseAccountCreateUpdateParameters\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:60:\"Parameters
  to create and update Cosmos DB database accounts.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"kind\";O:8:\"stdClass\":5:{s:7:\"default\";s:16:\"GlobalDocumentDB\";s:11:\"description\";s:90:\"Indicates
  the type of database account. This can only be set at database account creation.\";s:4:\"enum\";a:3:{i:0;s:16:\"GlobalDocumentDB\";i:1;s:7:\"MongoDB\";i:2;s:5:\"Parse\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:19:\"DatabaseAccountKind\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:51:\"#/definitions/DatabaseAccountCreateUpdateProperties\";s:19:\"x-ms-client-flatten\";b:1;}}s:8:\"required\";a:1:{i:0;s:10:\"properties\";}s:4:\"type\";s:6:\"object\";}s:37:\"DatabaseAccountCreateUpdateProperties\";O:8:\"stdClass\":4:{s:11:\"description\";s:66:\"Properties
  to create and update Azure Cosmos DB database accounts.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:17:\"consistencyPolicy\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ConsistencyPolicy\";s:11:\"description\";s:49:\"The
  consistency policy for the Cosmos DB account.\";}s:24:\"databaseAccountOfferType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/DatabaseAccountOfferType\";}s:23:\"enableAutomaticFailover\";O:8:\"stdClass\":2:{s:11:\"description\";s:257:\"Enables
  automatic failover of the write region in the rare event that the region is unavailable
  due to an outage. Automatic failover will result in a new write region for the account
  and is chosen based on the failover priorities configured for the account.\";s:4:\"type\";s:7:\"boolean\";}s:13:\"ipRangeFilter\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/IPRangeFilter\";s:11:\"description\";s:262:\"Cosmos
  DB Firewall Support: This value specifies the set of IP addresses or IP address
  ranges in CIDR form to be included as the allowed list of client IPs for a given
  database account. IP addresses/ranges must be comma separated and must not contain
  any spaces.\";}s:9:\"locations\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"An
  array that contains the georeplication locations enabled for the Cosmos DB account.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:2:{i:0;s:9:\"locations\";i:1;s:24:\"databaseAccountOfferType\";}s:4:\"type\";s:6:\"object\";}s:42:\"DatabaseAccountListConnectionStringsResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  connection strings for the given database account.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"connectionStrings\";O:8:\"stdClass\":3:{s:11:\"description\";s:72:\"An
  array that contains the connection strings for the Cosmos DB account.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/DatabaseAccountConnectionString\";}s:4:\"type\";s:5:\"array\";}}}s:29:\"DatabaseAccountListKeysResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"The
  access keys for the given database account.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:16:\"primaryMasterKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"Base
  64 encoded value of the primary read-write key.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:51:\"#/definitions/DatabaseAccountListReadOnlyKeysResult\";s:19:\"x-ms-client-flatten\";b:1;}s:18:\"secondaryMasterKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"Base
  64 encoded value of the secondary read-write key.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:37:\"DatabaseAccountListReadOnlyKeysResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"The
  read-only access keys for the given database account.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:24:\"primaryReadonlyMasterKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"Base
  64 encoded value of the primary read-only key.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:26:\"secondaryReadonlyMasterKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Base
  64 encoded value of the secondary read-only key.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:24:\"DatabaseAccountOfferType\";O:8:\"stdClass\":4:{s:11:\"description\";s:50:\"The
  offer type for the Cosmos DB database account.\";s:4:\"enum\";a:1:{i:0;s:8:\"Standard\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:0;s:4:\"name\";s:24:\"DatabaseAccountOfferType\";}}s:30:\"DatabaseAccountPatchParameters\";O:8:\"stdClass\":4:{s:11:\"description\";s:68:\"Parameters
  for patching Azure Cosmos DB database account properties.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"tags\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Tags\";}}s:8:\"required\";a:1:{i:0;s:4:\"tags\";}s:4:\"type\";s:6:\"object\";}s:25:\"DatabaseAccountProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Properties
  for the database account.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:17:\"consistencyPolicy\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ConsistencyPolicy\";s:11:\"description\";s:58:\"The
  consistency policy for the Cosmos DB database account.\";}s:24:\"databaseAccountOfferType\";O:8:\"stdClass\":3:{s:4:\"$ref\";s:38:\"#/definitions/DatabaseAccountOfferType\";s:11:\"description\";s:75:\"The
  offer type for the Cosmos DB database account. Default value: Standard.\";s:8:\"readOnly\";b:1;}s:16:\"documentEndpoint\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"The
  connection endpoint for the Cosmos DB database account.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:23:\"enableAutomaticFailover\";O:8:\"stdClass\":2:{s:11:\"description\";s:257:\"Enables
  automatic failover of the write region in the rare event that the region is unavailable
  due to an outage. Automatic failover will result in a new write region for the account
  and is chosen based on the failover priorities configured for the account.\";s:4:\"type\";s:7:\"boolean\";}s:16:\"failoverPolicies\";O:8:\"stdClass\":4:{s:11:\"description\";s:72:\"An
  array that contains the regions ordered by their failover priorities.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/FailoverPolicy\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}s:13:\"ipRangeFilter\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/IPRangeFilter\";s:11:\"description\";s:262:\"Cosmos
  DB Firewall Support: This value specifies the set of IP addresses or IP address
  ranges in CIDR form to be included as the allowed list of client IPs for a given
  database account. IP addresses/ranges must be comma separated and must not contain
  any spaces.\";}s:17:\"provisioningState\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ProvisioningState\";}s:13:\"readLocations\";O:8:\"stdClass\":4:{s:11:\"description\";s:79:\"An
  array that contains of the read locations enabled for the Cosmos DB account.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}s:14:\"writeLocations\";O:8:\"stdClass\":4:{s:11:\"description\";s:68:\"An
  array that contains the write location for the Cosmos DB account.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:38:\"DatabaseAccountRegenerateKeyParameters\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Parameters
  to regenerate the keys within the database account.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"keyKind\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"The
  access key to regenerate.\";s:4:\"enum\";a:4:{i:0;s:7:\"primary\";i:1;s:9:\"secondary\";i:2;s:15:\"primaryReadonly\";i:3;s:17:\"secondaryReadonly\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:7:\"KeyKind\";}}}s:8:\"required\";a:1:{i:0;s:7:\"keyKind\";}s:4:\"type\";s:6:\"object\";}s:26:\"DatabaseAccountsListResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:86:\"The
  List operation response, that contains the database accounts and their properties.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:46:\"List
  of database account and their properties.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DatabaseAccount\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:16:\"FailoverPolicies\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"The
  list of new failover policies for the failover priority change.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"failoverPolicies\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"List
  of failover policies.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/FailoverPolicy\";}s:4:\"type\";s:5:\"array\";}}}s:14:\"FailoverPolicy\";O:8:\"stdClass\":3:{s:11:\"description\";s:61:\"The
  failover policy for a given region of a database account.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:16:\"failoverPriority\";O:8:\"stdClass\":4:{s:11:\"description\";s:264:\"The
  failover priority of the region. A failover priority of 0 indicates a write region.
  The maximum value for a failover priority = (total number of regions - 1). Failover
  priority values must be unique for each of the regions in which the database account
  exists.\";s:6:\"format\";s:5:\"int32\";s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:131:\"The
  unique identifier of the region in which the database account replicates to. Example:
  &lt;accountName&gt;-&lt;locationName&gt;.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:12:\"locationName\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"The
  name of the region in which the database account exists.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"IPRangeFilter\";O:8:\"stdClass\":2:{s:11:\"description\";s:262:\"Cosmos
  DB Firewall Support: This value specifies the set of IP addresses or IP address
  ranges in CIDR form to be included as the allowed list of client IPs for a given
  database account. IP addresses/ranges must be comma separated and must not contain
  any spaces.\";s:4:\"type\";s:6:\"string\";}s:8:\"Location\";O:8:\"stdClass\":3:{s:11:\"description\";s:67:\"A
  region in which the Azure Cosmos DB database account is deployed.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:16:\"documentEndpoint\";O:8:\"stdClass\":3:{s:11:\"description\";s:131:\"The
  connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:16:\"failoverPriority\";O:8:\"stdClass\":4:{s:11:\"description\";s:264:\"The
  failover priority of the region. A failover priority of 0 indicates a write region.
  The maximum value for a failover priority = (total number of regions - 1). Failover
  priority values must be unique for each of the regions in which the database account
  exists.\";s:6:\"format\";s:5:\"int32\";s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:115:\"The
  unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:12:\"locationName\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"The
  name of the region.\";s:4:\"type\";s:6:\"string\";}s:17:\"provisioningState\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ProvisioningState\";}}s:4:\"type\";s:6:\"object\";}s:17:\"ProvisioningState\";O:8:\"stdClass\":3:{s:11:\"description\";s:522:\"The
  status of the Cosmos DB account at the time the operation was called. The status
  can be one of following. 'Creating' \u2013 the Cosmos DB account is being created.
  When an account is in Creating state, only properties that are specified as input
  for the Create Cosmos DB account operation are returned. 'Succeeded' \u2013 the
  Cosmos DB account is active for use. 'Updating' \u2013 the Cosmos DB account is
  being updated. 'Deleting' \u2013 the Cosmos DB account is being deleted. 'Failed'
  \u2013 the Cosmos DB account failed creation.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"Resource\";O:8:\"stdClass\":5:{s:11:\"description\";s:28:\"A
  database account resource.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:55:\"The
  unique resource identifier of the database account.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"location\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"The
  location of the resource group to which the resource belongs.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"The
  name of the database account.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"tags\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Tags\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  type of Azure resource.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"location\";}s:4:\"type\";s:6:\"object\";s:19:\"x-ms-azure-resource\";b:1;}s:4:\"Tags\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:300:\"Tags
  are a list of key-value pairs that describe the resource. These tags can be used
  in viewing and grouping this resource (across resource groups). A maximum of 15
  tags can be provided for a resource. Each tag must have a key no greater than 128
  characters and value no greater than 256 characters.\";s:4:\"type\";s:6:\"object\";}}"
...
