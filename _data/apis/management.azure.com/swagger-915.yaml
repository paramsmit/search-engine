---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:7:\"version\";s:18:\"2017-10-01-preview\";s:5:\"title\";s:19:\"SqlManagementClient\";s:11:\"description\";s:247:\"The
  Azure SQL Database management API provides a RESTful set of web APIs that interact
  with Azure SQL Database services to manage your databases. The API enables users
  to create, retrieve, update, and delete databases, servers, and other entities.\";}"
host: management.azure.com
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector
  : get:
      tags:
      - ManagedInstanceEncryptionProtectors
      description: Gets a list of managed instance encryption protectors
      operationId: ManagedInstanceEncryptionProtectors_ListByInstance
      parameters:
      - $ref: '#/parameters/ResourceGroupParameter'
      - $ref: '#/parameters/ManagedInstanceNameParameter'
      - $ref: '#/parameters/SubscriptionIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      responses:
        200:
          description: Successfully retrieved the list of managed instance encryption
            protector.
          schema:
            $ref: '#/definitions/ManagedInstanceEncryptionProtectorListResult'
        default:
          description: '*** Error Responses: ***nn * 400 InvalidKeyName - An invalid
            value was given for the server key name.nn * 400 InvalidKeyType - The
            create server key type is not supported.nn * 400 InvalidUpsertKeyType
            - Service Managed type keys are managed by Azure SQL. This key type does
            not support create or update by the user.nn * 400 InvalidKeyUpsertRequest
            - The create server key request does not exist or has no properties object.nn
            * 400 InvalidEncryptionProtectorName - The encryption protector key name
            is not supported.nn * 404 SubscriptionDoesNotHaveServer - The requested
            server was not found'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-examples:
        List encryption protectors by managed instance:
          $ref: ./examples/ManagedInstanceEncryptionProtectorList.json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}
  : get:
      tags:
      - ManagedInstanceEncryptionProtectors
      description: Gets a managed instance encryption protector.
      operationId: ManagedInstanceEncryptionProtectors_Get
      parameters:
      - $ref: '#/parameters/ResourceGroupParameter'
      - $ref: '#/parameters/ManagedInstanceNameParameter'
      - name: encryptionProtectorName
        in: path
        description: The name of the encryption protector to be retrieved.
        required: true
        type: string
        enum:
        - current
        x-ms-enum:
          name: EncryptionProtectorName
          modelAsString: true
      - $ref: '#/parameters/SubscriptionIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      responses:
        200:
          description: Successfully retrieved the specified managed instance encryption
            protector.
          schema:
            $ref: '#/definitions/ManagedInstanceEncryptionProtector'
        default:
          description: '*** Error Responses: ***nn * 400 InvalidKeyName - An invalid
            value was given for the server key name.nn * 400 InvalidKeyType - The
            create server key type is not supported.nn * 400 InvalidUpsertKeyType
            - Service Managed type keys are managed by Azure SQL. This key type does
            not support create or update by the user.nn * 400 InvalidKeyUpsertRequest
            - The create server key request does not exist or has no properties object.nn
            * 400 InvalidEncryptionProtectorName - The encryption protector key name
            is not supported.nn * 404 SubscriptionDoesNotHaveServer - The requested
            server was not foundnn * 404 ResourceNotFound - The requested resource
            was not found.'
      x-ms-examples:
        Get the encryption protector:
          $ref: ./examples/ManagedInstanceEncryptionProtectorGet.json
    put:
      tags:
      - ManagedInstanceEncryptionProtectors
      description: Updates an existing encryption protector.
      operationId: ManagedInstanceEncryptionProtectors_CreateOrUpdate
      parameters:
      - $ref: '#/parameters/ResourceGroupParameter'
      - $ref: '#/parameters/ManagedInstanceNameParameter'
      - name: encryptionProtectorName
        in: path
        description: The name of the encryption protector to be created or updated.
        required: true
        type: string
        enum:
        - current
        x-ms-enum:
          name: EncryptionProtectorName
          modelAsString: true
      - name: parameters
        in: body
        description: The requested encryption protector resource state.
        required: true
        schema:
          $ref: '#/definitions/ManagedInstanceEncryptionProtector'
      - $ref: '#/parameters/SubscriptionIdParameter'
      - $ref: '#/parameters/ApiVersionParameter'
      responses:
        200:
          description: Successfully updated the encryption protector.
          schema:
            $ref: '#/definitions/ManagedInstanceEncryptionProtector'
        default:
          description: '*** Error Responses: ***nn * 400 InvalidKeyName - An invalid
            value was given for the server key name.nn * 400 InvalidKeyType - The
            create server key type is not supported.nn * 400 InvalidUpsertKeyType
            - Service Managed type keys are managed by Azure SQL. This key type does
            not support create or update by the user.nn * 400 InvalidKeyUpsertRequest
            - The create server key request does not exist or has no properties object.nn
            * 400 InvalidEncryptionProtectorName - The encryption protector key name
            is not supported.nn * 400 AzureKeyVaultInvalidExpirationDate - The operation
            could not be completed because the Azure Key Vault key expiration date
            is invalid.nn * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation
            could not be completed because the Azure Key Vault Uri is null or empty.nn
            * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault.
            Please use a valid Azure Key Vault URI.nn * 400 SecurityAzureKeyVaultInvalidKeyName
            - The operation could not be completed because of an invalid Server Key
            name.nn * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault
            uri is not valid.nn * 400 SecurityAdalPrincipalCertExpiredError - The
            operation could not be completed because the Azure Key Vault principal
            certificate has expired.nn * 400 SecurityInvalidAzureKeyVaultRecoveryLevel
            - The provided Key Vault uri is not valid.nn * 400 KeyMaterialNotFoundOnRemoteServer
            - Remote server does not have access to key material used as a TDE protector.nn
            * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in
            the http response.nn * 400 AzureKeyVaultRsaKeyNotSupported - The provided
            key vault uses unsupported RSA Key Size or Key Type. The supported RSA
            key size is 2048 and Key Type is RSA.nn * 401 AzureKeyVaultKeyDisabled
            - The operation could not be completed on the server because the Azure
            Key Vault key is disabled.nn * 401 AzureKeyVaultNoServerIdentity - The
            server identity is not correctly configured.nn * 401 AzureKeyVaultMissingPermissions
            - The server is mising required permissions on the Azure Key Vault. nn
            * 401 AdalGenericError - The operation could not be completed because
            an Azure Active Directory error was encountered.nn * 401 AdalServicePrincipalNotFound
            - The operation could not be completed because an Azure Active Directory
            library Serivce Principal not found error was encountered.nn * 404 SubscriptionDoesNotHaveServer
            - The requested server was not foundnn * 404 ResourceNotFound - The requested
            resource was not found.nn * 404 ServerKeyNotFound - The requested server
            key was not found on the current subscription.nn * 409 ServerKeyNameAlreadyExists
            - The server key already exists on the server.nn * 409 ServerKeyUriAlreadyExists
            - The server key URI already exists on the server.nn * 409 ServerKeyDoesNotExists
            - The server key does not exist.nn * 409 AzureKeyVaultKeyNameNotFound
            - The operation could not be completed because the Azure Key Vault Key
            name does not exist.nn * 409 AzureKeyVaultKeyInUse - The key is currently
            being used by the server.nn * 503 AzureKeyVaultConnectionFailed - The
            operation could not be completed on the server because attempts to connect
            to Azure Key Vault have failednn * 503 AzureKeyVaultGenericConnectionError
            - The operation could not be completed because an error was encountered
            when attempting to retrieve Key Vault information .'
        202:
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-examples:
        Update the encryption protector to key vault:
          $ref: ./examples/ManagedInstanceEncryptionProtectorCreateOrUpdateKeyVault.json
        Update the encryption protector to service managed:
          $ref: ./examples/ManagedInstanceEncryptionProtectorCreateOrUpdateServiceManaged.json
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":3:{s:44:\"ManagedInstanceEncryptionProtectorListResult\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"A
  list of managed instance encryption protectors.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:17:\"Array
  of results.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:48:\"#/definitions/ManagedInstanceEncryptionProtector\";}s:8:\"readOnly\";b:1;}s:8:\"nextLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"Link
  to retrieve next page of results.\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:44:\"ManagedInstanceEncryptionProtectorProperties\";O:8:\"stdClass\":4:{s:11:\"description\";s:49:\"Properties
  for an encryption protector execution.\";s:8:\"required\";a:1:{i:0;s:13:\"serverKeyType\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:13:\"serverKeyName\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"The
  name of the managed instance key.\";s:4:\"type\";s:6:\"string\";}s:13:\"serverKeyType\";O:8:\"stdClass\":4:{s:11:\"description\";s:69:\"The
  encryption protector type like 'ServiceManaged', 'AzureKeyVault'.\";s:4:\"enum\";a:2:{i:0;s:14:\"ServiceManaged\";i:1;s:13:\"AzureKeyVault\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:4:\"name\";s:13:\"ServerKeyType\";s:13:\"modelAsString\";b:1;}}s:3:\"uri\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  URI of the server key.\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:10:\"thumbprint\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Thumbprint
  of the server key.\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:34:\"ManagedInstanceEncryptionProtector\";O:8:\"stdClass\":4:{s:11:\"description\";s:42:\"The
  managed instance encryption protector.\";s:4:\"type\";s:6:\"object\";s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:56:\"../../../common/v1/types.json#/definitions/ProxyResource\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"kind\";O:8:\"stdClass\":3:{s:11:\"description\";s:84:\"Kind
  of encryption protector. This is metadata used for the Azure portal experience.\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"$ref\";s:58:\"#/definitions/ManagedInstanceEncryptionProtectorProperties\";s:11:\"description\";s:20:\"Resource
  properties.\";s:19:\"x-ms-client-flatten\";b:1;}}}}"
...
