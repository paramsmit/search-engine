---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":10:{s:11:\"description\";s:73:\"Azure Bot Service
  is a platform for creating smart conversational agents.\";s:5:\"title\";s:17:\"Azure
  Bot Service\";s:7:\"version\";s:10:\"2018-07-12\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:131:\"https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:165:\"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/botservice/resource-manager/Microsoft.BotService/preview/2018-07-12/botservice.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:9:\"azure.com\";s:13:\"x-serviceName\";s:10:\"botservice\";s:6:\"x-tags\";a:2:{i:0;s:5:\"Azure\";i:1;s:9:\"Microsoft\";}}"
host: management.azure.com
paths:
  /providers/Microsoft.BotService/checkEnterpriseChannelNameAvailability:
    post:
      description: Check whether an Enterprise Channel name is available.
      operationId: EnterpriseChannels_CheckNameAvailability
      parameters:
      - description: The parameters to provide for the Enterprise Channel check name
          availability request.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/EnterpriseChannelCheckNameAvailabilityRequest'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses.
            If a resource provider does not support paging, it should return the same
            body but leave nextLink empty for future compatibility.nFor a detailed
            explanation of each field in the response body, please refer to the request
            body description in the PUT resource section.
          schema:
            $ref: '#/definitions/EnterpriseChannelCheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Enterprise Channel
      x-ms-examples:
        Check Enterprise Channel Name Availability:
          parameters:
            api-version: "2018-07-12"
            parameters:
              name: enterpriseChannelName
              type: string
          responses:
            200:
              body:
                message: custom message from server
                valid: true
  /providers/Microsoft.BotService/checkNameAvailability:
    post:
      description: Check whether a bot name is available.
      operationId: Bots_GetCheckNameAvailability
      parameters:
      - description: The request body parameters to provide for the check name availability
          request
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/CheckNameAvailabilityRequestBody'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses.
            If a resource provider does not support paging, it should return the same
            body but leave nextLink empty for future compatibility.nFor a detailed
            explanation of each field in the response body, please refer to the request
            body description in the PUT resource section. '
          schema:
            $ref: '#/definitions/CheckNameAvailabilityResponseBody'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        check Name Availability:
          parameters:
            api-version: "2018-07-12"
            parameters:
              name: testbotname
              type: string
          responses:
            200:
              body:
                message: custom message from server
                valid: true
  /providers/Microsoft.BotService/operations:
    get:
      deprecated: false
      description: Lists all the available BotService operations.
      operationId: Operations_List
      parameters:
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/OperationEntityListResult'
      tags:
      - Operations
      x-ms-examples:
        Get Operations:
          parameters:
            api-version: "2017-04-18"
          responses:
            200:
              body:
                value:
                - display:
                    description: Read Bot Service
                    operation: Read Bot Service
                    provider: Microsoft Bot Service
                    resource: Bot Service
                  name: Microsoft.BotService/botService/read
                  origin: user,system
                - display:
                    description: Writes Bot Service
                    operation: Write Bot Service
                    provider: Microsoft Bot Service
                    resource: Bot Service
                  name: Microsoft.BotService/botService/write
                  origin: user,system
                - display:
                    description: Deletes Bot Service
                    operation: Delete Bot Service
                    provider: Microsoft Bot Service
                    resource: Bot Service
                  name: Microsoft.BotService/botService/delete
                  origin: user,system
                - display:
                    description: Check bot name availability
                    operation: Check bot name availability
                    provider: Microsoft Bot Service
                    resource: Bot Service name availability
                  name: Microsoft.BotService/botService/botName/read
                  origin: user,system
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices:
    get:
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: Bots_List
      parameters:
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses.
            If a resource provider does not support paging, it should return the same
            body but leave nextLink empty for future compatibility.nFor a detailed
            explanation of each field in the response body, please refer to the request
            body description in the PUT resource section. '
          schema:
            $ref: '#/definitions/BotResponseList'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        List Bots by Subscription:
          parameters:
            api-version: "2017-01-01"
            subscriptionId: subscription-id
          responses:
            200:
              body:
                value:
                - etag: etag1
                  id: someid
                  kind: sdk
                  location: West US
                  name: samplename
                  properties:
                    configuredChannels:
                    - facebook
                    - groupme
                    description: The description of the bot
                    developerAppInsightKey: appinsightskey
                    developerAppInsightsApplicationId: appinsightsappid
                    displayName: The Name of the bot
                    enabledChannels:
                    - facebook
                    endpoint: http://mybot.coffee
                    endpointVersion: version
                    iconUrl: http://myicon
                    luisAppIds:
                    - luisappid1
                    - luisappid2
                    msaAppId: msaappid
                  tags:
                    tag1: value1
                    tag2: value2
                  type: sampletype
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders:
    post:
      description: Lists the available Service Providers for creating Connection Settings
      operationId: BotConnection_ListServiceProviders
      parameters:
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is retrieved successfully, the service should return
            200 (OK).
          schema:
            $ref: '#/definitions/ServiceProviderResponseList'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - ListServiceProviders
      x-ms-examples:
        List Auth Service Providers:
          parameters:
            api-version: "2017-01-01"
            subscriptionId: subscription-id
          responses:
            200:
              body:
                value:
                - properties:
                    devPortalUrl: sampleDevPortalUrl
                    displayName: sample display name
                    iconUrl: sampleIconUrl
                    id: sampleId
                    parameters:
                    - default: sampleDefaultValue
                      description: sampleDescription
                      displayName: sampleDisplayName
                      helpUrl: sampleHelpUrl
                      name: sampleParameterName
                      type: sampleParameterType
                    serviceProviderName: sampleServiceProvider
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices:
    get:
      description: Returns all the resources of a particular type belonging to a resource
        group
      operationId: Bots_ListByResourceGroup
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses
            here. If a resource provider does not support paging, it should return
            the same body (JSON object with u201cvalueu201d property) but omit nextLink
            entirely (or set to null, *not* empty string) for future compatibility.nThe
            nextLink should be implemented using following query parameters:nu00b7
            skipToken: opaque token that allows the resource provider to skip resources
            already enumerated. This value is defined and returned by the RP after
            first request via nextLink.nu00b7 top: the optional client query parameter
            which defines the maximum number of records to be returned by the server.nImplementation
            details:nu00b7 NextLink may include all the query parameters (specifically
            OData $filter) used by the client in the first query. nu00b7 Server may
            return less records than requested with nextLink. Returning zero records
            with NextLink is an acceptable response. nClients must fetch records until
            the nextLink is not returned back / null. Clients should never rely on
            number of returned records to determinate if pagination is completed.'
          schema:
            $ref: '#/definitions/BotResponseList'
        default:
          description: Error response describing why the operation failed. If the
            resource group does not exist, 404 (NotFound) will be returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        List Bots by Resource Group:
          parameters:
            api-version: "2017-01-01"
            resourceGroupName: OneResourceGroupName
            subscriptionId: subscription-id
          responses:
            200:
              body:
                value:
                - etag: etag1
                  id: someid
                  kind: sdk
                  location: West US
                  name: samplename
                  properties:
                    configuredChannels:
                    - facebook
                    - groupme
                    description: The description of the bot
                    developerAppInsightKey: appinsightskey
                    developerAppInsightsApplicationId: appinsightsappid
                    displayName: The Name of the bot
                    enabledChannels:
                    - facebook
                    endpoint: http://mybot.coffee
                    endpointVersion: version
                    iconUrl: http://myicon
                    luisAppIds:
                    - luisappid1
                    - luisappid2
                    msaAppId: msaappid
                  tags:
                    tag1: value1
                    tag2: value2
                  type: sampletype
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}:
    delete:
      description: 'Deletes a Bot Service from the resource group. '
      operationId: Bots_Delete
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        204:
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        Delete Bot:
          parameters:
            api-version: "2017-01-01"
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200: []
            204: []
    get:
      description: Returns a BotService specified by the parameters.
      operationId: Bots_Get
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/Bot'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        Get Bot:
          parameters:
            api-version: "2017-01-01"
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
    patch:
      description: Updates a Bot Service
      operationId: Bots_Update
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - description: The parameters to provide for the created bot.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/Bot'
        x-ms-client-flatten: true
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/Bot'
        201:
          description: If resource is updated successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/Bot'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        Update Bot:
          parameters:
            api-version: "2017-01-01"
            parameters:
              etag: etag1
              id: someid
              kind: sdk
              location: West US
              name: samplename
              properties:
                description: The description of the bot
                developerAppInsightKey: appinsightskey
                developerAppInsightsApiKey: appinsightsapikey
                developerAppInsightsApplicationId: appinsightsappid
                displayName: The Name of the bot
                endpoint: http://mybot.coffee
                iconUrl: http://myicon
                luisAppIds:
                - luisappid1
                - luisappid2
                luisKey: luiskey
                msaAppId: msaappid
              sku:
                name: S1
              tags:
                tag1: value1
                tag2: value2
              type: sampletype
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
            201:
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
    put:
      description: Creates a Bot Service. Bot Service is a resource group wide resource
        type.
      operationId: Bots_Create
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - description: The parameters to provide for the created bot.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/Bot'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is created successfully or already existed, the
            service should return 200 (OK).
          schema:
            $ref: '#/definitions/Bot'
        201:
          description: If resource is created successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/Bot'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Bot
      x-ms-examples:
        Create Bot:
          parameters:
            api-version: "2017-01-01"
            parameters:
              etag: etag1
              id: someid
              kind: sdk
              location: West US
              name: samplename
              properties:
                description: The description of the bot
                developerAppInsightKey: appinsightskey
                developerAppInsightsApiKey: appinsightsapikey
                developerAppInsightsApplicationId: appinsightsappid
                displayName: The Name of the bot
                endpoint: http://mybot.coffee
                iconUrl: http://myicon
                luisAppIds:
                - luisappid1
                - luisappid2
                luisKey: luiskey
                msaAppId: exampleappid
              sku:
                name: S1
              tags:
                tag1: value1
                tag2: value2
              type: sampletype
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightKey: appinsightskey
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
            201:
              body:
                id: someid
                kind: sdk
                location: West US
                name: samplename
                properties:
                  configuredChannels:
                  - facebook
                  - groupme
                  description: The description of the bot
                  developerAppInsightsApplicationId: appinsightsappid
                  displayName: The Name of the bot
                  enabledChannels:
                  - facebook
                  endpoint: http://mybot.coffee
                  endpointVersion: version
                  iconUrl: http://myicon
                  luisAppIds:
                  - luisappid1
                  - luisappid2
                  msaAppId: msaappid
                tags:
                  tag1: value1
                  tag2: value2
                type: sampletype
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}
  : delete:
      description: Deletes a Connection Setting registration for a Bot Service
      operationId: BotConnection_Delete
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/connectionNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        204:
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: "2017-01-01"
            connectionName: sampleConnection
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200: []
            204: []
    get:
      description: Get a Connection Setting registration for a Bot Service
      operationId: BotConnection_Get
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/connectionNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/ConnectionSetting'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: "2017-01-01"
            connectionName: sampleConnection
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
    patch:
      description: Updates a Connection Setting registration for a Bot Service
      operationId: BotConnection_Update
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/connectionNameParameter'
      - description: The parameters to provide for updating the Connection Setting.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/ConnectionSetting'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is created successfully or already existed, the
            service should return 200 (OK).
          schema:
            $ref: '#/definitions/ConnectionSetting'
        201:
          description: If resource is created successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/ConnectionSetting'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: "2017-01-01"
            connectionName: sampleConnection
            parameters:
              etag: etag1
              id: someid
              location: global
              name: The Name of the Connection Setting
              properties:
                clientId: sampleclientid
                clientSecret: samplesecret
                parameters:
                - key: key1
                  value: value1
                - key: key2
                  value: value2
                scopes: samplescope
                serviceProviderDisplayName: serviceProviderDisplayName
                serviceProviderId: serviceproviderid
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
            201:
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
    put:
      description: Register a new Auth Connection for a Bot Service
      operationId: BotConnection_Create
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/connectionNameParameter'
      - description: The parameters to provide for creating the Connection Setting.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/ConnectionSetting'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is created successfully or already existed, the
            service should return 200 (OK).
          schema:
            $ref: '#/definitions/ConnectionSetting'
        201:
          description: If resource is created successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/ConnectionSetting'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - BotConnection
      x-ms-examples:
        Create Connection Setting:
          parameters:
            api-version: "2017-01-01"
            connectionName: sampleConnection
            parameters:
              etag: etag1
              id: someid
              location: West US
              name: samplename
              properties:
                clientId: sampleclientid
                clientSecret: samplesecret
                parameters:
                - key: key1
                  value: value1
                - key: key2
                  value: value2
                scopes: samplescope
                serviceProviderId: serviceproviderid
              type: sampletype
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
            201:
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}/listWithSecrets
  : post:
      description: Get a Connection Setting registration for a Bot Service
      operationId: BotConnection_ListWithSecrets
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/connectionNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/ConnectionSetting'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - BotConnection
      x-ms-examples:
        Update Connection Setting:
          parameters:
            api-version: "2017-01-01"
            connectionName: sampleConnection
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                location: global
                name: The Name of the Connection Setting
                properties:
                  clientId: sampleclientid
                  clientSecret: samplesecret
                  parameters:
                  - key: key1
                    value: value1
                  - key: key2
                    value: value2
                  scopes: samplescope
                  serviceProviderDisplayName: serviceProviderDisplayName
                  serviceProviderId: serviceproviderid
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels
  : get:
      description: Returns all the Channel registrations of a particular BotService
        resource
      operationId: Channels_ListByResourceGroup
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses
            here. If a resource provider does not support paging, it should return
            the same body (JSON object with u201cvalueu201d property) but omit nextLink
            entirely (or set to null, *not* empty string) for future compatibility.nThe
            nextLink should be implemented using following query parameters:nu00b7
            skipToken: opaque token that allows the resource provider to skip resources
            already enumerated. This value is defined and returned by the RP after
            first request via nextLink.nu00b7 top: the optional client query parameter
            which defines the maximum number of records to be returned by the server.nImplementation
            details:nu00b7 NextLink may include all the query parameters (specifically
            OData $filter) used by the client in the first query. nu00b7 Server may
            return less records than requested with nextLink. Returning zero records
            with NextLink is an acceptable response. nClients must fetch records until
            the nextLink is not returned back / null. Clients should never rely on
            number of returned records to determinate if pagination is completed.'
          schema:
            $ref: '#/definitions/ChannelResponseList'
        default:
          description: Error response describing why the operation failed. If the
            resource group does not exist, 404 (NotFound) will be returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Channel
      x-ms-examples:
        List Bots by Resource Group:
          parameters:
            api-version: "2017-01-01"
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                value:
                - location: global
                  properties:
                    channelName: EmailChannel
                    properties:
                      emailAddress: a@b.com
                      isEnabled: true
                      password: pwd
                - location: global
                  properties:
                    channelName: FacebookChannel
                    properties:
                      appId: id
                      appSecret: secret
                      callbackUrl: appid
                      isEnabled: true
                      pages:
                      - accessToken: token
                        id: id
                      verifyToken: othertoken
      x-ms-pageable:
        nextLinkName: nextLink
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}
  : delete:
      description: Deletes a Channel registration from a Bot Service
      operationId: Channels_Delete
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - description: The name of the Bot resource.
        in: path
        maxLength: 64
        minLength: 2
        name: channelName
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        required: true
        type: string
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        204:
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Channel
      x-ms-examples:
        Delete Bot:
          parameters:
            api-version: "2017-01-01"
            channelName: EmailChannel
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200: []
            204: []
    get:
      description: Returns a BotService Channel registration specified by the parameters.
      operationId: Channels_Get
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - description: The name of the Bot resource.
        in: path
        maxLength: 64
        minLength: 2
        name: channelName
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        required: true
        type: string
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/BotChannel'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Channel
      x-ms-examples:
        Get Bot:
          parameters:
            api-version: "2017-01-01"
            channelName: EmailChannel
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
    patch:
      description: Updates a Channel registration for a Bot Service
      operationId: Channels_Update
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/channelNameParameter'
      - description: The parameters to provide for the created bot.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/BotChannel'
        x-ms-client-flatten: true
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/BotChannel'
        201:
          description: If resource is updated successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/BotChannel'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Channel
      x-ms-examples:
        Update Bot:
          parameters:
            api-version: "2017-01-01"
            channelName: EmailChannel
            parameters:
              location: global
              properties:
                channelName: EmailChannel
                properties:
                  emailAddress: a@b.com
                  isEnabled: true
                  password: pwd
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
            201:
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
    put:
      description: Creates a Channel registration for a Bot Service
      operationId: Channels_Create
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/channelNameParameter'
      - description: The parameters to provide for the created bot.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/BotChannel'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is created successfully or already existed, the
            service should return 200 (OK).
          schema:
            $ref: '#/definitions/BotChannel'
        201:
          description: If resource is created successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/BotChannel'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Channel
      x-ms-examples:
        Create Bot:
          parameters:
            api-version: "2017-01-01"
            channelName: EmailChannel
            parameters:
              location: global
              properties:
                channelName: EmailChannel
                properties:
                  emailAddress: a@b.com
                  isEnabled: true
                  password: pwd
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
            201:
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys
  : post:
      description: Lists a Channel registration for a Bot Service including secrets
      operationId: Channels_ListWithKeys
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/channelNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is retrieved successfully, the service should return
            200 (OK).
          schema:
            $ref: '#/definitions/BotChannel'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Channel
      x-ms-examples:
        List Channel:
          parameters:
            api-version: "2017-01-01"
            channelName: EmailChannel
            parameters:
              location: global
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                location: global
                properties:
                  channelName: EmailChannel
                  properties:
                    emailAddress: a@b.com
                    isEnabled: true
                    password: pwd
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections
  : get:
      description: Returns all the Connection Settings registered to a particular
        BotService resource
      operationId: BotConnection_ListByBotService
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses
            here. If a resource provider does not support paging, it should return
            the same body (JSON object with u201cvalueu201d property) but omit nextLink
            entirely (or set to null, *not* empty string) for future compatibility.nThe
            nextLink should be implemented using following query parameters:nu00b7
            skipToken: opaque token that allows the resource provider to skip resources
            already enumerated. This value is defined and returned by the RP after
            first request via nextLink.nu00b7 top: the optional client query parameter
            which defines the maximum number of records to be returned by the server.nImplementation
            details:nu00b7 NextLink may include all the query parameters (specifically
            OData $filter) used by the client in the first query. nu00b7 Server may
            return less records than requested with nextLink. Returning zero records
            with NextLink is an acceptable response. nClients must fetch records until
            the nextLink is not returned back / null. Clients should never rely on
            number of returned records to determinate if pagination is completed.'
          schema:
            $ref: '#/definitions/ConnectionSettingResponseList'
        default:
          description: Error response describing why the operation failed. If the
            resource group does not exist, 404 (NotFound) will be returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - BotConnection
      x-ms-examples:
        List Connection Settings:
          parameters:
            api-version: "2017-01-01"
            resourceGroupName: OneResourceGroupName
            resourceName: samplebotname
            subscriptionId: subscription-id
          responses:
            200:
              body:
                value:
                - name: The Name of the Connection Setting
                  properties:
                    clientId: sampleclientid
                    clientSecret: samplesecret
                    parameters:
                    - key: key1
                      value: value1
                    - key: key2
                      value: value2
                    scopes: samplescope
                    serviceProviderId: serviceproviderid
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/enterpriseChannels:
    get:
      description: Returns all the resources of a particular type belonging to a resource
        group.
      operationId: EnterpriseChannels_ListByResourceGroup
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      - $ref: '#/parameters/apiVersionParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.nThe nextLink field is expected
            to point to the URL the client should use to fetch the next page (per
            server side paging). This matches the OData guidelines for paged responses
            here. If a resource provider does not support paging, it should return
            the same body (JSON object with u201cvalueu201d property) but omit nextLink
            entirely (or set to null, *not* empty string) for future compatibility.nThe
            nextLink should be implemented using following query parameters:nu00b7
            skipToken: opaque token that allows the resource provider to skip resources
            already enumerated. This value is defined and returned by the RP after
            first request via nextLink.nu00b7 top: the optional client query parameter
            which defines the maximum number of records to be returned by the server.nImplementation
            details:nu00b7 NextLink may include all the query parameters (specifically
            OData $filter) used by the client in the first query. nu00b7 Server may
            return less records than requested with nextLink. Returning zero records
            with NextLink is an acceptable response. nClients must fetch records until
            the nextLink is not returned back / null. Clients should never rely on
            number of returned records to determinate if pagination is completed.'
          schema:
            $ref: '#/definitions/EnterpriseChannelResponseList'
        default:
          description: Error response describing why the operation failed. If the
            resource group does not exist, 404 (NotFound) will be returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Enterprise Channel
      x-ms-examples:
        List Enterprise Channels by Resource Group:
          parameters:
            api-version: "2018-07-12"
            resourceGroupName: OneResourceGroupName
            subscriptionId: subscription-id
          responses:
            200:
              body:
                value:
                - etag: etag1
                  id: someid
                  location: West US
                  properties:
                    nodes:
                    - azureLocation: WestUs
                      azureSku: Int1
                      id: 00000000-0000-0000-0000-000000000000
                      name: Node 1
                      state: Creating
                    - azureLocation: EastUs
                      azureSku: Int1
                      id: 00000000-0000-0000-0000-000000000001
                      name: Node 2
                      state: Creating
                    state: Creating
                  tags:
                    tag1: value1
                    tag2: value2
      x-ms-pageable:
        nextLinkName: nextLink
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/enterpriseChannels/{resourceName}
  : delete:
      description: Deletes an Enterprise Channel from the resource group
      operationId: EnterpriseChannels_Delete
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: A 200 (OK) should be returned if the object exists and was
            deleted successfully;
        204:
          description: a 204 (NoContent) should be used if the resource does not exist
            and the request is well formed.
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Enterprise Channel
      x-ms-examples:
        Delete Enterprise Channel:
          parameters:
            api-version: "2018-07-12"
            resourceGroupName: OneResourceGroupName
            resourceName: contoso-dl
            subscriptionId: subscription-id
          responses:
            200: []
            204: []
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      description: Returns an Enterprise Channel specified by the parameters.
      operationId: EnterpriseChannels_Get
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: 'The resource provider should return 200 (OK) to indicate that
            the operation completed successfully. '
          schema:
            $ref: '#/definitions/EnterpriseChannel'
        default:
          description: Error response describing why the operation failed. If the
            resource group *or* resource does not exist, 404 (NotFound) should be
            returned.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Enterprise Channel
      x-ms-examples:
        Get Enterprise Channel:
          parameters:
            api-version: "2018-07-12"
            resourceGroupName: OneResourceGroupName
            resourceName: contoso-dl
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: contoso-dl
                location: West US
                properties:
                  nodes:
                  - azureLocation: WestUs
                    azureSku: Int1
                    id: 00000000-0000-0000-0000-000000000000
                    name: Node 1
                    state: Stopping
                  - azureLocation: EastUs
                    azureSku: Int1
                    id: 00000000-0000-0000-0000-000000000001
                    name: Node 2
                    state: Started
                  state: Started
                tags:
                  tag1: value1
                  tag2: value2
    patch:
      description: Updates an Enterprise Channel.
      operationId: EnterpriseChannels_Update
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - description: The parameters to provide to update the Enterprise Channel.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/EnterpriseChannel'
        x-ms-client-flatten: true
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is created successfully or already existed, the
            service should return 200 (OK).
          schema:
            $ref: '#/definitions/EnterpriseChannel'
        201:
          description: If resource is created successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/EnterpriseChannel'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Enterprise Channel
      x-ms-examples:
        Update Enterprise Channel:
          parameters:
            api-version: "2018-07-12"
            parameters:
              etag: etag1
              id: someid
              location: West US
              properties:
                nodes:
                - azureLocation: WestUs
                  azureSku: Int1
                  id: 00000000-0000-0000-0000-000000000000
                  name: Node 1
                  state: Stopping
                state: Stopping
              sku:
                name: S1
              tags:
                tag1: value1
                tag2: value2
            resourceGroupName: OneResourceGroupName
            resourceName: contoso-dl
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                location: West US
                properties:
                  nodes:
                  - azureLocation: WestUs
                    azureSku: Int1
                    id: 00000000-0000-0000-0000-000000000000
                    name: Node 1
                    state: Stopping
                  state: Stopping
                tags:
                  tag1: value1
                  tag2: value2
            201:
              body:
                id: someid
                location: West US
                properties:
                  nodes:
                  - azureLocation: WestUs
                    azureSku: Int1
                    id: 00000000-0000-0000-0000-000000000000
                    name: Node 1
                    state: Stopping
                  state: Stopping
                tags:
                  tag1: value1
                  tag2: value2
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    put:
      description: Creates an Enterprise Channel.
      operationId: EnterpriseChannels_Create
      parameters:
      - $ref: '#/parameters/resourceGroupNameParameter'
      - $ref: '#/parameters/resourceNameParameter'
      - description: The parameters to provide for the new Enterprise Channel.
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/EnterpriseChannel'
      - $ref: '#/parameters/apiVersionParameter'
      - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        200:
          description: If resource is created successfully or already existed, the
            service should return 200 (OK).
          schema:
            $ref: '#/definitions/EnterpriseChannel'
        201:
          description: If resource is created successfully, the service should return
            201 (Created). Execution to continue asynchronously.
          schema:
            $ref: '#/definitions/EnterpriseChannel'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/Error'
      tags:
      - Enterprise Channel
      x-ms-examples:
        Create Enterprise Channel:
          parameters:
            api-version: "2018-07-12"
            parameters:
              etag: etag1
              id: someid
              location: West US
              properties:
                nodes:
                - azureLocation: WestUs
                  azureSku: Int1
                  name: Node 1
              sku:
                name: S1
              tags:
                tag1: value1
                tag2: value2
            resourceGroupName: OneResourceGroupName
            resourceName: contoso-dl
            subscriptionId: subscription-id
          responses:
            200:
              body:
                etag: etag1
                id: someid
                location: West US
                properties:
                  nodes:
                  - azureLocation: WestUs
                    azureSku: Int1
                    id: 00000000-0000-0000-0000-000000000000
                    name: Node 1
                    state: Creating
                  state: Creating
                tags:
                  tag1: value1
                  tag2: value2
            201:
              body:
                id: someid
                location: West US
                properties:
                  nodes:
                  - azureLocation: WestUs
                    azureSku: Int1
                    id: 00000000-0000-0000-0000-000000000000
                    name: Node 1
                    state: Creating
                  state: Creating
                tags:
                  tag1: value1
                  tag2: value2
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":55:{s:3:\"Bot\";O:8:\"stdClass\":4:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:23:\"Bot
  resource definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BotProperties\";s:11:\"description\";s:46:\"The
  set of properties specific to bot resource\";}}s:4:\"type\";s:6:\"object\";}s:10:\"BotChannel\";O:8:\"stdClass\":4:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:31:\"Bot
  channel resource definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";s:11:\"description\";s:54:\"The
  set of properties specific to bot channel resource\";}}s:4:\"type\";s:6:\"object\";}s:13:\"BotProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  parameters to provide for the Bot.\";s:10:\"properties\";O:8:\"stdClass\":13:{s:18:\"configuredChannels\";O:8:\"stdClass\":4:{s:11:\"description\";s:54:\"Collection
  of channels for which the bot is configured\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The
  description of the bot\";s:4:\"type\";s:6:\"string\";}s:22:\"developerAppInsightKey\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"The
  Application Insights key\";s:4:\"type\";s:6:\"string\";}s:26:\"developerAppInsightsApiKey\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  Application Insights Api Key\";s:4:\"type\";s:6:\"string\";}s:33:\"developerAppInsightsApplicationId\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  Application Insights App Id\";s:4:\"type\";s:6:\"string\";}s:11:\"displayName\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"The
  Name of the bot\";s:4:\"type\";s:6:\"string\";}s:15:\"enabledChannels\";O:8:\"stdClass\":4:{s:11:\"description\";s:51:\"Collection
  of channels for which the bot is enabled\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}s:8:\"endpoint\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"The
  bot's endpoint\";s:4:\"type\";s:6:\"string\";}s:15:\"endpointVersion\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  bot's endpoint version\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:7:\"iconUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"The
  Icon Url of the bot\";s:4:\"type\";s:6:\"string\";}s:10:\"luisAppIds\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Collection
  of LUIS App Ids\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:7:\"luisKey\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"The
  LUIS Key\";s:4:\"type\";s:6:\"string\";}s:8:\"msaAppId\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Microsoft
  App Id for the bot\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:11:\"displayName\";i:1;s:8:\"endpoint\";i:2;s:8:\"msaAppId\";}}s:15:\"BotResponseList\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"The
  list of  bot service operation response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"The
  link used to get the next page of bot service resources.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:58:\"Gets
  the list of bot service results and their properties.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Bot\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:7:\"Channel\";O:8:\"stdClass\":5:{s:11:\"description\";s:18:\"Channel
  definition\";s:13:\"discriminator\";s:11:\"channelName\";s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"channelName\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"The
  channel name\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:11:\"channelName\";}s:4:\"type\";s:6:\"object\";}s:19:\"ChannelResponseList\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"The
  list of bot service channel operation response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"The
  link used to get the next page of bot service channel resources.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:66:\"Gets
  the list of bot service channel results and their properties.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/BotChannel\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:32:\"CheckNameAvailabilityRequestBody\";O:8:\"stdClass\":3:{s:11:\"description\";s:93:\"The
  request body for a request to Bot Service Management to check availability of a
  bot name.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"the
  name of the bot for which availability needs to be checked.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:62:\"the
  type of the bot for which availability needs to be checked\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:33:\"CheckNameAvailabilityResponseBody\";O:8:\"stdClass\":3:{s:11:\"description\";s:103:\"The
  response body returned for a request to Bot Service Management to check availability
  of a bot name.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:86:\"additional
  message from the bot management api showing why a bot name is not available\";s:4:\"type\";s:6:\"string\";}s:5:\"valid\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"indicates
  if the bot name is valid.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:18:\"ConnectionItemName\";O:8:\"stdClass\":2:{s:11:\"description\";s:69:\"The
  display name of a connection Item Setting registered with the Bot\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"Connection
  Item name that has been added in the API\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:17:\"ConnectionSetting\";O:8:\"stdClass\":4:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:31:\"Bot
  channel resource definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ConnectionSettingProperties\";s:11:\"description\";s:54:\"The
  set of properties specific to bot channel resource\";}}s:4:\"type\";s:6:\"object\";}s:26:\"ConnectionSettingParameter\";O:8:\"stdClass\":2:{s:11:\"description\";s:99:\"Extra
  Parameter in a Connection Setting Properties to indicate service provider specific
  properties\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Key
  for the Connection Setting Parameter.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"Value
  associated with the Connection Setting Parameter.\";s:4:\"type\";s:6:\"string\";}}}s:27:\"ConnectionSettingProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Properties
  for a Connection Setting Item\";s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"clientId\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Client
  Id associated with the Connection Setting.\";s:4:\"type\";s:6:\"string\";}s:12:\"clientSecret\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"Client
  Secret associated with the Connection Setting\";s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":3:{s:11:\"description\";s:66:\"Service
  Provider Parameters associated with the Connection Setting\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/ConnectionSettingParameter\";}s:4:\"type\";s:5:\"array\";}s:6:\"scopes\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Scopes
  associated with the Connection Setting\";s:4:\"type\";s:6:\"string\";}s:26:\"serviceProviderDisplayName\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"Service
  Provider Display Name associated with the Connection Setting\";s:4:\"type\";s:6:\"string\";}s:17:\"serviceProviderId\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"Service
  Provider Id associated with the Connection Setting\";s:4:\"type\";s:6:\"string\";}s:9:\"settingId\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"Setting
  Id set by the service for the Connection Setting.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:29:\"ConnectionSettingResponseList\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"The
  list of bot service connection settings response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"The
  link used to get the next page of bot service connection setting resources.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:70:\"Gets
  the list of bot service connection settings and their properties.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ConnectionSetting\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:17:\"DirectLineChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:30:\"Direct
  Line channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/DirectLineChannelProperties\";s:11:\"description\";s:62:\"The
  set of properties specific to Direct Line channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:17:\"DirectLineChannel\";}s:27:\"DirectLineChannelProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  parameters to provide for the Direct Line channel.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"sites\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"The
  list of Direct Line sites\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/DirectLineSite\";}s:4:\"type\";s:5:\"array\";}}}s:14:\"DirectLineSite\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"A
  site for the Direct Line channel\";s:10:\"properties\";O:8:\"stdClass\":9:{s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"Whether
  this site is enabled for DirectLine channel.\";s:4:\"type\";s:7:\"boolean\";}s:19:\"isSecureSiteEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"Whether
  this site is enabled for authentication with Bot Framework.\";s:4:\"type\";s:7:\"boolean\";}s:11:\"isV1Enabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"Whether
  this site is enabled for Bot Framework V1 protocol.\";s:4:\"type\";s:7:\"boolean\";}s:11:\"isV3Enabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"Whether
  this site is enabled for Bot Framework V1 protocol.\";s:4:\"type\";s:7:\"boolean\";}s:3:\"key\";O:8:\"stdClass\":4:{s:11:\"description\";s:94:\"Primary
  key. Value only returned through POST to the action Channel List API, otherwise
  empty.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}s:4:\"key2\";O:8:\"stdClass\":4:{s:11:\"description\";s:96:\"Secondary
  key. Value only returned through POST to the action Channel List API, otherwise
  empty.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}s:6:\"siteId\";O:8:\"stdClass\":4:{s:11:\"description\";s:7:\"Site
  Id\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}s:8:\"siteName\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"Site
  name\";s:4:\"type\";s:6:\"string\";}s:14:\"trustedOrigins\";O:8:\"stdClass\":3:{s:11:\"description\";s:104:\"List
  of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled
  is True.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:4:{i:0;s:11:\"isV1Enabled\";i:1;s:11:\"isV3Enabled\";i:2;s:9:\"isEnabled\";i:3;s:8:\"siteName\";}}s:12:\"EmailChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:24:\"Email
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/EmailChannelProperties\";s:11:\"description\";s:56:\"The
  set of properties specific to email channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:12:\"EmailChannel\";}s:22:\"EmailChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"The
  parameters to provide for the Email channel.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"emailAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"The
  email address\";s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:117:\"The
  password for the email address. Value only returned through POST to the action Channel
  List API, otherwise empty.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:12:\"emailAddress\";i:1;s:8:\"password\";i:2;s:9:\"isEnabled\";}}s:17:\"EnterpriseChannel\";O:8:\"stdClass\":4:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}}s:11:\"description\";s:38:\"Enterprise
  Channel resource definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/EnterpriseChannelProperties\";s:11:\"description\";s:65:\"The
  set of properties specific to an Enterprise Channel resource.\";}}s:4:\"type\";s:6:\"object\";}s:45:\"EnterpriseChannelCheckNameAvailabilityRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:88:\"A
  request to Bot Service Management to check availability of an Enterprise Channel
  name.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:78:\"The
  name of the Enterprise Channel for which availability needs to be checked.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:46:\"EnterpriseChannelCheckNameAvailabilityResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:88:\"A
  request to Bot Service Management to check availability of an Enterprise Channel
  name.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"Additional
  information about why a bot name is not available.\";s:4:\"type\";s:6:\"string\";}s:5:\"valid\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Indicates
  if the Enterprise Channel name is valid.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:21:\"EnterpriseChannelNode\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"The
  properties specific to an Enterprise Channel Node.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:13:\"azureLocation\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"The
  location of the Enterprise Channel Node.\";s:4:\"type\";s:6:\"string\";}s:8:\"azureSku\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"The
  sku of the Enterprise Channel Node.\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"Id
  of Enterprise Channel Node. This is generated by the Bot Framework.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"The
  name of the Enterprise Channel Node.\";s:4:\"type\";s:6:\"string\";}s:5:\"state\";O:8:\"stdClass\":4:{s:11:\"description\";s:49:\"The
  current state of the Enterprise Channel Node.\";s:4:\"enum\";a:10:{i:0;s:8:\"Creating\";i:1;s:12:\"CreateFailed\";i:2;s:7:\"Started\";i:3;s:8:\"Starting\";i:4;s:11:\"StartFailed\";i:5;s:7:\"Stopped\";i:6;s:8:\"Stopping\";i:7;s:10:\"StopFailed\";i:8;s:8:\"Deleting\";i:9;s:12:\"DeleteFailed\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:26:\"EnterpriseChannelNodeState\";}}}s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:8:\"azureSku\";i:2;s:13:\"azureLocation\";}}s:27:\"EnterpriseChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"The
  parameters to provide for the Enterprise Channel.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"nodes\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"The
  nodes associated with the Enterprise Channel.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/EnterpriseChannelNode\";}s:4:\"type\";s:5:\"array\";}s:5:\"state\";O:8:\"stdClass\":4:{s:11:\"description\";s:44:\"The
  current state of the Enterprise Channel.\";s:4:\"enum\";a:10:{i:0;s:8:\"Creating\";i:1;s:12:\"CreateFailed\";i:2;s:7:\"Started\";i:3;s:8:\"Starting\";i:4;s:11:\"StartFailed\";i:5;s:7:\"Stopped\";i:6;s:8:\"Stopping\";i:7;s:10:\"StopFailed\";i:8;s:8:\"Deleting\";i:9;s:12:\"DeleteFailed\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:22:\"EnterpriseChannelState\";}}}s:8:\"required\";a:1:{i:0;s:5:\"nodes\";}}s:29:\"EnterpriseChannelResponseList\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"The
  list of  bot service operation response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"The
  link used to get the next page of bot service resources.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:53:\"The
  list of Enterprise Channels and their properties.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/EnterpriseChannel\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:5:\"Error\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Bot
  Service error object.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/ErrorBody\";s:11:\"description\";s:15:\"The
  error body.\";}}}s:9:\"ErrorBody\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"Bot
  Service error body.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"error
  code\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"error
  message\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"code\";i:1;s:7:\"message\";}}s:15:\"FacebookChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:27:\"Facebook
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/FacebookChannelProperties\";s:11:\"description\";s:54:\"The
  set of properties specific to bot facebook channel\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:15:\"FacebookChannel\";}s:25:\"FacebookChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  parameters to provide for the Facebook channel.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"appId\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Facebook
  application id\";s:4:\"type\";s:6:\"string\";}s:9:\"appSecret\";O:8:\"stdClass\":2:{s:11:\"description\";s:110:\"Facebook
  application secret. Value only returned through POST to the action Channel List
  API, otherwise empty.\";s:4:\"type\";s:6:\"string\";}s:11:\"callbackUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"Callback
  Url\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}s:5:\"pages\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  list of Facebook pages\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/FacebookPage\";}s:4:\"type\";s:5:\"array\";}s:11:\"verifyToken\";O:8:\"stdClass\":3:{s:11:\"description\";s:95:\"Verify
  token. Value only returned through POST to the action Channel List API, otherwise
  empty.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:5:\"appId\";i:1;s:9:\"appSecret\";i:2;s:9:\"isEnabled\";}}s:12:\"FacebookPage\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"A
  Facebook page for Facebook channel registration\";s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"accessToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:116:\"Facebook
  application access token. Value only returned through POST to the action Channel
  List API, otherwise empty.\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"Page
  id\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:11:\"accessToken\";}}s:10:\"KikChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:22:\"Kik
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/KikChannelProperties\";s:11:\"description\";s:54:\"The
  set of properties specific to Kik channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:10:\"KikChannel\";}s:20:\"KikChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  parameters to provide for the Kik channel.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"apiKey\";O:8:\"stdClass\":2:{s:11:\"description\";s:94:\"Kik
  API key. Value only returned through POST to the action Channel List API, otherwise
  empty.\";s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}s:11:\"isValidated\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Whether
  this channel is validated for the bot\";s:4:\"type\";s:7:\"boolean\";}s:8:\"userName\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"The
  Kik user name\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:8:\"userName\";i:1;s:6:\"apiKey\";i:2;s:9:\"isEnabled\";}}s:4:\"Kind\";O:8:\"stdClass\":4:{s:11:\"description\";s:33:\"Indicates
  the type of bot service\";s:4:\"enum\";a:4:{i:0;s:3:\"sdk\";i:1;s:8:\"designer\";i:2;s:3:\"bot\";i:3;s:8:\"function\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:4:\"Kind\";}}s:14:\"MsTeamsChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:34:\"Microsoft
  Teams channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/MsTeamsChannelProperties\";s:11:\"description\";s:66:\"The
  set of properties specific to Microsoft Teams channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:14:\"MsTeamsChannel\";}s:24:\"MsTeamsChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  parameters to provide for the Microsoft Teams channel.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"callingWebHook\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Webhook
  for Microsoft Teams channel calls\";s:4:\"type\";s:6:\"string\";}s:13:\"enableCalling\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"Enable
  calling for Microsoft Teams channel\";s:4:\"type\";s:7:\"boolean\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:9:\"isEnabled\";}}s:20:\"OperationDisplayInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"The
  operation supported by Bot Service Management.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  description of the operation.\";s:4:\"type\";s:6:\"string\";}s:9:\"operation\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"The
  action that users can perform, based on their permission level.\";s:4:\"type\";s:6:\"string\";}s:8:\"provider\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Service
  provider: Microsoft Bot Service.\";s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Resource
  on which the operation is performed.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"OperationEntity\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  operations supported by Bot Service Management.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"display\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/OperationDisplayInfo\";s:11:\"description\";s:50:\"The
  operation supported by Bot Service Management.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Operation
  name: {provider}/{resource}/{operation}.\";s:4:\"type\";s:6:\"string\";}s:6:\"origin\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"The
  origin of the operation.\";s:4:\"type\";s:6:\"string\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"Additional
  properties.\";s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:25:\"OperationEntityListResult\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  list of bot service operation response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"The
  link used to get the next page of operations.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"The
  list of operations.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/OperationEntity\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Resource\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Azure
  resource\";s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"etag\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"Entity
  Tag\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Specifies
  the resource ID.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Kind\";s:11:\"description\";s:48:\"Required.
  Gets or sets the Kind of the resource.\";}s:8:\"location\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"Specifies
  the location of the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Specifies
  the name of the resource.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:3:\"sku\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Sku\";s:11:\"description\";s:37:\"Gets
  or sets the SKU of the resource.\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:50:\"Contains
  resource tags defined as key/value pairs.\";s:4:\"type\";s:6:\"object\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Specifies
  the type of the resource.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}s:19:\"x-ms-azure-resource\";b:1;}s:15:\"ServiceProvider\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"Service
  Provider Definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/ServiceProviderProperties\";s:11:\"description\";s:43:\"The
  Properties of a Service Provider Object\";}}s:4:\"type\";s:6:\"object\";}s:24:\"ServiceProviderParameter\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Extra
  Parameters specific to each Service Provider\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"default\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Default
  Name for the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Description
  of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:11:\"displayName\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Display
  Name of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:7:\"helpUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Help
  Url for the  Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Name
  of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Type
  of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:25:\"ServiceProviderProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:71:\"The
  Object used to describe a Service Provider supported by Bot Service\";s:10:\"properties\";O:8:\"stdClass\":6:{s:12:\"devPortalUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Diplay
  Name of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:11:\"displayName\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Diplay
  Name of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:7:\"iconUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Diplay
  Name of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"Id
  for Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  list of parameters for the Service Provider\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/ServiceProviderParameter\";}s:4:\"type\";s:5:\"array\";}s:19:\"serviceProviderName\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Diplay
  Name of the Service Provider\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}}}s:27:\"ServiceProviderResponseList\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"The
  list of bot service service providers response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"nextLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"The
  link used to get the next page of bot service service providers.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":4:{s:11:\"description\";s:68:\"Gets
  the list of bot service service providers and their properties.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ServiceProvider\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";}}}s:3:\"Sku\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  SKU of the cognitive services account.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/SkuName\";s:11:\"description\";s:12:\"The
  sku name\";}s:4:\"tier\";O:8:\"stdClass\":5:{s:11:\"description\";s:49:\"Gets the
  sku tier. This is based on the SKU name.\";s:4:\"enum\";a:2:{i:0;s:4:\"Free\";i:1;s:8:\"Standard\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:7:\"SkuTier\";}}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}}s:7:\"SkuName\";O:8:\"stdClass\":4:{s:11:\"description\";s:16:\"The
  name of SKU.\";s:4:\"enum\";a:2:{i:0;s:2:\"F0\";i:1;s:2:\"S1\";}s:4:\"type\";s:6:\"string\";s:9:\"x-ms-enum\";O:8:\"stdClass\":2:{s:13:\"modelAsString\";b:1;s:4:\"name\";s:7:\"SkuName\";}}s:12:\"SkypeChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:24:\"Skype
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/SkypeChannelProperties\";s:11:\"description\";s:56:\"The
  set of properties specific to Skype channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:12:\"SkypeChannel\";}s:22:\"SkypeChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  parameters to provide for the Microsoft Teams channel.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:14:\"callingWebHook\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"Calling
  web hook for Skype channel\";s:4:\"type\";s:6:\"string\";}s:13:\"enableCalling\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Enable
  calling for Skype channel\";s:4:\"type\";s:7:\"boolean\";}s:12:\"enableGroups\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"Enable
  groups for Skype channel\";s:4:\"type\";s:7:\"boolean\";}s:16:\"enableMediaCards\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"Enable
  media cards for Skype channel\";s:4:\"type\";s:7:\"boolean\";}s:15:\"enableMessaging\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"Enable
  messaging for Skype channel\";s:4:\"type\";s:7:\"boolean\";}s:19:\"enableScreenSharing\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"Enable
  screen sharing for Skype channel\";s:4:\"type\";s:7:\"boolean\";}s:11:\"enableVideo\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"Enable
  video for Skype channel\";s:4:\"type\";s:7:\"boolean\";}s:10:\"groupsMode\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Group
  mode for Skype channel\";s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:9:\"isEnabled\";}}s:12:\"SlackChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:24:\"Slack
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/SlackChannelProperties\";s:11:\"description\";s:56:\"The
  set of properties specific to Slack channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:12:\"SlackChannel\";}s:22:\"SlackChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"The
  parameters to provide for the Slack channel.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:8:\"clientId\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"The
  Slack client id\";s:4:\"type\";s:6:\"string\";}s:12:\"clientSecret\";O:8:\"stdClass\":2:{s:11:\"description\";s:106:\"The
  Slack client secret. Value only returned through POST to the action Channel List
  API, otherwise empty.\";s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}s:11:\"isValidated\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Whether
  this channel is validated for the bot\";s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";}s:14:\"landingPageUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The
  Slack landing page Url\";s:4:\"type\";s:6:\"string\";}s:16:\"lastSubmissionId\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"The
  Sms auth token\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:14:\"redirectAction\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  Slack redirect action\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:23:\"registerBeforeOAuthFlow\";O:8:\"stdClass\":3:{s:11:\"description\";s:91:\"Whether
  to register the settings before OAuth validation is performed. Recommended to True.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";}s:17:\"verificationToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:111:\"The
  Slack verification token. Value only returned through POST to the action Channel
  List API, otherwise empty.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:8:\"clientId\";i:1;s:12:\"clientSecret\";i:2;s:17:\"verificationToken\";i:3;s:9:\"isEnabled\";}}s:10:\"SmsChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:22:\"Sms
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/SmsChannelProperties\";s:11:\"description\";s:54:\"The
  set of properties specific to Sms channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:10:\"SmsChannel\";}s:20:\"SmsChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  parameters to provide for the Sms channel.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"accountSID\";O:8:\"stdClass\":2:{s:11:\"description\";s:102:\"The
  Sms account SID. Value only returned through POST to the action Channel List API,
  otherwise empty.\";s:4:\"type\";s:6:\"string\";}s:9:\"authToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:101:\"The
  Sms auth token. Value only returned through POST to the action Channel List API,
  otherwise empty.\";s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}s:11:\"isValidated\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Whether
  this channel is validated for the bot\";s:4:\"type\";s:7:\"boolean\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"The
  Sms phone\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:5:\"phone\";i:1;s:10:\"accountSID\";i:2;s:9:\"authToken\";i:3;s:9:\"isEnabled\";}}s:15:\"TelegramChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:27:\"Telegram
  channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/TelegramChannelProperties\";s:11:\"description\";s:59:\"The
  set of properties specific to Telegram channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:15:\"TelegramChannel\";}s:25:\"TelegramChannelProperties\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  parameters to provide for the Telegram channel.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"accessToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:108:\"The
  Telegram access token. Value only returned through POST to the action Channel List
  API, otherwise empty.\";s:4:\"type\";s:6:\"string\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  this channel is enabled for the bot\";s:4:\"type\";s:7:\"boolean\";}s:11:\"isValidated\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Whether
  this channel is validated for the bot\";s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:2:{i:0;s:11:\"accessToken\";i:1;s:9:\"isEnabled\";}}s:14:\"WebChatChannel\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Channel\";}}s:11:\"description\";s:27:\"Web
  Chat channel definition\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/WebChatChannelProperties\";s:11:\"description\";s:59:\"The
  set of properties specific to Web Chat channel resource\";}}s:4:\"type\";s:6:\"object\";s:24:\"x-ms-discriminator-value\";s:14:\"WebChatChannel\";}s:24:\"WebChatChannelProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"The
  parameters to provide for the Web Chat channel.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"sites\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  list of Web Chat sites\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/WebChatSite\";}s:4:\"type\";s:5:\"array\";}s:16:\"webChatEmbedCode\";O:8:\"stdClass\":4:{s:11:\"description\";s:27:\"Web
  chat control embed code\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}}}s:11:\"WebChatSite\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  site for the Webchat channel\";s:10:\"properties\";O:8:\"stdClass\":6:{s:13:\"enablePreview\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"Whether
  this site is enabled for preview versions of Webchat\";s:4:\"type\";s:7:\"boolean\";}s:9:\"isEnabled\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Whether
  this site is enabled for DirectLine channel\";s:4:\"type\";s:7:\"boolean\";}s:3:\"key\";O:8:\"stdClass\":4:{s:11:\"description\";s:94:\"Primary
  key. Value only returned through POST to the action Channel List API, otherwise
  empty.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}s:4:\"key2\";O:8:\"stdClass\":4:{s:11:\"description\";s:96:\"Secondary
  key. Value only returned through POST to the action Channel List API, otherwise
  empty.\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}s:6:\"siteId\";O:8:\"stdClass\":4:{s:11:\"description\";s:7:\"Site
  Id\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:15:\"x-ms-mutability\";a:1:{i:0;s:4:\"read\";}}s:8:\"siteName\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"Site
  name\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:8:\"siteName\";i:1;s:9:\"isEnabled\";i:2;s:13:\"enablePreview\";}}}"
...
