---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":9:{s:11:\"description\";s:18:\"Rules in the Cloud\";s:5:\"title\";s:4:\"Ritc\";s:7:\"version\";s:5:\"1.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:110:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_664480221534552064_CwdeYGxs_400x400.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:44:\"http://www.ritc.io/openapi/ritc.swagger.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:7:\"ritc.io\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:4:\"ritc\";s:4:\"type\";s:7:\"openapi\";}}"
host: api.ritc.io
basePath: /
paths:
  /actions:
    get:
      description: List actions
      operationId: listActions
      parameters: []
      responses:
        200:
          description: A list of actions in an app
          schema:
            items:
              $ref: '#/definitions/ActionShortResponse'
            type: array
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a new action
      operationId: addAction
      parameters:
      - description: Action information
        in: body
        name: Action Object
        required: true
        schema:
          $ref: '#/definitions/Action59'
      responses:
        200:
          description: An action was created
          schema:
            $ref: '#/definitions/ActionShortResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /actions/{action_id}:
    delete:
      description: Delete an action
      operationId: removeAction
      parameters:
      - description: Id of action
        in: path
        name: action_id
        required: true
        type: string
      responses:
        200:
          description: The action was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get an action
      operationId: getAction
      parameters:
      - description: Id of action_id
        in: path
        name: action_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about an action
          schema:
            items:
              $ref: '#/definitions/ActionFullResponse'
            type: array
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update information about a specific action
      operationId: updateAction
      parameters:
      - description: Id of user
        in: path
        name: action_id
        required: true
        type: string
      - description: Action information
        in: body
        name: Action Object
        required: true
        schema:
          $ref: '#/definitions/Action59'
      responses:
        200:
          description: Information about the action was updated successfully
          schema:
            $ref: '#/definitions/ActionShortResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /admin:
    get:
      description: Ping the server
      operationId: admin
      parameters: []
      responses:
        200:
          description: Ritc is up
          schema:
            type: object
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - admin
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /admin/log:
    post:
      description: Log a message
      operationId: logInRitc
      parameters:
      - description: Log message
        in: body
        name: message
        required: true
        schema:
          type: object
      responses:
        200:
          description: Message logged
          schema:
            type: object
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - admin
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /admin/ping:
    get:
      description: Ping the server
      operationId: pingRitc
      parameters: []
      responses:
        200:
          description: Ritc is up
          schema:
            type: object
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - admin
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps:
    get:
      description: Get apps information
      operationId: listApps
      parameters: []
      responses:
        200:
          description: A list of apps in an org
          schema:
            items:
              $ref: '#/definitions/AppResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a new app
      operationId: addApp
      parameters:
      - description: App information
        in: body
        name: App Object
        required: true
        schema:
          $ref: '#/definitions/App'
      responses:
        200:
          description: An app was created
          schema:
            $ref: '#/definitions/AppResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/channels/users:
    get:
      description: Get app channels
      operationId: listAppChannels
      parameters: []
      responses:
        200:
          description: List of all channels in an app
          schema:
            items:
              $ref: '#/definitions/AppChannelResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/channels/{channel_id}/users:
    get:
      description: Get users of a specified channel
      operationId: listAppChannelUsers
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about users of a specified channel
          schema:
            items:
              $ref: '#/definitions/AppChannelResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/channels/{channel_id}/users/{user_id}:
    get:
      description: Get user of a specified channel
      operationId: getAppChannelUser
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a specified user of a specified
            channel
          schema:
            items:
              $ref: '#/definitions/AppChannelResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create user channel
      operationId: addAppChannelUser
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: User was assigned to a channel in in app
          schema:
            $ref: '#/definitions/AppChannelResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/ext/api/credentials:
    get:
      description: Get external credentials
      operationId: listChannelExternalCredentials
      parameters: []
      responses:
        200:
          description: Detailed information about external credentials
          schema:
            items:
              $ref: '#/definitions/AppExternalCredentialsResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create new external credentials
      operationId: addChannelExternalCredentials
      parameters:
      - description: App_External_Credentials information
        in: body
        name: App_External_Credentials Object
        required: true
        schema:
          $ref: '#/definitions/AppExternalCredentials'
      responses:
        200:
          description: External credentials created
          schema:
            $ref: '#/definitions/AppExternalCredentialsResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/ext/api/credentials/{channel_id}:
    delete:
      description: Delete credentials for a channel
      operationId: removeChannelExternalCredentials
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: The credentials for a channel were successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get credentials for a channel in an app
      operationId: getChannelExternalCredentials
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: Credentials for a channel in an app
          schema:
            items:
              $ref: '#/definitions/AppExternalCredentialsResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update credentials for a channel
      operationId: updateChannelExternalCredentials
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      - description: App_External_Credentials information
        in: body
        name: App_External_Credentials Object
        required: true
        schema:
          $ref: '#/definitions/AppExternalCredentials'
      responses:
        200:
          description: Information about the channel credentials was updated successfully
          schema:
            $ref: '#/definitions/AppExternalCredentialsResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/rulegroup/run/{rule_id_list}:
    post:
      description: Run specified rule group in the app
      operationId: runRuleGroup
      parameters:
      - description: Ids of rules in the group, separated by commas, no spaces
        in: path
        name: rule_id_list
        required: true
        type: string
      - description: Initial data
        in: body
        name: initial_data
        required: false
        schema:
          type: object
      - description: Do not continue with remaining rules after a rule fires
        in: query
        name: break_when_rule_fires
        required: false
        type: boolean
      responses:
        200:
          description: 'Execution of specified rules in the app (for user #1)'
          schema:
            items:
              $ref: '#/definitions/RuleResults'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/rules/run:
    post:
      description: Run active app rules
      operationId: runApp
      parameters:
      - description: Initial data
        in: body
        name: initial_data
        required: false
        schema:
          type: object
      - description: Do not continue with remaining rules after a rule fires
        in: query
        name: break_when_rule_fires
        required: false
        type: boolean
      responses:
        200:
          description: 'Execution of active rules in the app (for user #1)'
          schema:
            items:
              $ref: '#/definitions/RuleResults'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /apps/{app_id}:
    delete:
      description: Delete an app
      operationId: removeApp
      parameters:
      - description: Id of App
        in: path
        name: app_id
        required: true
        type: string
      responses:
        200:
          description: The app was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get app information
      operationId: getApp
      parameters:
      - description: Id of App
        in: path
        name: app_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about an app
          schema:
            items:
              $ref: '#/definitions/AppResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update an app
      operationId: updateApp
      parameters:
      - description: Id of app
        in: path
        name: app_id
        required: true
        type: string
      - description: App information
        in: body
        name: App Object
        required: true
        schema:
          $ref: '#/definitions/App'
      responses:
        200:
          description: Information about the app was updated successfully
          schema:
            $ref: '#/definitions/AppResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /channels:
    get:
      description: Retrieve Channels
      operationId: listChannels
      parameters: []
      responses:
        200:
          description: A list of channels available to a logged-in user
          schema:
            items:
              $ref: '#/definitions/ChannelResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a channel
      operationId: addChannel
      parameters:
      - description: Channel information
        in: body
        name: Channel Object
        required: true
        schema:
          $ref: '#/definitions/Channel'
      responses:
        200:
          description: A private channel was created
          schema:
            $ref: '#/definitions/ChannelResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /channels/anonymous:
    get:
      description: Retrieve Channels anonymously
      operationId: listAnonymousChannels
      parameters: []
      responses:
        200:
          description: A list of channels available to an anonymous user
          schema:
            items:
              $ref: '#/definitions/ChannelResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /channels/{channel_id}:
    delete:
      description: Delete a channel
      operationId: removeChannel
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: The channel was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get channel information
      operationId: getChannel
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a channel
          schema:
            items:
              $ref: '#/definitions/ChannelResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update a channel
      operationId: updateChannel
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      - description: Channel information
        in: body
        name: Channel Object
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        200:
          description: Information about the channel was updated successfully
          schema:
            $ref: '#/definitions/ChannelResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /channels/{channel_id}/functions:
    get:
      description: Retrieve Channel Functions
      operationId: listChannelFunctions
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: A list of functions available in a channel
          schema:
            items:
              $ref: '#/definitions/FunctionResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a channel function
      operationId: addChannelFunction
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      - description: Channel Function information
        in: body
        name: Channel Function Object
        required: true
        schema:
          $ref: '#/definitions/Function7'
      responses:
        200:
          description: A private channel function  was created
          schema:
            $ref: '#/definitions/FunctionResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /channels/{channel_id}/functions/{function_id}:
    get:
      description: Get channel function information
      operationId: getChannelFunction
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      - description: Id of Channel Function
        in: path
        name: function_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a channel function
          schema:
            items:
              $ref: '#/definitions/FunctionResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /orgs:
    post:
      description: Create an org
      operationId: addOrganization
      parameters:
      - description: Org information
        in: body
        name: Org Object
        required: true
        schema:
          $ref: '#/definitions/Org'
      responses:
        200:
          description: An org was successfully created
          schema:
            items:
              $ref: '#/definitions/OrgResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Orgs
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /orgs/me:
    get:
      description: Get org information
      operationId: getMyOrganization
      parameters: []
      responses:
        200:
          description: Detailed information about an org
          schema:
            items:
              $ref: '#/definitions/OrgResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Orgs
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /rules:
    get:
      description: List rules
      operationId: listRules
      parameters: []
      responses:
        200:
          description: A list of rules in an app
          schema:
            items:
              $ref: '#/definitions/RuleShortResponse'
            type: array
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a new rule
      operationId: addRule
      parameters:
      - description: Rule information
        in: body
        name: Rule Object
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        200:
          description: A rule was created
          schema:
            $ref: '#/definitions/RuleFullResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /rules/{rule_id}:
    delete:
      description: Delete a rule
      operationId: removeRule
      parameters:
      - description: Id of rule
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        200:
          description: The rule was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get a rule
      operationId: getRule
      parameters:
      - description: Id of rule
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a rule
          schema:
            items:
              $ref: '#/definitions/RuleFullResponse'
            type: array
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update information about a specific rule
      operationId: updateRule
      parameters:
      - description: Id of user
        in: path
        name: rule_id
        required: true
        type: string
      - description: Rule information
        in: body
        name: Rule Object
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        200:
          description: Information about the rule was updated successfully
          schema:
            $ref: '#/definitions/RuleFullResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /rules/{rule_id}/run:
    post:
      description: Run a rule
      operationId: runRule
      parameters:
      - description: Id of rule
        in: path
        name: rule_id
        required: true
        type: string
      - description: Initial data
        in: body
        name: initial_data
        required: false
        schema:
          type: object
      responses:
        200:
          description: A rule ran successfully
          schema:
            type: object
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /triggers:
    get:
      description: Triggers in an app
      operationId: listTriggers
      parameters: []
      responses:
        200:
          description: A list of triggers in an app
          schema:
            items:
              $ref: '#/definitions/TriggerShortResponse'
            type: array
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a new trigger in an app
      operationId: addTrigger
      parameters:
      - description: Trigger parameters and configuration
        in: body
        name: Trigger Object
        required: true
        schema:
          $ref: '#/definitions/Trigger54'
      responses:
        200:
          description: A trigger was successfully created
          schema:
            $ref: '#/definitions/TriggerShortResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /triggers/{trigger_id}:
    delete:
      description: Delete a trigger
      operationId: removeTrigger
      parameters:
      - description: Id of Trigger
        in: path
        name: trigger_id
        required: true
        type: string
      responses:
        200:
          description: The trigger was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get a trigger
      operationId: getTrigger
      parameters:
      - description: Id of Trigger
        in: path
        name: trigger_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a trigger
          schema:
            items:
              $ref: '#/definitions/TriggerFullResponse'
            type: array
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update a trigger
      operationId: updateTrigger
      parameters:
      - description: Id of user
        in: path
        name: trigger_id
        required: true
        type: string
      - description: Trigger information
        in: body
        name: Trigger Object
        required: true
        schema:
          $ref: '#/definitions/Trigger54'
      responses:
        200:
          description: Information about the trigger was updated successfully
          schema:
            $ref: '#/definitions/TriggerShortResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users:
    get:
      description: Users
      operationId: listAppUsers
      parameters: []
      responses:
        200:
          description: A list of App Users in an app
          schema:
            items:
              $ref: '#/definitions/AppUserResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a new App User
      operationId: addAppUser
      parameters:
      - description: App User information
        in: body
        name: App User Object
        required: true
        schema:
          $ref: '#/definitions/AppUser'
      responses:
        200:
          description: An App User was created
          schema:
            $ref: '#/definitions/AppUserResponse'
        400:
          description: Unexpected error
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/admin:
    get:
      description: Admin users
      operationId: listAdminUsers
      parameters: []
      responses:
        200:
          description: A list of admin users in an app
          schema:
            items:
              $ref: '#/definitions/AdminUserResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Create a new admin user
      operationId: addAdminUser
      parameters:
      - description: Admin User information
        in: body
        name: Admin_User Object
        required: true
        schema:
          $ref: '#/definitions/AdminUser'
      responses:
        200:
          description: An admin user was created
          schema:
            $ref: '#/definitions/AdminUserResponse'
        400:
          description: Unexpected error
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/admin/{user_id}:
    delete:
      description: Remove an admin user
      operationId: removeAdminUser
      parameters:
      - description: Id of Admin_User
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: The admin user was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get an admin user
      operationId: getAdminUser
      parameters:
      - description: Id of Admin_User
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about an admin user
          schema:
            items:
              $ref: '#/definitions/AdminUserResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update information about an admin user
      operationId: updateAdminUser
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        type: string
      - description: Admin User information
        in: body
        name: Admin_User Object
        required: true
        schema:
          $ref: '#/definitions/AdminUser'
      responses:
        200:
          description: Information about the admin user was updated successfully
          schema:
            $ref: '#/definitions/AdminUserResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/authenticate/{user_id}/channel/{channel_id}:
    post:
      description: Authenticate a user for a channel
      operationId: authenticateAppUserForChannel
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: Authorize url to be sent an authorize request
          schema:
            items:
              $ref: '#/definitions/AuthorizeUrlResponse'
            type: array
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/{user_id}:
    delete:
      description: Remove a user
      operationId: removeAppUser
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: The user was successfully removed
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get an App User
      operationId: getAppUser
      parameters:
      - description: Id of App User
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about an App User
          schema:
            items:
              $ref: '#/definitions/AppUserResponse'
            type: array
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: Update information about an App User
      operationId: updateAppUser
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        type: string
      - description: App User information
        in: body
        name: App User Object
        required: true
        schema:
          $ref: '#/definitions/AppUser'
      responses:
        200:
          description: Information about the user was updated successfully
          schema:
            $ref: '#/definitions/AppUserResponse'
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/{user_id}/channels:
    get:
      description: Channels available to a User
      operationId: listAppUserChannels
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: A list of channels available to a specific user
          schema:
            items:
              $ref: '#/definitions/UserChannel'
            type: array
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Assign a channel to a user
      operationId: addAppUserToChannel
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Channel
        in: body
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        200:
          description: A channel was assigned to a user
          schema:
            $ref: '#/definitions/UserChannel'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/{user_id}/channels/{channel_id}:
    delete:
      description: Remove a user channel assignment
      operationId: removeAppUserFromChannel
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: The channel was successfully removed from the user
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get a user channel
      operationId: getAppUserChannel
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a specific channel for a specific
            user
          schema:
            items:
              $ref: '#/definitions/UserChannel'
            type: array
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/{user_id}/rules:
    get:
      description: Rules for a User
      operationId: listAppUserRules
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: A list of rules applying to a specific user
          schema:
            items:
              $ref: '#/definitions/RuleShortResponse'
            type: array
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/{user_id}/rules/{rule_id}:
    delete:
      description: Remove a rule user
      operationId: removeAppUserFromRule
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        200:
          description: The rule was successfully removed from the system
        400:
          description: Invalid input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Get a user
      operationId: getAppUserRule
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        200:
          description: Detailed information about a rule
          schema:
            items:
              $ref: '#/definitions/RuleFullResponse'
            type: array
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      description: Assign a user to a rule
      operationId: addAppUserToRule
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        200:
          description: A rule was assigned to the user
          schema:
            $ref: '#/definitions/RuleShortResponse'
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /users/{user_id}/rules/{rule_id}/run:
    post:
      description: Run rule for a user
      operationId: runRuleForAppUser
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        200:
          description: A rule ran successfully for a user
          schema:
            type: object
        400:
          description: Invalid Input
          schema: []
        default:
          description: Unexpected error
          schema: []
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":44:{s:6:\"Action\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"channelId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the rule was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  date the rule was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:6:\"Action\";s:4:\"type\";s:6:\"object\";}s:8:\"Action59\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"channelId\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Id
  of channel used by action\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"codes\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"Object
  containing named Javascript code sets\";s:4:\"type\";s:6:\"object\";}s:4:\"desc\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Action
  description\";s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"Hash
  id of channel function used by action\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Action
  name\";s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Object
  containing channel-defined action parameters\";s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:9:\"channelId\";i:2;s:10:\"functionId\";}s:5:\"title\";s:8:\"Action59\";s:4:\"type\";s:6:\"object\";}s:18:\"ActionFullResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":10:{s:9:\"channelId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"codes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  date the action was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Action
  description\";s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  date the action was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Action
  name\";s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:20:\"Action_Full_Response\";s:4:\"type\";s:6:\"object\";}s:19:\"ActionShortResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"channelId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  date the action was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Action
  description\";s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  date the action was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Action
  name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:21:\"Action_Short_Response\";s:4:\"type\";s:6:\"object\";}s:9:\"AdminUser\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Admin
  User email address\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Admin
  User password\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Type41\";}}s:5:\"title\";s:10:\"Admin_User\";s:4:\"type\";s:6:\"object\";}s:17:\"AdminUserResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"The
  date the admin user was created\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Admin
  User email address\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  date the admin user was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Admin
  User name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:37:\"Indicates
  the status of an Admin User\";}}s:5:\"title\";s:19:\"Admin_User_Response\";s:4:\"type\";s:6:\"object\";}s:7:\"ApiType\";O:8:\"stdClass\":3:{s:4:\"enum\";a:3:{i:0;s:8:\"Internal\";i:1;s:4:\"REST\";i:2;s:3:\"SDK\";}s:5:\"title\";s:7:\"ApiType\";s:4:\"type\";s:6:\"string\";}s:3:\"App\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"desc\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"App
  description\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"App
  name\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:3:\"App\";s:4:\"type\";s:6:\"object\";}s:18:\"AppChannelResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"channelId\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"Channel
  Id\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the user was created\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:17:\"Assignment
  status\";}s:6:\"userId\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Id of App
  User assigned to Channel\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:5:\"title\";s:20:\"App_Channel_Response\";s:4:\"type\";s:6:\"object\";}s:22:\"AppExternalCredentials\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"authType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/AuthType\";}s:10:\"channel_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"credentials\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"App
  external credentials api name\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:24:\"App_External_Credentials\";s:4:\"type\";s:6:\"object\";}s:30:\"AppExternalCredentialsResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"authType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/AuthType\";}s:10:\"channel_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"credentials\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"App
  external credentials api name\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:33:\"App_External_Credentials_Response\";s:4:\"type\";s:6:\"object\";}s:11:\"AppResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"apiKey\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"App
  ApiKey\";s:4:\"type\";s:6:\"string\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"The
  date the app was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"App
  description\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the app was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"App
  name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:12:\"App_Response\";s:4:\"type\";s:6:\"object\";}s:7:\"AppUser\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"config\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Object
  containing user-defined app user configuration\";s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Display
  name of App User\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"App
  User password\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:8:\"App_User\";s:4:\"type\";s:6:\"object\";}s:15:\"AppUserResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the user was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Description
  of App User\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"Id
  of App User\";s:4:\"type\";s:6:\"string\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  date the user was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Display
  name of App User\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:15:\"App
  User status\";}}s:5:\"title\";s:17:\"App_User_Response\";s:4:\"type\";s:6:\"object\";}s:8:\"AuthType\";O:8:\"stdClass\":3:{s:4:\"enum\";a:4:{i:0;s:6:\"apikey\";i:1;s:5:\"basic\";i:2;s:4:\"none\";i:3;s:6:\"oauth2\";}s:5:\"title\";s:8:\"AuthType\";s:4:\"type\";s:6:\"string\";}s:20:\"AuthorizeUrlResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:22:\"Authorize_Url_Response\";s:4:\"type\";s:6:\"object\";}s:7:\"Channel\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Channel
  description\";s:4:\"type\";s:6:\"string\";}s:9:\"functions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Function\";}s:4:\"type\";s:5:\"array\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Id
  of channel\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Channel
  name\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:166:\"Type
  of channel. Choices are 'public' or 'private'. Private channels are only viewable
  within an account, while public channels are viewable to everyone in the system\";s:4:\"type\";s:6:\"object\";}}s:5:\"title\";s:7:\"Channel\";s:4:\"type\";s:6:\"object\";}s:15:\"ChannelResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Channel
  description\";s:4:\"type\";s:6:\"string\";}s:9:\"functions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Function5\";}s:4:\"type\";s:5:\"array\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Id
  of channel\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Channel
  name\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:152:\"Type
  of channel. Choices are 'public' or 'private'. Private channels are only viewable
  within an account, while public channels are viewable to everyone\";s:4:\"type\";s:6:\"object\";}}s:5:\"title\";s:16:\"Channel_Response\";s:4:\"type\";s:6:\"object\";}s:5:\"Error\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"fields\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:5:\"Error\";s:4:\"type\";s:6:\"object\";}s:8:\"Function\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Function
  name\";s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Parameter\";}s:4:\"type\";s:5:\"array\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Type\";}}s:5:\"title\";s:8:\"Function\";s:4:\"type\";s:6:\"object\";}s:9:\"Function5\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Function
  description\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Function
  name\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Type\";}}s:5:\"title\";s:9:\"Function5\";s:4:\"type\";s:6:\"object\";}s:9:\"Function7\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"apiType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/ApiType\";}s:4:\"desc\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Function
  description\";s:4:\"type\";s:6:\"string\";}s:8:\"endpoint\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Function
  endpoint\";s:4:\"type\";s:6:\"string\";}s:10:\"httpMethod\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/HttpMethod\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Function
  name\";s:4:\"type\";s:6:\"string\";}s:17:\"requestParameters\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/RequestParameter\";}s:4:\"type\";s:5:\"array\";}s:14:\"responseFormat\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseFormat\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Type\";}}s:5:\"title\";s:9:\"Function7\";s:4:\"type\";s:6:\"object\";}s:16:\"FunctionResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":9:{s:7:\"apiType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/ApiType\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Function
  description\";s:4:\"type\";s:6:\"string\";}s:8:\"endpoint\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Function
  endpoint\";s:4:\"type\";s:6:\"string\";}s:10:\"httpMethod\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/HttpMethod\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Function
  name\";s:4:\"type\";s:6:\"string\";}s:17:\"requestParameters\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/RequestParameter\";}s:4:\"type\";s:5:\"array\";}s:14:\"responseFormat\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseFormat\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Type\";}}s:5:\"title\";s:17:\"Function_Response\";s:4:\"type\";s:6:\"object\";}s:10:\"HttpMethod\";O:8:\"stdClass\":3:{s:4:\"enum\";a:4:{i:0;s:6:\"DELETE\";i:1;s:3:\"GET\";i:2;s:5:\"PATCH\";i:3;s:4:\"POST\";}s:5:\"title\";s:10:\"HttpMethod\";s:4:\"type\";s:6:\"string\";}s:3:\"Org\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"desc\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Org
  description\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"Org
  name\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"Org
  type\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:5:\"title\";s:3:\"Org\";s:4:\"type\";s:6:\"object\";}s:11:\"OrgResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"The
  date the org was created\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the org was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"Org
  name\";s:4:\"type\";s:6:\"string\";}s:4:\"plan\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Plan\";}s:7:\"planCat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"status\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"Org
  name\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:5:\"title\";s:12:\"Org_Response\";s:4:\"type\";s:6:\"object\";}s:9:\"Parameter\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:3:\"key\";i:1;s:5:\"value\";}s:5:\"title\";s:9:\"Parameter\";s:4:\"type\";s:6:\"object\";}s:4:\"Plan\";O:8:\"stdClass\":3:{s:4:\"enum\";a:2:{i:0;s:4:\"free\";i:1;s:5:\"basic\";}s:5:\"title\";s:4:\"Plan\";s:4:\"type\";s:6:\"string\";}s:16:\"RequestParameter\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"fieldType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"schema\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Schema\";}}s:5:\"title\";s:16:\"RequestParameter\";s:4:\"type\";s:6:\"object\";}s:14:\"ResponseFormat\";O:8:\"stdClass\":3:{s:4:\"enum\";a:4:{i:0;s:4:\"Html\";i:1;s:4:\"Json\";i:2;s:4:\"Text\";i:3;s:3:\"Xml\";}s:5:\"title\";s:14:\"ResponseFormat\";s:4:\"type\";s:6:\"string\";}s:4:\"Rule\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"actionIds\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Rule
  description\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Rule
  description\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"Rule
  name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:11:\"Rule
  status\";}s:10:\"triggerIds\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Rule
  description\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:4:\"Rule\";s:4:\"type\";s:6:\"object\";}s:16:\"RuleFullResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"actions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Action\";}s:4:\"type\";s:5:\"array\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the rule was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Rule
  description\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"Rule
  Id\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  date the rule was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"Rule
  name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:11:\"Rule
  status\";}s:8:\"triggers\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Trigger\";}s:4:\"type\";s:5:\"array\";}}s:5:\"title\";s:18:\"Rule_Full_Response\";s:4:\"type\";s:6:\"object\";}s:11:\"RuleResults\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Name
  of rule results\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Type\";}}s:5:\"title\";s:12:\"Rule_Results\";s:4:\"type\";s:6:\"object\";}s:17:\"RuleShortResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the rule was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Rule
  description\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"Rule
  Id\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  date the rule was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"Rule
  name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:11:\"Rule
  status\";}}s:5:\"title\";s:19:\"Rule_Short_Response\";s:4:\"type\";s:6:\"object\";}s:6:\"Schema\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"datatype\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"default\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"expose\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:8:\"required\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:5:\"style\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Style\";}}s:5:\"title\";s:6:\"Schema\";s:4:\"type\";s:6:\"object\";}s:6:\"Status\";O:8:\"stdClass\":3:{s:4:\"enum\";a:2:{i:0;s:6:\"active\";i:1;s:8:\"inactive\";}s:5:\"title\";s:6:\"Status\";s:4:\"type\";s:6:\"string\";}s:5:\"Style\";O:8:\"stdClass\":3:{s:4:\"enum\";a:3:{i:0;s:8:\"postbody\";i:1;s:5:\"query\";i:2;s:8:\"template\";}s:5:\"title\";s:5:\"Style\";s:4:\"type\";s:6:\"string\";}s:7:\"Trigger\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"channelId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  date the rule was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  date the rule was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:7:\"Trigger\";s:4:\"type\";s:6:\"object\";}s:9:\"Trigger54\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"channelId\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Id
  of channel used by trigger\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"codes\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"Object
  containing named Javascript code sets\";s:4:\"type\";s:6:\"object\";}s:4:\"desc\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Trigger
  description\";s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Hash
  id of channel function used by trigger\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Trigger
  name\";s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"Object
  containing channel-defined trigger parameters\";s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:9:\"channelId\";i:2;s:10:\"functionId\";}s:5:\"title\";s:9:\"Trigger54\";s:4:\"type\";s:6:\"object\";}s:19:\"TriggerFullResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":10:{s:9:\"channelId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"codes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  date the trigger was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Trigger
  description\";s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  date the trigger was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Trigger
  name\";s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:21:\"Trigger_Full_Response\";s:4:\"type\";s:6:\"object\";}s:20:\"TriggerShortResponse\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"channelId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  date the trigger was created\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Trigger
  description\";s:4:\"type\";s:6:\"string\";}s:10:\"functionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"modifiedDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  date the trigger was modified\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Trigger
  name\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Status\";}}s:5:\"title\";s:22:\"Trigger_Short_Response\";s:4:\"type\";s:6:\"object\";}s:4:\"Type\";O:8:\"stdClass\":3:{s:4:\"enum\";a:2:{i:0;s:6:\"action\";i:1;s:7:\"trigger\";}s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";}s:6:\"Type41\";O:8:\"stdClass\":3:{s:4:\"enum\";a:2:{i:0;s:5:\"admin\";i:1;s:5:\"guest\";}s:5:\"title\";s:6:\"Type41\";s:4:\"type\";s:6:\"string\";}s:11:\"UserChannel\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"channelId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:5:\"title\";s:12:\"User_Channel\";s:4:\"type\";s:6:\"object\";}}"
...
