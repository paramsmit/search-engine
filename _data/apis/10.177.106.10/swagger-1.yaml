---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:10:\"Moodle
  App\";}"
host: 10.177.106.10
paths:
  /api/v1/login:
    post:
      tags:
      - login
      summary: Get authorization token.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/lab_comments:
    get:
      tags:
      - laboratory
      summary: Get all lab comments
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      responses:
        200:
          description: success
          schema:
            type: string
    post:
      tags:
      - laboratory
      summary: Add a comment in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Laboratories'
      responses:
        200:
          description: success
        400:
          description: error
        404:
          description: error
  /api/v1/admins:
    get:
      tags:
      - admin
      summary: Get all admins
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      responses:
        200:
          description: success
          schema:
            type: string
        400:
          description: error
    post:
      tags:
      - admin
      summary: Add an admin in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Admin'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/teachers:
    get:
      tags:
      - teacher
      summary: Get all teachers
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      responses:
        200:
          description: success
          schema:
            type: string
        400:
          description: error
    post:
      tags:
      - teacher
      summary: Add a teacher in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/students:
    get:
      tags:
      - student
      summary: Get all students
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      responses:
        200:
          description: success
          schema:
            type: string
        400:
          description: error
    post:
      tags:
      - student
      summary: Add a student in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Student'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/courses:
    get:
      tags:
      - course
      summary: Get all courses
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      - in: query
        name: contains
        schema:
          type: string
        description: Part of the name to be searched for
      responses:
        200:
          description: success
          schema:
            type: string
        400:
          description: error
    post:
      tags:
      - course
      summary: Add a course in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/groups:
    get:
      tags:
      - group
      summary: Get all groups
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      - in: query
        name: contains
        schema:
          type: string
        description: Part of the name to be searched for
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    post:
      tags:
      - group
      summary: Add a group in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/specialties:
    get:
      tags:
      - specialty
      summary: Get all specialties
      produces:
      - application/json
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: Nr. of items to skip before starting to collect results
      - in: query
        name: limit
        schema:
          type: integer
        description: Nr. of items to return
      - in: query
        name: contains
        schema:
          type: string
        description: Part of the name to be searched for
      responses:
        200:
          description: success
          schema:
            type: string
        400:
          description: error
    post:
      tags:
      - specialty
      summary: Add a speciality in the DB.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Specialty'
      responses:
        200:
          description: success
        400:
          description: error
  /api/v1/admins/{id}:
    get:
      tags:
      - admin
      summary: Get an admin by id.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Get the admin by ID.
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    delete:
      tags:
      - admin
      summary: Delete an admin by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the Admin to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        404:
          description: error
    put:
      tags:
      - admin
      summary: Update the data of an admin.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Admin'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Admin not found
        405:
          description: Validation exception
  /api/v1/lab_comments/{id}:
    delete:
      tags:
      - laboratory
      summary: Delete a laboratory comment by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the laboratory comment to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        404:
          description: error
        403:
          description: error
    put:
      tags:
      - laboratory
      summary: Update the comment laboratory.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Laboratories'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Laboratory comment not found
  /api/v1/teachers/{id}:
    get:
      tags:
      - teacher
      summary: Get a teacher
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Get the teacher by ID.
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    delete:
      tags:
      - teacher
      summary: Delete a teacher by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the teacher to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        404:
          description: error
    put:
      tags:
      - teacher
      summary: Update the data of an teacher.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Teacher not found
        405:
          description: Validation exception
  /api/v1/students/{id}:
    get:
      tags:
      - student
      summary: Get a student by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Get the student by ID.
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    delete:
      tags:
      - student
      summary: Delete a student by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the student to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        404:
          description: error
    put:
      tags:
      - student
      summary: Update the data of an student.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Student'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Student not found
        405:
          description: Validation exception
  /api/v1/courses/{id}:
    get:
      tags:
      - course
      summary: Get a course by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Get the course by ID.
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    delete:
      tags:
      - course
      summary: Delete a course by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the course to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        400:
          description: error
    put:
      tags:
      - course
      summary: Update the data of an course.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Course not found
        405:
          description: Validation exception
  /api/v1/groups/{id}:
    get:
      tags:
      - group
      summary: Get a group by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Get the group by ID..
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    delete:
      tags:
      - group
      summary: Delete a group by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the group to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        404:
          description: error
    put:
      tags:
      - group
      summary: Update the data of a group by ID.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Group not found
        405:
          description: Validation exception
  /api/v1/specialties/{id}:
    get:
      tags:
      - specialty
      summary: Get a specialty by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the specialty to be shown
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            type: string
        404:
          description: error
    delete:
      tags:
      - specialty
      summary: Delete a speciality by ID.
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the specialty to be deleted.
        required: true
        type: integer
      responses:
        200:
          description: success
        404:
          description: error
    put:
      tags:
      - specialty
      summary: Update the data of a speciality by ID.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Specialty'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Specialty not found
        405:
          description: Validation exception
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":8:{s:4:\"User\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:5:\"email\";i:1;s:8:\"password\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Admin\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:5:{i:0;s:9:\"firstName\";i:1;s:8:\"lastName\";i:2;s:5:\"email\";i:3;s:8:\"password\";i:4;s:11:\"phoneNumber\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Teacher\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:5:{i:0;s:9:\"firstName\";i:1;s:8:\"lastName\";i:2;s:5:\"email\";i:3;s:8:\"password\";i:4;s:11:\"phoneNumber\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Student\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:6:{i:0;s:9:\"firstName\";i:1;s:8:\"lastName\";i:2;s:5:\"email\";i:3;s:8:\"password\";i:4;s:11:\"phoneNumber\";i:5;s:7:\"idGroup\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"idGroup\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:6:\"Course\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Group\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:11:\"idSpecialty\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"idSpecialty\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:9:\"Specialty\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Laboratories\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:11:\"labReportId\";i:1;s:14:\"teacherComment\";i:2;s:4:\"mark\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"labReportId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:14:\"teacherComment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mark\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}}"
...
