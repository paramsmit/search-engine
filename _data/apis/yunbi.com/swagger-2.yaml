---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":10:{s:11:\"description\";s:54:\"Professional Cloud
  Trading Platform for Digital Assets\";s:5:\"title\";s:5:\"Yunbi\";s:7:\"version\";s:2:\"v2\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:9:\"financial\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:102:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_725256993741660160_LRhoyEy_.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.0.1\";}s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:36:\"https://yunbi.com/api/v2/doc/swagger\";s:7:\"version\";s:3:\"1.2\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:9:\"yunbi.com\";s:6:\"x-tags\";a:2:{i:0;s:7:\"bitcoin\";i:1;s:16:\"digital
  currency\";}s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:5:\"yunbi\";s:4:\"type\";s:7:\"openapi\";}}"
host: yunbi.com
basePath: /api
paths:
  /v2/addresses/{address}.json:
    get:
      operationId: v2.addresses.address.json.get
      parameters:
      - in: path
        name: address
        required: true
        type: string
      responses:
        200:
          description: No response was specified
      summary: Check Deposit Address
      tags:
      - addresses
  /v2/deposit.json:
    get:
      operationId: v2.deposit.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      - in: query
        name: txid
        required: true
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get details of specific deposit.
      tags:
      - deposit
  /v2/deposit_address.json:
    get:
      operationId: v2.deposit_address.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      - description: 'The account to which you want to deposit. Available values:
          cny, btc, eth, pls, note, bts, bitcny, bitusd, bitbtc, yun, nxt, ltc, doge,
          sc, dgd, dcs, dao, etc, amp, 1st, rep, ans, zec, zmc, gnt, gxs, qtum, eos,
          snt, bcc, omg, lun, pay, ven'
        in: query
        name: currency
        required: true
        type: string
      responses:
        200:
          description: No response was specified
      summary: Where to deposit. The address field could be empty when a new address
        is generating (e.g. for bitcoin), you should try again later in that case.
      tags:
      - deposit_address
  /v2/deposits.json:
    get:
      operationId: v2.deposits.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      - description: Currency value contains  cny, btc, eth, pls, note, bts, bitcny,
          bitusd, bitbtc, yun, nxt, ltc, doge, sc, dgd, dcs, dao, etc, amp, 1st, rep,
          ans, zec, zmc, gnt, gxs, qtum, eos, snt, bcc, omg, lun, pay, ven
        in: query
        name: currency
        required: false
        type: string
      - description: Set result limit.
        in: query
        name: limit
        required: false
        type: integer
      - description: State value contains  submitting, cancelled, submitted, rejected,
          accepted, checked, warning
        in: query
        name: state
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get your deposits history.
      tags:
      - deposits
  /v2/depth.json:
    get:
      operationId: v2.depth.json.get
      parameters:
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: Limit the number of returned price levels. Default to 300.
        in: query
        name: limit
        required: false
        type: integer
      responses:
        200:
          description: No response was specified
      summary: Get depth or specified market. Both asks and bids are sorted from highest
        price to lowest.
      tags:
      - depth
  /v2/k.json:
    get:
      operationId: v2.k.json.get
      parameters:
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: Limit the number of returned data points, default to 30.
        in: query
        name: limit
        required: false
        type: integer
      - description: Time period of K line, default to 1. You can choose between 1,
          5, 15, 30, 60, 120, 240, 360, 720, 1440, 4320, 10080
        in: query
        name: period
        required: false
        type: integer
      - description: An integer represents the seconds elapsed since Unix epoch. If
          set, only k-line data after that time will be returned.
        in: query
        name: timestamp
        required: false
        type: integer
      responses:
        200:
          description: No response was specified
      summary: Get OHLC(k line) of specific market.
      tags:
      - k
  /v2/k_with_pending_trades.json:
    get:
      operationId: v2.k_with_pending_trades.json.get
      parameters:
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: The trade id of the first trade you received.
        in: query
        name: trade_id
        required: true
        type: integer
      - description: Limit the number of returned data points, default to 30.
        in: query
        name: limit
        required: false
        type: integer
      - description: Time period of K line, default to 1. You can choose between 1,
          5, 15, 30, 60, 120, 240, 360, 720, 1440, 4320, 10080
        in: query
        name: period
        required: false
        type: integer
      - description: An integer represents the seconds elapsed since Unix epoch. If
          set, only k-line data after that time will be returned.
        in: query
        name: timestamp
        required: false
        type: integer
      responses:
        200:
          description: No response was specified
      summary: Get K data with pending trades, which are the trades not included in
        K data yet, because there's delay between trade generated and processed by
        K data generator.
      tags:
      - k_with_pending_trades
  /v2/markets.json:
    get:
      operationId: v2.markets.json.get
      responses:
        200:
          description: No response was specified
      summary: Get all available markets.
      tags:
      - markets
  /v2/members/me.json:
    get:
      operationId: v2.members.me.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get your profile and accounts info.
      tags:
      - members
  /v2/order.json:
    get:
      operationId: v2.order.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      - description: Unique order id.
        in: query
        name: id
        required: true
        type: integer
      responses:
        200:
          description: No response was specified
      summary: Get information of specified order.
      tags:
      - order
  /v2/order/delete.json:
    post:
      operationId: v2.order.delete.json.post
      parameters:
      - description: Access key.
        in: formData
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: formData
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: formData
        name: signature
        required: true
        type: string
      - description: Unique order id.
        in: formData
        name: id
        required: true
        type: integer
      responses:
        200:
          description: No response was specified
      summary: Cancel an order.
      tags:
      - order
  /v2/order_book.json:
    get:
      operationId: v2.order_book.json.get
      parameters:
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: Limit the number of returned sell orders. Default to 20.
        in: query
        name: asks_limit
        required: false
        type: integer
      - description: Limit the number of returned buy orders. Default to 20.
        in: query
        name: bids_limit
        required: false
        type: integer
      responses:
        200:
          description: No response was specified
      summary: Get the order book of specified market.
      tags:
      - order_book
  /v2/orders.json:
    get:
      operationId: v2.orders.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: Filter order by state. One of 'wait', 'done', or 'cancel'. An
          order in 'wait' is an active order, waiting fullfillment; a 'done' order
          is an order fullfilled; 'cancel' means the order has been cancelled. Default
          to 'wait'.
        in: query
        name: state
        required: false
        type: string
      - description: Limit the number of returned orders, default to 100.
        in: query
        name: limit
        required: false
        type: integer
      - description: Specify the page of paginated results.
        in: query
        name: page
        required: false
        type: integer
      - description: If set, returned orders will be sorted in specific order. One
          of 'asc' or 'desc', default to 'asc'.
        in: query
        name: order_by
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get your orders, results is paginated.
      tags:
      - orders
    post:
      operationId: v2.orders.json.post
      parameters:
      - description: Access key.
        in: formData
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: formData
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: formData
        name: signature
        required: true
        type: string
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: formData
        name: market
        required: true
        type: string
      - description: Either 'sell' or 'buy'.
        in: formData
        name: side
        required: true
        type: string
      - description: The amount user want to sell/buy. An order could be partially
          executed, e.g. an order sell 5 btc can be matched with a buy 3 btc order,
          left 2 btc to be sold; in this case the order's volume would be '5.0', its
          remaining_volume would be '2.0', its executed volume is '3.0'.
        in: formData
        name: volume
        required: true
        type: string
      - description: Price for each unit. e.g. If you want to sell/buy 1 btc at 3000
          CNY, the price is '3000.0'
        in: formData
        name: price
        required: false
        type: string
      - description: Type of order, either 'limit' or 'market'.
        in: formData
        name: ord_type
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Create a Sell/Buy order.
      tags:
      - orders
  /v2/orders/clear.json:
    post:
      operationId: v2.orders.clear.json.post
      parameters:
      - description: Access key.
        in: formData
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: formData
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: formData
        name: signature
        required: true
        type: string
      - description: If present, only sell orders (asks) or buy orders (bids) will
          be canncelled.
        in: formData
        name: side
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Cancel all my orders.
      tags:
      - orders
  /v2/orders/multi.json:
    post:
      operationId: v2.orders.multi.json.post
      parameters:
      - description: Access key.
        in: formData
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: formData
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: formData
        name: signature
        required: true
        type: string
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: formData
        name: market
        required: true
        type: string
      - in: formData
        items:
          type: string
        name: orders
        required: true
        type: array
      - description: Either 'sell' or 'buy'.
        in: formData
        name: orders[side]
        required: true
        type: string
      - description: The amount user want to sell/buy. An order could be partially
          executed, e.g. an order sell 5 btc can be matched with a buy 3 btc order,
          left 2 btc to be sold; in this case the order's volume would be '5.0', its
          remaining_volume would be '2.0', its executed volume is '3.0'.
        in: formData
        name: orders[volume]
        required: true
        type: string
      - description: Price for each unit. e.g. If you want to sell/buy 1 btc at 3000
          CNY, the price is '3000.0'
        in: formData
        name: orders[price]
        required: false
        type: string
      - description: Type of order, either 'limit' or 'market'.
        in: formData
        name: orders[ord_type]
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Create multiple sell/buy orders.
      tags:
      - orders
  /v2/partners/orders/{id}/trades.json:
    get:
      operationId: v2.partners.orders.id.trades.json.get
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: query
        name: access_key_hash
        required: true
        type: string
      responses:
        200:
          description: No response was specified
      tags:
      - partners
  /v2/tickers.json:
    get:
      operationId: v2.tickers.json.get
      responses:
        200:
          description: No response was specified
      summary: Get ticker of all markets.
      tags:
      - tickers
  /v2/tickers/{market}.json:
    get:
      operationId: v2.tickers.market.json.get
      parameters:
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: path
        name: market
        required: true
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get ticker of specific market.
      tags:
      - tickers
  /v2/timestamp.json:
    get:
      operationId: v2.timestamp.json.get
      responses:
        200:
          description: No response was specified
      summary: Get server current time, in seconds since Unix epoch.
      tags:
      - timestamp
  /v2/trades.json:
    get:
      operationId: v2.trades.json.get
      parameters:
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: Limit the number of returned trades. Default to 50.
        in: query
        name: limit
        required: false
        type: integer
      - description: An integer represents the seconds elapsed since Unix epoch. If
          set, only trades executed before the time will be returned.
        in: query
        name: timestamp
        required: false
        type: integer
      - description: Trade id. If set, only trades created after the trade will be
          returned.
        in: query
        name: from
        required: false
        type: integer
      - description: Trade id. If set, only trades created before the trade will be
          returned.
        in: query
        name: to
        required: false
        type: integer
      - description: If set, returned trades will be sorted in specific order. One
          of 'asc' or 'desc', default to 'desc'.
        in: query
        name: order_by
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get recent trades on market, each trade is included only once. Trades
        are sorted in reverse creation order.
      tags:
      - trades
  /v2/trades/my.json:
    get:
      operationId: v2.trades.my.json.get
      parameters:
      - description: Access key.
        in: query
        name: access_key
        required: true
        type: string
      - description: Tonce is an integer represents the milliseconds elapsed since
          Unix epoch.
        in: query
        name: tonce
        required: true
        type: integer
      - description: The signature of your request payload, generated using your secret
          key.
        in: query
        name: signature
        required: true
        type: string
      - description: Unique market id. It's always in the form of xxxyyy, where xxx
          is the base currency code, yyy is the quote currency code, e.g. 'btccny'.
          All available markets can be found at /api/v2/markets.
        in: query
        name: market
        required: true
        type: string
      - description: Limit the number of returned trades. Default to 50.
        in: query
        name: limit
        required: false
        type: integer
      - description: An integer represents the seconds elapsed since Unix epoch. If
          set, only trades executed before the time will be returned.
        in: query
        name: timestamp
        required: false
        type: integer
      - description: Trade id. If set, only trades created after the trade will be
          returned.
        in: query
        name: from
        required: false
        type: integer
      - description: Trade id. If set, only trades created before the trade will be
          returned.
        in: query
        name: to
        required: false
        type: integer
      - description: If set, returned trades will be sorted in specific order. One
          of 'asc' or 'desc', default to 'desc'.
        in: query
        name: order_by
        required: false
        type: string
      responses:
        200:
          description: No response was specified
      summary: Get your executed trades. Trades are sorted in reverse creation order.
      tags:
      - trades
produces:
- application/json
schemes:
- https
...
