---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:11:\"description\";s:17:\"Coding Api \u6587\u6863\";s:5:\"title\";s:14:\"Coding
  Api Doc\";s:7:\"contact\";O:8:\"stdClass\":0:{}s:7:\"license\";O:8:\"stdClass\":0:{}}"
host: coding.net
basePath: /
paths:
  /*/*/git/raw/**:
    get:
      tags:
      - raw
      summary: get
      description: u663eu793au6587u4ef6u7684u539fu59cbu6570u636e
      operationId: getUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
  /api/account/activate:
    post:
      tags:
      - user
      summary: activate
      description: u8d26u6237u6fc0u6d3b
      operationId: doActivateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: email
        in: query
        required: false
        type: string
      - name: key
        in: query
        required: false
        type: string
      - name: password
        in: query
        required: false
        type: string
      - name: confirm_password
        in: query
        required: false
        type: string
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/avatar:
    get:
      tags:
      - user
      summary: avatar
      description: u83b7u53d6u5934u50cf
      operationId: getAvatarUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
    post:
      tags:
      - user
      summary: avatar
      description: u4e0au4f20u8bbeu7f6eu5934u50cf
      operationId: setAvatarUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/account/captcha/{action}:
    get:
      tags:
      - user
      summary: captcha
      description: u68c0u67e5u662fu5426u9700u8981u9a8cu8bc1u7801
      operationId: captchaUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: realRemoteAddress
        description: realRemoteAddress
        required: false
        schema:
          type: string
      - name: action
        in: path
        description: action
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/account/change_notice_setting:
    get:
      tags:
      - user
      summary: change_notice_setting
      description: u4feeu6539u901au77e5u8bbeu7f6e
      operationId: changeNotificationSettingUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: settingType
        in: query
        description: settingType
        required: true
        type: string
      - name: settingContent
        in: query
        description: settingContent
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/account/check:
    get:
      tags:
      - user
      summary: check_email
      description: u68c0u67e5emailu5df2u7ecfu6ce8u518cu8fc7
      operationId: checkUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: key
        in: query
        description: key
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/account/check_two_factor_auth_code:
    post:
      tags:
      - user
      summary: check_two_factor_auth_code
      description: u767bu5f55u65f6u7684u4e24u6b65u9a8cu8bc1
      operationId: checkTwoFactorAuthCodeUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      - name: code
        in: query
        description: code
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/current_user:
    get:
      tags:
      - user
      summary: current_user
      description: u83b7u53d6u5f53u524du767bu9646u7528u6237u4fe1u606f
      operationId: currentUserUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/get_notice_settings:
    get:
      tags:
      - user
      summary: change_notice_setting
      description: u83b7u53d6u901au77e5u8bbeu7f6e
      operationId: getNotificationSettingsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserSettingGroupDTO'
  /api/account/gravatar:
    get:
      tags:
      - user
      summary: gravatar
      description: u83b7u53d6Gravataru5934u50cf
      operationId: getGravatarUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/account/key/{global_key}:
    get:
      tags:
      - user
      summary: get_user_by_global_key
      description: u901au8fc7u4e2au6027u540eu7f00u83b7u53d6u7528u6237u4fe1u606f
      operationId: getUserByGlobalKeyUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/login:
    post:
      tags:
      - user
      summary: login
      description: u767bu5f55
      operationId: doLoginUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: email
        in: query
        required: false
        type: string
      - name: password
        in: query
        required: false
        type: string
      - name: j_captcha
        in: query
        required: false
        type: string
      - name: remember_me
        in: query
        required: false
        type: string
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      - in: body
        name: realRemoteAddress
        description: realRemoteAddress
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/logout:
    post:
      tags:
      - user
      summary: logout
      description: u6ce8u9500u767bu5f55
      operationId: doLogoutUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/account/name/{name}:
    get:
      tags:
      - user
      summary: get_user_by_name
      description: u901au8fc7u6635u79f0u83b7u53d6u7528u6237u4fe1u606f
      operationId: getUserByNameUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: name
        in: path
        description: nameStr
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/projects/pin:
    get:
      tags:
      - project
      summary: pin_project
      description: u83b7u53d6u5e38u7528u9879u76eeu5217u8868
      operationId: getPinProjectsUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
    post:
      tags:
      - project
      summary: pin_project
      description: u8bbeu7f6eu5e38u7528u9879u76ee
      operationId: pinProjectUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
    delete:
      tags:
      - project
      summary: pin_project
      description: u53d6u6d88u5e38u7528u9879u76ee
      operationId: cancelPinProjectUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/account/register:
    post:
      tags:
      - user
      summary: register
      description: u6ce8u518c
      operationId: doRegisterUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: email
        in: query
        required: false
        type: string
      - name: global_key
        in: query
        required: false
        type: string
      - name: j_captcha
        in: query
        required: false
        type: string
      - in: body
        name: realRemoteAddress
        description: realRemoteAddress
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/update_info:
    post:
      tags:
      - user
      summary: avatar
      description: u66f4u65b0u7528u6237u4fe1u606f
      operationId: updateInfoUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      - name: tags
        in: query
        required: false
        type: string
      - name: name
        in: query
        required: false
        type: string
      - name: sex
        in: query
        required: false
        type: string
      - name: phone
        in: query
        required: false
        type: string
      - name: birthday
        in: query
        required: false
        type: string
      - name: location
        in: query
        required: false
        type: string
      - name: company
        in: query
        required: false
        type: string
      - name: slogan
        in: query
        required: false
        type: string
      - name: introduction
        in: query
        required: false
        type: string
      - name: job
        in: query
        required: false
        type: string
      - name: code
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/account/update_pwd:
    post:
      tags:
      - user
      summary: update_pwd
      description: u4feeu6539u7528u6237u5bc6u7801
      operationId: updatePasswordUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      - name: current_password
        in: query
        required: false
        type: string
      - name: password
        in: query
        required: false
        type: string
      - name: confirm_password
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/account/updateavatar:
    post:
      tags:
      - user
      summary: avatar
      description: u66f4u65b0u5934u50cf
      operationId: updateAvatarUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: sid
        description: sid
        required: false
        schema:
          type: string
      - name: avatar
        in: query
        description: avatar
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
  /api/project:
    put:
      tags:
      - project
      summary: update
      description: u66f4u65b0u9879u76eeu4fe1u606f
      operationId: updateUsingPUT_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
      - name: name
        in: query
        required: false
        type: string
      - name: description
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectDTO'
  /api/project/*/task:
    post:
      tags:
      - task
      summary: create
      description: u521bu5efau4efbu52a1
      operationId: createUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: owner_id
        in: query
        required: false
        type: string
      - name: priority
        in: query
        required: false
        type: integer
        format: int32
      - name: deadline
        in: query
        required: false
        type: string
      - name: description
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: labels
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TaskDTO'
  /api/project/*/task/{id}:
    get:
      tags:
      - task
      summary: create
      description: u521bu5efau4efbu52a1
      operationId: getTaskUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: parseDescription
        in: query
        description: parseDescription
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TaskDTO'
    delete:
      tags:
      - task
      summary: delete
      description: u5220u9664u4efbu52a1
      operationId: deleteUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/project/*/tasks/user/{owner}/{status}:
    get:
      tags:
      - task
      summary: list
      description: u5217u51fau67d0u4ebau7684u4efbu52a1u5217u8868
      operationId: listOfOwnerUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: owner
        in: path
        description: user_global_key
        required: true
        type: string
      - name: status
        in: path
        description: status
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      - in: body
        name: key
        description: key
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTaskDTO'
  /api/projects/recommended:
    get:
      tags:
      - project
      summary: recommended_list
      description: u63a8u8350u9879u76eelist
      operationId: recommendedListUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectDTO'
  /api/public/all:
    get:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: publicProjectUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPage'
  /api/social/follow:
    post:
      tags:
      - user
      summary: follow
      description: u5173u6ce8u7528u6237
      operationId: followUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: users
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/followers:
    get:
      tags:
      - user
      summary: follower
      description: u5173u6ce8u6211u7684u7528u6237
      operationId: followersUsingGET_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: page
        description: page
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfUserDTO'
  /api/social/followers/{global_key}:
    get:
      tags:
      - user
      summary: follower
      description: u83b7u53d6u5173u6ce8u9ed8u8ba4u7684u7528u6237
      operationId: followersUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: page
        description: page
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfUserDTO'
  /api/social/friends:
    get:
      tags:
      - user
      summary: friends
      description: u6211u5173u6ce8u7684u7528u6237u5217u8868
      operationId: friendsUsingGET_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: page
        description: page
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfUserDTO'
  /api/social/friends/{global_key}:
    get:
      tags:
      - user
      summary: friends
      description: u6307u5b9au7528u6237u7684u5173u6ce8u5217u8868
      operationId: friendsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: page
        description: page
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfUserDTO'
  /api/social/relationship/{global_key}:
    get:
      tags:
      - user
      summary: relationship
      description: u662fu5426u5173u6ce8u4e86u8be5u7528u6237
      operationId: relationshipUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/relationships:
    get:
      tags:
      - user
      summary: change_notice_setting
      description: u83b7u53d6u6211u5173u6ce8u548cu5173u6ce8u6211u7684u7528u6237u5217u8868
      operationId: getRelationshipUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserFollowDTO'
  /api/social/relationships/all:
    get:
      tags:
      - user
      summary: change_notice_setting
      description: u83b7u53d6u6211u5173u6ce8u548cu5173u6ce8u6211u7684u7528u6237u5217u8868u5305u542bu6210u5458u5217u8868
      operationId: getRelationshipWithProjectMemberUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: project_id
        in: query
        description: project_id
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
  /api/social/search:
    get:
      tags:
      - user
      summary: search
      description: u641cu7d22u7528u6237
      operationId: searchUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: key
        in: query
        description: key
        required: true
        type: string
      - in: body
        name: page
        description: page
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
  /api/social/tweet:
    post:
      tags:
      - tweet
      summary: create
      description: u53d1u9001u5192u6ce1
      operationId: createUsingPOST_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: device
        in: query
        required: false
        type: string
      - name: location
        in: query
        required: false
        type: string
      - name: coord
        in: query
        required: false
        type: string
      - name: address
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TweetDTO'
  /api/social/tweet/best_user:
    get:
      tags:
      - tweet
      summary: best_user
      description: u70edu95e8u7528u6237
      operationId: bestUserUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
  /api/social/tweet/comment/{id}:
    get:
      tags:
      - tweet
      summary: comment
      description: u83b7u53d6u67d0u4e2au8bc4u8bba
      operationId: query_a_commentUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TweetCommentDTO'
  /api/social/tweet/insert_image:
    post:
      tags:
      - tweet
      summary: image
      description: u5192u6ce1u63d2u5165u56feu7247
      operationId: insert_imageUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/social/tweet/last:
    get:
      tags:
      - tweet
      summary: last_tweet_list
      description: u67e5u8be2last_idu4ee5u540eu7684u6700u65b0u5192u6ce1
      operationId: lastTweetUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: default_like_count
        in: query
        description: default_like_count
        required: false
        type: integer
        format: int32
      - name: last_id
        in: query
        description: last_id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TweetDTO'
  /api/social/tweet/public_tweets:
    get:
      tags:
      - tweet
      summary: list
      description: u5192u6ce1u5217u8868
      operationId: public_tweetsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        description: sort
        required: false
        type: string
      - name: last_id
        in: query
        description: last_id
        required: false
        type: integer
        format: int32
      - name: default_like_count
        in: query
        description: default_like_count
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        description: filter
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TweetDTO'
  /api/social/tweet/user_public:
    get:
      tags:
      - tweet
      summary: user_public
      description: u7528u6237u5192u6ce1u5217u8868
      operationId: user_publicUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: last_id
        in: query
        description: last_id
        required: false
        type: integer
        format: int32
      - name: user_id
        in: query
        description: user_id
        required: false
        type: integer
        format: int32
      - name: global_key
        in: query
        description: global_key
        required: false
        type: string
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: default_like_count
        in: query
        description: default_like_count
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TweetDTO'
  /api/social/tweet/{global_key}/{tweet_id}:
    get:
      tags:
      - tweet
      summary: detail
      description: u83b7u53d6u5192u6ce1u8be6u60c5
      operationId: detailUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tweet_id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - name: default_like_count
        in: query
        description: default_like_count
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TweetDTO'
  /api/social/tweet/{id}/comment:
    post:
      tags:
      - tweet
      summary: comment
      description: u5192u6ce1u8bc4u8bba
      operationId: commentUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: tweetId
        required: true
        type: integer
        format: int32
      - name: content
        in: query
        required: false
        type: string
      - name: afterFilter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TweetCommentDTO'
  /api/social/tweet/{id}/comment/{comment_id}:
    delete:
      tags:
      - tweet
      summary: comment
      description: u5220u9664u5192u6ce1u8bc4u8bba
      operationId: delete_commentUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: comment
        in: path
        description: commentId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/tweet/{id}/comments:
    get:
      tags:
      - tweet
      summary: comment
      description: u83b7u53d6u5192u6ce1u8bc4u8bbau5217u8868
      operationId: query_commentUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: tweetId
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTweetCommentDTO'
  /api/social/tweet/{tweet_id}:
    delete:
      tags:
      - tweet
      summary: delete
      description: u5220u9664u5192u6ce1
      operationId: deleteTweetUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tweet_id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/tweet/{tweet_id}/like:
    post:
      tags:
      - tweet
      summary: like
      description: u5192u6ce1u70b9u8d5e
      operationId: like_tweetUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tweet_id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/tweet/{tweet_id}/tweetlike:
    get:
      tags:
      - tweet
      summary: like_tweet_list
      description: u8d5eu8fc7u7684u5192u6ce1u5217u8868
      operationId: getTweetLikeUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tweet_id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTweetLike'
  /api/social/tweet/{tweet_id}/unlike:
    post:
      tags:
      - tweet
      summary: unlike
      description: u5192u6ce1u53d6u6d88u70b9u8d5e
      operationId: unlike_tweetUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tweet_id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/unfollow:
    post:
      tags:
      - user
      summary: unfollow
      description: u53d6u6d88u5173u6ce8
      operationId: unfollowUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: users
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/social/unread_count:
    get:
      tags:
      - user
      summary: unread_count
      description: u672au8bfbu6d88u606fu901au77e5
      operationId: unreadCountUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Number'
  /api/task/creating:
    get:
      tags:
      - task
      summary: create
      description: u5168u5c40u4efbu52a1u521bu5efa
      operationId: taskCreatingUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project:
    post:
      tags:
      - project
      summary: create_project
      description: u521bu5efau9879u76ee
      operationId: createProjectUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*:
    get:
      tags:
      - project
      summary: query_by_name
      description: u901au8fc7u540du79f0u67e5u8be2
      operationId: queryByNameUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectDTO'
    delete:
      tags:
      - project
      summary: delete_project
      description: u5220u9664u9879u76ee
      operationId: deleteProjectUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: integer
            format: int32
  /api/user/*/project/*/dir/{dir}/files/existed:
    get:
      tags:
      - file
      summary: check_existed
      description: u68c0u67e5u76eeu5f55u4e0bu662fu5426u6709u540cu540du7684u6587u4ef6
      operationId: checkExistedUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: dir
        in: path
        description: folderId
        required: true
        type: integer
        format: int32
      - in: body
        name: names
        description: names
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/file/history/upload:
    post:
      tags:
      - file
      summary: upload_new_version
      description: u4e0au4f20u6587u4ef6u65b0u7248u672c
      operationId: uploadFileHistoryUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/files:
    delete:
      tags:
      - file
      summary: view
      description: u5220u9664u6587u4ef6
      operationId: deleteFilesUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: fileIds
        description: fileIds
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          schema:
            type: integer
            format: int32
  /api/user/*/project/*/files/histories/{id}:
    delete:
      tags:
      - file
      summary: history
      description: u5220u9664u6587u4ef6u5386u53f2
      operationId: deleteFileHistoryUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/files/histories/{id}/download:
    get:
      tags:
      - file
      summary: download
      description: u4e0bu8f7du5386u53f2u6587u4ef6u7248u672c
      operationId: downloadHistoryUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: historyId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: string
  /api/user/*/project/*/files/upload:
    post:
      tags:
      - file
      summary: upload
      description: u4e0au4f20u79c1u6709u9879u76eeu7684u56feu7247
      operationId: uploadFileUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FileDTO'
  /api/user/*/project/*/files/{fileID}/edit:
    post:
      tags:
      - file
      summary: edit
      description: u7f16u8f91u6587u4ef6
      operationId: editFileUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: fileId
        in: path
        description: fileId
        required: true
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: fileId
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/files/{fileId}/download:
    get:
      tags:
      - file
      summary: download
      description: u6587u4ef6u4e0bu8f7d
      operationId: downloadFileUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: fileId
        in: path
        description: fileId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: string
  /api/user/*/project/*/files/{fileId}/download/url:
    get:
      tags:
      - file
      summary: download
      description: u6587u4ef6u4e0bu8f7dURL
      operationId: downloadURLUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: fileId
        in: path
        description: fileId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/files/{fileId}/view:
    get:
      tags:
      - file
      summary: view
      description: u67e5u770bu6587u4ef6
      operationId: viewFileUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: integer
        format: int32
      - name: width
        in: query
        description: width
        required: false
        type: integer
        format: int32
      - name: height
        in: query
        description: height
        required: false
        type: integer
        format: int32
      - name: fileId
        in: path
        description: fileId
        required: true
        type: integer
        format: int32
      - name: flag
        in: query
        description: flag
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/files/{fileId}/view/image:
    get:
      tags:
      - file
      summary: preview
      description: u56feu7247u9884u89c8
      operationId: imagePreviewUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: integer
        format: int32
      - name: width
        in: query
        description: width
        required: false
        type: integer
        format: int32
      - name: height
        in: query
        description: height
        required: false
        type: integer
        format: int32
      - name: fileId
        in: path
        description: fileId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: string
  /api/user/*/project/*/files/{file_id}/histories/{history_id}/remark:
    post:
      tags:
      - file
      summary: update_file_remark
      description: u4feeu6539u5386u53f2u7248u672cu5907u6ce8
      operationId: updateFileHistoryRemarkUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: remark
        in: query
        description: remark
        required: true
        type: string
      - name: history_id
        in: path
        description: historyId
        required: true
        type: integer
        format: int32
      - name: file_id
        in: path
        description: file_id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/files/{folderId}/files:
    post:
      tags:
      - file
      summary: create
      description: u521bu5efau6587u4ef6
      operationId: createFileUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: folderId
        in: path
        description: folderId
        required: true
        type: integer
        format: int32
      - name: projectFile.deleted_at
        in: query
        required: false
        type: string
      - name: projectFile.projects_id
        in: query
        required: false
        type: integer
        format: int32
      - name: projectFile.files_id
        in: query
        required: false
        type: integer
        format: int32
      - name: projectFile.comments
        in: query
        required: false
        type: integer
        format: int32
      - name: projectFile.id
        in: query
        required: false
        type: integer
        format: int32
      - name: folder.owner_id
        in: query
        required: false
        type: integer
        format: int32
      - name: folder.parent_id
        in: query
        required: false
        type: integer
        format: int32
      - name: folder.created_at
        in: query
        required: false
        type: ref
      - name: folder.updated_at
        in: query
        required: false
        type: ref
      - name: folder.type
        in: query
        required: false
        type: integer
        format: int32
      - name: folder.size
        in: query
        required: false
        type: integer
        format: int32
      - name: folder.name
        in: query
        required: false
        type: string
      - name: folder.storage_type
        in: query
        required: false
        type: string
      - name: folder.storage_key
        in: query
        required: false
        type: string
      - name: folder.history_id
        in: query
        required: false
        type: integer
        format: int32
      - name: folder.id
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: folderId
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/files/{id}/histories:
    get:
      tags:
      - file
      summary: history
      description: u6587u4ef6u5386u53f2
      operationId: listFileHistoryUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FileHistoryDTO'
  /api/user/*/project/*/folder:
    post:
      tags:
      - file
      summary: mkdir
      description: u521bu5efau6587u4ef6u5939
      operationId: mkdirUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        required: false
        type: string
      - name: parentId
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DirDTO'
    delete:
      tags:
      - file
      summary: mkdir
      description: u5220u9664u6587u4ef6u5939
      operationId: rmdirUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: dir
        in: path
        description: folderId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/folder/{dirId}/move:
    put:
      tags:
      - file
      summary: move
      description: u79fbu52a8u6587u4ef6
      operationId: moveUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: dirId
        in: path
        description: dirId
        required: true
        type: integer
        format: int32
      - name: fileId
        in: query
        required: false
        type: ref
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/folder/{dir}:
    put:
      tags:
      - file
      summary: rename_folder
      description: u91cdu547du540du6587u4ef6u5939
      operationId: renameFolderUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: dir
        in: path
        description: folderId
        required: true
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/folder/{dir}/files:
    get:
      tags:
      - file
      summary: files
      description: u5217u51fau67d0u76eeu5f55u4e0bu7684u6587u4ef6
      operationId: listFileUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: dir
        in: path
        description: folderId
        required: true
        type: integer
        format: int32
      - name: type
        in: query
        description: type
        required: false
        type: integer
        format: int32
      - name: width
        in: query
        description: width
        required: false
        type: integer
        format: int32
      - name: height
        in: query
        description: height
        required: false
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfFileDTO'
  /api/user/*/project/*/folders:
    get:
      tags:
      - file
      summary: folders
      description: u5217u51fau6240u6709u4e00u7ea7u76eeu5f55
      operationId: listFolderUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfDirDTO'
  /api/user/*/project/*/folders/all:
    get:
      tags:
      - file
      summary: folders
      description: u5217u51fau6240u6709u76eeu5f55
      operationId: listAllFolderUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfDirDTO'
  /api/user/*/project/*/folders/file_count/all:
    get:
      tags:
      - file
      summary: count
      description: u83b7u53d6u6587u4ef6u5939u7684u6587u4ef6u6570
      operationId: allFolderFileCountUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderFileCount'
  /api/user/*/project/*/git:
    get:
      tags:
      - depot
      summary: get
      description: u83b7u53d6u4ed3u5e93u4fe1u606f
      operationId: indexUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/DepotDTO'
  /api/user/*/project/*/git/blob/**:
    get:
      tags:
      - blob
      summary: get
      description: u83b7u53d6 blob
      operationId: blobUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Serializable'
  /api/user/*/project/*/git/branch/default:
    post:
      tags:
      - branch
      summary: default
      description: u8bbeu7f6eu9ed8u8ba4u5206u652f
      operationId: setDefaultBranchUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: default_branch
        in: query
        description: branch_name
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/branches:
    get:
      tags:
      - branch
      summary: list_branches
      description: u5206u9875u663eu793au5206u652fu5217u8868
      operationId: listUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPage'
  /api/user/*/project/*/git/branches/create:
    post:
      tags:
      - branch
      summary: create
      description: u65b0u5efau5206u652f
      operationId: createBranchUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      - name: start_point
        in: query
        description: start_point
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/branches/delete:
    post:
      tags:
      - branch
      summary: delete
      description: u5220u9664u5206u652f
      operationId: deleteBranchUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/branches/protected_branch/add_member:
    post:
      tags:
      - branch
      summary: add_member
      description: u6dfbu52a0u4fddu62a4u5206u652fu6210u5458
      operationId: addProtectedBranchMemberUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      - name: target_global_key
        in: query
        description: target_global_key
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/branches/protected_branch/disable:
    post:
      tags:
      - branch
      summary: protected_branch
      description: u53d6u6d88u4fddu62a4u5206u652f
      operationId: disableProtectedBranchUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/branches/protected_branch/enable:
    post:
      tags:
      - branch
      summary: protected_branch
      description: u8bbeu7f6eu4fddu62a4u5206u652f
      operationId: enableProtectedBranchUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/branches/protected_branch/members:
    get:
      tags:
      - branch
      summary: members
      description: u5217u51fau4fddu62a4u5206u652fu4e2du7684u6210u5458
      operationId: listProtectedBranchMemberUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/branches/protected_branch/remove_member:
    post:
      tags:
      - branch
      summary: delete_member
      description: u5220u9664u4fddu62a4u5206u652fu6210u5458
      operationId: removeProtectedBranchMemberUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: branch_name
        in: query
        description: branch_name
        required: true
        type: string
      - name: target_global_key
        in: query
        description: target_global_key
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/commit/**:
    get:
      tags:
      - commit
      summary: show
      description: commit u5217u8868
      operationId: showUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - name: diff
        in: query
        description: diff
        required: false
        type: string
      - name: w
        in: query
        description: w
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/git/commits/**:
    get:
      tags:
      - history
      summary: get
      description: u83b7u53d6u4ee3u7801u7684u5386u53f2
      operationId: historyUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Serializable'
  /api/user/*/project/*/git/delete/**:
    get:
      tags:
      - repo_file
      summary: delete
      description: u5220u9664u6587u4ef6
      operationId: delete_fileUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Serializable'
  /api/user/*/project/*/git/edit/**:
    get:
      tags:
      - repo_file
      summary: update
      description: u66f4u65b0u6587u4ef6
      operationId: edit_fileUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Serializable'
  /api/user/*/project/*/git/fork:
    post:
      tags:
      - depot
      summary: fork
      description: fork
      operationId: forkUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DepotDTO'
  /api/user/*/project/*/git/forks:
    get:
      tags:
      - depot
      summary: fork_list
      description: u9879u76eeu88abforku7684u5217u8868
      operationId: forksUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DepotDTO'
  /api/user/*/project/*/git/hook:
    post:
      tags:
      - depot
      summary: create_webhook
      description: u521bu5efa webhook
      operationId: createWebHookUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: hook_url
        in: query
        required: false
        type: string
      - name: token
        in: query
        required: false
        type: string
      - name: type_push
        in: query
        required: false
        type: boolean
      - name: type_mr_pr
        in: query
        required: false
        type: boolean
      - name: type_topic
        in: query
        required: false
        type: boolean
      - name: type_member
        in: query
        required: false
        type: boolean
      - name: type_comment
        in: query
        required: false
        type: boolean
      - name: type_document
        in: query
        required: false
        type: boolean
      - name: type_watch
        in: query
        required: false
        type: boolean
      - name: type_star
        in: query
        required: false
        type: boolean
      - name: type_task
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/hook/{id}:
    get:
      tags:
      - depot
      summary: get_webhook
      description: u83b7u53d6 webhook
      operationId: getWebHookUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebHook'
    put:
      tags:
      - depot
      summary: update_webhook
      description: u7f16u8f91 webhook
      operationId: editWebHookUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: hook_url
        in: query
        required: false
        type: string
      - name: token
        in: query
        required: false
        type: string
      - name: type_push
        in: query
        required: false
        type: boolean
      - name: type_mr_pr
        in: query
        required: false
        type: boolean
      - name: type_topic
        in: query
        required: false
        type: boolean
      - name: type_member
        in: query
        required: false
        type: boolean
      - name: type_comment
        in: query
        required: false
        type: boolean
      - name: type_document
        in: query
        required: false
        type: boolean
      - name: type_watch
        in: query
        required: false
        type: boolean
      - name: type_star
        in: query
        required: false
        type: boolean
      - name: type_task
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: boolean
    delete:
      tags:
      - depot
      summary: delete_webhook
      description: u5220u9664 webhook
      operationId: deleteWebHookUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/hooks:
    get:
      tags:
      - depot
      summary: list
      description: u5217u51fau9879u76eeu8bbeu7f6eu7684 webhook
      operationId: listWebHookUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/WebHook'
  /api/user/*/project/*/git/import:
    get:
      tags:
      - depot
      summary: import_repo
      description: u5bfcu5165u4ed3u5e93
      operationId: importRepoUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: origin_url
        in: query
        description: origin_url
        required: true
        type: string
      - name: vcs_type
        in: query
        description: vcs_type
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
    post:
      tags:
      - depot
      summary: import_repo
      description: u5bfcu5165u4ed3u5e93
      operationId: importRepoUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: origin_url
        in: query
        description: origin_url
        required: true
        type: string
      - name: vcs_type
        in: query
        description: vcs_type
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/init:
    post:
      tags:
      - depot
      summary: init_depot
      description: u521du59cbu5316u4ed3u5e93
      operationId: initDepotUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: type
        in: query
        required: false
        type: string
      - name: gitReadmeEnabled
        in: query
        required: false
        type: string
      - name: gitIgnore
        in: query
        required: false
        type: string
      - name: gitLicense
        in: query
        required: false
        type: string
      - name: importFrom
        in: query
        required: false
        type: string
      - name: vcsType
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/merge:
    post:
      tags:
      - merge_request
      summary: create
      description: u521bu5efa MergeRequest
      operationId: do_createUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: srcBranch
        in: query
        required: false
        type: string
      - name: desBranch
        in: query
        required: false
        type: string
      - name: title
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: reviewers
        in: query
        required: false
        type: string
      - name: tasks
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/git/merge/{iid}:
    get:
      tags:
      - merge_request
      summary: get
      description: u663eu793au67d0u4e2a MergeRequest
      operationId: showUsingGET_2
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      - name: diff
        in: query
        description: diff
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
    put:
      tags:
      - merge_request
      summary: update
      description: u66f4u65b0u67d0u4e2a MergeRequest
      operationId: updateUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      - name: srcBranch
        in: query
        required: false
        type: string
      - name: desBranch
        in: query
        required: false
        type: string
      - name: title
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: reviewers
        in: query
        required: false
        type: string
      - name: tasks
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/merge/{iid}/cancel:
    post:
      tags:
      - merge_request
      summary: cancel
      description: u53d6u6d88 MergeRequest
      operationId: cancelUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/merge/{iid}/merge:
    post:
      tags:
      - merge_request
      summary: merge
      description: u5408u5e76u67d0u4e2a MergeRequest
      operationId: mergeUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      - name: message
        in: query
        description: message
        required: false
        type: string
      - name: del_source_branch
        in: query
        description: del_source_branch
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MergeRequestDetailDTO'
  /api/user/*/project/*/git/merge/{iid}/refuse:
    post:
      tags:
      - merge_request
      summary: refuse
      description: u62d2u7eddu67d0u4e2a MergeRequest
      operationId: refuseUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MergeRequestDetailDTO'
  /api/user/*/project/*/git/merges/{status}:
    get:
      tags:
      - merge_request
      summary: list
      description: MergeRequest u5217u8868
      operationId: listUsingGET_2
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: status
        in: path
        description: filter
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfMergeRequestDTO'
  /api/user/*/project/*/git/new/**:
    get:
      tags:
      - repo_file
      summary: create
      description: u65b0u5efau6587u4ef6
      operationId: create_fileUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              type: string
  /api/user/*/project/*/git/pull/create:
    get:
      tags:
      - pull_request
      summary: create
      description: u521bu5efa PullRequest
      operationId: createUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: src_branch
        in: query
        description: src_branch
        required: false
        type: string
      - name: des_user_name
        in: query
        description: des_user_name
        required: false
        type: string
      - name: des_project_name
        in: query
        description: des_project_name
        required: false
        type: string
      - name: des_branch
        in: query
        description: des_branch
        required: false
        type: string
      - name: diff
        in: query
        description: diff
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/git/pull/{iid}:
    get:
      tags:
      - pull_request
      summary: get
      description: u83b7u53d6u67d0u4e2a PullRequest
      operationId: showUsingGET_3
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      - name: diff
        in: query
        description: diff
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/git/pull/{iid}/cancel:
    post:
      tags:
      - pull_request
      summary: cancle
      description: u53d6u6d88 PullRequest
      operationId: cancelUsingPOST_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/pull/{iid}/comments:
    get:
      tags:
      - pull_request
      summary: comments
      description: PullRequest u8bc4u8bbau5217u8868
      operationId: commentsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/git/pull/{iid}/commits:
    get:
      tags:
      - pull_request
      summary: commits
      description: u83b7u53d6u67d0u4e2a PullRequest u7684u8bc4u8bba
      operationId: showCommitsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CommitDTO'
  /api/user/*/project/*/git/pull/{iid}/merge:
    post:
      tags:
      - pull_request
      summary: merge
      description: u5408u5e76 PullRequest
      operationId: mergeUsingPOST_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      - name: message
        in: query
        description: message
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PullRequestDetailDTO'
  /api/user/*/project/*/git/pull/{iid}/refuse:
    post:
      tags:
      - pull_request
      summary: refuse
      description: u62d2u7edd PullRequest
      operationId: refuseUsingPOST_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: iid
        in: path
        description: iid
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PullRequestDetailDTO'
  /api/user/*/project/*/git/pulls/{status}:
    get:
      tags:
      - pull_request
      summary: list
      description: PullRequest u5217u8868
      operationId: listUsingGET_3
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: status
        in: path
        description: filter
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfPullRequestDTO'
  /api/user/*/project/*/git/tags:
    get:
      tags:
      - tag
      summary: list
      description: u6807u7b7eu5217u8868
      operationId: listUsingGET_4
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfRefDTO'
  /api/user/*/project/*/git/tags/create:
    post:
      tags:
      - tag
      summary: create
      description: u521bu5efau6807u7b7e
      operationId: createTagUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tag_name
        in: query
        description: tag_name
        required: true
        type: string
      - name: tag_point
        in: query
        description: tag_point
        required: false
        type: string
      - name: message
        in: query
        description: message
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/tags/delete:
    post:
      tags:
      - tag
      summary: delete
      description: u5220u9664u6807u7b7e
      operationId: deleteTagUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: tag_name
        in: query
        description: tag_name
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/git/tree/**:
    get:
      tags:
      - tree
      summary: webhook
      description: u76eeu5f55
      operationId: treeUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/project_icon:
    post:
      tags:
      - project
      summary: set_project_icon
      description: u8bbeu7f6eu9879u76eeu56feu6807
      operationId: setProjectIconUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectDTO'
  /api/user/*/project/*/star:
    post:
      tags:
      - project
      summary: star
      description: u6536u85cfu9879u76ee
      operationId: starUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/stared:
    post:
      tags:
      - project
      summary: stared
      description: u9879u76eeu662fu5426u88abu6536u85cf
      operationId: staredUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/task/count:
    get:
      tags:
      - task
      summary: count
      description: u4efbu52a1u7edfu8ba1u4fe1u606f
      operationId: taskCountByUserUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: project_id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserTaskCount'
  /api/user/*/project/*/task/{id}:
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1
      operationId: update4clientUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: status
        in: query
        required: false
        type: integer
        format: int32
      - name: priority
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: owner_id
        in: query
        required: false
        type: integer
        format: int32
      - name: deadline
        in: query
        required: false
        type: string
      - name: description
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/comment:
    post:
      tags:
      - task
      summary: create_comment
      description: u521bu5efau4efbu52a1u8bc4u8bba
      operationId: pubCommentUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - in: body
        name: content
        description: content
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TaskCommentDTO'
  /api/user/*/project/*/task/{id}/comment/{commentId}:
    delete:
      tags:
      - task
      summary: create_comment
      description: u5220u9664u4efbu52a1u8bc4u8bba
      operationId: deleteCommentUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: commentId
        in: path
        description: commentId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/comments:
    get:
      tags:
      - task
      summary: comment
      description: u83b7u53d6u4efbu52a1u8bc4u8bba
      operationId: getCommentsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTaskCommentDTO'
  /api/user/*/project/*/task/{id}/content:
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1u5185u5bb9
      operationId: updateContentUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: content
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/deadline:
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1u622au6b62u65e5u671f
      operationId: updateDeadlineUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: deadline
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/description:
    get:
      tags:
      - task
      summary: watch
      description: u83b7u53d6u4efbu52a1u63cfu8ff0
      operationId: getDescriptionUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1u63cfu8ff0
      operationId: updateDescriptionUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: description
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/task/{id}/label/{labelId}:
    post:
      tags:
      - task
      summary: label
      description: u6dfbu52a0u4efbu52a1u6807u7b7e
      operationId: addTaskLabelUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: taskId
        required: true
        type: integer
        format: int32
      - name: labelId
        in: path
        description: labelId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
    delete:
      tags:
      - task
      summary: watch
      description: u5220u9664u4efbu52a1u6807u7b7e
      operationId: deleteTaskLabelUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: taskId
        required: true
        type: integer
        format: int32
      - name: labelId
        in: path
        description: labelId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/labels:
    post:
      tags:
      - task
      summary: watch
      description: u6279u91cfu64cdu4f5cu4efbu52a1u6807u7b7e
      operationId: operateTaskLabelsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: taskId
        required: true
        type: integer
        format: int32
      - name: label_id
        in: query
        description: labelIdStrs
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/owner:
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1u6267u884cu8005
      operationId: updateOwnerUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: owner_id
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/priority:
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1u4f18u5148u7ea7
      operationId: updatePriorityUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: priority
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/status:
    put:
      tags:
      - task
      summary: update
      description: u4feeu6539u4efbu52a1u72b6u6001
      operationId: updateStatusUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - name: status
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/watch:
    post:
      tags:
      - task
      summary: watch
      description: u5173u6ce8u4efbu52a1
      operationId: watchUsingPOST_2
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
    delete:
      tags:
      - task
      summary: watch
      description: u53d6u6d88u4efbu52a1u5173u6ce8
      operationId: cancleWatchUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/task/{id}/watchers:
    get:
      tags:
      - task
      summary: get_task_list_by_label
      description: u5173u6ce8u8be5u4efbu52a1u7684u7528u6237
      operationId: pageTaskWatchersUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: taskId
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfUserDTO'
  /api/user/*/project/*/tasks/count:
    get:
      tags:
      - task
      summary: count
      description: ' u83b7u53d6u5f53u524du7528u6237u9879u76eeu7684u5df2u5b8cu6210u3001u6b63u5728u8fdbu884cu7684u3001u5173u6ce8u7684u6570u503c'
      operationId: userTasksCountUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int64
  /api/user/*/project/*/tasks/count_all:
    get:
      tags:
      - task
      summary: count
      description: u7edfu8ba1u6240u6709 u5df2u5b8cu6210 u548c u6b63u5728u5904u7406
        u7684u4efbu52a1u6570
      operationId: userTasksCountInProjectUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserProjectCount'
  /api/user/*/project/*/tasks/label/{id}:
    get:
      tags:
      - task
      summary: get_task_list_by_label
      description: u67e5u8be2u6807u7b7eu4e0bu7684u4efbu52a1u5217u8868
      operationId: getTaskByLabelUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: labelId
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      - in: body
        name: global_key
        description: global_key
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTaskDTO'
  /api/user/*/project/*/tasks/my/{status}:
    get:
      tags:
      - task
      summary: count
      description: u5217u51fau5f53u524du7528u6237u67d0u9879u76eeu67d0u72b6u6001u7684u4efbu52a1u5217u8868
      operationId: userTasksOfProjectUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: status
        in: path
        description: status
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTaskDTO'
  /api/user/*/project/*/tasks/{status}:
    get:
      tags:
      - task
      summary: list
      description: u4efbu52a1u5217u8868
      operationId: listUsingGET_5
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: status
        in: path
        description: status
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      - in: body
        name: key
        description: key
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfTaskDTO'
  /api/user/*/project/*/topics:
    post:
      tags:
      - project_topic
      summary: create
      description: u521bu5efau8ba8u8bba/u53d1u8868u8bc4u8bba
      operationId: createProjectTopicUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: parent
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: label
        in: query
        required: false
        type: string
      - name: type
        in: query
        description: type
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectTopicDTO'
  /api/user/*/project/*/topics/count:
    get:
      tags:
      - project_topic
      summary: count
      description: u6240u6709u8ba8u8bbau7684u4e2au6570u548cu6211u7684u8ba8u8bbau7684u4e2au6570
      operationId: topicCountUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/*/project/*/topics/label/{id}:
    get:
      tags:
      - project_topic
      summary: get_project_topic_by_label
      description: u901au8fc7u6807u7b7eu83b7u5f97u8ba8u8bbau5217u8868
      operationId: getProjectTopicByLabelUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: labelId
        required: true
        type: integer
        format: int32
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectTopicDTO'
  /api/user/*/project/*/topics/labels/my:
    get:
      tags:
      - project_topic
      summary: count
      description: u6240u6709u8ba8u8bbau7684u4e2au6570u548cu6211u7684u8ba8u8bbau7684u4e2au6570
      operationId: getMyLabelByProjectUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectLabelDTO'
  /api/user/*/project/*/topics/mine:
    get:
      tags:
      - project_topic
      summary: list
      description: u6211u7684u8ba8u8bba
      operationId: myProjectTopicListUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectTopicDTO'
  /api/user/*/project/*/topics/watching:
    get:
      tags:
      - project_topic
      summary: watched_project_topic_list
      description: u83b7u53d6u6211u5173u6ce8u7684u8ba8u8bbau5217u8868
      operationId: myWatchingProjectTopicsUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectTopicDTO'
  /api/user/*/project/*/topics/{id}:
    get:
      tags:
      - project_topic
      summary: detail
      description: u8ba8u8bbau8be6u60c5
      operationId: projectTopicDetailUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: projectTopicId
        required: true
        type: integer
        format: int32
      - name: type
        in: query
        description: type
        required: false
        type: integer
        format: int32
      - name: toc
        in: query
        description: toc
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectTopicDTO'
    put:
      tags:
      - project_topic
      summary: update
      description: u66f4u65b0u8ba8u8bba
      operationId: updateProjectTopicUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: topic_id
        required: true
        type: integer
        format: int32
      - name: topic_id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      - name: label
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectTopicDTO'
    delete:
      tags:
      - project_topic
      summary: delete
      description: u5220u9664u8ba8u8bba/u5220u9664u8ba8u8bbau8bc4u8bba
      operationId: deleteProjectTopicUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: topic_id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/topics/{id}/comments:
    get:
      tags:
      - project_topic
      summary: comments
      description: u8ba8u8bbau8bc4u8bbau5217u8868
      operationId: projectTopicCommentsUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: projectTopicId
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      - name: type
        in: query
        description: type
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectTopicDTO'
  /api/user/*/project/*/topics/{id}/label/{labelId}:
    post:
      tags:
      - project_topic
      summary: add_topic_label
      description: u8ba8u8bbau6dfbu52a0u6807u7b7e
      operationId: addTopicLabelUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: projectTopicId
        required: true
        type: integer
        format: int32
      - name: labelId
        in: path
        description: labelId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
    delete:
      tags:
      - project_topic
      summary: delete_topic_label
      description: u5220u9664u8ba8u8bbau6807u7b7e
      operationId: deleteTopicLabelUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: projectTopicId
        required: true
        type: integer
        format: int32
      - name: labelId
        in: path
        description: labelId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/topics/{id}/labels:
    post:
      tags:
      - project_topic
      summary: operate_topic_label
      description: u6279u91cfu64cdu4f5cu8ba8u8bbau6807u7b7e
      operationId: operateTopicLabelsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: projectTopicId
        required: true
        type: integer
        format: int32
      - name: label_id
        in: query
        description: labelIdStrs
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/topics/{id}/watch:
    post:
      tags:
      - project_topic
      summary: watch
      description: u5173u6ce8u8ba8u8bba
      operationId: watchUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/topics/{id}/watchers:
    get:
      tags:
      - project_topic
      summary: watchers
      description: u83b7u53d6u5173u6ce8u8be5u8ba8u8bbau7684u7528u6237
      operationId: getTopicWatchersUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfUserDTO'
  /api/user/*/project/*/unstar:
    post:
      tags:
      - project
      summary: unstar
      description: u9879u76eeu53d6u6d88u6536u85cf
      operationId: unstarUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/unwatch:
    post:
      tags:
      - project
      summary: unwatch
      description: u9879u76eeu53d6u6d88u5173u6ce8
      operationId: unwatchUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/update_visit:
    get:
      tags:
      - project
      summary: visit_project
      description: u66f4u65b0u9879u76eeu9605u8bfbu65f6u95f4
      operationId: visitProjectUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/*/project/*/watch:
    post:
      tags:
      - project
      summary: watch
      description: u5173u6ce8u9879u76ee
      operationId: watchUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/watched:
    post:
      tags:
      - project
      summary: watched
      description: u9879u76eeu662fu5426u88abu5173u6ce8
      operationId: watchedUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Result'
  /api/user/*/project/*/watchers:
    get:
      tags:
      - project
      summary: watched
      description: u9879u76eeu5173u6ce8u8005
      operationId: watchersUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
  /api/user/*/project/topics:
    get:
      tags:
      - project_topic
      summary: list
      description: u9879u76eeu8ba8u8bbau5217u8868
      operationId: projectTopicListUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: integer
        format: int32
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectTopicDTO'
  /api/user/*/projects/tasks/all/{status}:
    get:
      tags:
      - task
      summary: count
      description: u5f53u524du7528u6237u67d0u72b6u6001u7684u4efbu52a1u5217u8868
      operationId: userTasksUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: status
        in: path
        description: status
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TaskPageDTO'
  /api/user/projects:
    get:
      tags:
      - project
      summary: project_list
      description: u6211u7684u9879u76eeu5217u8868
      operationId: project_listUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: sort
        in: query
        description: sort
        required: false
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
  /api/user/{global_key}/key/{keyId}:
    get:
      tags:
      - key
      summary: get
      description: u901au8fc7KeyIdu83b7u53d6u4e2au4ebau516cu94a5
      operationId: showUsingGET_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: keyId
        in: path
        description: keyId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/KeyDTO'
    delete:
      tags:
      - key
      summary: webhook
      description: u5220u9664u4e2au4ebau516cu94a5
      operationId: deleteKeyUsingDELETE
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: keyId
        in: path
        description: keyId
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/{global_key}/keys:
    get:
      tags:
      - key
      summary: list
      description: u5217u51fau4e2au4ebau516cu94a5
      operationId: listUsingGET_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: withIDEKey
        in: query
        description: withIDEKey
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyDTO'
    post:
      tags:
      - key
      summary: create
      description: u521bu5efau4e2au4ebau516cu94a5
      operationId: saveUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: title
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/KeyDTO'
  /api/user/{global_key}/project/*/git/bind_deploy_key/{id}:
    post:
      tags:
      - key
      summary: webhook
      description: u7ed1u5b9au90e8u7f72u516cu94a5
      operationId: bindDeployKeyUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: keyId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/{global_key}/project/*/git/deploy_key:
    post:
      tags:
      - key
      summary: webhook
      description: u65b0u5efau90e8u7f72u516cu94a5
      operationId: saveDeployKeyUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: title
        in: query
        required: false
        type: string
      - name: content
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/KeyDTO'
  /api/user/{global_key}/project/*/git/deploy_keys:
    get:
      tags:
      - key
      summary: list
      description: u5217u51fau90e8u7f72u516cu94a5
      operationId: listDeployKeysUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: object
  /api/user/{global_key}/project/*/git/unbind_deploy_key/{id}:
    post:
      tags:
      - key
      summary: webhook
      description: u89e3u7ed1u90e8u7f72u516cu94a5
      operationId: unBindDeployKeyUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: keyId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: boolean
  /api/user/{global_key}/projects/public:
    get:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: public_projectsUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
    post:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: public_projectsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
    put:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: public_projectsUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
    delete:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: public_projectsUsingDELETE
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
    options:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: public_projectsUsingOPTIONS
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
    patch:
      tags:
      - project
      summary: public_projects
      description: u516cu6709u9879u76eeu5217u8868
      operationId: public_projectsUsingPATCH
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: global_key
        in: path
        description: global_key
        required: true
        type: string
      - in: body
        name: pager
        description: pager
        required: false
        schema:
          $ref: '#/definitions/Pager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResultPageOfProjectDTO'
  /u/*/p/*/git/archive/**:
    get:
      tags:
      - archive
      summary: archive
      description: u6253u5305u4e0bu8f7d
      operationId: _archiveUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
  /u/*/p/*/git/commit/{commitId}}.diff:
    get:
      tags:
      - commit
      summary: diff
      description: u4e0bu8f7d diff
      operationId: _diffUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: commitId
        in: path
        description: commitId
        required: true
        type: string
      responses:
        200:
          description: OK
  /u/*/p/*/git/commit/{commitId}}.patch:
    get:
      tags:
      - commit
      summary: patch
      description: u4e0bu8f7d patch
      operationId: _patchUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: commitId
        in: path
        description: commitId
        required: true
        type: string
      responses:
        200:
          description: OK
  /u/*/p/*/git/raw/**:
    get:
      tags:
      - raw
      summary: get
      description: u663eu793au6587u4ef6u7684u539fu59cbu6570u636e
      operationId: getUsingGET_1
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: ref
        description: ref
        required: false
        schema:
          type: string
      - in: body
        name: path
        description: path
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":54:{s:12:\"Serializable\";O:8:\"stdClass\":0:{}s:19:\"ResultPageOfUserDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:7:\"UserDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":33:{s:6:\"avatar\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"birthday\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"company\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"fans_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"follow\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"followed\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"follows_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"global_key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"gravatar\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"introduction\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"is_member\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:18:\"is_phone_validated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"job\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"job_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"last_activity_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:15:\"last_logined_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"lavatar\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"name_pinyin\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"sex\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"slogan\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"tags\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"tags_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"test\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"tweets_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"updated_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:8:\"DiffStat\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"commitId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"deletions\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"insertions\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"paths\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DiffEntry\";}}}}s:26:\"ResultPageOfPullRequestDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/PullRequestDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:22:\"ResultPageOfProjectDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/ProjectDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:15:\"ProjectLabelDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:6:\"Result\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:3:\"msg\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}s:27:\"ResultPageOfProjectTopicDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ProjectTopicDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:20:\"MapOfstringAndstring\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:18:\"ResultPageOfRefDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/RefDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:13:\"UserFollowDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"relation\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"target_user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:9:\"CommitDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"allMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"commitId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"commitTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"committer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/CommitterDTO\";}s:11:\"fullMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"notesCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"shortMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"UserProjectCount\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"done\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"processing\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"project\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:15:\"MergeRequestDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":14:{s:9:\"action_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"action_author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:13:\"comment_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"desBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"granted\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"granted_by\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:3:\"iid\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"merge_status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"srcBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"DiffEntry\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":28:{s:5:\"blame\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/BlameLine\";}}s:8:\"byteData\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";}}s:10:\"changeType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:3:\"ADD\";i:1;s:6:\"MODIFY\";i:2;s:6:\"DELETE\";i:3;s:6:\"RENAME\";i:4;s:4:\"COPY\";}}s:7:\"charset\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"commitId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"deletions\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"file\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"flatten_path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"image\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"insertions\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"language\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"lastCommit\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Commit\";}s:4:\"mime\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mode\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"modeStr\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"normalizedDiffStat\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/NormalizedDiffStat\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"submodule\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:17:\"submoduleCommitId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"submodulePath\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"submoduleURl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"symlink\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"tree\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:18:\"ResultPageOfDirDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/DirDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:20:\"PullRequestDetailDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":20:{s:9:\"action_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"action_author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:7:\"commits\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CommitDTO\";}}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"desBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"diffStat\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DiffStat\";}s:8:\"htmlDiff\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:3:\"iid\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"merge_status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"merged_sha\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"source_depot\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DepotDTO\";}s:9:\"srcBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"srcExist\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"src_owner_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"src_project_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"BlameLine\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PersonIdent\";}s:8:\"commitId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"fullMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"lineNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"shortMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"when\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:14:\"PullRequestDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":15:{s:9:\"action_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"action_author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"desBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:3:\"iid\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"merge_status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"source_depot\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DepotDTO\";}s:9:\"srcBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"srcExist\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"src_owner_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"src_project_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:15:\"FolderFileCount\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"folder\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:8:\"TimeZone\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"displayName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"rawOffset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:6:\"DirDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":9:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:7:\"file_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"owner_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"sub_folders\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/DirDTO\";}}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"updated_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}}}s:13:\"UserTaskCount\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"done\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"processing\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:11:\"PersonIdent\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"emailAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"timeZone\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/TimeZone\";}s:14:\"timeZoneOffset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"when\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:5:\"Pager\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:14:\"TaskCommentDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"taskId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:8:\"DepotDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":17:{s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:14:\"default_branch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"depot_path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"hasCommits\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"language\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"languages\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"origin_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:6:\"parent\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DepotDTO\";}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"root_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:27:\"ResultPageOfMergeRequestDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/MergeRequestDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:27:\"ResultPageOfTweetCommentDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/TweetCommentDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:10:\"ProjectDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":41:{s:4:\"auto\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:20:\"backend_project_path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"current_user_role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"current_user_role_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:13:\"deploy_memory\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"depot_path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"expired_plan\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"fork_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"forked\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"git_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"groupId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"groupName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"https_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"icon\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"is_public\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"last_updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"max_member\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"owner_user_home\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"owner_user_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"owner_user_picture\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"parent_depot_path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"pin\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"plan\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"project_path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"recommended\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"remain_day\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"ssh_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"star_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"stared\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:24:\"un_read_activities_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"updated_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"watch_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"watched\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:6:\"RefDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/CommitterDTO\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"is_default_branch\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"is_protected\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"last_commit\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CommitDTO\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"MergeRequestDetailDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":20:{s:9:\"action_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"action_author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:4:\"body\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"comment_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"commits\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CommitDTO\";}}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"desBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"diffStat\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DiffStat\";}s:7:\"granted\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"granted_by\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:8:\"htmlDiff\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:3:\"iid\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"merge_status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"merged_sha\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"srcBranch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"TweetDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":16:{s:11:\"activity_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"comment_list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/TweetCommentDTO\";}}s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"coord\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:6:\"device\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"like_users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:5:\"liked\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"Timestamp\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:4:\"date\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:3:\"day\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"hours\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"minutes\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"month\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"nanos\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"seconds\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"time\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"timezoneOffset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"year\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:14:\"FileHistoryDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":19:{s:6:\"action\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"action_msg\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:8:\"fileType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"file_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"history_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"image_height\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"image_width\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:13:\"owner_preview\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"preview\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"remark\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"storage_key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"storage_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:6:\"Number\";O:8:\"stdClass\":0:{}s:10:\"ResultPage\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:15:\"TweetCommentDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"tweet_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:18:\"NormalizedDiffStat\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"blanks\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"deletions\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"insertions\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:9:\"TweetLike\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"tweet_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:19:\"ResultPageOfTaskDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/TaskDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:21:\"ResultPageOfTweetLike\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/TweetLike\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:12:\"CommitterDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"avatar\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"link\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:19:\"ResultPageOfFileDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/FileDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:7:\"FileDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":18:{s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:20:\"current_user_role_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"fileType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"file_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"history_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"image_info_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:13:\"owner_preview\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"preview\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"storage_key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"storage_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"updated_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}}}s:6:\"KeyDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:12:\"finger_print\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"TaskPageDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"finished\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/TaskDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"processing\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:19:\"UserSettingGroupDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"email_key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"email_value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"flag\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"notification_key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"notification_value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"WebHook\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":9:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:8:\"depot_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"hook_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"send_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"updated_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}}}s:15:\"ProjectTopicDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":15:{s:11:\"child_count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:17:\"current_user_role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"current_user_role_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"labels\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ProjectLabelDTO\";}}s:6:\"number\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"updated_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:8:\"watching\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:26:\"ResultPageOfTaskCommentDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"list\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/TaskCommentDTO\";}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"pager\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pager\";}s:9:\"totalPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"totalRow\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:7:\"TaskDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":17:{s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:10:\"creator_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"current_user_role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"current_user_role_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"deadline\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"has_description\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"labels\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ProjectLabelDTO\";}}s:6:\"number\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"owner_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"priority\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"updated_at\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";}s:5:\"watch\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:6:\"Commit\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PersonIdent\";}s:10:\"authorDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"commitDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"committer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PersonIdent\";}s:11:\"fullMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"sha\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"shortMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
