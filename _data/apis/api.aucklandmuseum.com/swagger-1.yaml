---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":12:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:24:\"Auckland
  Museum API Team\";s:3:\"url\";s:29:\"http://www.aucklandmuseum.com\";}s:11:\"description\";s:60:\"This
  is technical documentation for the Auckland Museum API\n\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:23:\"Auckland
  Museum licence\";s:3:\"url\";s:29:\"http://www.aucklandmuseum.com\";}s:14:\"termsOfService\";s:36:\"http://api.aucklandmuseum.com/terms/\";s:5:\"title\";s:15:\"Auckland
  Museum\";s:7:\"version\";s:5:\"2.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:9:\"open_data\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#FFFFFF\";s:3:\"url\";s:126:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_3189440223_bdf15148765709ca93c66597839b5589_400x400.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:36:\"http://api.aucklandmuseum.com/apidoc\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:18:\"aucklandmuseum.com\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:14:\"aucklandmuseum\";s:4:\"type\";s:7:\"openapi\";}}"
host: api.aucklandmuseum.com
paths:
  /id/media/{path}:
    get:
      description: Gets `media` at a given pathn
      operationId: id.media.path.get
      parameters:
      - description: The media `identifier`n
        in: path
        name: path
        required: true
        type: string
      - description: The desired media `rendering`nnPossible values:n* `original.jpg`n*
          `original.pdf`n* `thumbnail.jpg` (fixed with 70px)n* `standard.jpg` (fixed
          width 440px and height 440px)n* `preview.jpg` (fixed height 100px)n
        in: query
        name: rendering
        required: false
        type: string
      produces:
      - image/jpeg
      - application/pdf
      responses:
        200:
          description: '`media` foundn'
        404:
          description: '`media` not foundn'
      summary: Retrieve media associated with Collections and Cenotaph subjects in
        Auckland Museum
      tags:
      - media
  /id/{identifier}:
    get:
      description: Gets information about a `subject` identified by the `identifier`.nnThe
        response format depends upon the `Accept` header.n  - `text/html` - the default
        response type. Returned data can be easily viewed in any modern Internet Browsern  -
        `application/ld+json` - the response will be in [JSON-LD](http://json-ld.org/)n  -
        `application/json` - the response will be a simple JSON Object with keys (predicates)
        and values (objects).n
      operationId: id.identifier.get
      parameters:
      - description: The identifier path of the `subject` you're looking forn
        in: path
        name: identifier
        required: true
        type: string
      produces:
      - text/html
      - application/ld+json
      - application/json
      responses:
        200:
          description: '`subject` foundn'
        404:
          description: '`subject` not foundn'
      summary: Explore details about a given subject node
      tags:
      - subject
  /search/{index}/{operation}:
    get:
      description: Use this endpoint to perform simple search queries for finding
        information and subjects you may be interested innnSearches performed via
        this endpoint run against an [Elastic](www.elastic.co) server. This endpoint
        mirrors the Elastic search API documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-search.html)nnUse
        then  - `collectionsonline` index to perform searches over other allnCollections
        datan  - `cenotaph` index to perform searches over Cenotaph datan
      operationId: search.index.operation.get
      parameters:
      - description: search index namenPossible values:n* `collectionsonline`n* `cenotaph`n
        in: path
        name: index
        required: true
        type: string
      - description: One of the supported elasticsearch operations like `_search`
          or `_suggest`
        in: path
        name: operation
        required: true
        type: string
      - description: One of the supported elasticsearch query parameter values for
          key `q`
        in: query
        name: q
        required: false
        type: string
      responses:
        200:
          description: search results found
        400:
          description: bad request
        404:
          description: not found
      summary: Perform simple search queries over Auckland Museum Collections and
        Cenotaph data
      tags:
      - search
    post:
      consumes:
      - application/json
      description: Searches performed via this endpoint run against an [Elastic](www.elastic.co)
        server. This endpoint mirrors the Elastic search API documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-search.html)nnUse
        then  - `collectionsonline` index to perform searches over other all Collections
        datan  - `cenotaph` index to perform searches over Cenotaph datan
      operationId: search.index.operation.post
      parameters:
      - description: search index namenPossible values:n* `collectionsonline`n* `cenotaph`n
        in: path
        name: index
        required: true
        type: string
      - description: One of the supported elasticsearch operations like `_search`
          or `_suggest`
        in: path
        name: operation
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: false
        schema:
          format: application/json
          type: object
      responses:
        200:
          description: search results found
        400:
          description: bad request
        404:
          description: not found
      summary: Perform complex search queries over Auckland Museum Collections and
        Cenotaph data
      tags:
      - search
  /sparql:
    get:
      description: You can execute your [SPARQL](http://www.w3.org/TR/rdf-sparql-query/)
        queries against this endpoint.nnThe sparql query should be provided as the
        value of the request parameter `query`.nSet the `Accept` header to `application/sparql-results+xml`
        to get results in XML. Set it to `application/sparql-results+json` to get
        results in JSON. nn**Note:** This endpoints supports [JSON-P](http://json-p.org/).
        In order to get a JSON-P response, set the query parameter `callback` to your
        preferred callback function name. The default function name is `callback()`.
        When using JSON-P, there is no need to set the `Accept` header because the
        response will always be in `application/javascript`.n
      operationId: sparql.get
      parameters:
      - description: sparql query
        in: query
        name: query
        required: true
        type: string
      - default: callback
        description: The [JSON-P](http://json-p.org/) callback parameter
        in: query
        name: callback
        required: false
        type: string
      - default: true
        description: Whether to get inferred results in the response
        in: query
        name: infer
        required: false
        type: boolean
      produces:
      - application/sparql-results+json
      - application/sparql-results+xml
      - application/javascript
      responses:
        200:
          description: success
          schema:
            title: json
            type: object
      summary: Auckland Museum SPARQL endpoint
      tags:
      - sparql
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: You can execute your [SPARQL](http://www.w3.org/TR/rdf-sparql-query/)
        queries against this endpoint.nThe sparql query should be provided as the
        value of the request parameter `query`.nSet the `Accept` header to `application/sparql-results+xml`
        to get results in XML. Set it to `application/sparql-results+json` to get
        results in JSON. n
      operationId: sparql.post
      parameters:
      - description: sparql query
        in: formData
        name: query
        required: true
        type: string
      - default: true
        description: Whether to get inferred results in the response
        in: formData
        name: infer
        required: false
        type: boolean
      produces:
      - application/sparql-results+json
      - application/sparql-results+xml
      responses:
        200:
          description: success
      summary: Auckland Museum SPARQL endpoint
      tags:
      - sparql
schemes:
- http
...
