---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":14:{s:7:\"contact\";O:8:\"stdClass\":3:{s:5:\"email\";s:23:\"mike.ralphson@gmail.com\";s:4:\"name\";s:13:\"Mike
  Ralphson\";s:3:\"url\";s:38:\"https://github.com/mermade/aws2openapi\";}s:11:\"description\";s:253:\"<fullname>Amazon
  Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building
  conversational voice and text interfaces. Use these actions to create, update, and
  delete conversational bots for new and existing client applications. </p>\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:18:\"Apache
  2.0 License\";s:3:\"url\";s:31:\"http://www.apache.org/licenses/\";}s:14:\"termsOfService\";s:37:\"https://aws.amazon.com/service-terms/\";s:5:\"title\";s:33:\"Amazon
  Lex Model Building Service\";s:7:\"version\";s:10:\"2017-04-19\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:79:\"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\";}s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#FFFFFF\";s:3:\"url\";s:104:\"https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:11:\"contentType\";s:16:\"application/json\";s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:38:\"https://github.com/mermade/aws2openapi\";s:7:\"version\";s:5:\"1.0.0\";}s:3:\"url\";s:94:\"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lex-models-2017-04-19.normal.json\";s:17:\"x-apisguru-direct\";b:1;}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:13:\"amazonaws.com\";s:9:\"x-release\";s:2:\"v4\";s:13:\"x-serviceName\";s:10:\"models.lex\";}"
host: models.lex.amazonaws.com
basePath: /
paths: ~
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":150:{s:9:\"AliasName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:41:\"^[a-zA-Z]+((_[a-zA-Z]+)*|([a-zA-Z]+_)*|_)\";s:4:\"type\";s:6:\"string\";}s:18:\"AliasNameOrListAll\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:45:\"^(-|^[a-zA-Z]+((_[a-zA-Z]+)*|([a-zA-Z]+_)*))$\";s:4:\"type\";s:6:\"string\";}s:19:\"BadRequestException\";O:8:\"stdClass\":3:{s:11:\"description\";s:134:\"The
  request is not well formed. For example, a value is invalid or a required field
  is missing. Check the field values, and try again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Boolean\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"BotAliasMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"Provides
  information about a bot alias.\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:46:\"The
  name of the bot to which the alias points.\";}s:10:\"botVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:60:\"The
  version of the Amazon Lex bot to which the alias points.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:26:\"Checksum
  of the bot alias.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the bot alias was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the bot alias.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:122:\"The
  date that the bot alias was updated. When you create a resource, the creation date
  and last updated date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/AliasName\";s:11:\"description\";s:26:\"The
  name of the bot alias.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"BotAliasMetadataList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/BotAliasMetadata\";}s:4:\"type\";s:5:\"array\";}s:21:\"BotChannelAssociation\";O:8:\"stdClass\":3:{s:11:\"description\";s:87:\"Represents
  an association between an Amazon Lex bot and an external messaging platform.\";s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"botAlias\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/AliasName\";s:11:\"description\";s:105:\"An
  alias pointing to the specific version of the Amazon Lex bot to which this association
  is being made. \";}s:16:\"botConfiguration\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/ChannelConfigurationMap\";s:11:\"description\";s:75:\"Provides
  information necessary to communicate with the messaging platform. \";}s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:182:\"<p>The
  name of the Amazon Lex bot to which this association is being made. </p> <note>
  <p>Currently, Amazon Lex supports associations with Facebook and Slack, and Twilio.</p>
  </note>\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:86:\"The
  date that the association between the Amazon Lex bot and the channel was created.
  \";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:56:\"A
  text description of the association you are creating. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/BotChannelName\";s:11:\"description\";s:61:\"The
  name of the association between the bot and the channel. \";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ChannelType\";s:11:\"description\";s:149:\"Specifies
  the type of association by indicating the type of channel being established between
  the Amazon Lex bot and the external messaging platform.\";}}s:4:\"type\";s:6:\"object\";}s:25:\"BotChannelAssociationList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/BotChannelAssociation\";}s:4:\"type\";s:5:\"array\";}s:14:\"BotChannelName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:41:\"^[a-zA-Z]+((_[a-zA-Z]+)*|([a-zA-Z]+_)*|_)\";s:4:\"type\";s:6:\"string\";}s:11:\"BotMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Provides
  information about a bot. .\";s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:34:\"The
  date that the bot was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:25:\"A
  description of the bot.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:112:\"The
  date that the bot was updated. When you create a bot, the creation date and last
  updated date are the same. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:21:\"The
  name of the bot. \";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:22:\"The
  status of the bot.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:82:\"The
  version of the bot. For a new bot, the version is always <code>$LATEST</code>.\";}}s:4:\"type\";s:6:\"object\";}s:15:\"BotMetadataList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/BotMetadata\";}s:4:\"type\";s:5:\"array\";}s:7:\"BotName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:50;s:9:\"minLength\";i:2;s:7:\"pattern\";s:41:\"^[a-zA-Z]+((_[a-zA-Z]+)*|([a-zA-Z]+_)*|_)\";s:4:\"type\";s:6:\"string\";}s:11:\"BotVersions\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Version\";}s:8:\"maxItems\";i:5;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:21:\"BuiltinIntentMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Provides
  metadata for a built-in intent.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"signature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BuiltinIntentSignature\";s:11:\"description\";s:268:\"A
  unique identifier for the built-in intent. To find the signature for an intent,
  see <a href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\">Standard
  Built-in Intents</a> in the <i>Alexa Skills Kit</i>.\";}s:16:\"supportedLocales\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/LocaleList\";s:11:\"description\";s:63:\"A
  list of identifiers for the locales that the intent supports.\";}}s:4:\"type\";s:6:\"object\";}s:25:\"BuiltinIntentMetadataList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/BuiltinIntentMetadata\";}s:4:\"type\";s:5:\"array\";}s:22:\"BuiltinIntentSignature\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"BuiltinIntentSlot\";O:8:\"stdClass\":3:{s:11:\"description\";s:60:\"Provides
  information about a slot used in a built-in intent.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:43:\"A
  list of the slots defined for the intent.\";}}s:4:\"type\";s:6:\"object\";}s:21:\"BuiltinIntentSlotList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/BuiltinIntentSlot\";}s:4:\"type\";s:5:\"array\";}s:23:\"BuiltinSlotTypeMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"Provides
  information about a built in slot type.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"signature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/BuiltinSlotTypeSignature\";s:11:\"description\";s:270:\"A
  unique identifier for the built-in slot type. To find the signature for a slot type,
  see <a href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference\">Slot
  Type Reference</a> in the <i>Alexa Skills Kit</i>.\";}s:16:\"supportedLocales\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/LocaleList\";s:11:\"description\";s:39:\"A
  list of target locales for the slot. \";}}s:4:\"type\";s:6:\"object\";}s:27:\"BuiltinSlotTypeMetadataList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/BuiltinSlotTypeMetadata\";}s:4:\"type\";s:5:\"array\";}s:24:\"BuiltinSlotTypeSignature\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"ChannelConfigurationMap\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:8:\"maxItems\";i:10;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:11:\"ChannelType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:8:\"Facebook\";i:1;s:5:\"Slack\";i:2;s:10:\"Twilio-Sms\";}s:4:\"type\";s:6:\"string\";}s:8:\"CodeHook\";O:8:\"stdClass\":4:{s:11:\"description\";s:101:\"Specifies
  a Lambda function that verifies requests to a bot or fulfills the user's request
  to a bot..\";s:10:\"properties\";O:8:\"stdClass\":2:{s:14:\"messageVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/MessageVersion\";s:11:\"description\";s:146:\"The
  version of the request-response that you want Amazon Lex to use to invoke your Lambda
  function. For more information, see <a>using-lambda</a>.\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/LambdaARN\";s:11:\"description\";s:54:\"The
  Amazon Resource Name (ARN) of the Lambda function.\";}}s:8:\"required\";a:2:{i:0;s:3:\"uri\";i:1;s:14:\"messageVersion\";}s:4:\"type\";s:6:\"object\";}s:17:\"ConflictException\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"
  There was a conflict processing the request. Try your request again. \";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:13:\"ContentString\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:1000;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"ContentType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:9:\"PlainText\";i:1;s:4:\"SSML\";}s:4:\"type\";s:6:\"string\";}s:5:\"Count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:23:\"CreateBotVersionRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:377:\"Identifies
  a specific revision of the <code>$LATEST</code> version of the bot. If you specify
  a checksum and the <code>$LATEST</code> version of the bot has a different checksum,
  a <code>PreconditionFailedException</code> exception is returned and Amazon Lex
  doesn't publish a new version. If you don't specify a checksum, Amazon Lex publishes
  the <code>$LATEST</code> version.\";}}s:4:\"type\";s:6:\"object\";}s:24:\"CreateBotVersionResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":15:{s:14:\"abortStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:98:\"The
  message that Amazon Lex uses to abort a conversation. For more information, see
  <a>PutBot</a>.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:61:\"Checksum
  identifying the version of the bot that was created.\";}s:13:\"childDirected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Boolean\";s:11:\"description\";s:1760:\"<p>For
  each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
  specify whether your use of Amazon Lex is related to a website, program, or other
  application that is directed or targeted, in whole or in part, to children under
  age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
  <code>true</code> or <code>false</code> in the <code>childDirected</code> field.
  By specifying <code>true</code> in the <code>childDirected</code> field, you confirm
  that your use of Amazon Lex <b>is</b> related to a website, program, or other application
  that is directed or targeted, in whole or in part, to children under age 13 and
  subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code>
  field, you confirm that your use of Amazon Lex <b>is not</b> related to a website,
  program, or other application that is directed or targeted, in whole or in part,
  to children under age 13 and subject to COPPA. You may not specify a default value
  for the <code>childDirected</code> field that does not accurately reflect whether
  your use of Amazon Lex is related to a website, program, or other application that
  is directed or targeted, in whole or in part, to children under age 13 and subject
  to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other
  application that is directed in whole or in part, to children under age 13, you
  must obtain any required verifiable parental consent under COPPA. For information
  regarding the use of Amazon Lex in connection with websites, programs, or other
  applications that are directed or targeted, in whole or in part, to children under
  age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon
  Lex FAQ.</a> </p>\";}s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:121:\"The
  message that Amazon Lex uses when it doesn't understand the user's request. For
  more information, see <a>PutBot</a>. \";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:42:\"The
  date when the bot version was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:25:\"A
  description of the bot.\";}s:13:\"failureReason\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:110:\"If
  <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
  it failed to build the bot.\";}s:23:\"idleSessionTTLInSeconds\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/SessionTTL\";s:11:\"description\";s:129:\"The
  maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
  For more information, see <a>PutBot</a>.\";}s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentList\";s:11:\"description\";s:81:\"An
  array of <code>Intent</code> objects. For more information, see <a>PutBot</a>.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:72:\"The
  date when the <code>$LATEST</code> version of this bot was updated. \";}s:6:\"locale\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";s:11:\"description\";s:42:\"
  Specifies the target locale for the bot. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:20:\"The
  name of the bot.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:404:\"
  When you send a request to create or update a bot, Amazon Lex sets the <code>status</code>
  response element to <code>BUILDING</code>. After Amazon Lex builds the bot, it sets
  <code>status</code> to <code>READY</code>. If Amazon Lex can't build the bot, it
  sets <code>status</code> to <code>FAILED</code>. Amazon Lex returns the reason for
  the failure in the <code>failureReason</code> response element. \";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:24:\"The
  version of the bot. \";}s:7:\"voiceId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:84:\"The
  Amazon Polly voice ID that Amazon Lex uses for voice interactions with the user.\";}}s:4:\"type\";s:6:\"object\";}s:26:\"CreateIntentVersionRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:403:\"Checksum
  of the <code>$LATEST</code> version of the intent that should be used to create
  the new version. If you specify a checksum and the <code>$LATEST</code> version
  of the intent has a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
  exception and doesn't publish a new version. If you don't specify a checksum, Amazon
  Lex publishes the <code>$LATEST</code> version.\";}}s:4:\"type\";s:6:\"object\";}s:27:\"CreateIntentVersionResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":15:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:39:\"Checksum
  of the intent version created.\";}s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:150:\"After
  the Lambda function specified in the <code>fulfillmentActivity</code> field fulfills
  the intent, Amazon Lex conveys this statement to the user. \";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:95:\"If
  defined, the prompt that Amazon Lex uses to confirm the user's intent before fulfilling
  it. \";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:37:\"The
  date that the intent was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:28:\"A
  description of the intent.\";}s:14:\"dialogCodeHook\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/CodeHook\";s:11:\"description\";s:72:\"If
  defined, Amazon Lex invokes this Lambda function for each user input.\";}s:14:\"followUpPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/FollowUpPrompt\";s:11:\"description\";s:107:\"If
  defined, Amazon Lex uses this prompt to solicit additional user activity after the
  intent is fulfilled. \";}s:19:\"fulfillmentActivity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/FulfillmentActivity\";s:11:\"description\";s:40:\"
  Describes how the intent is fulfilled. \";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:38:\"The
  date that the intent was updated. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentName\";s:11:\"description\";s:23:\"The
  name of the intent.\";}s:21:\"parentIntentSignature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BuiltinIntentSignature\";s:11:\"description\";s:42:\"A
  unique identifier for a built-in intent.\";}s:18:\"rejectionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:170:\"If
  the user answers \"no\" to the question defined in <code>confirmationPrompt</code>,
  Amazon Lex responds with this statement to acknowledge that the intent was canceled.
  \";}s:16:\"sampleUtterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/IntentUtteranceList\";s:11:\"description\";s:57:\"An
  array of sample utterances configured for the intent. \";}s:5:\"slots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/SlotList\";s:11:\"description\";s:83:\"An
  array of slot types that defines the information required to fulfill the intent.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:61:\"The
  version number assigned to the new version of the intent.\";}}s:4:\"type\";s:6:\"object\";}s:28:\"CreateSlotTypeVersionRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:391:\"Checksum
  for the <code>$LATEST</code> version of the slot type that you want to publish.
  If you specify a checksum and the <code>$LATEST</code> version of the slot type
  has a different checksum, Amazon Lex returns a <code>PreconditionFailedException</code>
  exception and doesn't publish the new version. If you don't specify a checksum,
  Amazon Lex publishes the <code>$LATEST</code> version.\";}}s:4:\"type\";s:6:\"object\";}s:29:\"CreateSlotTypeVersionResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:62:\"Checksum
  of the <code>$LATEST</code> version of the slot type.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the slot type was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the slot type.\";}s:17:\"enumerationValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/EnumerationValues\";s:11:\"description\";s:100:\"A
  list of <code>EnumerationValue</code> objects that defines the values that the slot
  type can take.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:121:\"The
  date that the slot type was updated. When you create a resource, the creation date
  and last update date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/SlotTypeName\";s:11:\"description\";s:26:\"The
  name of the slot type.\";}s:22:\"valueSelectionStrategy\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/SlotValueSelectionStrategy\";s:11:\"description\";s:115:\"The
  strategy that Amazon Lex uses to determine the value of the slot. For more information,
  see <a>PutSlotType</a>.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:51:\"The
  version assigned to the new slot type version. \";}}s:4:\"type\";s:6:\"object\";}s:27:\"CustomOrBuiltinSlotTypeName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:51:\"^([a-zA-Z]|AMAZON.)+((_[a-zA-Z]+)*|([a-zA-Z]+_)*|_)\";s:4:\"type\";s:6:\"string\";}s:21:\"DeleteBotAliasRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:34:\"DeleteBotChannelAssociationRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:16:\"DeleteBotRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:23:\"DeleteBotVersionRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:19:\"DeleteIntentRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:26:\"DeleteIntentVersionRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:21:\"DeleteSlotTypeRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:28:\"DeleteSlotTypeVersionRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:23:\"DeleteUtterancesRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:11:\"Description\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:200;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";}s:16:\"EnumerationValue\";O:8:\"stdClass\":4:{s:11:\"description\";s:363:\"<p>Each
  slot type can have a set of values. Each enumeration value represents a value the
  slot type can take. </p> <p>For example, a pizza ordering bot could have a slot
  type that specifies the type of crust that the pizza should have. The slot type
  could include the values </p> <ul> <li> <p>thick</p> </li> <li> <p>thin</p> </li>
  <li> <p>stuffed</p> </li> </ul>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"synonyms\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/SynonymList\";s:11:\"description\";s:49:\"Additional
  values related to the slot type value.\";}s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:19:\"#/definitions/Value\";s:11:\"description\";s:27:\"The
  value of the slot type.\";}}s:8:\"required\";a:1:{i:0;s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:17:\"EnumerationValues\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/EnumerationValue\";}s:8:\"maxItems\";i:10000;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:12:\"ExportStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:11:\"IN_PROGRESS\";i:1;s:5:\"READY\";i:2;s:6:\"FAILED\";}s:4:\"type\";s:6:\"string\";}s:10:\"ExportType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:16:\"ALEXA_SKILLS_KIT\";}s:4:\"type\";s:6:\"string\";}s:14:\"FollowUpPrompt\";O:8:\"stdClass\":4:{s:11:\"description\";s:208:\"A
  prompt for additional activity after an intent is fulfilled. For example, after
  the <code>OrderPizza</code> intent is fulfilled, you might prompt the user to find
  out whether the user wants to order drinks.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"prompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:39:\"Prompts
  for information from the user. \";}s:18:\"rejectionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:168:\"If
  the user answers \"no\" to the question defined in the <code>prompt</code> field,
  Amazon Lex responds with this statement to acknowledge that the intent was canceled.
  \";}}s:8:\"required\";a:2:{i:0;s:6:\"prompt\";i:1;s:18:\"rejectionStatement\";}s:4:\"type\";s:6:\"object\";}s:19:\"FulfillmentActivity\";O:8:\"stdClass\":4:{s:11:\"description\";s:1017:\"<p>
  Describes how the intent is fulfilled after the user provides all of the information
  required for the intent. You can provide a Lambda function to process the intent,
  or you can return the intent information to the client application. We recommend
  that you use a Lambda function so that the relevant logic lives in the Cloud and
  limit the client-side code primarily to presentation. If you need to update the
  logic, you only update the Lambda function; you don't need to upgrade your client
  application. </p> <p>Consider the following examples:</p> <ul> <li> <p>In a pizza
  ordering application, after the user provides all of the information for placing
  an order, you use a Lambda function to place an order with a pizzeria. </p> </li>
  <li> <p>In a gaming application, when a user says \"pick up a rock,\" this information
  must go back to the client application so that it can perform the operation and
  update the graphics. In this case, you want Amazon Lex to return the intent data
  to the client. </p> </li> </ul>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"codeHook\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/CodeHook\";s:11:\"description\";s:73:\"
  A description of the Lambda function that is run to fulfill the intent. \";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/FulfillmentActivityType\";s:11:\"description\";s:130:\"
  How the intent should be fulfilled, either by running a Lambda function or by returning
  the slot data to the client application. \";}}s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:4:\"type\";s:6:\"object\";}s:23:\"FulfillmentActivityType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:12:\"ReturnIntent\";i:1;s:8:\"CodeHook\";}s:4:\"type\";s:6:\"string\";}s:18:\"GetBotAliasRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:19:\"GetBotAliasResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:45:\"The
  name of the bot that the alias points to.\";}s:10:\"botVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:48:\"The
  version of the bot that the alias points to.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:26:\"Checksum
  of the bot alias.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the bot alias was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the bot alias.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:126:\"The
  date that the bot alias was updated. When you create a resource, the creation date
  and the last updated date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/AliasName\";s:11:\"description\";s:26:\"The
  name of the bot alias.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"GetBotAliasesRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:21:\"GetBotAliasesResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"BotAliases\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/BotAliasMetadataList\";s:11:\"description\";s:79:\"An
  array of <code>BotAliasMetadata</code> objects, each describing a bot alias.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:237:\"A
  pagination token for fetching next page of aliases. If the response to this call
  is truncated, Amazon Lex returns a pagination token in the response. To fetch the
  next page of aliases, specify the pagination token in the next request. \";}}s:4:\"type\";s:6:\"object\";}s:31:\"GetBotChannelAssociationRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:32:\"GetBotChannelAssociationResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"botAlias\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/AliasName\";s:11:\"description\";s:104:\"An
  alias pointing to the specific version of the Amazon Lex bot to which this association
  is being made.\";}s:16:\"botConfiguration\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/ChannelConfigurationMap\";s:11:\"description\";s:94:\"Provides
  information that the messaging platform needs to communicate with the Amazon Lex
  bot.\";}s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:31:\"The
  name of the Amazon Lex bot.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:74:\"The
  date that the association between the bot and the channel was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:65:\"A
  description of the association between the bot and the channel.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/BotChannelName\";s:11:\"description\";s:60:\"The
  name of the association between the bot and the channel.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ChannelType\";s:11:\"description\";s:35:\"The
  type of the messaging platform.\";}}s:4:\"type\";s:6:\"object\";}s:32:\"GetBotChannelAssociationsRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:33:\"GetBotChannelAssociationsResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:22:\"botChannelAssociations\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/BotChannelAssociationList\";s:11:\"description\";s:136:\"An
  array of objects, one for each association, that provides information about the
  Amazon Lex bot and its association with the channel. \";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:251:\"A
  pagination token that fetches the next page of associations. If the response to
  this call is truncated, Amazon Lex returns a pagination token in the response. To
  fetch the next page of associations, specify the pagination token in the next request.
  \";}}s:4:\"type\";s:6:\"object\";}s:13:\"GetBotRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":2:{s:4:\"name\";s:13:\"DocOrderPizza\";s:14:\"versionOrAlias\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:14:\"GetBotResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":13:{s:14:\"abortStatement\";O:8:\"stdClass\":1:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:38:\"I
  don't understand. Can you try again?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:30:\"I'm
  sorry, I don't understand.\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:8:\"checksum\";s:36:\"20172ee3-fa06-49b2-bbc5-667c090303e9\";s:13:\"childDirected\";b:1;s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:66:\"I'm
  sorry, I didn't hear that. Can you repeate what you just said?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"Can
  you say that again?\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:11:\"createdDate\";d:1494360160.1329999;s:11:\"description\";s:37:\"Orders
  a pizza from a local pizzeria.\";s:23:\"idleSessionTTLInSeconds\";i:300;s:7:\"intents\";a:1:{i:0;O:8:\"stdClass\":2:{s:10:\"intentName\";s:13:\"DocOrderPizza\";s:13:\"intentVersion\";s:7:\"$LATEST\";}}s:15:\"lastUpdatedDate\";d:1494360160.1329999;s:6:\"locale\";s:5:\"en-US\";s:4:\"name\";s:16:\"DocOrderPizzaBot\";s:6:\"status\";s:9:\"NOT_BUILT\";s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:14:\"abortStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:144:\"The
  message that Amazon Lex returns when the user elects to end the conversation without
  completing it. For more information, see <a>PutBot</a>.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:99:\"Checksum
  of the bot used to identify a specific revision of the bot's <code>$LATEST</code>
  version.\";}s:13:\"childDirected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Boolean\";s:11:\"description\";s:1760:\"<p>For
  each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
  specify whether your use of Amazon Lex is related to a website, program, or other
  application that is directed or targeted, in whole or in part, to children under
  age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
  <code>true</code> or <code>false</code> in the <code>childDirected</code> field.
  By specifying <code>true</code> in the <code>childDirected</code> field, you confirm
  that your use of Amazon Lex <b>is</b> related to a website, program, or other application
  that is directed or targeted, in whole or in part, to children under age 13 and
  subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code>
  field, you confirm that your use of Amazon Lex <b>is not</b> related to a website,
  program, or other application that is directed or targeted, in whole or in part,
  to children under age 13 and subject to COPPA. You may not specify a default value
  for the <code>childDirected</code> field that does not accurately reflect whether
  your use of Amazon Lex is related to a website, program, or other application that
  is directed or targeted, in whole or in part, to children under age 13 and subject
  to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other
  application that is directed in whole or in part, to children under age 13, you
  must obtain any required verifiable parental consent under COPPA. For information
  regarding the use of Amazon Lex in connection with websites, programs, or other
  applications that are directed or targeted, in whole or in part, to children under
  age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon
  Lex FAQ.</a> </p>\";}s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:116:\"The
  message Amazon Lex uses when it doesn't understand the user's request. For more
  information, see <a>PutBot</a>. \";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:34:\"The
  date that the bot was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:25:\"A
  description of the bot.\";}s:13:\"failureReason\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:98:\"If
  <code>status</code> is <code>FAILED</code>, Amazon Lex explains why it failed to
  build the bot.\";}s:23:\"idleSessionTTLInSeconds\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/SessionTTL\";s:11:\"description\";s:129:\"The
  maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
  For more information, see <a>PutBot</a>.\";}s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentList\";s:11:\"description\";s:81:\"An
  array of <code>intent</code> objects. For more information, see <a>PutBot</a>.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:117:\"The
  date that the bot was updated. When you create a resource, the creation date and
  last updated date are the same. \";}s:6:\"locale\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";s:11:\"description\";s:32:\"
  The target locale for the bot. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:20:\"The
  name of the bot.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:309:\"The
  status of the bot. If the bot is ready to run, the status is <code>READY</code>.
  If there was a problem with building the bot, the status is <code>FAILED</code>
  and the <code>failureReason</code> explains why the bot did not build. If the bot
  was saved but not built, the status is <code>NOT BUILT</code>.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:82:\"The
  version of the bot. For a new bot, the version is always <code>$LATEST</code>.\";}s:7:\"voiceId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:124:\"The
  Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
  For more information, see <a>PutBot</a>.\";}}s:4:\"type\";s:6:\"object\";}s:21:\"GetBotVersionsRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:22:\"GetBotVersionsResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"bots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/BotMetadataList\";s:11:\"description\";s:133:\"An
  array of <code>BotMetadata</code> objects, one for each numbered version of the
  bot plus one for the <code>$LATEST</code> version.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:247:\"A
  pagination token for fetching the next page of bot versions. If the response to
  this call is truncated, Amazon Lex returns a pagination token in the response. To
  fetch the next page of versions, specify the pagination token in the next request.
  \";}}s:4:\"type\";s:6:\"object\";}s:14:\"GetBotsRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":2:{s:10:\"maxResults\";i:5;s:9:\"nextToken\";s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:15:\"GetBotsResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":1:{s:4:\"bots\";a:1:{i:0;O:8:\"stdClass\":6:{s:11:\"createdDate\";d:1494360160.1329999;s:11:\"description\";s:37:\"Orders
  a pizza from a local pizzeria.\";s:15:\"lastUpdatedDate\";d:1494360160.1329999;s:4:\"name\";s:16:\"DocOrderPizzaBot\";s:6:\"status\";s:9:\"NOT_BUILT\";s:7:\"version\";s:7:\"$LATEST\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"bots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/BotMetadataList\";s:11:\"description\";s:75:\"An
  array of <code>botMetadata</code> objects, with one entry for each bot. \";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:135:\"If
  the response is truncated, it includes a pagination token that you can specify in
  your next request to fetch the next page of bots. \";}}s:4:\"type\";s:6:\"object\";}s:23:\"GetBuiltinIntentRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:24:\"GetBuiltinIntentResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"signature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BuiltinIntentSignature\";s:11:\"description\";s:44:\"The
  unique identifier for a built-in intent.\";}s:5:\"slots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/BuiltinIntentSlotList\";s:11:\"description\";s:95:\"An
  array of <code>BuiltinIntentSlot</code> objects, one entry for each slot type in
  the intent.\";}s:16:\"supportedLocales\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/LocaleList\";s:11:\"description\";s:43:\"A
  list of locales that the intent supports.\";}}s:4:\"type\";s:6:\"object\";}s:24:\"GetBuiltinIntentsRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:25:\"GetBuiltinIntentsResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/BuiltinIntentMetadataList\";s:11:\"description\";s:92:\"An
  array of <code>builtinIntentMetadata</code> objects, one for each intent in the
  response.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:244:\"A
  pagination token that fetches the next page of intents. If the response to this
  API call is truncated, Amazon Lex returns a pagination token in the response. To
  fetch the next page of intents, specify the pagination token in the next request.\";}}s:4:\"type\";s:6:\"object\";}s:26:\"GetBuiltinSlotTypesRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:27:\"GetBuiltinSlotTypesResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:146:\"If
  the response is truncated, the response includes a pagination token that you can
  use in your next request to fetch the next page of slot types.\";}s:9:\"slotTypes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/BuiltinSlotTypeMetadataList\";s:11:\"description\";s:96:\"An
  array of <code>BuiltInSlotTypeMetadata</code> objects, one entry for each slot type
  returned.\";}}s:4:\"type\";s:6:\"object\";}s:16:\"GetExportRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:17:\"GetExportResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:12:\"exportStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ExportStatus\";s:11:\"description\";s:257:\"<p>The
  status of the export. </p> <ul> <li> <p> <code>IN_PROGRESS</code> - The export is
  in progress.</p> </li> <li> <p> <code>READY</code> - The export is complete.</p>
  </li> <li> <p> <code>FAILED</code> - The export could not be completed.</p> </li>
  </ul>\";}s:10:\"exportType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/ExportType\";s:11:\"description\";s:32:\"The
  format of the exported data.\";}s:13:\"failureReason\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:116:\"If
  <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
  it failed to export the resource.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Name\";s:11:\"description\";s:35:\"The
  name of the bot being exported.\";}s:12:\"resourceType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceType\";s:11:\"description\";s:34:\"The
  type of the exported resource.\";}s:3:\"url\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:257:\"An
  S3 pre-signed URL that provides the location of the exported resource. The exported
  resource is a ZIP archive that contains the exported resource in JSON format. The
  structure of the archive may change. Your code should not rely on the archive structure.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/NumericalVersion\";s:11:\"description\";s:38:\"The
  version of the bot being exported.\";}}s:4:\"type\";s:6:\"object\";}s:16:\"GetIntentRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":2:{s:4:\"name\";s:13:\"DocOrderPizza\";s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:17:\"GetIntentResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":12:{s:8:\"checksum\";s:36:\"ca9bc13d-afc8-4706-bbaf-091f7a5935d6\";s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:74:\"All
  right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:69:\"OK,
  your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\";s:11:\"contentType\";s:9:\"PlainText\";}}s:12:\"responseCard\";s:3:\"foo\";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:1:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:67:\"Should
  I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:11:\"createdDate\";d:1494359783.4530001;s:11:\"description\";s:36:\"Order
  a pizza from a local pizzeria.\";s:19:\"fulfillmentActivity\";O:8:\"stdClass\":1:{s:4:\"type\";s:12:\"ReturnIntent\";}s:15:\"lastUpdatedDate\";d:1494359783.4530001;s:4:\"name\";s:13:\"DocOrderPizza\";s:18:\"rejectionStatement\";O:8:\"stdClass\":1:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:27:\"Ok,
  I'll cancel your order.\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"I
  cancelled your order.\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:16:\"sampleUtterances\";a:4:{i:0;s:17:\"Order
  me a pizza.\";i:1;s:24:\"Order me a {Type} pizza.\";i:2;s:35:\"I want a {Crust}
  crust {Type} pizza\";i:3;s:55:\"I want a {Crust} crust {Type} pizza with {Sauce}
  sauce.\";}s:5:\"slots\";a:3:{i:0;O:8:\"stdClass\":8:{s:11:\"description\";s:27:\"The
  type of pizza to order.\";s:4:\"name\";s:4:\"Type\";s:8:\"priority\";i:1;s:16:\"sampleUtterances\";a:3:{i:0;s:22:\"Get
  me a {Type} pizza.\";i:1;s:22:\"A {Type} pizza please.\";i:2;s:24:\"I'd like a {Type}
  pizza.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:12:\"DocPizzaType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:3:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:34:\"What
  type of pizza would you like?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:22:\"Vegie
  or cheese pizza?\";s:11:\"contentType\";s:9:\"PlainText\";}i:2;O:8:\"stdClass\":2:{s:7:\"content\";s:40:\"I
  can get you a vegie or a cheese pizza.\";s:11:\"contentType\";s:9:\"PlainText\";}}}}i:1;O:8:\"stdClass\":8:{s:11:\"description\";s:33:\"The
  type of pizza crust to order.\";s:4:\"name\";s:5:\"Crust\";s:8:\"priority\";i:2;s:16:\"sampleUtterances\";a:2:{i:0;s:24:\"Make
  it a {Crust} crust.\";i:1;s:25:\"I'd like a {Crust} crust.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:17:\"DocPizzaCrustType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:34:\"What
  type of crust would you like?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:20:\"Thick
  or thin crust?\";s:11:\"contentType\";s:9:\"PlainText\";}}}}i:2;O:8:\"stdClass\":8:{s:11:\"description\";s:38:\"The
  type of sauce to use on the pizza.\";s:4:\"name\";s:5:\"Sauce\";s:8:\"priority\";i:3;s:16:\"sampleUtterances\";a:2:{i:0;s:22:\"Make
  it {Sauce} sauce.\";i:1;s:23:\"I'd like {Sauce} sauce.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:17:\"DocPizzaSauceType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:19:\"White
  or red sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"Garlic
  or tomato sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}}}}}s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:23:\"Checksum
  of the intent.\";}s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:151:\"After
  the Lambda function specified in the <code>fulfillmentActivity</code> element fulfills
  the intent, Amazon Lex conveys this statement to the user.\";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:150:\"If
  defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling
  the user's request. For more information, see <a>PutIntent</a>. \";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:37:\"The
  date that the intent was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:28:\"A
  description of the intent.\";}s:14:\"dialogCodeHook\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/CodeHook\";s:11:\"description\";s:135:\"If
  defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user
  input. For more information, see <a>PutIntent</a>. \";}s:14:\"followUpPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/FollowUpPrompt\";s:11:\"description\";s:161:\"If
  defined in the bot, Amazon Lex uses this prompt to solicit additional user activity
  after the intent is fulfilled. For more information, see <a>PutIntent</a>.\";}s:19:\"fulfillmentActivity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/FulfillmentActivity\";s:11:\"description\";s:83:\"Describes
  how the intent is fulfilled. For more information, see <a>PutIntent</a>. \";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:124:\"The
  date that the intent was updated. When you create a resource, the creation date
  and the last updated date are the same. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentName\";s:11:\"description\";s:23:\"The
  name of the intent.\";}s:21:\"parentIntentSignature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BuiltinIntentSignature\";s:11:\"description\";s:42:\"A
  unique identifier for a built-in intent.\";}s:18:\"rejectionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:170:\"If
  the user answers \"no\" to the question defined in <code>confirmationPrompt</code>,
  Amazon Lex responds with this statement to acknowledge that the intent was canceled.
  \";}s:16:\"sampleUtterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/IntentUtteranceList\";s:11:\"description\";s:56:\"An
  array of sample utterances configured for the intent.\";}s:5:\"slots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/SlotList\";s:11:\"description\";s:51:\"An
  array of intent slots configured for the intent.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:26:\"The
  version of the intent.\";}}s:4:\"type\";s:6:\"object\";}s:24:\"GetIntentVersionsRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:25:\"GetIntentVersionsResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/IntentMetadataList\";s:11:\"description\";s:139:\"An
  array of <code>IntentMetadata</code> objects, one for each numbered version of the
  intent plus one for the <code>$LATEST</code> version.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:250:\"A
  pagination token for fetching the next page of intent versions. If the response
  to this call is truncated, Amazon Lex returns a pagination token in the response.
  To fetch the next page of versions, specify the pagination token in the next request.
  \";}}s:4:\"type\";s:6:\"object\";}s:17:\"GetIntentsRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":2:{s:10:\"maxResults\";i:10;s:9:\"nextToken\";s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:18:\"GetIntentsResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":1:{s:7:\"intents\";a:1:{i:0;O:8:\"stdClass\":5:{s:11:\"createdDate\";d:1494359783.4530001;s:11:\"description\";s:36:\"Order
  a pizza from a local pizzeria.\";s:15:\"lastUpdatedDate\";d:1494359783.4530001;s:4:\"name\";s:13:\"DocOrderPizza\";s:7:\"version\";s:7:\"$LATEST\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/IntentMetadataList\";s:11:\"description\";s:81:\"An
  array of <code>Intent</code> objects. For more information, see <a>PutBot</a>.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:148:\"If
  the response is truncated, the response includes a pagination token that you can
  specify in your next request to fetch the next page of intents. \";}}s:4:\"type\";s:6:\"object\";}s:18:\"GetSlotTypeRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":2:{s:4:\"name\";s:17:\"DocPizzaCrustType\";s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:19:\"GetSlotTypeResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":7:{s:8:\"checksum\";s:36:\"210b3d5a-90a3-4b22-ac7e-f50c2c71095f\";s:11:\"createdDate\";d:1494359274.4030001;s:11:\"description\";s:21:\"Available
  crust types\";s:17:\"enumerationValues\";a:2:{i:0;O:8:\"stdClass\":1:{s:5:\"value\";s:5:\"thick\";}i:1;O:8:\"stdClass\":1:{s:5:\"value\";s:4:\"thin\";}}s:15:\"lastUpdatedDate\";d:1494359274.4030001;s:4:\"name\";s:17:\"DocPizzaCrustType\";s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:62:\"Checksum
  of the <code>$LATEST</code> version of the slot type.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the slot type was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the slot type.\";}s:17:\"enumerationValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/EnumerationValues\";s:11:\"description\";s:100:\"A
  list of <code>EnumerationValue</code> objects that defines the values that the slot
  type can take.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:121:\"The
  date that the slot type was updated. When you create a resource, the creation date
  and last update date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/SlotTypeName\";s:11:\"description\";s:26:\"The
  name of the slot type.\";}s:22:\"valueSelectionStrategy\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/SlotValueSelectionStrategy\";s:11:\"description\";s:115:\"The
  strategy that Amazon Lex uses to determine the value of the slot. For more information,
  see <a>PutSlotType</a>.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:29:\"The
  version of the slot type.\";}}s:4:\"type\";s:6:\"object\";}s:26:\"GetSlotTypeVersionsRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:27:\"GetSlotTypeVersionsResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:253:\"A
  pagination token for fetching the next page of slot type versions. If the response
  to this call is truncated, Amazon Lex returns a pagination token in the response.
  To fetch the next page of versions, specify the pagination token in the next request.
  \";}s:9:\"slotTypes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/SlotTypeMetadataList\";s:11:\"description\";s:144:\"An
  array of <code>SlotTypeMetadata</code> objects, one for each numbered version of
  the slot type plus one for the <code>$LATEST</code> version.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"GetSlotTypesRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":2:{s:10:\"maxResults\";i:10;s:9:\"nextToken\";s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:20:\"GetSlotTypesResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":1:{s:9:\"slotTypes\";a:3:{i:0;O:8:\"stdClass\":5:{s:11:\"createdDate\";d:1494359274.4030001;s:11:\"description\";s:21:\"Available
  crust types\";s:15:\"lastUpdatedDate\";d:1494359274.4030001;s:4:\"name\";s:17:\"DocPizzaCrustType\";s:7:\"version\";s:7:\"$LATEST\";}i:1;O:8:\"stdClass\":5:{s:11:\"createdDate\";d:1494356442.23;s:11:\"description\";s:22:\"Available
  pizza sauces\";s:15:\"lastUpdatedDate\";d:1494356442.23;s:4:\"name\";s:17:\"DocPizzaSauceType\";s:7:\"version\";s:7:\"$LATEST\";}i:2;O:8:\"stdClass\":5:{s:11:\"createdDate\";d:1494359198.6559999;s:11:\"description\";s:16:\"Available
  pizzas\";s:15:\"lastUpdatedDate\";d:1494359198.6559999;s:4:\"name\";s:12:\"DocPizzaType\";s:7:\"version\";s:7:\"$LATEST\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/NextToken\";s:11:\"description\";s:140:\"If
  the response is truncated, it includes a pagination token that you can specify in
  your next request to fetch the next page of slot types.\";}s:9:\"slotTypes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/SlotTypeMetadataList\";s:11:\"description\";s:137:\"An
  array of objects, one for each slot type, that provides information such as the
  name of the slot type, the version, and a description.\";}}s:4:\"type\";s:6:\"object\";}s:24:\"GetUtterancesViewRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:25:\"GetUtterancesViewResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:65:\"The
  name of the bot for which utterance information was returned.\";}s:10:\"utterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ListsOfUtterances\";s:11:\"description\";s:247:\"An
  array of <a>UtteranceList</a> objects, each containing a list of <a>UtteranceData</a>
  objects describing the utterances that were processed by your bot. The response
  contains a maximum of 100 <code>UtteranceData</code> objects for each version.\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Intent\";O:8:\"stdClass\":4:{s:11:\"description\";s:45:\"Identifies
  the specific version of an intent.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"intentName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentName\";s:11:\"description\";s:23:\"The
  name of the intent.\";}s:13:\"intentVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:26:\"The
  version of the intent.\";}}s:8:\"required\";a:2:{i:0;s:10:\"intentName\";i:1;s:13:\"intentVersion\";}s:4:\"type\";s:6:\"object\";}s:10:\"IntentList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Intent\";}s:4:\"type\";s:5:\"array\";}s:14:\"IntentMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Provides
  information about an intent.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:37:\"The
  date that the intent was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:28:\"A
  description of the intent.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:118:\"The
  date that the intent was updated. When you create an intent, the creation date and
  last updated date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentName\";s:11:\"description\";s:23:\"The
  name of the intent.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:26:\"The
  version of the intent.\";}}s:4:\"type\";s:6:\"object\";}s:18:\"IntentMetadataList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/IntentMetadata\";}s:4:\"type\";s:5:\"array\";}s:10:\"IntentName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:41:\"^[a-zA-Z]+((_[a-zA-Z]+)*|([a-zA-Z]+_)*|_)\";s:4:\"type\";s:6:\"string\";}s:19:\"IntentUtteranceList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Utterance\";}s:8:\"maxItems\";i:1500;s:8:\"minItems\";i:0;s:4:\"type\";s:5:\"array\";}s:24:\"InternalFailureException\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"An
  internal Amazon Lex error occurred. Try your request again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:9:\"LambdaARN\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:2048;s:9:\"minLength\";i:20;s:7:\"pattern\";s:150:\"arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?\";s:4:\"type\";s:6:\"string\";}s:22:\"LimitExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"The
  request exceeded a limit. Try your request again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:15:\"ListOfUtterance\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/UtteranceData\";}s:4:\"type\";s:5:\"array\";}s:17:\"ListsOfUtterances\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/UtteranceList\";}s:4:\"type\";s:5:\"array\";}s:6:\"Locale\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:5:\"en-US\";}s:4:\"type\";s:6:\"string\";}s:10:\"LocaleList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:4:\"type\";s:5:\"array\";}s:10:\"MaxResults\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:50;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:7:\"Message\";O:8:\"stdClass\":4:{s:11:\"description\";s:63:\"The
  message object that provides the message text and its type.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ContentString\";s:11:\"description\";s:24:\"The
  text of the message.\";}s:11:\"contentType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ContentType\";s:11:\"description\";s:39:\"The
  content type of the message string.\";}}s:8:\"required\";a:2:{i:0;s:11:\"contentType\";i:1;s:7:\"content\";}s:4:\"type\";s:6:\"object\";}s:11:\"MessageList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}s:8:\"maxItems\";i:5;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:14:\"MessageVersion\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:5;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:4:\"Name\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:64;s:9:\"minLength\";i:1;s:7:\"pattern\";s:10:\"[a-zA-Z_]+\";s:4:\"type\";s:6:\"string\";}s:9:\"NextToken\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"NotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"The
  resource specified in the request was not found. Check the resource and try again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:16:\"NumericalVersion\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:64;s:9:\"minLength\";i:1;s:7:\"pattern\";s:6:\"[0-9]+\";s:4:\"type\";s:6:\"string\";}s:27:\"PreconditionFailedException\";O:8:\"stdClass\":3:{s:11:\"description\";s:148:\"
  The checksum of the resource that you are trying to change does not match the checksum
  in the request. Check the resource's checksum and try again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Priority\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:100;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:15:\"ProcessBehavior\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:4:\"SAVE\";i:1;s:5:\"BUILD\";}s:4:\"type\";s:6:\"string\";}s:6:\"Prompt\";O:8:\"stdClass\":4:{s:11:\"description\";s:303:\"Obtains
  information from the user. To define a prompt, provide one or more messages and
  specify the number of attempts to get information from the user. If you provide
  more than one message, Amazon Lex chooses one of the messages to use to prompt the
  user. For more information, see <a>how-it-works</a>.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"maxAttempts\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/PromptMaxAttempts\";s:11:\"description\";s:55:\"The
  number of times to prompt the user for information.\";}s:8:\"messages\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/MessageList\";s:11:\"description\";s:170:\"An
  array of objects, each of which provides a message string and its type. You can
  specify the message string in plain text or in Speech Synthesis Markup Language
  (SSML).\";}s:12:\"responseCard\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResponseCard\";s:11:\"description\";s:236:\"A
  response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code>
  API response. It substitutes session attributes and slot values for placeholders
  in the response card. For more information, see <a>ex-resp-card</a>. \";}}s:8:\"required\";a:2:{i:0;s:8:\"messages\";i:1;s:11:\"maxAttempts\";}s:4:\"type\";s:6:\"object\";}s:17:\"PromptMaxAttempts\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:5;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:18:\"PutBotAliasRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"botVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:23:\"The
  version of the bot.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:585:\"<p>Identifies
  a specific revision of the <code>$LATEST</code> version.</p> <p>When you create
  a new bot alias, leave the <code>checksum</code> field blank. If you specify a checksum
  you get a <code>BadRequestException</code> exception.</p> <p>When you want to update
  a bot alias, set the <code>checksum</code> field to the checksum of the most recent
  revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code>
  field, or if the checksum does not match the <code>$LATEST</code> version, you get
  a <code>PreconditionFailedException</code> exception.</p>\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:27:\"A
  description of the alias.\";}}s:8:\"required\";a:1:{i:0;s:10:\"botVersion\";}s:4:\"type\";s:6:\"object\";}s:19:\"PutBotAliasResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:45:\"The
  name of the bot that the alias points to.\";}s:10:\"botVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:48:\"The
  version of the bot that the alias points to.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:50:\"The
  checksum for the current version of the alias.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the bot alias was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:27:\"A
  description of the alias.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:126:\"The
  date that the bot alias was updated. When you create a resource, the creation date
  and the last updated date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/AliasName\";s:11:\"description\";s:22:\"The
  name of the alias.\";}}s:4:\"type\";s:6:\"object\";}s:13:\"PutBotRequest\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":9:{s:14:\"abortStatement\";O:8:\"stdClass\":1:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:38:\"I
  don't understand. Can you try again?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:30:\"I'm
  sorry, I don't understand.\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:13:\"childDirected\";b:1;s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:66:\"I'm
  sorry, I didn't hear that. Can you repeate what you just said?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"Can
  you say that again?\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:11:\"description\";s:37:\"Orders
  a pizza from a local pizzeria.\";s:23:\"idleSessionTTLInSeconds\";i:300;s:7:\"intents\";a:1:{i:0;O:8:\"stdClass\":2:{s:10:\"intentName\";s:13:\"DocOrderPizza\";s:13:\"intentVersion\";s:7:\"$LATEST\";}}s:6:\"locale\";s:5:\"en-US\";s:4:\"name\";s:16:\"DocOrderPizzaBot\";s:15:\"processBehavior\";s:4:\"SAVE\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:14:\"abortStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:897:\"<p>When
  Amazon Lex can't understand the user's input in context, it tries to elicit the
  information a few times. After that, Amazon Lex sends the message defined in <code>abortStatement</code>
  to the user, and then aborts the conversation. To set the number of retries, use
  the <code>valueElicitationPrompt</code> field for the slot type. </p> <p>For example,
  in a pizza ordering bot, Amazon Lex might ask a user \"What type of crust would
  you like?\" If the user's response is not one of the expected responses (for example,
  \"thin crust, \"deep dish,\" etc.), Amazon Lex tries to elicit a correct response
  a few more times. </p> <p>For example, in a pizza ordering application, <code>OrderPizza</code>
  might be one of the intents. This intent might require the <code>CrustType</code>
  slot. You specify the <code>valueElicitationPrompt</code> field when you create
  the <code>CrustType</code> slot.</p>\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:573:\"<p>Identifies
  a specific revision of the <code>$LATEST</code> version.</p> <p>When you create
  a new bot, leave the <code>checksum</code> field blank. If you specify a checksum
  you get a <code>BadRequestException</code> exception.</p> <p>When you want to update
  a bot, set the <code>checksum</code> field to the checksum of the most recent revision
  of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code>
  field, or if the checksum does not match the <code>$LATEST</code> version, you get
  a <code>PreconditionFailedException</code> exception.</p>\";}s:13:\"childDirected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Boolean\";s:11:\"description\";s:1760:\"<p>For
  each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
  specify whether your use of Amazon Lex is related to a website, program, or other
  application that is directed or targeted, in whole or in part, to children under
  age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
  <code>true</code> or <code>false</code> in the <code>childDirected</code> field.
  By specifying <code>true</code> in the <code>childDirected</code> field, you confirm
  that your use of Amazon Lex <b>is</b> related to a website, program, or other application
  that is directed or targeted, in whole or in part, to children under age 13 and
  subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code>
  field, you confirm that your use of Amazon Lex <b>is not</b> related to a website,
  program, or other application that is directed or targeted, in whole or in part,
  to children under age 13 and subject to COPPA. You may not specify a default value
  for the <code>childDirected</code> field that does not accurately reflect whether
  your use of Amazon Lex is related to a website, program, or other application that
  is directed or targeted, in whole or in part, to children under age 13 and subject
  to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other
  application that is directed in whole or in part, to children under age 13, you
  must obtain any required verifiable parental consent under COPPA. For information
  regarding the use of Amazon Lex in connection with websites, programs, or other
  applications that are directed or targeted, in whole or in part, to children under
  age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon
  Lex FAQ.</a> </p>\";}s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:609:\"<p>When
  Amazon Lex doesn't understand the user's intent, it uses this message to get clarification.
  To specify how many times Amazon Lex should repeate the clarification prompt, use
  the <code>maxAttempts</code> field. If Amazon Lex still doesn't understand, it sends
  the message in the <code>abortStatement</code> field. </p> <p>When you create a
  clarification prompt, make sure that it suggests the correct response from the user.
  for example, for a bot that orders pizza and drinks, you might create this clarification
  prompt: \"What would you like to do? You can say 'Order a pizza' or 'Order a drink.'\"</p>\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:25:\"A
  description of the bot.\";}s:23:\"idleSessionTTLInSeconds\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/SessionTTL\";s:11:\"description\";s:846:\"<p>The
  maximum time in seconds that Amazon Lex retains the data gathered in a conversation.</p>
  <p>A user interaction session remains active for the amount of time specified. If
  no conversation occurs during this time, the session expires and Amazon Lex deletes
  any data provided before the timeout.</p> <p>For example, suppose that a user chooses
  the OrderPizza intent, but gets sidetracked halfway through placing an order. If
  the user doesn't complete the order within the specified time, Amazon Lex discards
  the slot information that it gathered, and the user must start over.</p> <p>If you
  don't include the <code>idleSessionTTLInSeconds</code> element in a <code>PutBot</code>
  operation request, Amazon Lex uses the default value. This is also true if the request
  replaces an existing bot.</p> <p>The default is 300 seconds (5 minutes).</p>\";}s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentList\";s:11:\"description\";s:215:\"An
  array of <code>Intent</code> objects. Each intent represents a command that a user
  can express. For example, a pizza ordering bot might support an OrderPizza intent.
  For more information, see <a>how-it-works</a>.\";}s:6:\"locale\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";s:11:\"description\";s:165:\"<p>
  Specifies the target locale for the bot. Any intent used in the bot must be compatible
  with the locale of the bot. </p> <p>The default is <code>en-US</code>.</p>\";}s:15:\"processBehavior\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/ProcessBehavior\";s:11:\"description\";s:302:\"<p>If
  you set the <code>processBehavior</code> element to <code>Build</code>, Amazon Lex
  builds the bot so that it can be run. If you set the element to <code>Save</code>Amazon
  Lex saves the bot, but doesn't build it. </p> <p>If you don't specify this value,
  the default value is <code>Save</code>.</p>\";}s:7:\"voiceId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:324:\"The
  Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with
  the user. The locale configured for the voice must match the locale of the bot.
  For more information, see <a href=\"http://docs.aws.amazon.com/polly/latest/dg/voicelist.html\">Available
  Voices</a> in the <i>Amazon Polly Developer Guide</i>.\";}}s:8:\"required\";a:2:{i:0;s:6:\"locale\";i:1;s:13:\"childDirected\";}s:4:\"type\";s:6:\"object\";}s:14:\"PutBotResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":13:{s:14:\"abortStatement\";O:8:\"stdClass\":1:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:38:\"I
  don't understand. Can you try again?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:30:\"I'm
  sorry, I don't understand.\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:8:\"checksum\";s:36:\"20172ee3-fa06-49b2-bbc5-667c090303e9\";s:13:\"childDirected\";b:1;s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:66:\"I'm
  sorry, I didn't hear that. Can you repeate what you just said?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"Can
  you say that again?\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:11:\"createdDate\";d:1494360160.1329999;s:11:\"description\";s:37:\"Orders
  a pizza from a local pizzeria.\";s:23:\"idleSessionTTLInSeconds\";i:300;s:7:\"intents\";a:1:{i:0;O:8:\"stdClass\":2:{s:10:\"intentName\";s:13:\"DocOrderPizza\";s:13:\"intentVersion\";s:7:\"$LATEST\";}}s:15:\"lastUpdatedDate\";d:1494360160.1329999;s:6:\"locale\";s:5:\"en-US\";s:4:\"name\";s:16:\"DocOrderPizzaBot\";s:6:\"status\";s:9:\"NOT_BUILT\";s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:14:\"abortStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:98:\"The
  message that Amazon Lex uses to abort a conversation. For more information, see
  <a>PutBot</a>.\";}s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:37:\"Checksum
  of the bot that you created.\";}s:13:\"childDirected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Boolean\";s:11:\"description\";s:1760:\"<p>For
  each Amazon Lex bot created with the Amazon Lex Model Building Service, you must
  specify whether your use of Amazon Lex is related to a website, program, or other
  application that is directed or targeted, in whole or in part, to children under
  age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying
  <code>true</code> or <code>false</code> in the <code>childDirected</code> field.
  By specifying <code>true</code> in the <code>childDirected</code> field, you confirm
  that your use of Amazon Lex <b>is</b> related to a website, program, or other application
  that is directed or targeted, in whole or in part, to children under age 13 and
  subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code>
  field, you confirm that your use of Amazon Lex <b>is not</b> related to a website,
  program, or other application that is directed or targeted, in whole or in part,
  to children under age 13 and subject to COPPA. You may not specify a default value
  for the <code>childDirected</code> field that does not accurately reflect whether
  your use of Amazon Lex is related to a website, program, or other application that
  is directed or targeted, in whole or in part, to children under age 13 and subject
  to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other
  application that is directed in whole or in part, to children under age 13, you
  must obtain any required verifiable parental consent under COPPA. For information
  regarding the use of Amazon Lex in connection with websites, programs, or other
  applications that are directed or targeted, in whole or in part, to children under
  age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon
  Lex FAQ.</a> </p>\";}s:19:\"clarificationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:121:\"
  The prompts that Amazon Lex uses when it doesn't understand the user's intent. For
  more information, see <a>PutBot</a>. \";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:34:\"The
  date that the bot was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:25:\"A
  description of the bot.\";}s:13:\"failureReason\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:110:\"If
  <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that
  it failed to build the bot.\";}s:23:\"idleSessionTTLInSeconds\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/SessionTTL\";s:11:\"description\";s:128:\"The
  maximum length of time that Amazon Lex retains the data gathered in a conversation.
  For more information, see <a>PutBot</a>.\";}s:7:\"intents\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentList\";s:11:\"description\";s:81:\"An
  array of <code>Intent</code> objects. For more information, see <a>PutBot</a>.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:116:\"The
  date that the bot was updated. When you create a resource, the creation date and
  last updated date are the same.\";}s:6:\"locale\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";s:11:\"description\";s:32:\"
  The target locale for the bot. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/BotName\";s:11:\"description\";s:20:\"The
  name of the bot.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:598:\"<p>
  When you send a request to create a bot with <code>processBehavior</code> set to
  <code>BUILD</code>, Amazon Lex sets the <code>status</code> response element to
  <code>BUILDING</code>. After Amazon Lex builds the bot, it sets <code>status</code>
  to <code>READY</code>. If Amazon Lex can't build the bot, Amazon Lex sets <code>status</code>
  to <code>FAILED</code>. Amazon Lex returns the reason for the failure in the <code>failureReason</code>
  response element. </p> <p>When you set <code>processBehavior</code>to <code>SAVE</code>,
  Amazon Lex sets the status code to <code>NOT BUILT</code>.</p>\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:82:\"The
  version of the bot. For a new bot, the version is always <code>$LATEST</code>.\";}s:7:\"voiceId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:124:\"The
  Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
  For more information, see <a>PutBot</a>.\";}}s:4:\"type\";s:6:\"object\";}s:16:\"PutIntentRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":8:{s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:74:\"All
  right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:69:\"OK,
  your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\";s:11:\"contentType\";s:9:\"PlainText\";}}s:12:\"responseCard\";s:3:\"foo\";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:1:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:67:\"Should
  I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:11:\"description\";s:36:\"Order
  a pizza from a local pizzeria.\";s:19:\"fulfillmentActivity\";O:8:\"stdClass\":1:{s:4:\"type\";s:12:\"ReturnIntent\";}s:4:\"name\";s:13:\"DocOrderPizza\";s:18:\"rejectionStatement\";O:8:\"stdClass\":1:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:27:\"Ok,
  I'll cancel your order.\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"I
  cancelled your order.\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:16:\"sampleUtterances\";a:4:{i:0;s:17:\"Order
  me a pizza.\";i:1;s:24:\"Order me a {Type} pizza.\";i:2;s:35:\"I want a {Crust}
  crust {Type} pizza\";i:3;s:55:\"I want a {Crust} crust {Type} pizza with {Sauce}
  sauce.\";}s:5:\"slots\";a:3:{i:0;O:8:\"stdClass\":8:{s:11:\"description\";s:27:\"The
  type of pizza to order.\";s:4:\"name\";s:4:\"Type\";s:8:\"priority\";i:1;s:16:\"sampleUtterances\";a:3:{i:0;s:22:\"Get
  me a {Type} pizza.\";i:1;s:22:\"A {Type} pizza please.\";i:2;s:24:\"I'd like a {Type}
  pizza.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:12:\"DocPizzaType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:3:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:34:\"What
  type of pizza would you like?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:22:\"Vegie
  or cheese pizza?\";s:11:\"contentType\";s:9:\"PlainText\";}i:2;O:8:\"stdClass\":2:{s:7:\"content\";s:40:\"I
  can get you a vegie or a cheese pizza.\";s:11:\"contentType\";s:9:\"PlainText\";}}}}i:1;O:8:\"stdClass\":8:{s:11:\"description\";s:33:\"The
  type of pizza crust to order.\";s:4:\"name\";s:5:\"Crust\";s:8:\"priority\";i:2;s:16:\"sampleUtterances\";a:2:{i:0;s:24:\"Make
  it a {Crust} crust.\";i:1;s:25:\"I'd like a {Crust} crust.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:17:\"DocPizzaCrustType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:34:\"What
  type of crust would you like?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:20:\"Thick
  or thin crust?\";s:11:\"contentType\";s:9:\"PlainText\";}}}}i:2;O:8:\"stdClass\":8:{s:11:\"description\";s:38:\"The
  type of sauce to use on the pizza.\";s:4:\"name\";s:5:\"Sauce\";s:8:\"priority\";i:3;s:16:\"sampleUtterances\";a:2:{i:0;s:22:\"Make
  it {Sauce} sauce.\";i:1;s:23:\"I'd like {Sauce} sauce.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:17:\"DocPizzaSauceType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:19:\"White
  or red sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"Garlic
  or tomato sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}}}}}}s:10:\"properties\";O:8:\"stdClass\":11:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:579:\"<p>Identifies
  a specific revision of the <code>$LATEST</code> version.</p> <p>When you create
  a new intent, leave the <code>checksum</code> field blank. If you specify a checksum
  you get a <code>BadRequestException</code> exception.</p> <p>When you want to update
  a intent, set the <code>checksum</code> field to the checksum of the most recent
  revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code>
  field, or if the checksum does not match the <code>$LATEST</code> version, you get
  a <code>PreconditionFailedException</code> exception.</p>\";}s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:472:\"<p>
  The statement that you want Amazon Lex to convey to the user after the intent is
  successfully fulfilled by the Lambda function. </p> <p>This element is relevant
  only if you provide a Lambda function in the <code>fulfillmentActivity</code>. If
  you return the intent to the client application, you can't specify this element.</p>
  <note> <p>The <code>followUpPrompt</code> and <code>conclusionStatement</code> are
  mutually exclusive. You can specify only one.</p> </note>\";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:629:\"<p>Prompts
  the user to confirm the intent. This question should have a yes or no answer.</p>
  <p>Amazon Lex uses this prompt to ensure that the user acknowledges that the intent
  is ready for fulfillment. For example, with the <code>OrderPizza</code> intent,
  you might want to confirm that the order is correct before placing it. For other
  intents, such as intents that simply respond to user questions, you might not need
  to ask the user for confirmation before providing the information. </p> <note> <p>You
  you must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>,
  or neither.</p> </note>\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:28:\"A
  description of the intent.\";}s:14:\"dialogCodeHook\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/CodeHook\";s:11:\"description\";s:545:\"<p>
  Specifies a Lambda function to invoke for each user input. You can invoke this Lambda
  function to personalize user interaction. </p> <p>For example, suppose your bot
  determines that the user is John. Your Lambda function might retrieve John's information
  from a backend database and prepopulate some of the values. For example, if you
  find that John is gluten intolerant, you might set the corresponding intent slot,
  <code>GlutenIntolerant</code>, to true. You might find John's phone number and set
  the corresponding session attribute. </p>\";}s:14:\"followUpPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/FollowUpPrompt\";s:11:\"description\";s:913:\"<p>Amazon
  Lex uses this prompt to solicit additional activity after fulfilling an intent.
  For example, after the <code>OrderPizza</code> intent is fulfilled, you might prompt
  the user to order a drink.</p> <p>The action that Amazon Lex takes depends on the
  user's response, as follows:</p> <ul> <li> <p>If the user says \"Yes\" it responds
  with the clarification prompt that is configured for the bot.</p> </li> <li> <p>if
  the user says \"Yes\" and continues with an utterance that triggers an intent it
  starts a conversation for the intent.</p> </li> <li> <p>If the user says \"No\"
  it responds with the rejection statement configured for the the follow-up prompt.</p>
  </li> <li> <p>If it doesn't recognize the utterance it repeats the follow-up prompt
  again.</p> </li> </ul> <p>The <code>followUpPrompt</code> field and the <code>conclusionStatement</code>
  field are mutually exclusive. You can specify only one. </p>\";}s:19:\"fulfillmentActivity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/FulfillmentActivity\";s:11:\"description\";s:451:\"<p>Required.
  Describes how the intent is fulfilled. For example, after a user provides all of
  the information for a pizza order, <code>fulfillmentActivity</code> defines how
  the bot places an order with a local pizza store. </p> <p> You might configure Amazon
  Lex to return all of the intent information to the client application, or direct
  it to invoke a Lambda function that can process the intent (for example, place an
  order with a pizzeria). </p>\";}s:21:\"parentIntentSignature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BuiltinIntentSignature\";s:11:\"description\";s:291:\"A
  unique identifier for the built-in intent to base this intent on. To find the signature
  for an intent, see <a href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\">Standard
  Built-in Intents</a> in the <i>Alexa Skills Kit</i>.\";}s:18:\"rejectionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:312:\"<p>When
  the user answers \"no\" to the question defined in <code>confirmationPrompt</code>,
  Amazon Lex responds with this statement to acknowledge that the intent was canceled.
  </p> <note> <p>You must provide both the <code>rejectionStatement</code> and the
  <code>confirmationPrompt</code>, or neither.</p> </note>\";}s:16:\"sampleUtterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/IntentUtteranceList\";s:11:\"description\";s:232:\"<p>An
  array of utterances (strings) that a user might say to signal the intent. For example,
  \"I want {PizzaSize} pizza\", \"Order {Quantity} {PizzaSize} pizzas\". </p> <p>In
  each utterance, a slot name is enclosed in curly braces. </p>\";}s:5:\"slots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/SlotList\";s:11:\"description\";s:175:\"An
  array of intent slots. At runtime, Amazon Lex elicits required slot values from
  the user using prompts defined in the slots. For more information, see <a>how-it-works</a>.
  \";}}s:4:\"type\";s:6:\"object\";}s:17:\"PutIntentResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":12:{s:8:\"checksum\";s:36:\"ca9bc13d-afc8-4706-bbaf-091f7a5935d6\";s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:74:\"All
  right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:69:\"OK,
  your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\";s:11:\"contentType\";s:9:\"PlainText\";}}s:12:\"responseCard\";s:3:\"foo\";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:1:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:67:\"Should
  I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:11:\"createdDate\";d:1494359783.4530001;s:11:\"description\";s:36:\"Order
  a pizza from a local pizzeria.\";s:19:\"fulfillmentActivity\";O:8:\"stdClass\":1:{s:4:\"type\";s:12:\"ReturnIntent\";}s:15:\"lastUpdatedDate\";d:1494359783.4530001;s:4:\"name\";s:13:\"DocOrderPizza\";s:18:\"rejectionStatement\";O:8:\"stdClass\":1:{s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:27:\"Ok,
  I'll cancel your order.\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"I
  cancelled your order.\";s:11:\"contentType\";s:9:\"PlainText\";}}}s:16:\"sampleUtterances\";a:4:{i:0;s:17:\"Order
  me a pizza.\";i:1;s:24:\"Order me a {Type} pizza.\";i:2;s:35:\"I want a {Crust}
  crust {Type} pizza\";i:3;s:55:\"I want a {Crust} crust {Type} pizza with {Sauce}
  sauce.\";}s:5:\"slots\";a:3:{i:0;O:8:\"stdClass\":8:{s:11:\"description\";s:38:\"The
  type of sauce to use on the pizza.\";s:4:\"name\";s:5:\"Sauce\";s:8:\"priority\";i:3;s:16:\"sampleUtterances\";a:2:{i:0;s:22:\"Make
  it {Sauce} sauce.\";i:1;s:23:\"I'd like {Sauce} sauce.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:17:\"DocPizzaSauceType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:19:\"White
  or red sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:23:\"Garlic
  or tomato sauce?\";s:11:\"contentType\";s:9:\"PlainText\";}}}}i:1;O:8:\"stdClass\":8:{s:11:\"description\";s:27:\"The
  type of pizza to order.\";s:4:\"name\";s:4:\"Type\";s:8:\"priority\";i:1;s:16:\"sampleUtterances\";a:3:{i:0;s:22:\"Get
  me a {Type} pizza.\";i:1;s:22:\"A {Type} pizza please.\";i:2;s:24:\"I'd like a {Type}
  pizza.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:12:\"DocPizzaType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:3:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:34:\"What
  type of pizza would you like?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:22:\"Vegie
  or cheese pizza?\";s:11:\"contentType\";s:9:\"PlainText\";}i:2;O:8:\"stdClass\":2:{s:7:\"content\";s:40:\"I
  can get you a vegie or a cheese pizza.\";s:11:\"contentType\";s:9:\"PlainText\";}}}}i:2;O:8:\"stdClass\":8:{s:11:\"description\";s:33:\"The
  type of pizza crust to order.\";s:4:\"name\";s:5:\"Crust\";s:8:\"priority\";i:2;s:16:\"sampleUtterances\";a:2:{i:0;s:24:\"Make
  it a {Crust} crust.\";i:1;s:25:\"I'd like a {Crust} crust.\";}s:14:\"slotConstraint\";s:8:\"Required\";s:8:\"slotType\";s:17:\"DocPizzaCrustType\";s:15:\"slotTypeVersion\";s:7:\"$LATEST\";s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:11:\"maxAttempts\";i:1;s:8:\"messages\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"content\";s:34:\"What
  type of crust would you like?\";s:11:\"contentType\";s:9:\"PlainText\";}i:1;O:8:\"stdClass\":2:{s:7:\"content\";s:20:\"Thick
  or thin crust?\";s:11:\"contentType\";s:9:\"PlainText\";}}}}}s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:77:\"Checksum
  of the <code>$LATEST</code>version of the intent created or updated.\";}s:19:\"conclusionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:148:\"After
  the Lambda function specified in the<code>fulfillmentActivity</code>intent fulfills
  the intent, Amazon Lex conveys this statement to the user.\";}s:18:\"confirmationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:97:\"If
  defined in the intent, Amazon Lex prompts the user to confirm the intent before
  fulfilling it.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:37:\"The
  date that the intent was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:28:\"A
  description of the intent.\";}s:14:\"dialogCodeHook\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/CodeHook\";s:11:\"description\";s:86:\"If
  defined in the intent, Amazon Lex invokes this Lambda function for each user input.\";}s:14:\"followUpPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/FollowUpPrompt\";s:11:\"description\";s:120:\"If
  defined in the intent, Amazon Lex uses this prompt to solicit additional user activity
  after the intent is fulfilled.\";}s:19:\"fulfillmentActivity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/FulfillmentActivity\";s:11:\"description\";s:158:\"If
  defined in the intent, Amazon Lex invokes this Lambda function to fulfill the intent
  after the user provides all of the information required by the intent.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:119:\"The
  date that the intent was updated. When you create a resource, the creation date
  and last update dates are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/IntentName\";s:11:\"description\";s:23:\"The
  name of the intent.\";}s:21:\"parentIntentSignature\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BuiltinIntentSignature\";s:11:\"description\";s:73:\"A
  unique identifier for the built-in intent that this intent is based on.\";}s:18:\"rejectionStatement\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Statement\";s:11:\"description\";s:169:\"If
  the user answers \"no\" to the question defined in <code>confirmationPrompt</code>
  Amazon Lex responds with this statement to acknowledge that the intent was canceled.
  \";}s:16:\"sampleUtterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/IntentUtteranceList\";s:11:\"description\";s:67:\"
  An array of sample utterances that are configured for the intent. \";}s:5:\"slots\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/SlotList\";s:11:\"description\";s:60:\"An
  array of intent slots that are configured for the intent.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:88:\"The
  version of the intent. For a new intent, the version is always <code>$LATEST</code>.\";}}s:4:\"type\";s:6:\"object\";}s:18:\"PutSlotTypeRequest\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"Available
  pizza sauces\";s:17:\"enumerationValues\";a:2:{i:0;O:8:\"stdClass\":1:{s:5:\"value\";s:3:\"red\";}i:1;O:8:\"stdClass\":1:{s:5:\"value\";s:5:\"white\";}}s:4:\"name\";s:14:\"PizzaSauceType\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:585:\"<p>Identifies
  a specific revision of the <code>$LATEST</code> version.</p> <p>When you create
  a new slot type, leave the <code>checksum</code> field blank. If you specify a checksum
  you get a <code>BadRequestException</code> exception.</p> <p>When you want to update
  a slot type, set the <code>checksum</code> field to the checksum of the most recent
  revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code>
  field, or if the checksum does not match the <code>$LATEST</code> version, you get
  a <code>PreconditionFailedException</code> exception.</p>\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the slot type.\";}s:17:\"enumerationValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/EnumerationValues\";s:11:\"description\";s:727:\"<p>A
  list of <code>EnumerationValue</code> objects that defines the values that the slot
  type can take. Each value can have a list of <code>synonyms</code>, which are additional
  values that help train the machine learning model about the values that it resolves
  for a slot. </p> <p>When Amazon Lex resolves a slot value, it generates a resolution
  list that contains up to five possible values for the slot. If you are using a Lambda
  function, this resolution list is passed to the function. If you are not using a
  Lambda function you can choose to return the value that the user entered or the
  first value in the resolution list as the slot value. The <code>valueSelectionStrategy</code>
  field indicates the option to use. </p>\";}s:22:\"valueSelectionStrategy\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/SlotValueSelectionStrategy\";s:11:\"description\";s:621:\"<p>Determines
  the slot resolution strategy that Amazon Lex uses to return slot type values. The
  field can be set to one of the following values:</p> <ul> <li> <p> <code>ORIGINAL_VALUE</code>
  - Returns the value entered by the user, if the user value is similar to the slot
  value.</p> </li> <li> <p> <code>TOP_RESOLUTION</code> - If there is a resolution
  list for the slot, return the first value in the resolution list as the slot type
  value. If there is no resolution list, null is returned.</p> </li> </ul> <p>If you
  don't specify the <code>valueSelectionStrategy</code>, the default is <code>ORIGINAL_VALUE</code>.</p>\";}}s:4:\"type\";s:6:\"object\";}s:19:\"PutSlotTypeResponse\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":7:{s:8:\"checksum\";s:36:\"cfd00ed1-775d-4357-947c-aca7e73b44ba\";s:11:\"createdDate\";d:1494356442.23;s:11:\"description\";s:22:\"Available
  pizza sauces\";s:17:\"enumerationValues\";a:2:{i:0;O:8:\"stdClass\":1:{s:5:\"value\";s:3:\"red\";}i:1;O:8:\"stdClass\":1:{s:5:\"value\";s:5:\"white\";}}s:15:\"lastUpdatedDate\";d:1494356442.23;s:4:\"name\";s:17:\"DocPizzaSauceType\";s:7:\"version\";s:7:\"$LATEST\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"checksum\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:62:\"Checksum
  of the <code>$LATEST</code> version of the slot type.\";}s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the slot type was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the slot type.\";}s:17:\"enumerationValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/EnumerationValues\";s:11:\"description\";s:100:\"A
  list of <code>EnumerationValue</code> objects that defines the values that the slot
  type can take.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:122:\"The
  date that the slot type was updated. When you create a slot type, the creation date
  and last update date are the same.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/SlotTypeName\";s:11:\"description\";s:26:\"The
  name of the slot type.\";}s:22:\"valueSelectionStrategy\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/SlotValueSelectionStrategy\";s:11:\"description\";s:131:\"The
  slot resolution strategy that Amazon Lex uses to determine the value of the slot.
  For more information, see <a>PutSlotType</a>.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:95:\"The
  version of the slot type. For a new slot type, the version is always <code>$LATEST</code>.
  \";}}s:4:\"type\";s:6:\"object\";}s:13:\"ReferenceType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:6:\"Intent\";i:1;s:3:\"Bot\";i:2;s:8:\"BotAlias\";i:3;s:10:\"BotChannel\";}s:4:\"type\";s:6:\"string\";}s:22:\"ResourceInUseException\";O:8:\"stdClass\":3:{s:11:\"description\";s:460:\"<p>The
  resource that you are attempting to delete is referred to by another resource. Use
  this information to remove references to the resource that you are trying to delete.</p>
  <p>The body of the exception contains a JSON object that describes the resource.</p>
  <p> <code>{ \"resourceType\": BOT | BOTALIAS | BOTCHANNEL | INTENT,</code> </p>
  <p> <code>\"resourceReference\": {</code> </p> <p> <code>\"name\": <i>string</i>,
  \"version\": <i>string</i> } }</code> </p>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"exampleReference\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ResourceReference\";}s:13:\"referenceType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ReferenceType\";}}s:4:\"type\";s:6:\"object\";}s:17:\"ResourceReference\";O:8:\"stdClass\":3:{s:11:\"description\";s:172:\"Describes
  the resource that refers to the resource that you are attempting to delete. This
  object is returned as part of the <code>ResourceInUseException</code> exception.
  \";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Name\";s:11:\"description\";s:82:\"The
  name of the resource that is using the resource that you are trying to delete.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:85:\"The
  version of the resource that is using the resource that you are trying to delete.\";}}s:4:\"type\";s:6:\"object\";}s:12:\"ResourceType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:3:\"BOT\";}s:4:\"type\";s:6:\"string\";}s:12:\"ResponseCard\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:50000;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:10:\"SessionTTL\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:86400;s:7:\"minimum\";i:60;s:4:\"type\";s:7:\"integer\";}s:4:\"Slot\";O:8:\"stdClass\":4:{s:11:\"description\";s:42:\"Identifies
  the version of a specific slot.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:26:\"A
  description of the slot.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/SlotName\";s:11:\"description\";s:21:\"The
  name of the slot.\";}s:8:\"priority\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/Priority\";s:11:\"description\";s:307:\"<p>
  Directs Lex the order in which to elicit this slot value from the user. For example,
  if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value
  for the slot with priority 1.</p> <p>If multiple slots share the same priority,
  the order in which Lex elicits values is arbitrary.</p>\";}s:12:\"responseCard\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResponseCard\";s:11:\"description\";s:156:\"
  A set of possible responses for the slot type used by text-based clients. A user
  chooses an option from the response card, instead of using text to reply. \";}s:16:\"sampleUtterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/SlotUtteranceList\";s:11:\"description\";s:249:\"
  If you know a specific pattern with which users might respond to an Amazon Lex request
  for a slot value, you can provide those utterances to improve accuracy. This is
  optional. In most cases, Amazon Lex is capable of understanding user utterances.
  \";}s:14:\"slotConstraint\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/SlotConstraint\";s:11:\"description\";s:52:\"Specifies
  whether the slot is required or optional. \";}s:8:\"slotType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/CustomOrBuiltinSlotTypeName\";s:11:\"description\";s:99:\"The
  type of the slot, either a custom slot type that you defined or one of the built-in
  slot types.\";}s:15:\"slotTypeVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:29:\"The
  version of the slot type.\";}s:22:\"valueElicitationPrompt\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Prompt\";s:11:\"description\";s:71:\"The
  prompt that Amazon Lex uses to elicit the slot value from the user.\";}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:14:\"slotConstraint\";}s:4:\"type\";s:6:\"object\";}s:14:\"SlotConstraint\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:8:\"Required\";i:1;s:8:\"Optional\";}s:4:\"type\";s:6:\"string\";}s:8:\"SlotList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Slot\";}s:8:\"maxItems\";i:100;s:8:\"minItems\";i:0;s:4:\"type\";s:5:\"array\";}s:8:\"SlotName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:53:\"^[a-zA-Z]+(((_|.)[a-zA-Z]+)*|([a-zA-Z]+(_|.))*|(_|.))\";s:4:\"type\";s:6:\"string\";}s:16:\"SlotTypeMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Provides
  information about a slot type..\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"createdDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:40:\"The
  date that the slot type was created.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Description\";s:11:\"description\";s:31:\"A
  description of the slot type.\";}s:15:\"lastUpdatedDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:123:\"The
  date that the slot type was updated. When you create a resource, the creation date
  and last updated date are the same. \";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/SlotTypeName\";s:11:\"description\";s:26:\"The
  name of the slot type.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:29:\"The
  version of the slot type.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"SlotTypeMetadataList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/SlotTypeMetadata\";}s:4:\"type\";s:5:\"array\";}s:12:\"SlotTypeName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:1;s:7:\"pattern\";s:41:\"^[a-zA-Z]+((_[a-zA-Z]+)*|([a-zA-Z]+_)*|_)\";s:4:\"type\";s:6:\"string\";}s:17:\"SlotUtteranceList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Utterance\";}s:8:\"maxItems\";i:10;s:8:\"minItems\";i:0;s:4:\"type\";s:5:\"array\";}s:26:\"SlotValueSelectionStrategy\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:14:\"ORIGINAL_VALUE\";i:1;s:14:\"TOP_RESOLUTION\";}s:4:\"type\";s:6:\"string\";}s:9:\"Statement\";O:8:\"stdClass\":4:{s:11:\"description\";s:116:\"A
  collection of messages that convey information to the user. At runtime, Amazon Lex
  selects the message to convey. \";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"messages\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/MessageList\";s:11:\"description\";s:32:\"A
  collection of message objects.\";}s:12:\"responseCard\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResponseCard\";s:11:\"description\";s:290:\"
  At runtime, if the client is using the <a href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a>
  API, Amazon Lex includes the response card in the response. It substitutes all of
  the session attributes and slot values for placeholders in the response card. \";}}s:8:\"required\";a:1:{i:0;s:8:\"messages\";}s:4:\"type\";s:6:\"object\";}s:6:\"Status\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"BUILDING\";i:1;s:5:\"READY\";i:2;s:6:\"FAILED\";i:3;s:9:\"NOT_BUILT\";}s:4:\"type\";s:6:\"string\";}s:10:\"StatusType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:8:\"Detected\";i:1;s:6:\"Missed\";}s:4:\"type\";s:6:\"string\";}s:6:\"String\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"SynonymList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Value\";}s:4:\"type\";s:5:\"array\";}s:9:\"Timestamp\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:6:\"UserId\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:100;s:9:\"minLength\";i:2;s:4:\"type\";s:6:\"string\";}s:9:\"Utterance\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:200;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:13:\"UtteranceData\";O:8:\"stdClass\":3:{s:11:\"description\";s:73:\"Provides
  information about a single utterance that was made to your bot. \";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"count\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:19:\"#/definitions/Count\";s:11:\"description\";s:53:\"The
  number of times that the utterance was processed.\";}s:13:\"distinctUsers\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:19:\"#/definitions/Count\";s:11:\"description\";s:56:\"The
  total number of individuals that used the utterance.\";}s:16:\"firstUtteredDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:47:\"The
  date that the utterance was first recorded.\";}s:15:\"lastUtteredDate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Timestamp\";s:11:\"description\";s:46:\"The
  date that the utterance was last recorded.\";}s:15:\"utteranceString\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/UtteranceString\";s:11:\"description\";s:82:\"The
  text that was entered by the user or the text representation of an audio clip.\";}}s:4:\"type\";s:6:\"object\";}s:13:\"UtteranceList\";O:8:\"stdClass\":3:{s:11:\"description\";s:131:\"Provides
  a list of utterances that have been made to a specific version of your bot. The
  list contains a maximum of 100 utterances.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"botVersion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Version\";s:11:\"description\";s:47:\"The
  version of the bot that processed the list.\";}s:10:\"utterances\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/ListOfUtterance\";s:11:\"description\";s:153:\"One
  or more <a>UtteranceData</a> objects that contain information about the utterances
  that have been made to a bot. The maximum number of object is 100.\";}}s:4:\"type\";s:6:\"object\";}s:15:\"UtteranceString\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:2000;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:5:\"Value\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:140;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:7:\"Version\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:64;s:9:\"minLength\";i:1;s:7:\"pattern\";s:15:\"\\$LATEST|[0-9]+\";s:4:\"type\";s:6:\"string\";}}"
...
