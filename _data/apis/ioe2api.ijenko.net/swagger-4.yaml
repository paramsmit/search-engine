---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":9:{s:7:\"contact\";O:8:\"stdClass\":3:{s:5:\"email\";s:18:\"contact@ijenko.com\";s:4:\"name\";s:6:\"IJENKO\";s:3:\"url\";s:29:\"http://developers.ijenko.com/\";}s:5:\"title\";s:47:\"IoE\xB2
  IoT API - to create end-user applications\";s:7:\"version\";s:5:\"3.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:3:\"iot\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#383D41\";s:3:\"url\";s:115:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_1706275304__0_logo_carr__fd_gris_400x400.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:41:\"http://developers.ijenko.com/swagger.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:10:\"ijenko.net\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"ijenko\";s:4:\"type\";s:7:\"openapi\";}}"
host: ioe2api.ijenko.net
paths:
  /account/change-password:
    post:
      description: 'Set a new password for the account.nn**Note**: requires full access
        to the *Account*.n'
      operationId: Account.changePassword
      parameters:
      - description: Old and new password
        in: body
        name: changePasswordInfo
        required: true
        schema:
          $ref: '#/definitions/AuthChangePassword'
      responses:
        204:
          description: Change successful.
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: Change the password
      tags:
      - Account
  /account/places:
    get:
      description: List the *Places* of the account.nn**Note:** requires full access
        to the *Account*.n
      operationId: Account.places
      responses:
        200:
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/PlaceItem'
            type: array
            uniqueItems: true
        403:
          $ref: '#/responses/ErrorAccessAccount'
      summary: List Places of the Account
      tags:
      - Account
    parameters: []
    post:
      description: 'Create a new *Place*.nnA *Device* (`class`: `MINT`, `address`:
        `0`) is automatically created and attached to the new *Place*.nn**Note:**
        requires full access to the *Account*.n'
      operationId: Account.newPlace
      parameters:
      - in: body
        name: place
        schema:
          $ref: '#/definitions/PlaceNew'
      responses:
        201:
          description: '*Place* successfully created.'
          headers:
            Location:
              description: Path of the Place created (`/places/{id}`)
              type: string
          schema:
            $ref: '#/definitions/PlaceCreated'
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: Create a Place
      tags:
      - Account
  /account/tokens:
    get:
      description: List the active *Tokens* on the account.nn**Note:** requires full
        access to the *Account*.n
      operationId: Account.tokens
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/UserTokenItem'
            type: array
            uniqueItems: true
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: List active Tokens of the Account
      tags:
      - Account
    parameters: []
  /account/tokens/{tokenId}:
    delete:
      description: Revoke the given *Token*.nn**Note:** requires full access to the
        *Account*.n
      operationId: Account.revokeToken
      responses:
        204:
          $ref: '#/responses/DeleteOK'
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: Revoke a Token
      tags:
      - Account
    parameters:
    - $ref: '#/parameters/tokenId'
  /account/users:
    get:
      description: Get the list of *Users* of this *Account*.
      operationId: Account.users
      parameters:
      - $ref: '#/parameters/embedMetadata'
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/UserItem'
            type: array
            uniqueItems: true
      summary: List Users of the Account
      tags:
      - Account
    parameters: []
    post:
      description: 'Add a *User*.nn**Note**: requires full access to the *Account*.n'
      operationId: Account.newUser
      parameters:
      - in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/UserNew'
      responses:
        201:
          description: '*User* successfully created.'
          headers:
            Location:
              description: Path of the User created
              type: string
          schema:
            $ref: '#/definitions/UserCreated'
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: New User
      tags:
      - Account
  /account/users/{userId}:
    delete:
      description: 'Delete a *User* from this *Account*, and revoke all his/her *Tokens*.nn**Note**:
        requires full access to the *Account*.n'
      operationId: Account.deleteUser
      responses:
        204:
          $ref: '#/responses/DeleteOK'
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a User
      tags:
      - Account
    get:
      description: Get information about a *User* in the same *Account*.
      operationId: Account.getUser
      responses:
        200:
          description: '*User* information.n'
          schema:
            $ref: '#/definitions/User'
        default:
          $ref: '#/responses/DefaultError'
      summary: Information about a User
      tags:
      - Account
    parameters:
    - $ref: '#/parameters/userId'
    patch:
      description: 'Modify a *User*.nn**Note**: requires full access to the *Account*.n'
      operationId: Account.patchUser
      parameters:
      - in: body
        name: userPatch
        required: true
        schema:
          $ref: '#/definitions/UserPatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a User
      tags:
      - Account
  /account/users/{userId}/metadata:
    get:
      description: Get the metadata.
      operationId: User.getMetadata
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Metadata'
        default:
          $ref: '#/responses/DefaultError'
      summary: List metadata
      tags:
      - Account
    parameters:
    - $ref: '#/parameters/userId'
    patch:
      description: Modify the metadata.nKeys are limited to the same format as tags
        (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON
        value.n
      operationId: User.patchMetadata
      parameters:
      - $ref: '#/parameters/metadataPatch'
      responses:
        200:
          description: Successful. The new metadata is returned.
          schema:
            $ref: '#/definitions/Metadata'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessUser'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify metadata
      tags:
      - Account
  /auth/login:
    post:
      description: Get an access+refresh tokens pair from login and password information.nnThe
        *access token* obtained with this request can then be used innan `Access-Token`
        HTTP header or in a `token` URL query parameternin requests that require authentication.nnThe
        *refresh token* can be used with `/auth/refresh` when the *accessntoken* expires
        to retrieve a new *access token*. The lifetime of thenrefresh token is the
        maximum lifetime of this authentication request.nnThe default lifetime of
        the *refresh token* is defined by the `appId`nused. The `ttl` input parameter
        allows to request a *refresh token*nwith a shorter lifetime.nnTo implement
        *logout*, use `/auth/revoke`.n
      operationId: AuthAccountLogin
      parameters:
      - description: Login information.
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/AuthLogin'
      responses:
        200:
          description: Login successful. The access token is given to use the API.
            The refresh token must be stored in a safe place.
          schema:
            $ref: '#/definitions/AuthTokens'
        401:
          description: Authentication failure.
          schema:
            $ref: '#/definitions/DefaultError'
        default:
          $ref: '#/responses/DefaultError'
      security: []
      summary: Get a token using login+password
      tags:
      - Authentication
      - Entry points
  /auth/refresh:
    post:
      description: 'Get a new *access token* using a valid *refresh token*.nnThis
        is a **replacement** of the *access token*: if an existing *accessntoken*
        was still not expired, it is invalidated.n'
      operationId: AuthRefreshToken
      parameters:
      - description: Refresh token information.
        in: body
        name: refreshInfo
        required: true
        schema:
          $ref: '#/definitions/AuthRefresh'
      responses:
        200:
          description: Refresh successful. A new access token is given to use the
            API.
          schema:
            $ref: '#/definitions/AuthTokens'
        401:
          description: Authentication failure.
          schema:
            $ref: '#/definitions/DefaultError'
        default:
          $ref: '#/responses/DefaultError'
      security: []
      summary: Refresh a token
      tags:
      - Authentication
  /auth/reset-password:
    post:
      description: Trigger the request of a new password.nnThe account administrator
        will receive an e-mail with an URL pointing to a formnto allow him/her to
        enter a new password.nThe old password is still functional until a new one
        is submitted.nnEither the login or e-mail of the account must be given.n
      operationId: AuthResetPassword
      parameters:
      - description: Account identification information
        in: body
        name: resetPasswordInfo
        required: true
        schema:
          $ref: '#/definitions/AuthResetPassword'
      responses:
        204:
          description: As this request is not authenticated, response is always successful
            to not reveal (in)existence of accounts.
        default:
          $ref: '#/responses/DefaultError'
      security: []
      summary: Ask for a new password
      tags:
      - Authentication
  /auth/revoke:
    post:
      description: Invalidate the authentication used for the request. The access
        token and the refresh token will be invalid after this request.nThis request
        is typically called to implement logout.n
      operationId: AuthRevokeToken
      responses:
        204:
          description: Revocation successful. The token used for the request is now
            invalid.
        401:
          description: Authentication failure.
          schema:
            $ref: '#/definitions/DefaultError'
        default:
          $ref: '#/responses/DefaultError'
      summary: Revoke a token
      tags:
      - Authentication
  /devices/{deviceId}:
    get:
      description: Get information about a *Device*.
      operationId: Devices.get
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Device'
        default:
          $ref: '#/responses/DefaultError'
      summary: Information about a Device
      tags:
      - Device
    parameters:
    - $ref: '#/parameters/deviceId'
    patch:
      description: 'Modify information about a *Device*: its name.n'
      operationId: Devices.patch
      parameters:
      - in: body
        name: devicePatch
        required: true
        schema:
          $ref: '#/definitions/DevicePatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessDevice'
        default:
          $ref: '#/responses/DefaultError'
      summary: Update a Device
      tags:
      - Device
  /devices/{deviceId}/functionalities:
    post:
      description: 'Add a *Functionality* to the device.nnRequired parameters are
        :n- functionality classn- endpointnnEach device class has its own restrictions
        on which Functionality classes can be added and on which endpoints.nOnly a
        few devices allow to add Functionalities.nn|Device class|Functionality class|Endpoints|n|------------|-------------------|---------|n|MINT        |CurrentPeriod      |1,2,3    |n|MINT        |ElectricityRates   |1,2,3    |n|MINT        |GenericRate        |1,2,3    |nn**Note**:
        requires full access to the *Account*.n'
      operationId: Device.addFunctionality
      parameters:
      - $ref: '#/parameters/deviceId'
      - in: body
        name: functionalityInfo
        required: true
        schema:
          $ref: '#/definitions/FunctionalityNew'
      responses:
        201:
          description: '*Functionality* successfully created.'
          headers:
            Location:
              description: Path of the Functionality created
              type: string
          schema:
            $ref: '#/definitions/FunctionalityCreated'
        403:
          $ref: '#/responses/ErrorAccessDevice'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add dynamically a functionality
      tags:
      - Device
      - Functionality
  /devices/{deviceId}/metadata:
    get:
      description: Get the metadata.
      operationId: Device.getMetadata
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Metadata'
        default:
          $ref: '#/responses/DefaultError'
      summary: List metadata
      tags:
      - Device
    parameters:
    - $ref: '#/parameters/deviceId'
    patch:
      description: Modify the metadata.nKeys are limited to the same format as tags
        (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON
        value.n
      operationId: Device.patchMetadata
      parameters:
      - $ref: '#/parameters/metadataPatch'
      responses:
        200:
          description: Successful. The new metadata is returned.
          schema:
            $ref: '#/definitions/Metadata'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessDevice'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify metadata
      tags:
      - Device
  /devices/{deviceId}/run/{action}:
    post:
      description: Run an *Action* on zero, one or multiple Functionalities selected
        with tags.n
      operationId: Device.run
      parameters:
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/action'
      - $ref: '#/parameters/functionalitiesSelector.Req'
      - in: body
        name: arguments
        required: true
        schema:
          $ref: '#/definitions/ActionArgs'
      responses:
        200:
          $ref: '#/responses/ActionMultiResultOK'
        450:
          $ref: '#/responses/ErrorGatewayUnreachable'
        default:
          $ref: '#/responses/DefaultError'
      summary: Run actions
      tags:
      - Action
  /devices/{deviceId}/tags:
    get:
      description: Get the tags of a *Device*.
      operationId: Device.getTags
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Tags'
        default:
          $ref: '#/responses/DefaultError'
      summary: List tags
      tags:
      - Device
    parameters:
    - $ref: '#/parameters/deviceId'
    patch:
      description: Modify the tags of a *Device*.
      operationId: Device.patchTags
      parameters:
      - $ref: '#/parameters/tagsPatch'
      responses:
        200:
          description: Successful. The new list of tags is returned.
          schema:
            $ref: '#/definitions/Tags'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessDevice'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify tags
      tags:
      - Device
  /functionalities/{functionalityId}:
    get:
      description: Get the *Functionality*.
      operationId: Functionalities.get
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Functionality'
        default:
          $ref: '#/responses/DefaultError'
      summary: Information about a Functionality
      tags:
      - Functionality
    parameters:
    - $ref: '#/parameters/functionalityId'
    patch:
      description: 'Modify information about a *Functionality*: its name.n'
      operationId: Functionality.patch
      parameters:
      - in: body
        name: functionalityPatch
        required: true
        schema:
          $ref: '#/definitions/FunctionalityPatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessFunctionality'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a Functionality
      tags:
      - Functionality
  /functionalities/{functionalityId}/attributes:
    get:
      description: Get the values of multiple *Attributes* and their history.nnIf
        the `names` parameter is not given, all the attributes of the *Functionality*nare
        returned. As the list may be huge, this must be avoided.nnIf the `to` parameter
        is set, `from` must also be set.nnIf `from` is not set, only the last value
        is returned.nnThe `surround` parameter allows to ask also for one value beyond
        each interval boundaries.nnThe request may fail if too many values are asked.n
      operationId: Functionality.values
      parameters:
      - $ref: '#/parameters/attributesNames'
      - $ref: '#/parameters/from.Opt'
      - $ref: '#/parameters/to'
      - description: If true, return also one value before from and one value after
          to
        in: query
        name: surround
        required: false
        type: boolean
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/AttributesValues'
        default:
          $ref: '#/responses/DefaultError'
      summary: Get history of multiple attributes
      tags:
      - Functionality
    parameters:
    - $ref: '#/parameters/functionalityId'
  /functionalities/{functionalityId}/attributes/{attributeName}:
    get:
      description: Get the *Attribute* value and the last time when it changed.
      operationId: Functionality.value
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/AttributeValue'
        204:
          description: No value has yet been set on this attribute.
        default:
          $ref: '#/responses/DefaultError'
      summary: Get an Attribute value
      tags:
      - Functionality
    parameters:
    - $ref: '#/parameters/functionalityId'
    - $ref: '#/parameters/attributeName'
    put:
      description: Modify the value of the *Attribute*.
      operationId: Functionality.set
      parameters:
      - description: New value for the *Attribute*.
        in: body
        name: value
        required: true
        schema:
          $ref: '#/definitions/AnyJSON'
      responses:
        204:
          description: Successful.
        405:
          $ref: '#/responses/ErrorWriteAttribute'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify an Attribute value
      tags:
      - Functionality
  /functionalities/{functionalityId}/metadata:
    get:
      description: Get the metadata.
      operationId: Functionality.getMetadata
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Metadata'
        default:
          $ref: '#/responses/DefaultError'
      summary: List metadata
      tags:
      - Functionality
    parameters:
    - $ref: '#/parameters/functionalityId'
    patch:
      description: Modify the metadata.nKeys are limited to the same format as tags
        (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON
        value.n
      operationId: Functionality.patchMetadata
      parameters:
      - $ref: '#/parameters/metadataPatch'
      responses:
        200:
          description: Successful. The new metadata is returned.
          schema:
            $ref: '#/definitions/Metadata'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessFunctionality'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify metadata
      tags:
      - Functionality
  /functionalities/{functionalityId}/run/{action}:
    post:
      description: Run an action on the Functionality.n
      operationId: Functionality.run
      parameters:
      - $ref: '#/parameters/functionalityId'
      - $ref: '#/parameters/action'
      - in: body
        name: arguments
        required: true
        schema:
          $ref: '#/definitions/ActionArgs'
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/ActionResult'
        450:
          $ref: '#/responses/ErrorGatewayUnreachable'
        default:
          $ref: '#/responses/DefaultError'
      summary: Run an action
      tags:
      - Action
  /functionalities/{functionalityId}/tags:
    get:
      description: Get the tags of a *Functionality*.
      operationId: Functionality.getTags
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Tags'
        default:
          $ref: '#/responses/DefaultError'
      summary: List tags
      tags:
      - Functionality
    parameters:
    - $ref: '#/parameters/functionalityId'
    patch:
      description: Modify the tags of a *Functionality*.
      operationId: Functionality.patchTags
      parameters:
      - $ref: '#/parameters/tagsPatch'
      responses:
        200:
          description: Successful. The new list of tags is returned.
          schema:
            $ref: '#/definitions/Tags'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessFunctionality'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify tags
      tags:
      - Functionality
  /me:
    get:
      description: Get information on the authenticated *User* who does the request.nnThe
        *login* property is returned only if the *User* is the administrator ofnthe
        *Account*.n
      operationId: Me.get
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/UserMe'
      summary: Information about the User
      tags:
      - Entry points
    patch:
      description: Update *User* information (locale).n
      operationId: Me.patch
      parameters:
      - description: Updated user info.
        in: body
        name: userPatch
        required: true
        schema:
          $ref: '#/definitions/UserMePatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        default:
          $ref: '#/responses/DefaultError'
      summary: Update User information
      tags:
      - Entry points
  /notifications/{notificationId}:
    delete:
      description: Delete a *Notification*.n
      operationId: Notification.delete
      responses:
        204:
          $ref: '#/responses/DeleteOK'
        403:
          $ref: '#/responses/ErrorAccessNotification'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Notification
      tags:
      - Notification
    get:
      description: Get information about a *Notification*.n
      operationId: Notifications.get
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Notification'
        403:
          $ref: '#/responses/ErrorAccessNotification'
        default:
          $ref: '#/responses/DefaultError'
      summary: Information about a Notification
      tags:
      - Notification
    parameters:
    - $ref: '#/parameters/notificationId'
    patch:
      description: Modify a *Notification*.n
      operationId: Notification.patch
      parameters:
      - in: body
        name: notificationPatch
        required: true
        schema:
          $ref: '#/definitions/NotificationPatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessNotification'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a Notification
      tags:
      - Notification
  /notifications/{notificationId}/metadata:
    get:
      description: Get the metadata of the *Notification*.
      operationId: Notification.getMetadata
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Metadata'
        default:
          $ref: '#/responses/DefaultError'
      summary: List metadata
      tags:
      - Notification
    parameters:
    - $ref: '#/parameters/notificationId'
    patch:
      description: Modify the metadata of a *Notification*.nKeys are limited to the
        same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]).
        Values can be any JSON value.n
      operationId: Notification.patchMetadata
      parameters:
      - $ref: '#/parameters/metadataPatch'
      responses:
        200:
          description: Successful. The new metadata is returned.
          schema:
            $ref: '#/definitions/Metadata'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessNotification'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify metadata of a Notification
      tags:
      - Notification
  /places:
    get:
      description: List the *Places* to which the *Token* has access.
      operationId: Me.places
      parameters:
      - $ref: '#/parameters/embedMetadata'
      responses:
        200:
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/PlaceItem'
            type: array
            uniqueItems: true
      summary: List accessible Places
      tags:
      - Entry points
  /places/{placeId}:
    get:
      description: Get information about a *Place*.
      operationId: Places.get
      responses:
        200:
          description: Successful response.
          schema:
            $ref: '#/definitions/Place'
        400:
          $ref: '#/responses/ErrorAccessPlace'
      summary: Information about a Place
      tags:
      - Place
    parameters:
    - $ref: '#/parameters/placeId'
    patch:
      description: 'Change information about a *Place*.nn**Note**: requires full access
        to the *Account*.n'
      operationId: Place.patch
      parameters:
      - in: body
        name: placePatch
        required: true
        schema:
          $ref: '#/definitions/PlacePatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessAccount'
        default:
          $ref: '#/responses/DefaultError'
      summary: Update a Place
      tags:
      - Place
  /places/{placeId}/buses:
    get:
      description: Get the list of *Buses* available on the gateway of this *Place*.nIf
        `withPairing` is `true`, return only buses that allow device pairing (see
        `/places/{placeId}/buses/{busId}/pairing`).
      operationId: Place.buses
      parameters:
      - default: false
        description: Filter out buses that have no pairing window
        in: query
        name: withPairing
        required: false
        type: boolean
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/BusItem'
            type: array
            uniqueItems: true
        403:
          $ref: '#/responses/ErrorAccessBus'
      summary: List Buses
      tags:
      - Place
    parameters:
    - $ref: '#/parameters/placeId'
  /places/{placeId}/buses/{busId}/pairing:
    get:
      description: 'Get the state of the pairing window of the *Bus*.nn**Note**: requires
        full access to the *Account*.n'
      operationId: Place.pairing
      responses:
        200:
          description: State information.
          schema:
            $ref: '#/definitions/BusPairing'
        403:
          $ref: '#/responses/ErrorAccessBus'
      summary: State of the pairing window
      tags:
      - Place
    parameters:
    - $ref: '#/parameters/placeId'
    - $ref: '#/parameters/busId'
    put:
      description: 'Open/Close the pairing window.nn**Note**: requires full access
        to the *Account*.n'
      operationId: Place.openPairing
      parameters:
      - in: body
        name: pairing
        required: true
        schema:
          $ref: '#/definitions/BusPairing'
      responses:
        200:
          description: State information.
          schema:
            $ref: '#/definitions/BusPairing'
        403:
          $ref: '#/responses/ErrorAccessBus'
        default:
          $ref: '#/responses/DefaultError'
      summary: Open/Close the pairing window
      tags:
      - Place
  /places/{placeId}/devices:
    get:
      description: Get the list of *Devices* available in this *Place*.
      operationId: Place.devices
      parameters:
      - $ref: '#/parameters/devicesSelector.Opt'
      - $ref: '#/parameters/embedMetadata'
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/DeviceItem'
            type: array
            uniqueItems: true
        default:
          $ref: '#/responses/DefaultError'
      summary: List of Devices
      tags:
      - Device
    parameters:
    - $ref: '#/parameters/placeId'
  /places/{placeId}/electricity/autonomy:
    get:
      description: Compute the autonomy rate of the *Place* on a time period.nn`autonomy
        = 1 - (elec_drawn / elec_total_usage)`n
      operationId: Place.Electricity.autonomy
      parameters:
      - $ref: '#/parameters/when.Req'
      - $ref: '#/parameters/span.Req'
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/ElectricityAutonomy'
        default:
          $ref: '#/responses/DefaultError'
      summary: Get autonomy rate of the place
      tags:
      - Electricity
    parameters:
    - $ref: '#/parameters/placeId'
  /places/{placeId}/electricity/flows:
    get:
      description: Get the mapping of virtual electricity flows to functionalities.nnSome
        rules are applied to expand the virtual flows using the concretenflows available.nnThe
        `factor` tells how each energy value coming from a functionalitynmust be added
        with values from other functionality to compute thenenergy of the virtual
        flow. Factors are usually `1` or `-1`.nnThe `code` property gives the result
        which may be partial:n- If all flows are available, `200000` is returned.n-
        If no flows are available (indicating that the place has non  electricity
        functionality or that no functionality has been attachedn  to a flow), the
        `code` is `200001`. The `missing` property containsn  all the requested flows.n-
        If some flows are missing, the `code` is `200002` and the `missing`n  property
        lists them.n
      operationId: Place.Electricity.getFlows
      parameters:
      - collectionFormat: csv
        description: Names of the flows requested
        in: query
        items:
          enum:
          - battery_charge
          - battery_discharge
          - battery_grid
          - elec_total_gen
          - elec_total_usage
          - elec_feed_in
          - elec_drawn
          - elec_local
          - elec_from_household
          - elec_to_pv
          - elec_usage
          type: string
        name: flows
        required: true
        type: array
      responses:
        200:
          description: Place is available. `code` gives the functional result.
          schema:
            $ref: '#/definitions/ElectricityFlows'
        default:
          $ref: '#/responses/DefaultError'
      summary: Get electricity virtual flows
      tags:
      - Electricity
    parameters:
    - $ref: '#/parameters/placeId'
  /places/{placeId}/electricity/flows/setup:
    get:
      description: Get the mapping of functionalities to electricity flows.nnA functionality
        is attached to *at most* one flow.n
      operationId: Place.Electricity.getFlowsSetup
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/ElectricityFlowsSetup'
        default:
          $ref: '#/responses/DefaultError'
      summary: Get electricity flows setup
      tags:
      - Electricity
    parameters:
    - $ref: '#/parameters/placeId'
  /places/{placeId}/electricity/self-consumption:
    get:
      description: Compute the self-consumption rate of the *Place* on a time period.nn`selfConsumption
        = 1 - (elec_feed_in / elec_total_usage)`n
      operationId: Place.Electricity.selfConsumption
      parameters:
      - $ref: '#/parameters/when.Req'
      - $ref: '#/parameters/span.Req'
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/ElectricitySelfConsumption'
        default:
          $ref: '#/responses/DefaultError'
      summary: Get self-consumption rate of the place
      tags:
      - Electricity
    parameters:
    - $ref: '#/parameters/placeId'
  /places/{placeId}/functionalities:
    get:
      description: Get the list of *Functionalities* available in this *Place*.
      operationId: Place.functionalities
      parameters:
      - $ref: '#/parameters/embedMetadata'
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/FunctionalityItem'
            type: array
            uniqueItems: true
        default:
          $ref: '#/responses/DefaultError'
      summary: List Functionalities
      tags:
      - Functionality
    parameters:
    - $ref: '#/parameters/placeId'
    - $ref: '#/parameters/devicesSelector.Opt'
    - $ref: '#/parameters/functionalitiesSelector.Opt'
  /places/{placeId}/metadata:
    get:
      description: Get the metadata.
      operationId: Place.getMetadata
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Metadata'
        default:
          $ref: '#/responses/DefaultError'
      summary: List metadata
      tags:
      - Place
    parameters:
    - $ref: '#/parameters/placeId'
    patch:
      description: Modify the metadata.nKeys are limited to the same format as tags
        (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON
        value.n
      operationId: Place.patchMetadata
      parameters:
      - $ref: '#/parameters/metadataPatch'
      responses:
        200:
          description: Successful. The new metadata is returned.
          schema:
            $ref: '#/definitions/Metadata'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessPlace'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify metadata
      tags:
      - Place
  /places/{placeId}/notifications:
    get:
      description: Get the list of *Notifications* available in this *Place*.
      operationId: Place.notifications
      parameters:
      - $ref: '#/parameters/embedMetadata'
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/NotificationItem'
            type: array
            uniqueItems: true
        default:
          $ref: '#/responses/DefaultError'
      summary: List Notifications
      tags:
      - Notification
    parameters:
    - $ref: '#/parameters/placeId'
    post:
      description: Create a new *Notification*.
      operationId: Place.newNotification
      parameters:
      - in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/NotificationNew'
      responses:
        201:
          description: '*Notification* successfully created.'
          headers:
            Location:
              description: Path of the Notification created (`/notifications/{id}`)
              type: string
          schema:
            $ref: '#/definitions/NotificationCreated'
        403:
          $ref: '#/responses/ErrorAccessPlace'
        default:
          $ref: '#/responses/DefaultError'
      summary: Create a Notification
      tags:
      - Notification
  /places/{placeId}/programs:
    get:
      description: Get the list of *Programs* available in this *Place*.
      operationId: Place.programs
      parameters:
      - $ref: '#/parameters/embedMetadata'
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/ProgramItem'
            type: array
            uniqueItems: true
        default:
          $ref: '#/responses/DefaultError'
      summary: List Programs
      tags:
      - Program
    parameters:
    - $ref: '#/parameters/placeId'
    post:
      description: 'Create a new *Program*.nn**Note**: requires full access to the
        *Account*.n'
      operationId: Place.newProgram
      parameters:
      - in: body
        name: programInfo
        required: true
        schema:
          $ref: '#/definitions/ProgramNew'
      responses:
        201:
          description: '*Program* successfully created.'
          headers:
            Location:
              description: Path of the Program created (`/programs/{id}`)
              type: string
          schema:
            $ref: '#/definitions/ProgramCreated'
        403:
          $ref: '#/responses/ErrorAccessPlace'
        default:
          $ref: '#/responses/DefaultError'
      summary: Create a Program
      tags:
      - Program
  /places/{placeId}/run/{action}:
    post:
      description: Run an *Action* on zero, one or multiple *Functionalities* selected
        with tags.nn*Device* and *Functionality* selection are combined with u00ab
        AND u00bb.nnIf no functionality is matched by the device/functionality selection,
        an empty array is returned.n
      operationId: Place.run
      parameters:
      - $ref: '#/parameters/placeId'
      - $ref: '#/parameters/action'
      - $ref: '#/parameters/devicesSelector.Req'
      - $ref: '#/parameters/functionalitiesSelector.Req'
      - in: body
        name: arguments
        required: true
        schema:
          $ref: '#/definitions/ActionArgs'
      responses:
        200:
          $ref: '#/responses/ActionMultiResultOK'
        450:
          $ref: '#/responses/ErrorGatewayUnreachable'
        default:
          $ref: '#/responses/DefaultError'
      summary: Run actions
      tags:
      - Action
  /programs/{programId}:
    delete:
      description: 'Delete a *Program*.nn**Note**: requires full access to the *Account*.n'
      operationId: Program.delete
      responses:
        204:
          $ref: '#/responses/DeleteOK'
        403:
          $ref: '#/responses/ErrorAccessProgram'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Program
      tags:
      - Program
    get:
      description: Get information about a *Program*.n
      operationId: Programs.get
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Program'
        403:
          $ref: '#/responses/ErrorAccessProgram'
        default:
          $ref: '#/responses/DefaultError'
      summary: Information about a Program
      tags:
      - Program
    parameters:
    - $ref: '#/parameters/programId'
    patch:
      description: 'Modify a *Program*:n- namen- status (enabled/disabled)n- codenn**Note**:
        requires full access to the *Account*.n'
      operationId: Program.patch
      parameters:
      - in: body
        name: programPatch
        required: true
        schema:
          $ref: '#/definitions/ProgramPatch'
      responses:
        204:
          $ref: '#/responses/PatchOK'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessProgram'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a Program
      tags:
      - Program
  /programs/{programId}/log:
    get:
      description: Get the execution history list of this *Program*.
      operationId: Program.log
      parameters:
      - $ref: '#/parameters/from.Req'
      - $ref: '#/parameters/to'
      responses:
        200:
          description: Successful.
          schema:
            items:
              $ref: '#/definitions/ProgramLog'
            type: array
            uniqueItems: true
        403:
          $ref: '#/responses/ErrorAccessProgram'
        default:
          $ref: '#/responses/DefaultError'
      summary: History of executions of a Program
      tags:
      - Program
    parameters:
    - $ref: '#/parameters/programId'
  /programs/{programId}/metadata:
    get:
      description: Get the metadata of the *Program*.
      operationId: Program.getMetadata
      responses:
        200:
          description: Successful.
          schema:
            $ref: '#/definitions/Metadata'
        default:
          $ref: '#/responses/DefaultError'
      summary: List metadata
      tags:
      - Program
    parameters:
    - $ref: '#/parameters/programId'
    patch:
      description: Modify the metadata of a *Program*.nKeys are limited to the same
        format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values
        can be any JSON value.n
      operationId: Program.patchMetadata
      parameters:
      - $ref: '#/parameters/metadataPatch'
      responses:
        200:
          description: Successful. The new metadata is returned.
          schema:
            $ref: '#/definitions/Metadata'
        304:
          $ref: '#/responses/PatchNotModified'
        403:
          $ref: '#/responses/ErrorAccessProgram'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify metadata of a Program
      tags:
      - Program
  /programs/{programId}/run:
    parameters:
    - $ref: '#/parameters/programId'
    post:
      description: Launch the *Program*.nThe result will be available later in the
        run history.
      operationId: Program.run
      responses:
        204:
          description: '*Program* successfully launched.'
        403:
          $ref: '#/responses/ErrorAccessProgram'
        default:
          $ref: '#/responses/DefaultError'
      summary: Run the Program
      tags:
      - Program
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":103:{s:9:\"AccountId\";O:8:\"stdClass\":7:{s:11:\"description\";s:34:\"Unique
  identifier of the *Account*\";s:7:\"example\";s:22:\"t1hqYcQITCFX-AObjs_t4Q\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:12:\"AccountLogin\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:10:\"ActionArgs\";O:8:\"stdClass\":3:{s:7:\"example\";a:3:{i:0;b:1;i:1;i:1;i:2;s:5:\"hello\";}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:4:\"type\";s:5:\"array\";}s:17:\"ActionMultiResult\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ActionResult\";}s:4:\"type\";s:5:\"array\";}s:10:\"ActionName\";O:8:\"stdClass\":3:{s:9:\"minLength\";i:1;s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:12:\"ActionResult\";O:8:\"stdClass\":5:{s:7:\"example\";O:8:\"stdClass\":3:{s:13:\"functionality\";s:22:\"RnVuY3Rpb25hbGl0eTAwMA\";s:6:\"result\";a:0:{}s:6:\"status\";i:200;}s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"functionality\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FunctionalityId\";}s:6:\"result\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":5:{s:11:\"description\";s:30:\"Return
  code (HTTP status code)\";s:7:\"example\";i:200;s:7:\"maximum\";i:599;s:7:\"minimum\";i:200;s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:1:{i:0;s:6:\"status\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:32:\"/functionalities/{functionality}\";s:3:\"rel\";s:13:\"functionality\";}}}s:7:\"AnyJSON\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"null/boolean/integer/number/string/object/array\";s:6:\"x-type\";s:3:\"any\";}s:5:\"AppId\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:13:\"AttributeName\";O:8:\"stdClass\":3:{s:9:\"minLength\";i:1;s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:14:\"AttributeValue\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:5:\"value\";i:0;s:4:\"when\";s:20:\"2014-02-17T12:31:00Z\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:4:\"when\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"when\";i:1;s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:16:\"AttributesValues\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}s:4:\"type\";s:5:\"array\";}s:11:\"description\";s:22:\"Keys
  are attribute ids\";s:7:\"example\";O:8:\"stdClass\":2:{s:7:\"Counter\";a:1:{i:0;O:8:\"stdClass\":2:{s:5:\"value\";i:0;s:4:\"when\";s:20:\"2014-02-17T12:31:00Z\";}}s:8:\"Schedule\";a:1:{i:0;O:8:\"stdClass\":2:{s:5:\"value\";a:2:{i:0;O:8:\"stdClass\":5:{s:7:\"DTSTAMP\";s:16:\"20120101T000000Z\";s:7:\"DTSTART\";O:8:\"stdClass\":2:{s:7:\"_empty_\";s:15:\"20120101T063000\";s:4:\"TZID\";s:12:\"Europe/Paris\";}s:5:\"RRULE\";O:8:\"stdClass\":1:{s:4:\"FREQ\";s:5:\"DAILY\";}s:7:\"SUMMARY\";s:1:\"2\";s:3:\"UID\";s:22:\"HP-06h30@si.ijenko.net\";}i:1;O:8:\"stdClass\":5:{s:7:\"DTSTAMP\";s:16:\"20120101T000000Z\";s:7:\"DTSTART\";O:8:\"stdClass\":2:{s:7:\"_empty_\";s:15:\"20120101T223000\";s:4:\"TZID\";s:12:\"Europe/Paris\";}s:5:\"RRULE\";O:8:\"stdClass\":1:{s:4:\"FREQ\";s:5:\"DAILY\";}s:7:\"SUMMARY\";s:1:\"3\";s:3:\"UID\";s:22:\"HC-22h30@si.ijenko.net\";}}s:4:\"when\";s:20:\"2014-02-17T00:00:00Z\";}}}s:4:\"type\";s:6:\"object\";}s:18:\"AuthChangePassword\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"newPassword\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Password\";}s:11:\"oldPassword\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Password\";}}s:8:\"required\";a:2:{i:0;s:11:\"oldPassword\";i:1;s:11:\"newPassword\";}s:4:\"type\";s:6:\"object\";}s:9:\"AuthLogin\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"appId\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/AppId\";}s:5:\"login\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Password\";}s:3:\"ttl\";O:8:\"stdClass\":4:{s:11:\"description\";s:58:\"Desired
  maximum life-time in seconds for the refresh token\";s:7:\"example\";i:1800;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:3:{i:0;s:5:\"login\";i:1;s:8:\"password\";i:2;s:5:\"appId\";}s:4:\"type\";s:6:\"object\";}s:11:\"AuthRefresh\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"appId\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/AppId\";}s:12:\"refreshToken\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:12:\"refreshToken\";i:1;s:5:\"appId\";}s:4:\"type\";s:6:\"object\";}s:17:\"AuthResetPassword\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"appId\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/AppId\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserEmail\";}s:5:\"login\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:5:\"appId\";}s:4:\"type\";s:6:\"object\";}s:10:\"AuthTokens\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"accessToken\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:18:\"accessTokenExpires\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:12:\"refreshToken\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:19:\"refreshTokenExpires\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:11:\"accessToken\";i:1;s:12:\"refreshToken\";i:2;s:18:\"accessTokenExpires\";i:3;s:19:\"refreshTokenExpires\";}s:4:\"type\";s:6:\"object\";}s:5:\"BusId\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:3;s:4:\"type\";s:6:\"string\";}s:7:\"BusItem\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"functionality\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FunctionalityId\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/BusId\";}s:8:\"protocol\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/BusProtocol\";}}s:8:\"readOnly\";b:1;s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:13:\"functionality\";i:2;s:8:\"protocol\";}s:4:\"type\";s:6:\"object\";}s:10:\"BusPairing\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"duration\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"Duration
  of the pairing window.\";s:4:\"type\";s:7:\"integer\";}s:7:\"enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:7:\"enabled\";}s:4:\"type\";s:6:\"object\";}s:11:\"BusProtocol\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"CountryCode\";O:8:\"stdClass\":6:{s:11:\"description\";s:33:\"Country
  code (ISO 3166-1 alpha-2)\";s:7:\"example\";s:2:\"FR\";s:9:\"maxLength\";i:2;s:9:\"minLength\";i:2;s:7:\"pattern\";s:12:\"^[A-Z][A-Z]$\";s:4:\"type\";s:6:\"string\";}s:12:\"DefaultError\";O:8:\"stdClass\":4:{s:11:\"description\";s:10:\"Any
  error.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"code\";i:1;s:7:\"message\";}s:4:\"type\";s:6:\"object\";}s:6:\"Device\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":12:{s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DeviceAddress\";}s:10:\"attributes\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:11:\"description\";s:29:\"Each
  key is an attribute name\";s:4:\"type\";s:6:\"object\";}s:11:\"description\";s:43:\"Each
  key is <FunctionalityClass>@<Endpoint>\";s:4:\"type\";s:6:\"object\";}s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/DeviceClass\";}s:15:\"functionalities\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FunctionalityItem\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:8:\"isOnline\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";}s:12:\"manufacturer\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:5:\"model\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"Name
  of the device. User defined.\";s:9:\"minLength\";i:2;s:4:\"type\";s:6:\"string\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PlaceId\";}s:8:\"protocol\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/BusProtocol\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DeviceTag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:6:{i:0;s:5:\"place\";i:1;s:5:\"class\";i:2;s:7:\"address\";i:3;s:8:\"isOnline\";i:4;s:15:\"functionalities\";i:5;s:4:\"tags\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:15:\"/places/{place}\";s:3:\"rel\";s:5:\"place\";}}}s:13:\"DeviceAddress\";O:8:\"stdClass\":3:{s:9:\"minLength\";i:1;s:7:\"pattern\";s:16:\"^[A-Z0-9]{1,32}$\";s:4:\"type\";s:6:\"string\";}s:11:\"DeviceClass\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:4;s:9:\"minLength\";i:4;s:7:\"pattern\";s:18:\"^[A-Z][A-Z0-9]{3}$\";s:4:\"type\";s:6:\"string\";}s:8:\"DeviceId\";O:8:\"stdClass\":7:{s:11:\"description\";s:33:\"Unique
  identifier of the *Device*\";s:7:\"example\";s:22:\"RGV2aWNlMDAwMDAwMDAwMA\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:10:\"DeviceItem\";O:8:\"stdClass\":5:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DeviceAddress\";}s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/DeviceClass\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DeviceId\";}s:8:\"isOnline\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/MetadataSelected\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:77:\"Name
  of the *Device* as defined by the user. Can be used for user interfaces.\";s:9:\"minLength\";i:2;s:4:\"type\";s:6:\"string\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PlaceId\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DeviceTag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"readOnly\";b:1;s:8:\"required\";a:6:{i:0;s:2:\"id\";i:1;s:5:\"place\";i:2;s:5:\"class\";i:3;s:7:\"address\";i:4;s:8:\"isOnline\";i:5;s:4:\"tags\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:2:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:13:\"/devices/{id}\";s:3:\"rel\";s:4:\"full\";}i:1;O:8:\"stdClass\":2:{s:4:\"href\";s:15:\"/places/{place}\";s:3:\"rel\";s:5:\"place\";}}}s:11:\"DevicePatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:77:\"Name
  of the *Device* as defined by the user. Can be used for user interfaces.\";s:9:\"minLength\";i:2;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"DeviceTag\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:21;s:9:\"minLength\";i:1;s:7:\"pattern\";s:139:\"^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\";s:4:\"type\";s:6:\"string\";}s:19:\"ElectricityAutonomy\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":4:{s:8:\"autonomy\";d:0.40000000000000002;s:4:\"code\";i:200000;s:4:\"from\";s:20:\"2016-03-02T09:00:00Z\";s:2:\"to\";s:20:\"2016-03-02T10:00:00Z\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"autonomy\";O:8:\"stdClass\":5:{s:11:\"description\";s:66:\"Average
  electricity autonomy in % (value in range [0, 1], rounded)\";s:7:\"example\";d:0.40000000000000002;s:7:\"maximum\";i:1;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ElectricityStatusCode\";}s:4:\"from\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":3:{s:11:\"description\";s:74:\"Message
  for cases where computation is not possible (codes 200001, 200002)\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"to\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"code\";}s:4:\"type\";s:6:\"object\";}s:15:\"ElectricityFlow\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/ElectricityFunctionality\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:22:\"ElectricityFlowFormula\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/ElectricityFlowFunctionality\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:28:\"ElectricityFlowFunctionality\";O:8:\"stdClass\":5:{s:7:\"example\";O:8:\"stdClass\":4:{s:5:\"class\";s:12:\"ElecMetering\";s:6:\"factor\";i:1;s:4:\"flow\";s:14:\"elec_total_gen\";s:2:\"id\";s:22:\"RnVuY3Rpb25hbGl0eTAwMA\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/FunctionalityClass\";}s:6:\"factor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"flow\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/ElectricityFlowName\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FunctionalityId\";}}s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:5:\"class\";i:2;s:4:\"flow\";i:3;s:6:\"factor\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:21:\"/functionalities/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:19:\"ElectricityFlowName\";O:8:\"stdClass\":4:{s:11:\"description\";s:27:\"Name
  of an electricity flow\";s:4:\"enum\";a:11:{i:0;s:14:\"battery_charge\";i:1;s:17:\"battery_discharge\";i:2;s:12:\"battery_grid\";i:3;s:14:\"elec_total_gen\";i:4;s:16:\"elec_total_usage\";i:5;s:12:\"elec_feed_in\";i:6;s:10:\"elec_drawn\";i:7;s:10:\"elec_local\";i:8;s:19:\"elec_from_household\";i:9;s:10:\"elec_to_pv\";i:10;s:10:\"elec_usage\";}s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:16:\"ElectricityFlows\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:4:\"code\";i:200000;s:5:\"flows\";O:8:\"stdClass\":2:{s:10:\"elec_local\";a:1:{i:0;O:8:\"stdClass\":3:{s:5:\"class\";s:12:\"ElecMetering\";s:6:\"factor\";i:1;s:2:\"id\";s:22:\"SF4_y4SoTCpYXgGODJplJQ\";}}s:16:\"elec_total_usage\";a:3:{i:0;O:8:\"stdClass\":4:{s:5:\"class\";s:12:\"ElecMetering\";s:6:\"factor\";i:1;s:4:\"flow\";s:14:\"elec_total_gen\";s:2:\"id\";s:22:\"SF4_y4SoTCpYXgGODJplJQ\";}i:1;O:8:\"stdClass\":4:{s:5:\"class\";s:17:\"ElecSmartMetering\";s:6:\"factor\";i:1;s:4:\"flow\";s:10:\"elec_drawn\";s:2:\"id\";s:22:\"lvxvQ9SqXCpYSqHOJI7tIA\";}i:2;O:8:\"stdClass\":4:{s:5:\"class\";s:17:\"ElecSmartMetering\";s:6:\"factor\";i:-1;s:4:\"flow\";s:12:\"elec_feed_in\";s:2:\"id\";s:22:\"d1xvwdWKWCpYH6GPjovnLg\";}}}}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ElectricityStatusCode\";}s:5:\"flows\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/ElectricityVirtualFlows\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/ElectricityStatusMessage\";}s:7:\"missing\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/ElectricityMissingFlows\";}}s:8:\"required\";a:1:{i:0;s:4:\"code\";}s:4:\"type\";s:6:\"object\";}s:21:\"ElectricityFlowsSetup\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":3:{s:10:\"elec_drawn\";a:1:{i:0;O:8:\"stdClass\":2:{s:5:\"class\";s:17:\"ElecSmartMetering\";s:2:\"id\";s:22:\"lvxvQ9SqXCpYSqHOJI7tIA\";}}s:12:\"elec_feed_in\";a:1:{i:0;O:8:\"stdClass\":2:{s:5:\"class\";s:17:\"ElecSmartMetering\";s:2:\"id\";s:22:\"d1xvwdWKWCpYH6GPjovnLg\";}}s:14:\"elec_total_gen\";a:1:{i:0;O:8:\"stdClass\":2:{s:5:\"class\";s:12:\"ElecMetering\";s:2:\"id\";s:22:\"SF4_y4SoTCpYXgGODJplJQ\";}}}s:10:\"properties\";O:8:\"stdClass\":11:{s:14:\"battery_charge\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:17:\"battery_discharge\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:12:\"battery_grid\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:10:\"elec_drawn\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:12:\"elec_feed_in\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:19:\"elec_from_household\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:10:\"elec_local\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:10:\"elec_to_pv\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:14:\"elec_total_gen\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:16:\"elec_total_usage\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}s:10:\"elec_usage\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ElectricityFlow\";}}s:4:\"type\";s:6:\"object\";}s:24:\"ElectricityFunctionality\";O:8:\"stdClass\":5:{s:7:\"example\";O:8:\"stdClass\":2:{s:5:\"class\";s:12:\"ElecMetering\";s:2:\"id\";s:22:\"RnVuY3Rpb25hbGl0eTAwMA\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/FunctionalityClass\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FunctionalityId\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:5:\"class\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:21:\"/functionalities/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:23:\"ElectricityMissingFlows\";O:8:\"stdClass\":3:{s:11:\"description\";s:67:\"List
  of missing flows (not available either directly or indirectly)\";s:10:\"properties\";O:8:\"stdClass\":11:{s:14:\"battery_charge\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:17:\"battery_discharge\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:12:\"battery_grid\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:10:\"elec_drawn\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:12:\"elec_feed_in\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:19:\"elec_from_household\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:10:\"elec_local\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:10:\"elec_to_pv\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:14:\"elec_total_gen\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:16:\"elec_total_usage\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}s:10:\"elec_usage\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;b:1;}s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:26:\"ElectricitySelfConsumption\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":4:{s:4:\"code\";i:200000;s:4:\"from\";s:20:\"2016-03-02T10:00:00Z\";s:15:\"selfConsumption\";i:1;s:2:\"to\";s:20:\"2016-03-02T11:00:00Z\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ElectricityStatusCode\";}s:4:\"from\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":3:{s:11:\"description\";s:74:\"Message
  for cases where computation is not possible (codes 200001, 200002)\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:15:\"selfConsumption\";O:8:\"stdClass\":5:{s:11:\"description\";s:67:\"Average
  self-consumption rate in % (value in range [0, 1], rounded)\";s:7:\"example\";d:0.55555500000000002;s:7:\"maximum\";i:1;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:2:\"to\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"code\";}s:4:\"type\";s:6:\"object\";}s:21:\"ElectricityStatusCode\";O:8:\"stdClass\":4:{s:11:\"description\";s:75:\"Status
  code. 200000 means OK. Other codes indicate full or partial failure.\";s:4:\"enum\";a:3:{i:0;i:200000;i:1;i:200001;i:2;i:200002;}s:7:\"example\";i:200000;s:4:\"type\";s:7:\"integer\";}s:24:\"ElectricityStatusMessage\";O:8:\"stdClass\":3:{s:11:\"description\";s:74:\"Message
  for cases where computation is not possible (codes 200001, 200002)\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:23:\"ElectricityVirtualFlows\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:14:\"battery_charge\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:17:\"battery_discharge\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:12:\"battery_grid\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:10:\"elec_drawn\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:12:\"elec_feed_in\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:19:\"elec_from_household\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:10:\"elec_local\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:10:\"elec_to_pv\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:14:\"elec_total_gen\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:16:\"elec_total_usage\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}s:10:\"elec_usage\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ElectricityFlowFormula\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ErrorEntity\";O:8:\"stdClass\":4:{s:11:\"description\";s:60:\"An
  error related to access to an entity (400, 403, 404, 410)\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ResourceRef\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:23:\"ErrorGatewayUnreachable\";O:8:\"stdClass\":4:{s:11:\"description\";s:42:\"The
  gateway of the Place is not reachable.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:3:\"450\";}s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"code\";i:1;s:7:\"message\";}s:4:\"type\";s:6:\"object\";}s:14:\"ErrorSubEntity\";O:8:\"stdClass\":4:{s:11:\"description\";s:64:\"An
  error related to access to an sub-entity (400, 403, 404, 410)\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:6:\"Action\";i:1;s:9:\"Attribute\";i:2;s:3:\"Bus\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:6:\"parent\";O:8:\"stdClass\":4:{s:11:\"description\";s:19:\"Container
  resource.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:5:\"Place\";i:1;s:13:\"Functionality\";}s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:6:\"entity\";i:1;s:2:\"id\";}s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:13:\"Functionality\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"actions\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/ActionName\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:10:\"attributes\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:8:\"readOnly\";b:1;s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/FunctionalityClass\";}s:6:\"device\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DeviceId\";}s:8:\"endpoint\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/FunctionalityEndpoint\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FunctionalityName\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/FunctionalityTag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:5:{i:0;s:5:\"class\";i:1;s:8:\"endpoint\";i:2;s:6:\"device\";i:3;s:10:\"attributes\";i:4;s:4:\"tags\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:13:\"/devices/{id}\";s:3:\"rel\";s:6:\"device\";}}}s:18:\"FunctionalityClass\";O:8:\"stdClass\":4:{s:9:\"minLength\";i:2;s:7:\"pattern\";s:19:\"^[A-Z][A-Za-z0-9]+$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:20:\"FunctionalityCreated\";O:8:\"stdClass\":5:{s:11:\"description\";s:73:\"A
  resource has been created. The `resource` property gives its reference.\";s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"code\";i:201;s:7:\"message\";s:21:\"Functionality
  created\";s:8:\"resource\";O:8:\"stdClass\":3:{s:6:\"entity\";s:13:\"Functionality\";s:4:\"href\";s:39:\"/functionalities/RnVuY3Rpb25hbGl0eTAwMA\";s:2:\"id\";s:22:\"RnVuY3Rpb25hbGl0eTAwMA\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":3:{s:4:\"enum\";a:1:{i:0;i:201;}s:7:\"example\";i:201;s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:21:\"Functionality
  created\";}s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/FunctionalityResource\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:21:\"FunctionalityEndpoint\";O:8:\"stdClass\":4:{s:7:\"maximum\";i:255;s:7:\"minimum\";i:0;s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"integer\";}s:15:\"FunctionalityId\";O:8:\"stdClass\":7:{s:11:\"description\";s:40:\"Unique
  identifier of the *Functionality*\";s:7:\"example\";s:22:\"RnVuY3Rpb25hbGl0eTAwMA\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:17:\"FunctionalityItem\";O:8:\"stdClass\":5:{s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/FunctionalityClass\";}s:6:\"device\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/DeviceId\";}s:8:\"endpoint\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/FunctionalityEndpoint\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FunctionalityId\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/MetadataSelected\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FunctionalityName\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/FunctionalityTag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"readOnly\";b:1;s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:6:\"device\";i:2;s:5:\"class\";i:3;s:8:\"endpoint\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:2:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:21:\"/functionalities/{id}\";s:3:\"rel\";s:4:\"full\";}i:1;O:8:\"stdClass\":2:{s:4:\"href\";s:17:\"/devices/{device}\";s:3:\"rel\";s:6:\"device\";}}}s:17:\"FunctionalityName\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Free
  functionality name\";s:4:\"type\";s:6:\"string\";}s:16:\"FunctionalityNew\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"class\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/FunctionalityClass\";}s:8:\"endpoint\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/FunctionalityEndpoint\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FunctionalityName\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/FunctionalityTag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:2:{i:0;s:5:\"class\";i:1;s:8:\"endpoint\";}s:4:\"type\";s:6:\"object\";}s:18:\"FunctionalityPatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FunctionalityName\";}}s:4:\"type\";s:6:\"object\";}s:21:\"FunctionalityResource\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:6:\"entity\";s:13:\"Functionality\";s:4:\"href\";s:39:\"/functionalities/RnVuY3Rpb25hbGl0eTAwMA\";s:2:\"id\";s:22:\"RnVuY3Rpb25hbGl0eTAwMA\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:13:\"Functionality\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FunctionalityId\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}s:16:\"FunctionalityTag\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:21;s:9:\"minLength\";i:1;s:7:\"pattern\";s:139:\"^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\";s:4:\"type\";s:6:\"string\";}s:6:\"Locale\";O:8:\"stdClass\":5:{s:11:\"description\";s:169:\"Locale
  identifier (language, region). See https://tools.ietf.org/html/rfc5646 and https://www.iana.org/assignments/lang-subtags-templates/lang-subtags-templates.xhtml
  .\n\";s:7:\"example\";s:5:\"fr-FR\";s:9:\"minLength\";i:2;s:7:\"pattern\";s:23:\"^[a-z]{2}[A-Za-z0-9-]*$\";s:4:\"type\";s:6:\"string\";}s:8:\"Metadata\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:11:\"description\";s:127:\"Keys
  are limited to the same format as tags (up to 21 characters, [a-z0-9], starting
  with [a-z]). Values can be any JSON value.\";s:4:\"type\";s:6:\"object\";}s:11:\"MetadataKey\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:21;s:9:\"minLength\";i:1;s:7:\"pattern\";s:139:\"^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\";s:4:\"type\";s:6:\"string\";}s:13:\"MetadataPatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"add\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:11:\"description\";s:38:\"list
  of pairs key/value to add/replace\";s:4:\"type\";s:6:\"object\";}s:6:\"remove\";O:8:\"stdClass\":4:{s:11:\"description\";s:22:\"list
  of keys to remove\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/MetadataKey\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:4:\"type\";s:6:\"object\";}s:16:\"MetadataSelected\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:11:\"description\";s:89:\"Subset
  of metadata attached to the resource selected using the 'embed-metadata' parameter\";s:4:\"type\";s:6:\"object\";}s:12:\"Notification\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PlaceId\";}s:7:\"routing\";O:8:\"stdClass\":2:{s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:5:\"place\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:15:\"/places/{place}\";s:3:\"rel\";s:5:\"place\";}}}s:19:\"NotificationCreated\";O:8:\"stdClass\":5:{s:11:\"description\";s:73:\"A
  resource has been created. The `resource` property gives its reference.\";s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"code\";i:201;s:7:\"message\";s:20:\"Notification
  created\";s:8:\"resource\";O:8:\"stdClass\":3:{s:6:\"entity\";s:12:\"Notification\";s:4:\"href\";s:37:\"/notifications/InovwcCIGM5X7KvKrJ7vJw\";s:2:\"id\";s:22:\"InovwcCIGM5X7KvKrJ7vJw\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":3:{s:4:\"enum\";a:1:{i:0;i:201;}s:7:\"example\";i:201;s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:20:\"Notification
  created\";}s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/NotificationResource\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:14:\"NotificationId\";O:8:\"stdClass\":7:{s:11:\"description\";s:39:\"Unique
  identifier of the *Notification*\";s:7:\"example\";s:22:\"InovwcCIGM5X7KvKrJ7vJw\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:16:\"NotificationItem\";O:8:\"stdClass\":6:{s:11:\"description\";s:12:\"Notification\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NotificationId\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/MetadataSelected\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"readOnly\";b:1;s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:19:\"/notifications/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:15:\"NotificationNew\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:7:\"routing\";O:8:\"stdClass\":2:{s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:17:\"NotificationPatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:7:\"routing\";O:8:\"stdClass\":2:{s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:20:\"NotificationResource\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:6:\"entity\";s:12:\"Notification\";s:4:\"href\";s:37:\"/notifications/InovwcCIGM5X7KvKrJ7vJw\";s:2:\"id\";s:22:\"InovwcCIGM5X7KvKrJ7vJw\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"Notification\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NotificationId\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}s:8:\"Password\";O:8:\"stdClass\":3:{s:6:\"format\";s:8:\"password\";s:9:\"minLength\";i:5;s:4:\"type\";s:6:\"string\";}s:11:\"PhoneNumber\";O:8:\"stdClass\":5:{s:11:\"description\";s:74:\"Phone
  number of the *User* in international format, for SMS notifications.\";s:7:\"example\";s:12:\"+33177494646\";s:9:\"minLength\";i:6;s:7:\"pattern\";s:13:\"^\\+[0-9]{5,}$\";s:4:\"type\";s:6:\"string\";}s:5:\"Place\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"account\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/AccountId\";}s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/CountryCode\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":3:{s:7:\"example\";s:8:\"\u2302
  Home\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:8:\"timeZone\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/TimeZone\";}s:7:\"zipCode\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/ZipCode\";}}s:8:\"required\";a:4:{i:0;s:4:\"name\";i:1;s:7:\"zipCode\";i:2;s:7:\"country\";i:3;s:8:\"timeZone\";}s:4:\"type\";s:6:\"object\";}s:12:\"PlaceCreated\";O:8:\"stdClass\":5:{s:11:\"description\";s:73:\"A
  resource has been created. The `resource` property gives its reference.\";s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"code\";i:201;s:7:\"message\";s:13:\"Place
  created\";s:8:\"resource\";O:8:\"stdClass\":3:{s:6:\"entity\";s:5:\"Place\";s:4:\"href\";s:30:\"/places/3HA6YcSCTSFX6SPPrI9PxQ\";s:2:\"id\";s:22:\"3HA6YcSCTSFX6SPPrI9PxQ\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":3:{s:4:\"enum\";a:1:{i:0;i:201;}s:7:\"example\";i:201;s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:13:\"Place
  created\";}s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/PlaceResource\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:7:\"PlaceId\";O:8:\"stdClass\":7:{s:11:\"description\";s:32:\"Unique
  identifier of the *Place*\";s:7:\"example\";s:22:\"3HA6YcSCTSFX6SPPrI9PxQ\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:9:\"PlaceItem\";O:8:\"stdClass\":5:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PlaceId\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"readOnly\";b:1;s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:12:\"/places/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:8:\"PlaceNew\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/CountryCode\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":3:{s:7:\"example\";s:8:\"\u2302
  Home\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:8:\"timeZone\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/TimeZone\";}s:7:\"zipCode\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/ZipCode\";}}s:8:\"required\";a:4:{i:0;s:4:\"name\";i:1;s:7:\"zipCode\";i:2;s:7:\"country\";i:3;s:8:\"timeZone\";}s:4:\"type\";s:6:\"object\";}s:10:\"PlacePatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/CountryCode\";}s:4:\"name\";O:8:\"stdClass\":3:{s:7:\"example\";s:8:\"\u2302
  Home\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:8:\"timeZone\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/TimeZone\";}s:7:\"zipCode\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/ZipCode\";}}s:4:\"type\";s:6:\"object\";}s:13:\"PlaceResource\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:6:\"entity\";s:5:\"Place\";s:4:\"href\";s:30:\"/places/3HA6YcSCTSFX6SPPrI9PxQ\";s:2:\"id\";s:22:\"3HA6YcSCTSFX6SPPrI9PxQ\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:5:\"Place\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PlaceId\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}s:7:\"Program\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:7:\"enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PlaceId\";}}s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:7:\"enabled\";i:2;s:4:\"code\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:15:\"/places/{place}\";s:3:\"rel\";s:5:\"place\";}}}s:14:\"ProgramCreated\";O:8:\"stdClass\":5:{s:11:\"description\";s:73:\"A
  resource has been created. The `resource` property gives its reference.\";s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"code\";i:201;s:7:\"message\";s:15:\"Program
  created\";s:8:\"resource\";O:8:\"stdClass\":3:{s:6:\"entity\";s:7:\"Program\";s:4:\"href\";s:32:\"/programs/3_J_6ZWICc5X_KverorNvw\";s:2:\"id\";s:22:\"3_J_6ZWICc5X_KverorNvw\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":3:{s:4:\"enum\";a:1:{i:0;i:201;}s:7:\"example\";i:201;s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:15:\"Program
  created\";}s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ProgramResource\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:9:\"ProgramId\";O:8:\"stdClass\":7:{s:11:\"description\";s:34:\"Unique
  identifier of the *Program*\";s:7:\"example\";s:22:\"3_J_6ZWICc5X_KverorNvw\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:11:\"ProgramItem\";O:8:\"stdClass\":5:{s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/ProgramId\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/MetadataSelected\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"readOnly\";b:1;s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:7:\"enabled\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:14:\"/programs/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:10:\"ProgramLog\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"actions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ActionResult\";}s:4:\"type\";s:5:\"array\";}s:6:\"errors\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:13:\"notifications\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NotificationId\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:4:\"when\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"when\";}s:4:\"type\";s:6:\"object\";}s:10:\"ProgramNew\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"code\";a:0:{}s:7:\"enabled\";b:0;s:4:\"name\";s:4:\"NOOP\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:4:\"code\";}s:4:\"type\";s:6:\"object\";}s:12:\"ProgramPatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/AnyJSON\";}s:7:\"enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"ProgramResource\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:6:\"entity\";s:7:\"Program\";s:4:\"href\";s:32:\"/programs/3_J_6ZWICc5X_KverorNvw\";s:2:\"id\";s:22:\"3_J_6ZWICc5X_KverorNvw\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:7:\"Program\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/ProgramId\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}s:11:\"ResourceRef\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:8:{i:0;s:6:\"Device\";i:1;s:13:\"Functionality\";i:2;s:12:\"Notification\";i:3;s:5:\"Place\";i:4;s:7:\"Program\";i:5;s:4:\"User\";i:6;s:7:\"Account\";i:7;s:12:\"AccountsBase\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}s:3:\"Tag\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:21;s:9:\"minLength\";i:1;s:7:\"pattern\";s:139:\"^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\";s:4:\"type\";s:6:\"string\";}s:4:\"Tags\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:9:\"TagsPatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"add\";O:8:\"stdClass\":4:{s:11:\"description\";s:19:\"list
  of tags to add\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:6:\"remove\";O:8:\"stdClass\":4:{s:11:\"description\";s:22:\"list
  of tags to remove\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:4:\"type\";s:6:\"object\";}s:8:\"TimeZone\";O:8:\"stdClass\":5:{s:11:\"description\";s:79:\"A
  time zone name from the Time Zone Database at https://www.iana.org/time-zones\";s:7:\"example\";s:12:\"Europe/Paris\";s:9:\"minLength\";i:2;s:7:\"pattern\";s:48:\"^[A-Z][A-Za-z0-9-_+]+(?:/[A-Z][A-Za-z0-9-_+]+)*$\";s:4:\"type\";s:6:\"string\";}s:7:\"TokenId\";O:8:\"stdClass\":3:{s:7:\"example\";s:9:\"dfSDdRcsd\";s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:4:\"User\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"account\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/AccountId\";}s:8:\"canLogin\";O:8:\"stdClass\":5:{s:7:\"default\";b:0;s:11:\"description\";s:69:\"true
  if the user owning the account (can get tokens with /auth/login)\";s:7:\"example\";b:0;s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserEmail\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PhoneNumber\";}}s:8:\"required\";a:4:{i:0;s:5:\"email\";i:1;s:4:\"name\";i:2;s:6:\"locale\";i:3;s:8:\"canLogin\";}s:4:\"type\";s:6:\"object\";}s:11:\"UserCreated\";O:8:\"stdClass\":5:{s:11:\"description\";s:73:\"A
  resource has been created. The `resource` property gives its reference.\";s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"code\";i:201;s:7:\"message\";s:12:\"User
  created\";s:8:\"resource\";O:8:\"stdClass\":3:{s:6:\"entity\";s:4:\"User\";s:4:\"href\";s:29:\"/users/RGV2aWNlMDAwMDAwMDAwMZ\";s:2:\"id\";s:22:\"RGV2aWNlMDAwMDAwMDAwMZ\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":3:{s:4:\"enum\";a:1:{i:0;i:201;}s:7:\"example\";i:201;s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"User
  created\";}s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/UserResource\";}}s:8:\"required\";a:3:{i:0;s:4:\"code\";i:1;s:7:\"message\";i:2;s:8:\"resource\";}s:4:\"type\";s:6:\"object\";}s:9:\"UserEmail\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"email\";s:9:\"minLength\";i:6;s:4:\"type\";s:6:\"string\";}s:6:\"UserId\";O:8:\"stdClass\":7:{s:11:\"description\";s:31:\"Unique
  identifier of the *User*\";s:7:\"example\";s:22:\"RGV2aWNlMDAwMDAwMDAwMZ\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;s:7:\"pattern\";s:19:\"^[A-Za-z0-9-_]{22}$\";s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";}s:8:\"UserItem\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"canLogin\";O:8:\"stdClass\":5:{s:7:\"default\";b:0;s:11:\"description\";s:69:\"true
  if the user owning the account (can get tokens with /auth/login)\";s:7:\"example\";b:0;s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserEmail\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/UserId\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/MetadataSelected\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PhoneNumber\";}}s:8:\"required\";a:4:{i:0;s:5:\"email\";i:1;s:4:\"name\";i:2;s:6:\"locale\";i:3;s:2:\"id\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:11:\"/users/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:6:\"UserMe\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserEmail\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/UserId\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:5:\"login\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/AccountLogin\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PhoneNumber\";}}s:8:\"required\";a:4:{i:0;s:5:\"email\";i:1;s:4:\"name\";i:2;s:6:\"locale\";i:3;s:2:\"id\";}s:4:\"type\";s:6:\"object\";s:7:\"x-links\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"href\";s:19:\"/account/users/{id}\";s:3:\"rel\";s:4:\"full\";}}}s:11:\"UserMePatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}}s:4:\"type\";s:6:\"object\";}s:7:\"UserNew\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserEmail\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PhoneNumber\";}}s:8:\"required\";a:3:{i:0;s:5:\"email\";i:1;s:4:\"name\";i:2;s:6:\"locale\";}s:4:\"type\";s:6:\"object\";}s:9:\"UserPatch\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserEmail\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PhoneNumber\";}}s:4:\"type\";s:6:\"object\";}s:12:\"UserResource\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:6:\"entity\";s:4:\"User\";s:4:\"href\";s:29:\"/users/RGV2aWNlMDAwMDAwMDAwMZ\";s:2:\"id\";s:22:\"RGV2aWNlMDAwMDAwMDAwMZ\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"entity\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:4:\"User\";}s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":2:{s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/UserId\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:6:\"entity\";i:2;s:4:\"href\";}s:4:\"type\";s:6:\"object\";}s:13:\"UserTokenItem\";O:8:\"stdClass\":4:{s:11:\"description\";s:25:\"Token
  for User API access\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"appName\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Application
  name\";s:7:\"example\";s:11:\"Home Eopath\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/TokenId\";}s:7:\"lastUse\";O:8:\"stdClass\":3:{s:11:\"description\";s:124:\"Time
  of last use of the token to access the API. Updated at most every 15 minutes. If
  absent, the token has never been used.\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:6:\"places\";O:8:\"stdClass\":4:{s:11:\"description\";s:102:\"List
  of Places to which the User has access. If absent, it means any Place of the account
  are allowed.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/PlaceItem\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:19:\"refreshTokenExpires\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"If
  absent, infinite validity.\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:4:\"self\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"True
  if this token is the one used for this API request\";s:4:\"type\";s:7:\"boolean\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/UserItem\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:7:\"appName\";i:2;s:4:\"user\";}s:4:\"type\";s:6:\"object\";}s:7:\"ZipCode\";O:8:\"stdClass\":5:{s:11:\"description\";s:11:\"Postal
  code\";s:9:\"maxLength\";i:10;s:9:\"minLength\";i:0;s:7:\"pattern\";s:41:\"^(?:[A-Z0-9](?:[A-Z0-9][-
  ]?)*[A-Z0-9])?$\";s:4:\"type\";s:6:\"string\";}}"
...
