---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":7:{s:11:\"description\";s:82:\"The Uploady API
  allows you to connect to the Uploady free online storage platform.\";s:5:\"title\";s:7:\"Uploady\";s:7:\"version\";s:7:\"v1-beta\";s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:82:\"https://api.apis.guru/v2/cache/logo/https_www.uploady.com_static_facebook-logo.png\";}s:8:\"x-origin\";O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:35:\"https://www.uploady.com/v1/docs/api\";s:7:\"version\";s:3:\"1.2\";}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:11:\"uploady.com\";}"
host: content.uploady.com
basePath: /v1/api
paths:
  /events:
    get:
      description: 'There are two types of events: for folders and for files.<br/>nAll
        events will contain latest resource information about folder or file.nIf `folder`
        or `file` key is set to `null`, this means what this object was deleted.<br/>nTo
        access this resource, scope `read.events` is required.'
      parameters:
      - description: Get events for root folder
        in: query
        name: root_id
        required: true
        type: string
      - description: ID of last known event id
        in: query
        name: last_event_id
        required: false
        type: string
      - description: 'Available values: links'
        in: query
        name: include
        required: false
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Events'
      summary: Get events
      tags:
      - events
  /files:
    delete:
      description: File will be permanently deleted, recovery is not possible. You
        can delete multiple files by joining id's with comma. <br/>nTo access this
        resource, scope `delete.file` is required.
      parameters:
      - description: ID of file
        in: formData
        name: id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Success'
        404:
          description: No files were found
      summary: Delete files
      tags:
      - files
    get:
      description: You can get multiple files by joining id's with comma.<br/>n To
        access this resource, scope `read.file` is required.
      parameters:
      - description: ID of file that needs to be fetched
        in: query
        name: id
        required: true
        type: string
      - description: 'Available values: links'
        in: query
        name: include
        required: false
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Files'
      summary: Find files
      tags:
      - files
    put:
      description: You can update multiple files by joining id's with comma. <br/>nTo
        access this resource, scope `update.file` is required.
      parameters:
      - description: ID of file
        in: formData
        name: id
        required: true
        type: string
      - description: rename file
        in: formData
        name: name
        required: false
        type: string
      - description: move file to folder
        in: formData
        name: folder_id
        required: false
        type: string
      - description: if set to true, file will be copied.
        in: formData
        name: copy
        required: false
        type: boolean
      - description: if set to true, file will be shared.
        in: formData
        name: share_link_enabled
        required: false
        type: boolean
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Files'
        403:
          description: You do not have permission to access this folder
      summary: Update files information
      tags:
      - files
  /files/link:
    post:
      description: You can get multiple links by joining id's with comma.<br/>n To
        access this resource, scope `read.file` is required.
      parameters:
      - description: file id
        in: formData
        name: id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/FilesLinks'
      summary: Get download link
      tags:
      - files
  /files/share:
    delete:
      description: Delete shared email.<br/>nTo access this resource, scope `share.file`
        is required.
      parameters:
      - description: file id
        in: formData
        name: id
        required: true
        type: string
      - description: shared link id
        in: formData
        name: link_id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Success'
        403:
          description: You do not have permission to access this file
        404:
          description: File not found
      summary: Delete shared email
      tags:
      - files
    get:
      description: Get shared emails.<br/>n To access this resource, scope `share.file`
        is required.
      parameters:
      - description: file id
        in: query
        name: id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/FileShare'
      summary: Get shared emails
      tags:
      - files
    post:
      description: Be sure that user is verified.<br/>n To access this resource, scope
        `share.file` is required.
      parameters:
      - description: file id
        in: formData
        name: id
        required: true
        type: string
      - description: email address
        in: formData
        name: email
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/FileShare'
      summary: Share file via email
      tags:
      - files
  /folders:
    delete:
      description: You can delete multiple folders by joining id's with comma.<br/>n
        To access this resource, scope `delete.folder` is required.
      parameters:
      - description: folder id
        in: formData
        name: id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Folders'
      summary: Delete folder
      tags:
      - folders
    get:
      description: You can get multiple folders by joining id's with comma.<br/>n
        To access this resource, scope `read.folder` is required.
      parameters:
      - description: ID of folder that needs to be fetched
        in: query
        name: id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Folders'
      summary: Find folder
      tags:
      - folders
    post:
      description: Create new folder.<br/>n To access this resource, scope `create.folder`
        is required.
      parameters:
      - description: folder name
        in: formData
        name: name
        required: true
        type: string
      - description: parent folder id, if id is not specified, root folder will be
          used instead.
        in: formData
        name: parent_id
        required: false
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Folders'
      summary: Create folder
      tags:
      - folders
    put:
      description: You can update multiple folders by joining id's with comma. <br/>n
        To access this resource, scope `update.folder` is required.
      parameters:
      - description: ID of folder that needs to be updated
        in: formData
        name: id
        required: true
        type: string
      - description: folder name
        in: formData
        name: name
        required: false
        type: string
      - description: parent folder id
        in: formData
        name: parent_id
        required: false
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Folders'
      summary: Update folder
      tags:
      - folders
  /folders/children:
    get:
      description: To access this resource, scope `read.folder` is required.
      parameters:
      - description: ID of parent folder
        in: query
        name: id
        required: true
        type: string
      - description: set this to get child files
        in: query
        name: get_files
        required: false
        type: boolean
      - description: set this to get child folders
        in: query
        name: get_folders
        required: false
        type: boolean
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Children'
      summary: Find child files and folders
      tags:
      - folders
  /folders/path:
    get:
      description: Folders are returned in strict order. From root folder to folder
        specified by id.<br/>nn To access this resource, scope `read.folder` is required.
      parameters:
      - description: folder id
        in: query
        name: id
        required: true
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Folders'
      summary: Get full path to the folder
      tags:
      - folders
  /upload:
    post:
      description: Files are uploaded to https://content.uploady.com/v1/api/upload.<br/>n                    To
        access this resource, scope `create.file` is required.
      parameters:
      - description: file to store
        in: formData
        name: file
        required: true
        type: file
      - description: ID of parent folder, there file will be stored. If not passed,
          files will be stored in app root folder.
        in: formData
        name: folder_id
        type: string
      - description: File name
        in: formData
        name: file_name
        type: string
      - description: ID of file that needs to be updated. Should be sent as form data.
        in: formData
        name: file_id
        type: string
      - description: if set to true, file will be shared.
        in: formData
        name: share_link_enabled
        type: boolean
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Files'
      summary: Upload files
      tags:
      - upload
  /users:
    post:
      description: This api is only available for clients with static type.<br/>nScope
        `register` is required.<br/>nAccess token can be created with `client credentials`
        grant type.<br/>nThis resource can not be accessed with cross origin request.
      parameters:
      - description: 'Available values: storage,folders'
        in: query
        name: include
        required: false
        type: string
      - description: If set to true, temporary user will be created.
        in: formData
        name: temporary
        required: false
        type: boolean
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Users'
      summary: Static - Create new user
      tags:
      - users
  /users/logout:
    post:
      description: Logout user. User will be detached from access token. n Implicit
        grant does not provide a refresh token, but provided access token will be
        destroyed.
      parameters:
      - description: Refresh token to be deleted
        in: formData
        name: refresh_token
        required: false
        type: string
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Success'
      summary: Destroy access and refresh tokens
      tags:
      - users
  /users/storage:
    get:
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Storage'
      summary: Get user storage information.
      tags:
      - users
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":17:{s:8:\"Children\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"files\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/File\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:7:\"folders\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Folder\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}}s:5:\"Event\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"Event
  information\";s:10:\"properties\";O:8:\"stdClass\":9:{s:4:\"file\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/File\";}s:7:\"file_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"folder\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Folder\";}s:9:\"folder_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"root_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:4:\"user\";i:2;s:7:\"root_id\";i:3;s:4:\"time\";}}s:6:\"Events\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"events\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:1:{i:0;s:6:\"events\";}}s:4:\"File\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"File
  information\";s:10:\"properties\";O:8:\"stdClass\":13:{s:9:\"extension\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"mime_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"parent_folder\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"sha1\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"share_enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"share_link\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"share_link_enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"share_password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"share_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:8:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:4:\"time\";i:3;s:9:\"mime_type\";i:4;s:9:\"extension\";i:5;s:4:\"size\";i:6;s:4:\"sha1\";i:7;s:13:\"parent_folder\";}}s:8:\"FileLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"Get
  file download url\";s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"direct_link\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:11:\"direct_link\";}}s:9:\"FileShare\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"emails\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/FileShareEmail\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:1:{i:0;s:6:\"emails\";}}s:14:\"FileShareEmail\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:5:\"email\";}}s:5:\"Files\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"files\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/File\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:1:{i:0;s:5:\"files\";}}s:10:\"FilesLinks\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"links\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/FileLink\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:1:{i:0;s:5:\"links\";}}s:6:\"Folder\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"Folder
  information\";s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"has_folders\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"parent_folder\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:4:\"time\";i:3;s:11:\"has_folders\";}}s:7:\"Folders\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"folders\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Folder\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:1:{i:0;s:7:\"folders\";}}s:7:\"Storage\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"storage\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/StorageData\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:1:{i:0;s:7:\"storage\";}}s:11:\"StorageData\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"storage_limit\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:17:\"used_storage_size\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:2:{i:0;s:17:\"used_storage_size\";i:1;s:13:\"storage_limit\";}}s:7:\"Success\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:7:\"success\";}}s:4:\"User\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"User
  information.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:12:\"display_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"family_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"given_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"group\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/UserLinks\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}s:8:\"new_user\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"verified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:8:{i:0;s:5:\"email\";i:1;s:10:\"given_name\";i:2;s:11:\"family_name\";i:3;s:12:\"display_name\";i:4;s:5:\"group\";i:5;s:8:\"verified\";i:6;s:8:\"new_user\";i:7;s:5:\"links\";}}s:9:\"UserLinks\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"root_folder\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"trash_folder\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:11:\"root_folder\";i:1;s:12:\"trash_folder\";}}s:5:\"Users\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"users\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;}}s:8:\"required\";a:1:{i:0;s:5:\"users\";}}}"
...
