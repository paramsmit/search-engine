---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:5:\"TUIse\";s:11:\"description\";s:34:\"A
  bot designed by TUI HackFridays\n\";}"
host: api.tuise.eu
basePath: /v1
paths:
  /v1/entertainment/overview:
    get:
      summary: overview entertainments
      description: get an overview of the available entertainment activities.
      parameters:
      - name: datetime
        in: query
        description: for when do you want to see the entertainment things
        required: true
        type: string
      - name: activityType
        in: query
        description: for when do you want to see the entertainment things
        required: false
        type: string
      responses:
        200:
          description: An array of activities
          schema:
            type: array
            items:
              $ref: '#/definitions/Activity'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /v1/entertainment/order:
    post:
      summary: place an order
      description: place an order
      parameters:
      - in: body
        name: body
        description: book an animation
        required: false
        schema:
          $ref: '#/definitions/Order'
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Activity'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /v1/directions:
    get:
      summary: Directions
      description: The directions endpoint returns informationnbased on a given start
        an end location.n
      parameters:
      - name: Start-point
        in: query
        description: Start point .
        required: true
        type: string
        format: string
      - name: End-point
        in: query
        description: End point.
        required: true
        type: string
        format: string
      - name: Mode
        in: query
        description: Travel mode .
        required: true
        type: integer
        format: integer
      tags:
      - Directions
      responses:
        200:
          description: An array of directions
          schema:
            type: array
            items:
              $ref: '#/definitions/Route'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /:
    get:
      security:
      - basicAuth: []
      responses:
        200:
          description: Will send `Authenticated` if authentication is succesful, otherwise
            it will send `Unauthorized`
  /excursions:
    get:
      tags:
      - excursion
      security:
      - basicAuth: []
      description: Lists `Excursion` objects. Availability is checked if a start &
        end date are provided.n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Excursion'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: limit
        description: limit the list of excursions
        in: query
        required: true
        type: number
        format: integer
      - name: offset
        description: offset the list of excursions
        in: query
        required: true
        type: number
        format: integer
      - name: codes
        description: comma seperated list of hotels
        in: query
        required: false
        type: string
      - name: startdate
        in: query
        description: start date (will trigger availability)
        required: false
        type: string
        format: date
      - name: enddate
        in: query
        description: end date, (will trigger availability)
        required: false
        type: string
        format: date
  /excursions/{region}:
    get:
      tags:
      - excursion
      security:
      - basicAuth: []
      description: Lists `Excursion` objects limited by region. Availability is checked
        if a start & end date are provided.n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Excursion'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: region
        in: path
        description: '`Location` code for the region'
        required: true
        type: string
      - name: limit
        description: limit the list of excursions
        in: query
        required: true
        type: number
        format: integer
      - name: offset
        description: offset the list of excursions
        in: query
        required: true
        type: number
        format: integer
      - name: codes
        description: comma seperated list of hotels
        in: query
        required: false
        type: string
      - name: startdate
        in: query
        description: start date (will trigger availability)
        required: false
        type: string
        format: date
      - name: enddate
        in: query
        description: end date, (will trigger availability)
        required: false
        type: string
        format: date
  /excursions/{region}/{city}:
    get:
      tags:
      - excursion
      security:
      - basicAuth: []
      description: Lists `Excursion` objects limited by region. Availability is checked
        if a start & end date are provided.n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Excursion'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: region
        in: path
        description: '`Location` code for the region'
        required: true
        type: string
      - name: city
        in: path
        description: '`Location` code for the city'
        required: true
        type: string
      - name: limit
        description: limit the list of excursions
        in: query
        required: true
        type: number
        format: integer
      - name: offset
        description: offset the list of excursions
        in: query
        required: true
        type: number
        format: integer
      - name: codes
        description: comma seperated list of hotels
        in: query
        required: false
        type: string
      - name: startdate
        in: query
        description: start date (will trigger availability)
        required: false
        type: string
        format: date
      - name: enddate
        in: query
        description: end date, (will trigger availability)
        required: false
        type: string
        format: date
  /excursions/code/{code}:
    get:
      tags:
      - excursion
      security:
      - basicAuth: []
      description: Returns an `Excursion` object for the given code and optionally
        for the given dates.n
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Excursion'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: code
        in: path
        description: unique code for the excursion
        required: true
        type: number
        format: integer
      - name: startdate
        in: query
        description: start date
        required: false
        type: string
        format: date
      - name: enddate
        in: query
        description: end date
        required: false
        type: string
        format: date
  /locations:
    get:
      tags:
      - location
      - reference
      security:
      - basicAuth: []
      description: List of  `Locations` (continents with child countries).n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
  /locations/{continent}:
    get:
      tags:
      - location
      - reference
      security:
      - basicAuth: []
      description: '`Location` object (type Continent) with child countries and grandchild
        regions.nBetween each level of specified type `Location` objects it''s possible
        that there are multiple generic `Location` objects.n'
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: continent
        in: path
        description: '`Location` code for the continent'
        required: true
        type: string
  /locations/{continent}/{country}:
    get:
      tags:
      - location
      - reference
      security:
      - basicAuth: []
      description: '`Location` object (type Country) with child regions and grandchild
        cities.n Between each level of specified type `Location` objects it''s possible
        that there are multiple generic `Location` objects.n'
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: continent
        in: path
        description: '`Location` code for the continent'
        required: true
        type: string
      - name: country
        in: path
        description: '`Location` code for the country'
        required: true
        type: string
  /locations/{continent}/{country}/{region}:
    get:
      tags:
      - location
      security:
      - basicAuth: []
      description: '`Location` object (type Region) with child cities and possible
        grandchild generic locations.n Between each level of specified type `Location`
        objects it''s possible that there are multiple generic `Location` objects.n'
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: continent
        in: path
        description: '`Location` code for the continent'
        required: true
        type: string
      - name: country
        in: path
        description: '`Location` code for the country'
        required: true
        type: string
      - name: region
        in: path
        description: '`Location` code for the region'
        required: true
        type: string
  /locations/{continent}/{country}/{region}/{city}:
    get:
      tags:
      - location
      - reference
      security:
      - basicAuth: []
      description: '`Location` object (type City) with possible child generic locations.n'
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: continent
        in: path
        description: '`Location` code for the continent'
        required: true
        type: string
      - name: country
        in: path
        description: '`Location` code for the country'
        required: true
        type: string
      - name: region
        in: path
        description: '`Location` code for the region'
        required: true
        type: string
      - name: city
        in: path
        description: '`Location` code for the city'
        required: true
        type: string
  /reservations:
    get:
      tags:
      - excursion
      - reservation
      security:
      - basicAuth: []
      description: Get Rservation price object.n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Reservation'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: reservation
        in: body
        description: Created reservation object
        required: true
        schema:
          $ref: '#/definitions/Reservation'
    post:
      tags:
      - excursion
      - reservation
      security:
      - basicAuth: []
      description: Book Reservation object.n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Reservation'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: reservation
        in: body
        description: Created reservation object
        required: true
        schema:
          $ref: '#/definitions/Reservation'
    put:
      tags:
      - excursion
      - reservation
      security:
      - basicAuth: []
      description: Amend Reservation object.n
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Reservation'
        403:
          description: Unauthorised response
          schema:
            type: string
            description: Not Authourised to access this endpoint or resource.
      parameters:
      - name: Accept-Language
        description: Locale
        in: header
        type: string
      - name: reservation
        in: body
        description: Created reservation object
        required: true
        schema:
          $ref: '#/definitions/Reservation'
  /v1/topics/{id}:
    get:
      summary: FAQ topics
      description: Get a specific FAQ topicn
      parameters:
      - name: id
        in: path
        description: Get a topic by id
        type: integer
        format: int32
        required: true
      tags:
      - FAQ
      - Topic
      responses:
        200:
          description: A FAQ topic
          schema:
            $ref: '#/definitions/Topic'
        404:
          description: Topic not found
          schema:
            $ref: '#/definitions/ResourceNotFound'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: add a new topic
      description: create a new topic
      parameters:
      - name: id
        in: path
        type: integer
        format: int32
        required: true
      - name: body
        in: body
        description: topic
        schema:
          $ref: '#/definitions/Topic'
        required: true
      responses:
        201:
          description: created topic
          schema:
            $ref: '#/definitions/Topic'
  /v1/topics:
    get:
      summary: get FAQ topics
      description: Get all FAQ topicn
      tags:
      - FAQ
      - Topic
      responses:
        200:
          description: An array of topics
          schema:
            type: array
            items:
              $ref: '#/definitions/Topic'
        201:
          description: succesfully created a topic
          schema:
            $ref: '#/definitions/Create'
        404:
          description: Topic not found
          schema:
            $ref: '#/definitions/ResourceNotFound'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /v1/questions:
    get:
      summary: Frequently Asked Questions
      description: The questions endpoint returns all the frequently asked questions
        for given topicn
      parameters:
      - name: topic
        in: query
        description: topic id you want to receive the questions for
        required: true
        type: integer
        format: int32
      tags:
      - Products
      responses:
        200:
          description: An array of questions
          schema:
            $ref: '#/definitions/Questions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /v1/questions/{id}:
    get:
      summary: Frequently Asked Questions
      description: The questions endpoint return the request question topicn
      parameters:
      - name: id
        in: path
        description: Question ID
        required: true
        type: integer
        format: int32
      tags:
      - FAQ
      responses:
        200:
          description: The question object
          schema:
            type: array
            items:
              $ref: '#/definitions/FAQ'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /v1/speech-to-text:
    post:
      summary: Transform spoken audio to text
      parameters:
      - name: speech
        required: true
        in: body
        description: The speech object to translate to text
        schema:
          $ref: '#/definitions/SpeechInput'
      tags:
      - speech
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/RecognizedSpeech'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /v1/traffic/incidents/area:
    get:
      summary: Traffic data from a destination
      description: The traffic endpoint returns information about the trafic at a
        given location. ]]n
      parameters:
      - name: latitude
        in: query
        description: Latitude component of location.
        required: true
        type: number
        format: double
      - name: longitude
        in: query
        description: Longitude component of location.
        required: true
        type: number
        format: double
      - name: radius
        in: query
        description: Radius in km from location
        required: true
        type: number
        format: float
      tags:
      - Products
      responses:
        200:
          description: An array of traffic incidents
          schema:
            type: array
            items:
              $ref: '#/definitions/TrafficIncident'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /fill:
    put:
      parameters:
      - name: translation
        in: body
        description: The translation JSON you want to post
        schema:
          $ref: '#/definitions/Translation'
        required: true
      responses:
        200:
          description: Updates the translation
        500:
          description: Application error
          schema:
            title: You have an error in your application
            type: string
  /weather:
    get:
      description: Gets `Weather` objects.nParams of location and date.n
      parameters:
      - name: latitude
        in: query
        description: Latitude component of location.
        required: true
        type: number
        format: double
      - name: longitude
        in: query
        description: Longitude component of location.
        required: true
        type: number
        format: double
      - name: date
        in: query
        description: The day you want to know the weather of.
        required: true
        type: string
        format: date-time
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Weather'
        404:
          description: Unsuccesful response
          schema:
            $ref: '#/definitions/Error'
produces:
- application/json
- application/json,
- application/xml
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":21:{s:8:\"Activity\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:3:\"bla\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:3:\"bla\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:3:\"bla\";}s:13:\"startdatetime\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:3:\"bla\";}s:11:\"enddatetime\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:3:\"bla\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"type
  of activity\";}s:8:\"capacity\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:3:\"bla\";}s:6:\"booked\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:3:\"bla\";}s:4:\"free\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:3:\"bla\";}}}s:5:\"Order\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"activityId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"numerOfPersons\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:5:\"Error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"fields\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Route\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"route_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"Unique
  identifier.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Description
  of product.\";}s:4:\"time\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:20:\"Display
  travel time.\";}s:8:\"distance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:24:\"Description
  of distance.\";}s:5:\"steps\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/step\";}s:11:\"description\";s:13:\"list
  of steps\";}}}s:4:\"step\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"step_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"Unique
  identifier of step.\";}s:8:\"steptime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"display
  time of step\";}s:12:\"stepdistance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:25:\"Display
  distance of step.\";}s:6:\"street\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"display
  name of street\";}}}s:9:\"Excursion\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:41:\"unique
  code that identifies the excursion\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"name
  of the execursion\";}s:7:\"summary\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"a
  summary text describing the excursion\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"type
  of the excursion\";}s:11:\"coordinates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:11:\"description\";s:29:\"coordinates
  of the excursion.\";}}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:14:\"startDateValid\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:11:\"description\";s:71:\"start
  date when the excursion becomes available to receive reservations\";}s:12:\"endDateValid\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:11:\"description\";s:64:\"end
  date when the excursion becomes unavailable for reservations\";}s:14:\"classification\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:36:\"the
  classification for the excursion\";}s:19:\"uniqueSellingPoints\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"images\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Image\";}}}}s:5:\"Image\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"thumbnail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"small\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"medium\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"large\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Location\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"Location
  code.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"Location
  name.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"Type
  of location, possible values = ['City', 'Region', 'Country', 'Continent', ''].\";}s:7:\"generic\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Is
  the location generic?\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"Description
  of the location.\";}s:11:\"coordinates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:11:\"description\";s:28:\"Coordinates
  of the location.\";}}s:6:\"images\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:39:\"Array
  of links to images of a location.\";}s:14:\"parentLocation\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:14:\"childLocations\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:11:\"description\";s:40:\"Child
  locations of the current location.\";}s:4:\"info\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"Information
  about the location.\";}s:6:\"nearby\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:38:\"List
  of nearby stuff of this location.\";}}}s:3:\"Pax\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:5:\"title\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:10:\"Pax
  title.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:9:\"Pax
  name.\";}s:9:\"firstname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"Pax
  firstname\";}s:9:\"birthdate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:11:\"description\";s:13:\"Pax
  birthdate\";}}}s:11:\"Reservation\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"paxs\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"paxs\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Pax\";}s:11:\"description\";s:20:\"Pax
  for reservation.\";}s:10:\"excursions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Excursion\";}s:11:\"description\";s:27:\"Excursions
  for reservation.\";}}}s:5:\"Topic\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"FAQ\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"question\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"answer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"helpful\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:9:\"Questions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Question\";}}s:8:\"Question\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"ResourceNotFound\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Create\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"SpeechInput\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"language\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:44:\"Tye
  ISO language code of the spoken language\";}s:5:\"audio\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";s:11:\"description\";s:21:\"The
  binary audio data\";}}}s:16:\"RecognizedSpeech\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"sentence\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  recognized spoken sentence\";}s:8:\"language\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  recognized language\";}}}s:15:\"TrafficIncident\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"incident_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:91:\"Unique
  identifier representing a specific traffic incident for a given latitude & longitude\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:53:\"The
  type of incident ( construction, car crash, ... )\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"Description
  of traffic incident.\";}s:8:\"severity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:24:\"Display
  name of product.\";}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}s:6:\"detour\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Detour
  information.\";}}}s:11:\"Translation\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"from\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"to\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"encoding\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Weather\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"degrees\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";}s:12:\"weatherState\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"humidity\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";}}}}"
...
