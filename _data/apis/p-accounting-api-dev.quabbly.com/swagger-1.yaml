---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:52:\"API documentation
  for the accounting backend service\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:22:\"Quabbly
  Accounting API\";s:14:\"termsOfService\";s:29:\"http://dev.quabbly.com/terms/\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:17:\"team@photizzo.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: p-accounting-api-dev.quabbly.com
basePath: /v1
paths:
  /account/vendor:
    post:
      tags:
      - Vendor Management
      summary: Add a new vendor
      description: ""
      operationId: createVendor
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: vendor object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Vendor'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateVendorSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Vendor Management
      summary: Find all vendors
      description: List of all vendors
      operationId: listVendor
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: lis of vendors
        required: true
        schema:
          $ref: '#/definitions/Vendor'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateVendorSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/vendor/:id:
    put:
      tags:
      - Vendor Management
      summary: Update existing vendor record
      description: ""
      operationId: updateVendor
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: vendor object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Vendor'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Vendor not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Vendor Management
      summary: delete existing vendor record
      operationId: deleteVendor
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Vendor not found
        405:
          description: Validation exception
  /account/vendor/suspend/:id:
    put:
      tags:
      - Vendor Management
      summary: suspend existing vendor record
      description: ""
      operationId: suspendVendor
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Vendor not found
        405:
          description: Validation exception
  /account/expense_category:
    post:
      tags:
      - Expense Category Management
      summary: Add a new expense category
      description: ""
      operationId: createExpenseCategory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: vendor object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/ExpenseCategory'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateExpenseCategorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Expense Category Management
      summary: Find all expense categories
      description: List all created expense categories
      operationId: listExpenseCategory
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: lis of vendors
        required: true
        schema:
          $ref: '#/definitions/ExpenseCategory'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateVendorSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/expense_category/:id:
    put:
      tags:
      - Expense Category Management
      summary: Update existing expense category record
      description: ""
      operationId: updateExpenseCategory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: expense category object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/ExpenseCategory'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Expense category not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Expense Category Management
      summary: delete existing expense category record
      operationId: deleteExpenseCategory
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Expense category not found
        405:
          description: Validation exception
  /account/customer:
    post:
      tags:
      - Customer Management
      summary: Add a new customer
      description: ""
      operationId: createCustomer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Vendor'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateCustomerSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Customer Management
      summary: Find all customers
      description: A list of all customers
      operationId: listCustomers
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: lis of vendors
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateCustomerSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/customer/:id:
    put:
      tags:
      - Customer Management
      summary: Update existing vendor record
      description: ""
      operationId: updateCustomer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Vendor not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Customer Management
      summary: delete existing customer record
      operationId: deleteCustomer
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Customer not found
        405:
          description: Validation exception
  /account/income_category:
    post:
      tags:
      - Income Category Management
      summary: Add a new income category
      description: ""
      operationId: createIncomeCategory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: income category object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/IncomeCategory'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateIncomeCategorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Income Category Management
      summary: Find all Income categories
      description: List of all income categories
      operationId: listIncomeCategory
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: list of income categories
        required: true
        schema:
          $ref: '#/definitions/IncomeCategory'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateIncomeCategorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/income_category/:id:
    put:
      tags:
      - Income Category Management
      summary: Update existing income category record
      description: ""
      operationId: updateIncomeCategory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: income category object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/IncomeCategory'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Income Category not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Income Category Management
      summary: delete existing income category record
      operationId: deleteIncomeCategory
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Income category not found
        405:
          description: Validation exception
  /account/bank:
    post:
      tags:
      - Bank Management
      summary: Add a new bank
      description: ""
      operationId: createBank
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Bank'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateBankSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Bank Management
      summary: Find all banks
      description: A list of all banks
      operationId: listBanks
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: lis of banks
        required: true
        schema:
          $ref: '#/definitions/Bank'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateCustomerSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/card:
    post:
      tags:
      - Card Account Management
      summary: Add a new card payment method record
      description: ""
      operationId: createCard
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: card payment record that need to be added to db
        required: true
        schema:
          $ref: '#/definitions/Card'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateCardSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Card Account Management
      summary: Find all card account
      description: List of all created card account
      operationId: listCardAccount
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateVendorSuccess'
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/card/:id:
    put:
      tags:
      - Card Account Management
      summary: Update existing card account record
      description: ""
      operationId: updateCardAccount
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: card account object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/updateCardAccount'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: card account not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/bank/:id:
    put:
      tags:
      - Bank Management
      summary: Update existing bank record
      description: ""
      operationId: updateBank
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: bank object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Bank'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Bank not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Bank Management
      summary: delete existing bank record
      operationId: deleteBank
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Bank not found
        405:
          description: Validation exception
  /account/expense:
    post:
      tags:
      - Expense Management
      summary: Add a new expense
      description: ""
      operationId: createExpense
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Expense'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateExpenseSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Expense Management
      summary: Find all expenses
      description: A list of all expenses
      operationId: listExpenses
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: list of expenses
        required: true
        schema:
          $ref: '#/definitions/Expense'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateExpenseSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth: []
  /account/expense/:id':
    put:
      tags:
      - Expense Management
      summary: Update existing expense record
      description: ""
      operationId: updateExpense
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: bank object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Expense'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Expense not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Expense Management
      summary: delete existing Expense record
      operationId: deleteExpense
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Expense not found
        405:
          description: Validation exception
  /account/sale:
    post:
      tags:
      - Sale Management
      summary: Add a new sale
      description: ""
      operationId: createSale
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Sale'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateSaleSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Sale Management
      summary: Find all sales
      description: A list of all sales
      operationId: listSales
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: list of sales
        required: true
        schema:
          $ref: '#/definitions/Sale'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateSaleSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/sale/:id:
    put:
      tags:
      - Sale Management
      summary: Update existing sale record
      description: ""
      operationId: updateSale
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: sale object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Sale'
      responses:
        200:
          description: Updated Successfully
        400:
          description: Invalid ID supplied
        404:
          description: Sale not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - Sale Management
      summary: delete existing sale record
      operationId: deleteSale
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: Sale not found
        405:
          description: Validation exception
  /account/inventory_category:
    post:
      tags:
      - Inventory Category Management
      summary: Add a new inventory category
      description: ""
      operationId: InventoryCategory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/InventoryCategory'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateInventoryCategorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Inventory Category Management
      summary: Find all inventory categories
      description: A list of all inventory categories
      operationId: listInventoryCategories
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: list of inventory categories
        required: true
        schema:
          $ref: '#/definitions/InventoryCategory'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateInventoryCategorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/inventory_category/:id:
    put:
      tags:
      - Inventory Category Management
      summary: Update existing category record
      description: ""
      operationId: updateInventoryCategory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: inventory category object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateInventoryCategory'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: category not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/inventory:
    post:
      tags:
      - Inventory Management
      summary: Add a new inventory record
      description: ""
      operationId: Inventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Inventory'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateInventorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Inventory Management
      summary: Find all inventory records
      description: A list of all inventory records
      operationId: listInventoryRecords
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: list of inventory categories
        required: true
        schema:
          $ref: '#/definitions/Inventory'
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/CreateInventorySuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/inventory/:id:
    put:
      tags:
      - Inventory Management
      summary: Update existing inventory record
      description: ""
      operationId: updateInventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: inventory object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Inventory'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: inventory record not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/inventory/suspend/:id:
    put:
      tags:
      - Inventory Management
      summary: suspend inventory item
      description: ""
      operationId: suspendInventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: inventory object that needs to be suspended
        required: true
        schema:
          $ref: '#/definitions/suspendInventoryItem'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: inventory record not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/inventory/unsuspend/:id:
    put:
      tags:
      - Inventory Management
      summary: unsuspend inventory item
      description: ""
      operationId: unsuspendInventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: inventory object that needs to be unsuspended
        required: true
        schema:
          $ref: '#/definitions/unsuspendInventoryItem'
      responses:
        200:
          description: SUCCESS
        400:
          description: Invalid ID supplied
        404:
          description: inventory record not found
        405:
          description: Validation exception
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/inventory/requistions:
    post:
      tags:
      - Inventory Requisition Management
      summary: Add a new inventory requistion record
      description: ""
      operationId: InventoryRequisitions
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/InventoryRequisition'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/CreateInventoryRequisitionSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/invoice:
    post:
      tags:
      - Invoice Management
      summary: Add a new invoice
      description: ""
      operationId: createInvoice
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: invoice object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Invoice'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/GetInvoiceSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Invoice Management
      summary: Find all invoices
      description: List of all invoices
      operationId: listInvoice
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/GetInvoiceSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/settings:
    put:
      tags:
      - Settings Management
      summary: update accounting settings
      description: ""
      operationId: updateSettings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: update on all settings
        required: true
        schema:
          $ref: '#/definitions/Settings'
      responses:
        200:
          description: CREATED
          schema:
            $ref: '#/definitions/UpdateSettingsSuccess'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Settings Management
      summary: Fetch all settings
      description: List of all settings
      operationId: listSettings
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/Settings'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
  /account/audit_trail:
    get:
      tags:
      - Audit Trail Management
      summary: Fetch all activites
      description: List of all activities
      operationId: listActivities
      produces:
      - application/json
      responses:
        200:
          description: SUCCESS
          schema:
            $ref: '#/definitions/GetAuditTrail'
        400:
          description: FAILED_VALIDATION
        500:
          description: ERROR
      security:
      - quabbly_auth:
        - write:pets
        - read:pets
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":33:{s:15:\"ExpenseCategory\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"stationaries\";}s:14:\"parentCategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:110:\"itemsThatWouldBeResold,itemsThatWouldAffectSales,itemsThatCannotBeMoved,itemsThatCanBeMoved,
  operatingExpenses\";}s:12:\"categoryType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"assets\";}}}s:28:\"CreateExpenseCategorySuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:14:\"IncomeCategory\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"stationaries\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:22:\"Purchases
  from Oke-oro\";}s:12:\"categoryType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"assets\";}}}s:27:\"CreateIncomeCategorySuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:6:\"Vendor\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"fred
  jason\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:21:\"fredjason@quabbly.com\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"08011122233\";}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:21:\"12
  Iweka road Onitsha\";}}}s:19:\"CreateVendorSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:8:\"Customer\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"fred
  jason\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:21:\"fredjason@quabbly.com\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"08011122233\";}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:21:\"12
  Iweka road Onitsha\";}}}s:21:\"CreateCustomerSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:4:\"Bank\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:8:\"bankName\";i:1;s:11:\"accountName\";i:2;s:13:\"accountNumber\";i:3;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"bankName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"fidelity\";}s:11:\"accountName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"fred
  jason\";}s:13:\"accountNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";i:4563725431;}s:6:\"branch\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:21:\"12
  Iweka road Onitsha\";}}}s:4:\"Card\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:8:\"cardType\";i:1;s:11:\"description\";i:2;s:14:\"openingBalance\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"cardType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"debit\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"fidelity
  debit\";}s:14:\"openingBalance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:0:\"\";}}}s:17:\"CreateCardSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:17:\"CreateBankSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:7:\"Expense\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:18:\"expenseDescription\";i:1;s:8:\"category\";i:2;s:11:\"paymentType\";i:3;s:11:\"expenseDate\";}s:10:\"properties\";O:8:\"stdClass\":13:{s:18:\"expenseDescription\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:20:\"Purchases
  at Idumota\";}s:8:\"category\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"stationaries\";}s:11:\"paymentType\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:4:{i:0;s:4:\"bank\";i:1;s:4:\"cash\";i:2;s:6:\"credit\";i:3;s:4:\"card\";}}s:11:\"bankAccount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"GTB\";}s:17:\"amountPaidViaBank\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:10000;}s:8:\"cashpaid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:10000;}s:12:\"creditAmount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:10000;}s:6:\"vendor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Emeka
  & Sons\";}s:15:\"cardDescription\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"UBA
  debit\";}s:11:\"transferFee\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:5000;}s:17:\"amountPaidViaCard\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:10000;}s:8:\"receipts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"https://p-cdn-p-dev.quabbly.com/\";}s:11:\"expenseDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"12-12-2012\";}}}s:20:\"CreateExpenseSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:4:\"Sale\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:15:\"saleDescription\";i:1;s:8:\"category\";i:2;s:11:\"paymentType\";i:3;s:8:\"receipts\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:18:\"expenseDescription\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"Sales
  at Idumota\";}s:8:\"category\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"stationaries\";}s:11:\"paymentType\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:4:\"bank\";i:1;s:4:\"cash\";i:2;s:8:\"receipts\";}}s:11:\"bankAccount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"GTB\";}s:21:\"amountReceivedViaBank\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"cashReceived\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"creditAmount\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Customer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"receipts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:45:\"augagdyafdgaduqtdyrqwyefqy56352e21e9uahvxvuwy\";}}}s:17:\"CreateSaleSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:17:\"InventoryCategory\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"fod3180\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"An
  electrical component\";}}}s:17:\"updateCardAccount\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:8:\"cardType\";i:1;s:11:\"description\";i:2;s:14:\"openingBalance\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"cardType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"debit\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"fidelity
  debit\";}s:14:\"openingBalance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:0:\"\";}}}s:24:\"updateCardAccountSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:23:\"UpdateInventoryCategory\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"fod3180\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"An
  electrical component\";}s:16:\"parentCategoryID\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c6288c2180323118c8a5794\";}}}s:30:\"CreateInventoryCategorySuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:9:\"Inventory\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:16:\"item_description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"fod3180\";}s:11:\"category_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c529f97ebe5600f38f6927d\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:1:\"2\";}s:9:\"unit_cost\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"800\";}}}s:20:\"suspendInventoryItem\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}}s:22:\"unsuspendInventoryItem\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}}s:22:\"CreateInventorySuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:20:\"InventoryRequisition\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:5:{i:0;s:4:\"name\";i:1;s:4:\"item\";i:2;s:10:\"categoryID\";i:3;s:8:\"quantity\";i:4;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"vidibon\";}s:4:\"item\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"fod3180\";}s:10:\"categoryID\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:1:\"2\";}}}s:33:\"CreateInventoryRequisitionSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:7:\"Invoice\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:11:{i:0;s:10:\"senderName\";i:1;s:11:\"senderEmail\";i:2;s:17:\"senderPhonenumber\";i:3;s:12:\"receiverName\";i:4;s:19:\"receiverPhonenumber\";i:5;s:13:\"invoicenumber\";i:6;s:11:\"invoiceDate\";i:7;s:5:\"items\";i:8;s:15:\"itemDescription\";i:9;s:5:\"price\";i:10;s:8:\"quantity\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:9:\"sendeName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Freddy
  Jason\";}s:11:\"senderEmail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"freddyjason@quabbly.com\";}s:13:\"senderAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"34
  River Valley\";}s:17:\"senderPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";s:11:\"08123456789\";}s:25:\"senderBusinessPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";s:11:\"08123456789\";}s:12:\"receivername\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Freddy
  Jason\";}s:13:\"receiverEmail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"freddyjason@quabbly.com\";}s:15:\"receiverAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"34
  River valley\";}s:19:\"receiverPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"08123456789\";}s:13:\"invoiceNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";i:1;}s:11:\"invoiceDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"12-12-2000\";}s:11:\"invoiceTerm\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:17:\"terms
  of services\";}s:14:\"invoiceDueDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"12-12-2000\";}s:5:\"items\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:15:\"itemDescription\";i:1;s:5:\"price\";i:2;s:8:\"quantity\";}}s:3:\"tax\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:5;}}}s:20:\"CreateInvoiceSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:17:\"GetInvoiceSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":19:{s:9:\"sendeName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Freddy
  Jason\";}s:11:\"senderEmail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"freddyjason@quabbly.com\";}s:13:\"senderAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"34
  River Valley\";}s:17:\"senderPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";s:11:\"08123456789\";}s:25:\"senderBusinessPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";s:11:\"08123456789\";}s:12:\"receivername\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Freddy
  Jason\";}s:13:\"receiverEmail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"freddyjason@quabbly.com\";}s:15:\"receiverAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"34
  River valley\";}s:19:\"receiverPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"08123456789\";}s:13:\"invoiceNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";i:1;}s:11:\"invoiceDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"12-12-2000\";}s:11:\"invoiceTerm\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:17:\"terms
  of services\";}s:14:\"invoiceDueDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"12-12-2000\";}s:5:\"items\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:15:\"itemDescription\";i:1;s:5:\"price\";i:2;s:8:\"quantity\";}}s:3:\"tax\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:5;}s:8:\"subTotal\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:50000;}s:5:\"total\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"amountPaid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:20000;}s:10:\"balanceDue\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:30000;}}}s:8:\"Settings\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:28:\"enableApprovalForProcurement\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:19:\"procurementApprover\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:17:\"emeka@quabbly.com\";i:1;s:16:\"amaka@quably.com\";i:2;s:17:\"chima@quabbly.com\";}}s:25:\"enablerequisitionApprover\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:20:\"requisitionApprovers\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:17:\"emeka@quabbly.com\";i:1;s:16:\"amaka@quably.com\";i:2;s:17:\"chima@quabbly.com\";}}s:16:\"enableBankCharge\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:12:\"chargeCharge\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c8526ac664ca61850052dfa\";}}}s:21:\"UpdateSettingsSuccess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"2019-01-13T23:33:21.586Z\";}s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5c3bcfc1eb99dd0010d335fe\";}}}s:13:\"GetAuditTrail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:31:\"Emeka
  Obiora added a new record\";}s:10:\"actionType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"create\";}s:14:\"previousEntity\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:15:\"itemDescription\";i:1;s:5:\"price\";i:2;s:8:\"quantity\";}}s:9:\"newEntity\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:3:{i:0;s:15:\"itemDescription\";i:1;s:5:\"price\";i:2;s:8:\"quantity\";}}s:9:\"scemaName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";a:1:{i:0;s:7:\"invoice\";}}}}}"
...
