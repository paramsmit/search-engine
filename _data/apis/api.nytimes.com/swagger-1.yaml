---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:11:\"description\";s:275:\"With the TimesTags
  API, you can mine the riches of the New York Times tag set. The TimesTags service
  matches your query to the controlled vocabularies that fuel NYTimes.com metadata.
  You supply a string of characters, and the service returns a ranked list of suggested
  terms.\";s:14:\"termsOfService\";s:32:\"http://developer.nytimes.com/tou\";s:5:\"title\";s:9:\"TimesTags\";s:7:\"version\";s:5:\"1.0.0\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:35:\"http://developer.nytimes.com/signup\";}s:21:\"x-apisguru-categories\";a:2:{i:0;s:5:\"media\";i:1;s:9:\"open_data\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:58:\"https://static01.nyt.com/images/icons/t_logo_291_black.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:95:\"https://raw.githubusercontent.com/NYTimes/public_api_specs/master/times_tags/times_tags_v3.json\";s:7:\"version\";s:3:\"2.0\";}}s:14:\"x-providerName\";s:11:\"nytimes.com\";s:13:\"x-serviceName\";s:10:\"times_tags\";s:11:\"x-preferred\";b:1;}"
host: api.nytimes.com
basePath: /svc/suggest/v1
paths:
  /timestags.json:
    get:
      parameters:
      - description: Your search query
        in: query
        name: query
        required: true
        type: string
      - description: 'If you do not specify a value for filter (see the Optional Parameters),
          your query will be matched to tags in all four Times dictionaries: subject,
          geographic location, organization and person. To use more than one, separate
          with commas.n'
        enum:
        - Des
        - Geo
        - Org
        - Per
        in: query
        name: filter
        required: false
        type: string
      - default: 10
        description: Sets the maximum number of results
        in: query
        name: max
        required: false
        type: integer
      responses:
        200:
          description: An array of tags
          schema:
            items:
              items:
                type: string
              type: array
            type: array
produces:
- application/json
schemes:
- http
- https
...
