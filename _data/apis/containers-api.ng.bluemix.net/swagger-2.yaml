---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:11:\"description\";s:3085:\"Containers are
  virtual software objects that include all the elements that an app needs to run.
  A container has the benefits of resource isolation and allocation but is more portable
  and efficient than, for example, a virtual machine.\n\n This documentation describes
  the IBM Containers API, which is based on the Docker Remote API. The API provides
  endpoints that you can use to create and manage your single containers and container
  groups in Bluemix. Endpoints are summarized under the following tags:\n\n- **Authentication**:
  Retrieve and refresh your TLS certificates.\n- **Private Docker images registry**:
  Create your own private Docker images registry in Bluemix by setting a namespace
  for your organization.\n- **Images**: View, build, and push your images to your
  private Bluemix registry so you can use them with IBM Containers. You can also scan
  your container images with the Vulnerability Advisor against standard policies set
  by the organization manager and a database of known Ubuntu issues.\n- **Single Containers**:
  Create and manage single containers in Bluemix. Use a single container to implement
  short-lived processes or to run simple tests as you develop an app or service. To
  make your single container available from the internet, review the `Public IP addresses`
  endpoints.\n- **Container Groups**: Create and manage your container groups in Bluemix.
  A container group consists of multiple single containers that are all created from
  the same container image and as a consequence are configured in the same way. Container
  groups offer further options at no cost to make your app highly available. These
  options include in-built load balancing, auto-recovery of unhealthy container instances,
  and auto-scaling of container instances based on CPU and memory usage. Map a public
  route to your container group to make your app accessible from the internet.\n-
  **Public IP addresses**: Use these endpoints to request public IP addresses for
  your space. You can bind this IP address to your container to make your container
  accessible from the internet.\n- **File shares**: Create, list and delete file shares
  in a space. A file share is a NFS storage system that hosts Docker volumes.\n- **Volumes**:
  Create and manage container volumes in your space to persist the data of your containers.\n\n\n
  Each API request requires an HTTP header that includes the 'X-Auth-Token\u2019 and
  'X-Auth-Project-Id\u2019 parameter.\n\n- **X-Auth-Token**: The JSON web token (JWT)
  that you receive when logging into the Bluemix platform. It allows you to use the
  IBM Containers REST API, access services, and resources. Run `cf oauth-token` to
  retrieve your access token information.\n- **X-Auth-Project-Id**: The unique ID
  of your organization space where you want to create or work with your containers.
  Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space,
  to retrieve your space ID.\n\n\n For further information about how containers work
  in the IBM Containers service, review the documentation under https://new-console.ng.bluemix.net/docs/containers/container_index.html.\";s:7:\"license\";O:8:\"stdClass\":1:{s:4:\"name\";s:49:\"(C)
  Copyright IBM Corp. 2016 All Rights Reserved.\";}s:5:\"title\";s:14:\"IBM Containers\";s:7:\"version\";s:5:\"3.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:15:\"developer_tools\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:110:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_925367546471223296_t0eKqcyC_400x400.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:44:\"http://ccsapi-doc.mybluemix.net/swagger.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:11:\"bluemix.net\";s:13:\"x-serviceName\";s:10:\"containers\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:18:\"bluemix_containers\";s:4:\"type\";s:7:\"openapi\";}}"
host: containers-api.ng.bluemix.net
basePath: /v3
paths:
  /build:
    post:
      consumes:
      - application/tar
      description: 'This API builds a new container image from a Dockerfile that is
        stored on your local machine and pushes the image to the private Bluemix registry
        (corresponding IBM Containers command: `cf ic build`).nn To push an image
        to your Bluemix registry, a namespace must be set for the organization. Run
        `cf ic namespace get` or call the `GET /registry/namespaces` API to check
        if a namespace is already set. If not, run `cf ic namespace set NAMESPACE`
        or call the `PUT /registry/namespaces/{namespace}` API to set a namespace
        for your organization.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: 'Tag the image with the full path to your private Bluemix registry
          in the following format: `t=registry.ng.bluemix.net/<namespace>/<image_name>:<tag>`.
          This path is used to push the image to the private Bluemix registry after
          it is built.'
        in: query
        name: t
        required: true
        type: string
      - description: You can choose whether or not to show the verbose build output
          to review every step during the container image build. If you set the query
          parameter to `q=false`, `q=False`, or `q=0`, the verbose build output is
          suppressed. To show the verbose build output, enter `q=true`, `q=True`,
          or `q=1`.
        in: query
        name: q
        required: false
        type: boolean
      - description: If you set the query parameter to `nocache=true`, `nocache=True`,
          or `nocache=1`, the cache will not be used to build your image. To use the
          cache, enter `nocache=false`, `nocache=False`, or `nocache=0`.
        in: query
        name: nocache
        required: false
        type: boolean
      - description: If set to pull=true, pull=True, or pull=1, then a newer version
          of the image is always attempted to be pulled even though an older version
          of the image exists locally. If set to pull=false, pull=False, or pull=0,
          then the local image will be used if one exists.
        in: query
        name: pull
        required: false
        type: boolean
      - description: Must be the content of a tar archive compressed with gzip. The
          archive must include a file called 'Dockerfile' at its root. It may include
          any number of other files which will be accessible in the build context.
        in: body
        name: file
        required: true
        schema: []
      responses:
        200:
          description: OK. The container image was built successfully and pushed to
            your private Bluemix repository. The build output stream is returned in
            JSON format.
        400:
          description: Bad request. Your could not be processed. Be sure to include
            the `t` query parameter to tag your image and that your Dockerfile has
            been tar archived with gzip.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Build a Docker image from a Dockerfile
      tags:
      - Images
      operationId: build.post
  /containers/create:
    post:
      consumes:
      - application/json
      description: 'This endpoint creates and starts a single container in your space
        based on the Docker image that is specified in the Image field of the request
        json. A single container in IBM Containers is similar to a container that
        you create in your local Docker environment. Single containers are a good
        way to start with IBM Containers and to learn about how containers work in
        the IBM Cloud and the features that IBM Containers provides. They are also
        recommended when you want to run simple app tests or during the development
        process of an app.nn In the Docker API there are two separate APIs to create
        and start a container. However in IBM Containers a container is created and
        started in a single API call. Therefore, this API merges parameters from the
        Docker API to create and start container.nn To create a container with IBM
        Containers, you must at least define the image that the container is based
        on.nn- Image: You must include the full path to the image in your private
        Bluemix registry in the format: `registry.ng.bluemix.net/<namespace>/<image>`.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: Summary of input parameter to create a container in IBM Containers.
        in: body
        name: Param
        required: true
        schema:
          $ref: '#/definitions/CreateContainer'
      - description: Choose a name for your container. The characters in the name
          can include uppercase letters, lowercase letters, numbers, periods (.),
          underscores (_), or hyphens (-), but the name must start with a letter.
        in: query
        name: name
        required: false
        type: string
      responses:
        201:
          description: OK. The creation of a single container with the specified attributes
            has been initiated.
          schema:
            $ref: '#/definitions/ContainerId'
        400:
          description: Bad request. The data that you entered in the request body
            are either incomplete or in the wrong format. Be sure to include at least
            the Docker image that you want to use in JSON format and re-run the API
            request.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        409:
          description: ' Conflict. A container with the same name already exists.
            Choose another name for your container and re-run the API request.'
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Create and start a single container
      tags:
      - Single containers
      operationId: containers.create.post
  /containers/floating-ips:
    get:
      description: 'This endpoint returns a list of all public IP addresses that are
        allocated to a space and not bound to a container. If you want to list all
        public IP addresses that are allocated to a space, even those that are already
        bound to a container, use the `all` query parameter (corrsponding IBM Containers
        command: `cf ic ip list`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: If this option is set to `all=1`, `all=True`, or `all=true`,
          all public IP addresses that are allocated to a space are returned. If this
          option is set to `all=0`, `all=False`, or `all=false`, only available public
          IP addresses that are allocated but not bound to a container are returned.
          By default, only available public IP addresses are returned.
        in: query
        name: all
        required: false
        type: boolean
      responses:
        200:
          description: OK. A list of public IP addresses that are allocated to the
            space is returned.
          schema:
            items:
              $ref: '#/definitions/FloatingIP'
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: List available public IP addresses in a space
      tags:
      - Public IP addresses
      operationId: containers.floating_ips.get
  /containers/floating-ips/request:
    post:
      description: 'This endpoint requests a new public IP address for a space (corresponding
        IBM Containers command: `cf ic ip request`). The number of public IP addresses
        depends on the quota that is assigned to the space. If there is not enough
        quota left to request a new public IP address, you can either contact your
        organization manager to increase the quota, or unbind an existing IP address
        from a container by running `cf ic ip unbind <ip_adress> <container>` command,
        or  calling the `POST /container/{name_or_id}/floating-ips/{ip}/unbind` endpoint.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A new public IP address is allocated to your space.
          schema:
            description: New public IP address that is allocated to your space.
            type: string
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        402:
          description: Payment required. This request exceeds the quota that is allocated
            to the space. You can either contact your organization manager to increase
            the quota, or unbind an existing IP address from a container by running
            `cf ic ip unbind <ip_adress> <container>`, or calling the `POST /container/{name_or_id}/floating-ips/{ip}/unbind`
            endpoint.
        409:
          description: Conflict. This request exceeds the quota that is allocated
            to the space. You can either contact your organization manager to increase
            the quota, or unbind an existing IP address from a container by running
            `cf ic ip unbind <ip_adress> <container>`, or calling the `POST /container/{name_or_id}/floating-ips/{ip}/unbind`
            endpoint.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Request a public IP address for a space
      tags:
      - Public IP addresses
      operationId: containers.floating_ips.request.post
  /containers/floating-ips/{ip}/release:
    post:
      description: 'This endpoint releases a public IP address from a space (corresponding
        IBM Containers command: `cf ic ip release <ip_adress>`). The public IP address
        is no longer allocated to the space. If a container was bound to the IP address,
        it is automatically unbound.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The public IP address that you want to release. Run `cf ic ip
          list` or call the `GET /containers/floating-ips?all=true` endpoint to review
          all public IP address that are allocated to your space. After a public IP
          address is released, it will no longer be allocated to your space.
        in: path
        name: ip
        required: true
        type: string
      responses:
        204:
          description: No Content. The public IP address has been released from your
            space.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. The public IP address that you entered, could not
            be found. Run `cf ic ip list`, or call the `GET /containers/floating-ips?all=true`
            endpoint to review your public IP addresses. Re-run the API call with
            the updated public IP address information.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Release public IP address
      tags:
      - Public IP addresses
      operationId: containers.floating_ips.ip.release.post
  /containers/groups:
    get:
      description: 'This endpoint returns a list of all container groups in a space
        independent of their current state. (corresponding IBM Containers command:
        `cf ic group list`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A list of container groups is returned.
          schema:
            items:
              $ref: '#/definitions/ContainersGroupsGetListItem'
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: List all container groups in a space
      tags:
      - Container Groups
      operationId: containers.groups.get
    post:
      description: 'This endpoint creates and starts a new container group in your
        space. A container group consists of two or more single containers that are
        all created from the same container image and as a consequence are configured
        in the same way. Container groups offer different options at no cost to make
        your app highly available, such as in-built load balancing, auto-recovery
        of unhealthy container instances, and auto-scaling of container instances
        based on CPU and memory usage.nnTo create a container group with IBM Containers,
        you must at least define a container group name and the image that the container
        group is based on. Required attributes:nnnnnnnnnnnnnnnnn- Name: The container
        group name must start with a letter and then can include uppercase letters,
        lowercase letters, numbers, periods (.), underscores (_), or hyphens (-).n-
        Image: You must include the full path to the image in your private Bluemix
        registry in the format:`registry.ng.bluemix.net/<namespace>/<image>`.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: Attributes that are required to create a container group in your
          space.
        in: body
        name: RequiredAttributes
        required: true
        schema:
          $ref: '#/definitions/ContainersGroupsPostRequiredAttributes'
      responses:
        201:
          description: Created. Your container group was successfully created.
          schema:
            $ref: '#/definitions/ContainersGroupsPostCreatedInfo'
        400:
          description: Bad request. The information that you entered in the request
            body are either incomplete or in the wrong format to process your request.
            Be sure, to specify at least the name and container image for your container
            group in JSON format and re-run the REST call.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        409:
          description: Conflict. A container group with the same name already exists.
            Choose a new name for your container group and re-run the REST call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Create and start a container group.
      tags:
      - Container Groups
      operationId: containers.groups.post
  /containers/groups/{name_or_id}:
    delete:
      description: 'Stops and deletes the container instances that run in a container
        group (corresponding IBM Containers command: `cf ic group rm <group_name>`).
        When you delete a container group, all floating private IP addresses are released.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or unique ID of the container group that you want to
          delete. Run `cf ic group list` or call the `GET /containers/groups` endpoint
          to retrieve a list of container groups in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: 'If you want to force the deletion of a container group that
          has running container instances, use the force option. This parameter needs
          to be set to either true or false. If set to `force=true`, `force=True`,
          or `force=1`, running container instances are deleted. If set to `force=false`,
          `force=False`, or `force=0`, running container instances are not deleted.
          If you do not specify this paramater, running container instances are not
          deleted by default. '
        in: query
        name: force
        required: false
        type: string
      responses:
        204:
          description: OK. No content. The deletion of the container group was successfully
            processed.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        403:
          description: The container group cannot be deleted due to running or failed
            container instances. Set the force query parameter to `force=true`, `force=True`,
            or `force=1` and re-run the REST call to force the deletion of your container
            group.
        404:
          description: Not Found. The name or ID of the container group that you want
            to delete could not be found. Run `cf ic group list` or call the `GET
            /containers/groups` endpoint to retrieve a list of container groups in
            your space. Enter the correct name or ID and re-run the API call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Stop and delete all container instances in a container group.
      tags:
      - Container Groups
      operationId: containers.groups.name_or_id.delete
    get:
      description: 'This endpoint retrieves detailed information about a container
        group with a given name (corresponding IBM Containers command: `cf ic group
        inspect GROUP`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or unique ID of the container group that you want to
          inspect. Run `cf ic group list` or call the `GET /containers/groups` endpoint
          to retrieve a list of container groups in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      responses:
        200:
          description: OK. A detailed list of information about a container group
            is retrieved.
          schema:
            $ref: '#/definitions/ContainersGroupsNameOrIdGetDetails'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The specified name or ID of the container group
            that you want to update could not be found. Run `cf ic group list` or
            call the `GET /containers/groups` endpoint to retrieve a list of container
            groups in your space. Enter the correct name or ID and re-run the REST
            call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Inspect a container group.
      tags:
      - Container Groups
      operationId: containers.groups.name_or_id.get
    patch:
      description: 'Update the number of container instances that run in a container
        group (corresponding IBM Containers command: `cf ic group update <option>
        <group>`).nnNote: You can run only one update at a time.nn The desired number
        is the number of container instances that you require. It must be within the
        current limits of Max and Min. To increase the number of desired container
        instances above the Max value, you must first execute an update on the Max
        value. Once this update is completed, you can increase the desired number
        of container instances.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or unique ID of the container group that you want to
          update.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: The container group parameter that you want to update.
        in: body
        name: Updates
        required: true
        schema:
          $ref: '#/definitions/ContainersGroupsNameOrIdPatchUpdatedInfo'
      responses:
        204:
          description: No content. The update has successfully been processed.
        400:
          description: Bad request. The information that you entered in the body of
            your request are either incomplete or in the wrong format. Be sure, to
            enter the information that you want to update in JSON format and review
            the description for each parameter to assure your desired update is valid
            and can be processed.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The name or ID of the container group that you want
            to update could not be found. Run `cf ic group list` or call the `GET
            /containers/groups` endpoint to retrieve a list of container groups in
            your space. Enter the correct name or ID and re-run the REST call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Update a container group.
      tags:
      - Container Groups
      operationId: containers.groups.name_or_id.patch
  /containers/groups/{name_or_id}/maproute:
    post:
      description: 'If you want your container group to be accessible from the Internet,
        you need to expose a public port and map a public route to it (corresponding
        IBM Containers command: `cf ic route map -n <host> -d <domain> <group>`).
        Every route consists of the host name and domain.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or unique ID of the container group to which you want
          to map a public route. Run `cf ic group list` or call the `GET /containers/groups`
          endpoint to retrieve a list of container groups in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: The public route that is mapped to the container group. A public
          route consists of the host name and domain.
        in: body
        name: Route
        required: true
        schema:
          $ref: '#/definitions/Route'
      responses:
        201:
          description: OK. The route that you specified was successfully mapped to
            the container group.
          schema:
            $ref: '#/definitions/ContainersGroupsNameOrIdMaproutePostInfo'
        400:
          description: Bad request. The information that you entered in the body request
            is either incomplete or in the wrong format. To map a route enter the
            domain and host name in JSON format. Be sure, that you have exposed a
            public port when you created the container group, otherwise you cannot
            map a public route to it.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The name or ID of the container group to which you
            want to map a public route could not be found. Run `cf ic group list`
            or call the `GET /containers/groups` endpoint to retrieve a list of container
            groups in your space. Enter the correct name or ID and re-run the REST
            call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Map a public route to a container group.
      tags:
      - Container Groups
      operationId: containers.groups.name_or_id.maproute.post
  /containers/groups/{name_or_id}/unmaproute:
    post:
      description: 'This endpoint unmaps a public route from a container group (corresponding
        IBM Containers command: `cf ic route unmap -n <host> -d <domain> <group>`).
        If no other public route is mapped to the container group, then the container
        group is no longer available from the internet.nn When you unmap a route from
        a container group, the route is not deleted and can be mapped to other container
        groups.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or unique ID (UUID) of the container group that you
          want to inspect.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: The public route that is unmapped from the container group. A
          public route consists of the host name and domain.
        in: body
        name: Route
        required: true
        schema:
          $ref: '#/definitions/Route'
      responses:
        201:
          description: OK. The route that you specified was successfully unmapped
            from the container group.
          schema:
            $ref: '#/definitions/ContainersGroupsNameOrIdMaproutePostInfo'
        400:
          description: Bad request. The information that you entered in the body of
            your request is either incomplete or in the wrong format. To unmap a route,
            enter the domain and host name in JSON format and re-run the REST call.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The name or ID of the container group from which
            you want to unmap a public route could not be found. Enter the correct
            name or ID and re-run the REST call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Unmap a public route from a container group
      tags:
      - Container Groups
      operationId: containers.groups.name_or_id.unmaproute.post
  /containers/json:
    get:
      description: 'This endpoint returns a list of all single containers in a space
        that are currently in a running state (corresponding IBM Containers command:
        `cf ic ps`). To list all single containers independent of their current state,
        set the `all` query parameter to true.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: 'By default, the `GET /containers/json` endpoint returns a list
          of all single containers in a space that are in a running state. To request
          a list of all containers independent of their current state, set the `all`
          query parameter to true. Allowed values are: `all=true`, `all=True`, and
          `all=1`. '
        in: query
        name: all
        required: false
        type: string
      - description: You can filter your containers by any environment variable key
          or value that is listed in the `Env` section of your CLI/ API response when
          you run the `cf ic inspect <container>` command, or call the `GET /containers/{id}/json`
          endpoint. Your search criteria does not need to be an exact match. It can
          also be a part of the key or value you are looking for. For example, to
          filter all containers with an environment variable that contains `id` in
          one of their environment variables, use `filter=id`.
        in: query
        name: filters
        required: false
        type: string
      responses:
        200:
          description: OK. A list of single containers that match the search criteria
            is returned.
          schema:
            items:
              $ref: '#/definitions/Container'
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: List single containers in a space.
      tags:
      - Single containers
      operationId: containers.json.get
  /containers/messages:
    get:
      description: This endpoint retrieves all IBM Containers system messages for
        the user.
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: 'The unique ID of your organization space where you want to create
          or work with your containers. To retrieve your space ID, run `cf space <space_name>
          --guid` and replace `<space_name>` with the name of the space where you
          want to create or work with your container. '
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A list of messages is returned.
          schema:
            properties:
              created_date:
                description: Timestamp when the message was created.
                type: string
              message:
                description: Important information for the IBM Containers user.
                type: string
            type: object
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: List messages for the user
      tags:
      - API info
      operationId: containers.messages.get
  /containers/quota:
    get:
      description: Retrieve the quota that is assigned to the organization and space.
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: 'OK. The current quota that is assigned to the organization
            and space is returned. '
          schema:
            $ref: '#/definitions/ContainersQuotaInfo'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Retrieve organization and space specific quota
      tags:
      - Quota
      operationId: containers.quota.get
    put:
      description: 'This endpoint updates the quota that is allocated to a Bluemix
        space.nn **Note**: Only paid accounts are eligbile to update the space quota.
        If you are using a free-trial account, upgrade to a paid account first.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The space quota details that you want to update.
        in: body
        name: ContainersQuotaList
        required: true
        schema:
          $ref: '#/definitions/ContainersQuotaList'
      responses:
        204:
          description: 'No content. The request to update the organization and/ or
            space quota has been processed. '
        400:
          description: 'Bad request. The '
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Update space quota
      tags:
      - Quota
      operationId: containers.quota.put
  /containers/usage:
    get:
      description: 'This endpoint returns a list of available container sizes and
        the quota limit and usage for the space.nn- Container sizes: A list of available
        container sizes indicating the amount of container memory, disk space and
        virtual CPUs that can be assigned to the container.n- Quota limit: Lists the
        number of containers, public IP addresses, available container memory, and
        virtual CPUS that are allocated to a space.n- Quota usage: Lists the current
        number of containers, images, and public IP addresses in a space that is counted
        towards your quota limit.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: 'OK. A list of available container sizes as well as the quota
            limit and usage for a space is returned. '
          schema:
            $ref: '#/definitions/ContainersUsageInfo'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: List container sizes and quota limits
      tags:
      - Quota
      operationId: containers.usage.get
  /containers/version:
    get:
      description: This endpoint retrieves a list of all microservices that are used
        in the IBM Containers service with their current build version. This method
        does not require authentication.
      responses:
        200:
          description: OK. A list of the current API and microservices versions is
            returend.
          schema:
            $ref: '#/definitions/ContainersVersionGetInfo'
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: List latest API version
      tags:
      - API info
      operationId: containers.version.get
  /containers/{id}/status:
    get:
      consumes:
      - application/json
      description: This endpoint returns the current state of a container. This state
        can either be a transient state, such as BUILDING and NETWORKING, or a non-transient
        state, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier that represents the container. Run `cf
          ic ps`, or call the `GET /containers/json` endpoint to retrieve the ID of
          the container.
        in: path
        name: id
        required: true
        type: string
      responses:
        201:
          description: OK. The current status of a container is returned.
          schema:
            $ref: '#/definitions/getContainerStatus'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container could not be found. Run `cf ic ps`
            or call the `GET /containers/json` endpoint to review the ID of your container.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: List the current state of a container.
      tags:
      - Single containers
      operationId: containers.id.status.get
  /containers/{name_or_id}:
    delete:
      description: 'Remove a single container that is identified by container ID or
        name from a space (corresponding IBM Containers command: `cf ic delete <container>`).
        The container must be stopped before it can be deleted, unless the `force`
        query parameter is set to true.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to delete. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
          endpoint to review all containers in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: Use the `force` query parameter if you want to delete the container
          independent of their current state. The container does not need to be stopped
          first. To force the deletion of a container, enter `force=true`, `force=True`,
          or `force=1`. If you want to delete containers that are in a non-running
          state only, do either not set this query parameter, or enter `force=false`,
          `force=False`, or `force=0`.
        in: query
        name: force
        required: false
        type: boolean
      responses:
        204:
          description: No Content. The deletion of your container has been initiated.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
            endpoint to review the ID and name of your container.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Remove a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.delete
  /containers/{name_or_id}/floating-ips/{ip}/bind:
    post:
      description: 'This endpoint binds an available public IP address to a single
        container (corresponding IBM Containers command: `cf ic ip bind <ip_adress>
        <container>`). After a container is bound to a public IP address, it can be
        accessed at `https://<public_ip_adress>:<public_port>`.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or ID of the container that you want to bind to the
          public IP address. Run the `cf ic ps` command or call the `GET /containers/json`
          endpoint to retrieve a list of containers in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: 'The public IP address that you want to bind to your container.nnNote:
          The public IP address must be available in the space and not bound to a
          container. Run `cf ic ip list` or call the `GET /containers/floating-ips`
          endpoint.'
        in: path
        name: ip
        required: true
        type: string
      responses:
        204:
          description: No Content. Your request to bind a public IP address to a container
            has successfully been processed.
        304:
          description: Not modified. The container is already bound to a public IP
            address. To view the details of your container, run `cf ic inspect <container>`
            or call the `GET /containers/{name_or_id}/json endpoint.
        400:
          description: Bad request. The IP address that you entered does not exist.
            Run `cf ic ip list` or call the `GET /containers/floating-ips` endpoint
            to retrieve a list of available public IP addresses in your space.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: 'Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
            endpoint to review the ID and name of your container. '
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Bind a public IP address to a single container
      tags:
      - Public IP addresses
      operationId: containers.name_or_id.floating_ips.ip.bind.post
  /containers/{name_or_id}/floating-ips/{ip}/unbind:
    post:
      description: 'This endpoint unbinds a public IP address from a container (corresponding
        IBM Containers command: `cf ic ip unbind <ip_adress> <container>`). The container
        that is unbound from the IP address will not be accessible from the internet
        anymore. The public IP address will be further allocated to the space and
        can be used to be bound to other containers. '
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: 'The name or ID of the container that you want to bind to the
          public IP address. Run the `cf ic ps` command or call the `GET /containers/json`
          endpoint to retrieve a list of containers in your space. '
        in: path
        name: name_or_id
        required: true
        type: string
      - description: 'The public IP address that you want to unbind from your container.nn
          Note: After unbinding a public IP address, this IP address will still be
          allocated to the space and can be used to be bound to other containers.'
        in: path
        name: ip
        required: true
        type: string
      responses:
        204:
          description: No Content. Your request to unbind a public IP address from
            a container has successfully been processed.
        400:
          description: Bad request. The IP address that you entered does not exist.
            Run `cf ic ip list` or call the `GET /containers/floating-ips` endpoint
            to retrieve a list of available public IP addresses in your space.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: 'Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
            endpoint to review the ID and name of your container. '
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Unbind a public IP address from a container
      tags:
      - Public IP addresses
      operationId: containers.name_or_id.floating_ips.ip.unbind.post
  /containers/{name_or_id}/json:
    get:
      description: 'This endpoint retrieves detailed information about a single container
        (corresponding IBM Containers command: `cf ic inspect <container>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name or ID of the container that you want to inspect. Run
          the `cf ic ps` command or call the `GET /containers/json` endpoint to retrieve
          a list of containers in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      responses:
        200:
          description: 'OK. A list with detailed information about the container is
            returned. '
          schema:
            $ref: '#/definitions/ContainerInfo'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container name or ID that you entered, could
            not be found. Run the `cf ic ps` command or call the `GET /containers/json`
            to review the name or ID of the container that you want to inspect.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Inspect a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.json.get
  /containers/{name_or_id}/pause:
    post:
      description: 'Pause all processes in a running single container with a given
        container ID or name (corresponding IBM Containers command: `cf ic pause <container>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to pause. Run `cf ic ps` or call the `GET /containers/json` endpoint to
          review all containers in your space that are currently in a running state.
        in: path
        name: name_or_id
        required: true
        type: string
      responses:
        204:
          description: No Content. The pausing of all processes inside the container
            has been initiated.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps` or call the `GET /containers/json` endpoint
            to review the ID and name of your container.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Pause a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.pause.post
  /containers/{name_or_id}/rename:
    post:
      description: 'Change the current name of an existing single container that is
        identified by the container ID or name (corresponding IBM Containers command:
        `cf ic rename <old_name> <new_name>`). '
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to rename. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
          endpoint to review all containers in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: The new name for the container. The characters in the name can
          include uppercase letters, lowercase letters, numbers, periods (.), underscores
          (_), or hyphens (-), but the name must start with a letter.
        in: query
        name: name
        required: true
        type: string
      responses:
        204:
          description: No Content. The request to rename the container has been initiated.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
            endpoint to review the ID and name of your container.
        409:
          description: 'Conflict. A container with the same name already exists. Choose
            another name for your container and re-run the API call. '
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Rename a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.rename.post
  /containers/{name_or_id}/restart:
    post:
      description: 'Restart a container with a given container ID or name (corresponding
        IBM Containers command: `cf ic restart <container>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to restart. Run `cf ic ps` or call the `GET /containers/json` endpoint to
          review all containers in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: The number of seconds to wait before the container is restarted.
          For example, if you want a container to restart after 10 seconds, enter
          `t=10`.
        in: query
        name: t
        required: false
        type: integer
      responses:
        204:
          description: No Content. The restart of the container has been initiated.
        304:
          description: Not Modified. A request to restart the container with the specified
            name or ID has already been initiated. To review the current state of
            your container, run `cf ic ps` or call the `GET /containers/json` endpoint.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps` or call the `GET /containers/json` endpoint
            to review the ID and name of your container.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Restart a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.restart.post
  /containers/{name_or_id}/start:
    post:
      description: 'Start a single container with a given container name or ID (corresponding
        IBM Containers command: `cf ic start <container>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to start. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
          endpoint to review the containers in your space that are currently not in
          a running state.
        in: path
        name: name_or_id
        required: true
        type: string
      responses:
        204:
          description: No Content. The start of the container has been initiated.
        304:
          description: Not Modified. A request to start the container with the specified
            name or ID has already been initiated. To review the current state of
            your container, run `cf ic ps` or call the `GET /containers/json` endpoint.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
            endpoint to review the ID and name of your container.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Start a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.start.post
  /containers/{name_or_id}/stop:
    post:
      description: 'Stop a single container with a given container name or ID (corresponding
        IBM Containers command: `cf ic stop <container>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to stop. Run `cf ic ps` or call the `GET /containers/json` endpoint to review
          the containers in your space that are currently in a running state.
        in: path
        name: name_or_id
        required: true
        type: string
      - description: The number of seconds to wait before the container is stopped.
          For example, if you want a container to stop after 10 seconds, enter `t=10`.
        in: query
        name: t
        required: false
        type: integer
      responses:
        204:
          description: No Content. The stop of the container has been initiated.
        304:
          description: Not Modified. A request to stop the container with the specified
            name or ID has already been initiated. To review the current state of
            your container, run `cf ic ps` or call the `GET /containers/json` endpoint.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps` or call the `GET /containers/json` endpoint
            to review the ID and name of your container.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Stop a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.stop.post
  /containers/{name_or_id}/unpause:
    post:
      description: 'Unpause all processes that are currently stopped inside a single
        containers with a given container ID or name (corresponding IBM Containers
        command: `cf ic unpause <container>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier or name of the container that you want
          to unpause. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
          endpoint to review all containers in your space.
        in: path
        name: name_or_id
        required: true
        type: string
      responses:
        204:
          description: No Content. The unpausing of all processes inside the container
            has been initiated.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not Found. The container with the specified name or ID could
            not be found. Run `cf ic ps -a` or call the `GET /containers/json?all=true`
            endpoint to review the ID and name of your container.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Unpause a single container
      tags:
      - Single containers
      operationId: containers.name_or_id.unpause.post
  /images/json:
    get:
      description: 'This endpoint returns a list of all available Docker images in
        a private Bluemix registry (corresponding IBM Containers command: `cf ic images`.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A list of all available Docker images in the private Bluemix
            registry is returned.
          schema:
            $ref: '#/definitions/ImageInfo'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: List all Docker images that are available in your private Bluemix registry.
      tags:
      - Images
      operationId: images.json.get
  /images/{id}:
    delete:
      description: 'Remove a Docker image from the private Bluemix registry that is
        identified by the image ID (corresponding IBM Containers command: `cf ic rmi
        <image>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The unique identifier representing a Docker image. Run `cf ic
          images`, or call the `GET /images/json` endpoint to review the Docker images
          that are available in your private Bluemix registry.
        in: path
        name: id
        required: true
        type: string
      responses:
        204:
          description: No Content. The image was successfully removed from your private
            Bluemix registry.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. The specified Docker image ID could not be found.
            Run `cf ic images` or call the `GET /images/json` endpoint to list all
            images in your private Bluemix registry. Note the ID of the image that
            you want to delete.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Remove a Docker image.
      tags:
      - Images
      operationId: images.id.delete
  /images/{name_or_id}/json:
    get:
      description: 'This endpoint returns detailed information about a Docker image
        that is stored in the private Bluemix registry of an organization (corresponding
        IBM Containers command: `cf ic inspect <image_name_or_id>`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: 'The full private Bluemix registry path to your image or the
          unique ID of the image that you want to inspect. Run `cf ic images` or call
          the `GET /images/json` endpoint to review the images in your private Bluemix
          registry. '
        in: path
        name: name_or_id
        required: true
        type: string
      responses:
        200:
          description: OK. A list of details about the container image is returned.
          schema:
            $ref: '#/definitions/ImageDetail'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: The specified image name or ID could not be found. Run `cf
            ic images` or call the `GET /images/json` endpoint to retrieve the name
            or ID of your image.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Inspect a Docker image in private Bluemix registry
      tags:
      - Images
      operationId: images.name_or_id.json.get
  /registry/namespaces:
    get:
      description: 'This endpoint retrieves the namespace that was set for the organization
        that owns the current space (corresponding IBM Containers command: `cf ic
        namespace get`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. The namespace of the organization is returned.
          schema:
            $ref: '#/definitions/Namespace'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. A namespace could not be found for the organization.
            Set a namespace by running `cf ic namespace set <namespace>`, or calling
            the `PUT /registry/namespaces/<namespace>` endpoint.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Retrieve the namespace of an organization.
      tags:
      - Private Docker images registry
      operationId: registry.namespaces.get
  /registry/namespaces/{namespace}:
    get:
      description: This endpoint checks whether a namespace is available in Bluemix
        and can be used to set up the private Docker images registry for an organization.
        When a HTTP code `201 Ok` is returned, the namespace is already assigned to
        another organization in Bluemix and cannot be used. When a HTTP code `404
        Not found` is returned, the namespace can be used for your organization.nn
        Consider the following rules when choosing a namespace for your organization:nn-
        Every organization can have one namespace at a time onlyn- The namespace must
        be unique in Bluemix.n- The namespace can be 4-30 characters long.n- The namespace
        must start with at least one letter or number.n- The namespace can only contain
        lowercase letters, numbers or underscores (_).
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the namespace that you would like to use for your
          organization and for which you would like to check availability in Bluemix.
        in: path
        name: namespace
        required: true
        type: string
      responses:
        200:
          description: OK. The namespace that you chose is already used in Bluemix.
            Choose another namespace and re-run the API call.
          schema:
            $ref: '#/definitions/Namespace'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. The namespace that you chose does not exist. You
            can use it to set it for your organization by running `cf ic namespace
            set <namespace>`, or calling the `PUT /registry/namespaces/<namespace>`
            endpoint.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Check the availability of a namespace
      tags:
      - Private Docker images registry
      operationId: registry.namespaces.namespace.get
    put:
      description: 'Set up your own Docker images registry in Bluemix by defining
        a namespace for your organization (corresponding IBM Containers command: `cf
        ic namespace set <namespace>`). The namespace is used to generate a unique
        URL to your private Bluemix registry. In your private registry you store all
        Docker images that you want to share across your organization. To create a
        container from an image, you must first push the image to your registry.nn
        The namespace cannot be changed after is has been set. Consider the following
        rules to choose a namespace for your organization:nn- Every organization can
        have one namespace at a time onlyn- The namespace must be unique in Bluemix.n-
        The namespace can be 4-30 characters long.n- The namespace must start with
        at least one letter or number.n- The namespace can only contain lowercase
        letters, numbers or underscores (_).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: 'The name for your namespace to create your private Docker images
          registry in Bluemix. You cannot change the name afterward. The namespace
          can be 4-30 characters long, must start with at least one letter or number,
          and can only contain lowercase letters, numbers or underscores (_). You
          can test the availability of your namespace by calling the `GET /registry/namespaces/<namespace>`
          endpoint. When a HTTP code `404 Not Found` is returned, the namespace is
          available in Bluemix. '
        in: path
        name: namespace
        required: true
        type: string
      responses:
        201:
          description: OK. The namespace is successfully set for your organization.
          schema:
            $ref: '#/definitions/Namespace'
        400:
          description: Bad request. The specified namespace does not meet the Bluemix
            namespace requirements. The namespace can be 4-30 characters long, must
            start with at least one letter or number, and can only contain lowercase
            letters, numbers or underscores (_). Verify your namespace and re-run
            the API request.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        409:
          description: Conflict. The namespace that you chose either already exists
            in Bluemix, or a namespace is already been set for your organization.
            Run `cf ic namespace get` or call the `GET /registry/namespaces` endpoint
            to retrieve your namespace information. If a namespace is not yet set
            for your organization, choose another name. You can test the namespace
            by calling the `GET /registry/namespaces/<namespace>` endpoint. Re-run
            the API call with the updated namespace.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Set a namespace for your private Bluemix registry.
      tags:
      - Private Docker images registry
      operationId: registry.namespaces.namespace.put
  /tlskey:
    get:
      description: 'This endpoint returns the TLS (Transport Layer Security) certificate
        to the user (corresponding IBM Containers command: `cf ic login`). The TLS
        certificate is a SSL certificate that is used to authenticate the user''s
        CLI with the IBM Containers service and to establish a secure communication
        between the user''s local machine and the container in Bluemix.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: Ok. A list of certificates is returned
          schema:
            $ref: '#/definitions/Certificate'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Retrieve the TLS Certificate
      tags:
      - Authentication
      operationId: tlskey.get
  /tlskey/refresh:
    put:
      description: 'This endpoint requests to generate a new TLS (Transport Layer
        Security) certificate on the server and to update the existing user TLS certificate
        (corresponding IBM Containers command: `cf ic init`).'
      parameters:
      - description: 'The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token. '
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        201:
          description: Ok. A list of updated certificates is returned.
          schema:
            $ref: '#/definitions/CertificateRefresh'
        401:
          description: Authentication failed. The Access Token is invalid or the Space
            ID that you entered could not be found. Run `cf oauth-token` to retrieve
            your access token. Run `cf space <space_name> --guid`, where `<space_name>`
            is the name of your space, to retrieve your space ID.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Refresh the TLS Certificate
      tags:
      - Authentication
      operationId: tlskey.refresh.put
  /volumes/create:
    post:
      description: 'This endpoints creates a new volume in your space (corresponding
        IBM Containers command: `cf ic volume create VOLNAME`). A volume is used to
        persist and access app data between container restarts. Volumes are hosted
        on file shares that define the available actual storage in Bluemix and the
        number of input and output transactions per second (IOPS).nn After you have
        created a volume, you must mount it to a container by using the `--volume`
        option in the `cf ic run` (single containers) or `cf ic group create` (container
        groups) command. You can also define the volume as part of the HTTP body and
        send a request to the `POST /containers/create` (single containers) or `POST
        /containers/groups` (container groups) endpoints.nn Note: If you mount multiple
        containers in a space to the same volume, they share the data in the volume
        and can access them anytime. When a container is deleted, the associated volume
        is not removed.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the volume. The name must be unique for a space and
          can contain uppercase letters, lowercase letters, numbers, underscores (_),
          and hyphens (-).
        in: query
        name: name
        required: true
        type: string
      - description: The name of the file share that the volume is hosted on. File
          shares can have different storage sizes and IOPS based on the required workload.
          If this field is left blank, the volume is hosted on the default file share.
        in: query
        name: fsName
        required: false
        type: string
      responses:
        201:
          description: Created. Your volume was successfully created in your space.
          schema:
            $ref: '#/definitions/Volume'
        400:
          description: Bad request. Your request could not be processed due to missing
            parameter. Make sure to enter a name for your volume as part of your query
            and re-run the request
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        409:
          description: Conflict. A volume with the same name already exists. Choose
            a new name for your volume and re-run the API call.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Create a volume in a space
      tags:
      - Volumes
      operationId: volumes.create.post
  /volumes/fs/create:
    post:
      description: 'This endpoint creates a new file share in a space (corresponding
        IBM Containers command: `cf ic volume fs-create FSNAME FSSIZE FSIOPS`).nn
        A file share is a persistent NFS-based (Network File System) storage system
        that hosts Docker volumes in a Bluemix space and allows a user to store and
        access container and app-related files. To store files in a file share, you
        must create a container volume and save the data into this volume.nn As soon
        as you create your first volume in a space with the `cf ic volume create VOLNAME`
        command or the `POST /volumes/create` API endpoint, a default file share with
        20 GB at 4 IOPS (Input Output operations Per Second) is created at no cost.nnThe
        organization manager can create file shares with specific storage size and
        IOPS to meet the storage needs of the space. File shares can be provisioned
        in sizes from 20 GB to 12 TB and at IOPS per GB of 0.25, 2 or 4. Run `cf ic
        volume fs-flavor-list` or call the `GET /volumes/fs/flavors/json` API endpoint
        to retrieve a list of available file share sizes. The file share size in relation
        to the number of IOPS impacts the speed that data can be read and written
        from and to the container volume.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The input parameter to create a new file share in a space.
        in: body
        name: FileshareParam
        required: true
        schema:
          $ref: '#/definitions/FileshareParam'
      responses:
        202:
          description: 'Accepted. A new fileshare has been created. '
        400:
          description: Bad request. The input parameter in the request body are either
            incomplete or in the wrong format. Be sure to include the file share name,
            size and number of IOPS as part of your request in JSON format.
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID. If
            your access token and space ID are correct, verify that you have been
            granted organization manager rights. Only organization managers can create
            file shares in a space.
        409:
          description: Conflict. A file share with the same name already exists. Run
            `cf ic volume fs-list` or call the `GET /volumes/fs/json` API endpoint
            to get a list with all available file shares in this space. Choose a new
            name for your file share and re-run the API call.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Create a file share in a space
      tags:
      - File shares
      operationId: volumes.fs.create.post
  /volumes/fs/flavors/json:
    get:
      description: 'This endpoint returns a list of available file shares in gigabyte
        (corresponding IBM Containers command: `cf ic volume fs-flavor-list`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A list of available file share sizes in gigabyte is returned.
          schema:
            items:
              type: integer
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: List available file share sizes
      tags:
      - File shares
      operationId: volumes.fs.flavors.json.get
  /volumes/fs/json:
    get:
      description: 'This endpoint returns a list of all file shares that are availble
        in a space (corresponding IBM Containers command: `cf ic volume fs-list`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A list of available file shares is returned.
          schema:
            items:
              $ref: '#/definitions/Fileshare'
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: List available file shares in a space
      tags:
      - File shares
      operationId: volumes.fs.json.get
  /volumes/fs/{name}:
    delete:
      description: 'This endpoint deletes a file share from a space (corresponding
        IBM Containers command: `cf ic volume fs-rm FSNAME`).nn Before you can delete
        a file share, all mounted volumes must be deleted first. To delete a volume,
        run `cf ic volume rm VOLNAME` or call the `DELETE /volumes/{name}` API endpoint.nn
        **Note:** To delete a file share you must have been granted organization developer
        rights.'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the file share that you want to delete. Run `cf ic
          volume fs-list` or call the `GET /volumes/fs/json` API endpoint to retrieve
          a list of available file shares in your space.
        in: path
        name: name
        required: true
        type: string
      responses:
        204:
          description: No Content. The file share was successfully deleted.
        400:
          description: 'Bad request. The specified file share could not be deleted
            as it has mounted volumes. Run `cf ic volume rm VOLNAME` or call the `DELETE
            /volumes/{name}` API endpoint to delete the volume. After all mounted
            volumes are deleted, delete the file share. '
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: The specified file share name could not be found. Run `cf ic
            volume fs-list` or call the `GET /volumes/fs/json` endpoint to retrieve
            a list of available file shares in your space. Enter the name for your
            file share and re-run the API call.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Delete a file share
      tags:
      - File shares
      operationId: volumes.fs.name.delete
  /volumes/fs/{name}/json:
    get:
      description: 'This endpoint returns detailed information about a file share
        (corresponding IBM Containers command: `cf ic volume fs-inspect FSNAME`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the file share that you want to inspect. Run `cf
          ic volume fs-list` or call the `GET /volumes/fs/json` endpoint to retrieve
          a list of available file shares in your space.
        in: path
        name: name
        required: true
        type: string
      responses:
        200:
          description: OK. Detailed information about a file share is returned.
          schema:
            items:
              $ref: '#/definitions/GetFileshareDetails'
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: The specified file share name could not be found. Run `cf ic
            volume fs-list` or call the `GET /volumes/fs/json` endpoint to retrieve
            a list of available file shares in your space. Enter the name for your
            file share and re-run the API call.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: Inspect a file share
      tags:
      - File shares
      operationId: volumes.fs.name.json.get
  /volumes/json:
    get:
      description: 'This endpoint returns a list of all volumes that are available
        in the given space (corresponding IBM Containers command: `cf ic volume list`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      responses:
        200:
          description: OK. A list containing all volumes of a given space is returned.
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: List all volumes for a space
      tags:
      - Volumes
      operationId: volumes.json.get
  /volumes/{name}:
    delete:
      description: 'Delete a volume with a given name from a space (corresponding
        IBM Containers command: `cf ic volume rm VOLNAME`). To delete a volume, all
        mounted containers must be unmounted first. After the volume is deleted, the
        data that are stored in the volume are lost. '
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the volume that you want to delete. Run `cf ic volume
          list` or call the `GET /volumes/json` endpoint to retrieve a list of all
          volumes that are available in your space.
        in: path
        name: name
        required: true
        type: string
      responses:
        204:
          description: 'No Content. Your request to delete the volume has successfully
            been processed. '
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. The volume could not be found. Verify that the name
            is correct by running the `cf ic volume list` command or by calling the
            `GET /volumes/json` endpoint. Enter the correct name and re-run the API
            call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Delete a volume
      tags:
      - Volumes
      operationId: volumes.name.delete
    post:
      description: This endpoint provisions an existing volume that was created in
        one space to another space within the same organization. Single containers
        and container groups in each space can read and write to the shared volume.
        The volume remains owned by the original space it was created in, including
        management and billing. For example, the volume can be deleted from the original
        space only.
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the volume that you want to share with another space
          in your organization.
        in: path
        name: name
        required: true
        type: string
      - description: Input parameter that are required to provision an existing volume
          to a new space and to unprovision it from a space.
        in: body
        name: volumeParam
        required: true
        schema:
          $ref: '#/definitions/UpdateVolume'
      responses:
        200:
          description: Ok. A list with detailed information about the volume is returned.
            Review the changes in the `otherSpaceVisibility` property.
          schema:
            $ref: '#/definitions/Volume'
        400:
          description: 'Bad request. The data that you entered in the request body
            are either incomplete or in the wrong format. Be sure to include either
            the space ID where you want to provision your volume, or the space ID
            from which you want to unprovision your volume in JSON format. '
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. The specified volume could not be found. Verify
            that the name is correct by running the `cf ic volume list` command or
            by calling the `GET /volumes/json` endpoint. Enter the correct name and
            re-run the API call.
        500:
          description: Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support.
      summary: Share a volume with another space
      tags:
      - Volumes
      operationId: volumes.name.post
  /volumes/{name}/json:
    get:
      description: 'Retrieve a detailed list of information about a volume that is
        identified by the volume name (corresponding IBM Containers command: `cf ic
        volume inspect VOLNAME`).'
      parameters:
      - description: The Bluemix JSON web token that you receive when logging into
          Bluemix. Run `cf oauth-token` to retrieve your access token.
        in: header
        name: X-Auth-Token
        required: true
        type: string
      - description: The unique ID of your organization space where you want to create
          or work with your containers. Run `cf space <space_name> --guid`, where
          `<space_name>` is the name of your space, to retrieve your space ID.
        in: header
        name: X-Auth-Project-Id
        required: true
        type: string
      - description: The name of the volume, for which you want to retrieve detailed
          information. Run `cf ic volume list` or call the `GET /volumes/json` endpoint
          to retrieve a list of all volumes that are available in your space.
        in: path
        name: name
        required: true
        type: string
      responses:
        200:
          description: 'Ok. A list with detailed information about the volume is returned. '
          schema:
            $ref: '#/definitions/Volume'
        401:
          description: Authentication failed. The Access Token is invalid, or the
            Space ID that you entered could not be found. Run `cf oauth-token` to
            retrieve your access token. Run `cf space <space_name> --guid`, where
            `<space_name>` is the name of your space, to retrieve your space ID.
        404:
          description: Not found. The specified volume could not be found. Verify
            that the name is correct by running the `cf ic volume list` command or
            by calling the `GET /volumes/json` endpoint. Enter the correct name and
            re-run the API call.
        500:
          description: 'Internal Server Error. The IBM Containers service is currently
            unavailable. Your request could not be processed. Please wait a few minutes
            and try again. If you still encounter this problem, note the incident
            ID and contact the IBM Bluemix support. '
      summary: 'Retrieve detailed information about a volume. '
      tags:
      - Volumes
      operationId: volumes.name.json.get
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":37:{s:7:\"Binding\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"ContainerId\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"Unique
  identifier representing a container\";s:4:\"type\";s:6:\"string\";}}}s:11:\"Certificate\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"ca_cert\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"Certificate
  Authority (CA) certificate including the CA public key.\";s:4:\"type\";s:6:\"string\";}s:11:\"server_cert\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Server
  certificate including the server's public key.\";s:4:\"type\";s:6:\"string\";}s:9:\"user_cert\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"User
  certificate including the user's public key.\";s:4:\"type\";s:6:\"string\";}s:8:\"user_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"User's
  private key.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:7:\"ca_cert\";i:1;s:11:\"server_cert\";i:2;s:9:\"user_cert\";i:3;s:8:\"user_key\";}s:4:\"type\";s:6:\"object\";}s:18:\"CertificateRefresh\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"ca_cert\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"Certificate
  Authority (CA) certificate including the CA public key.\";s:4:\"type\";s:6:\"string\";}s:8:\"reg_host\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"Full
  URL to the IBM Bluemix registry.\";s:4:\"type\";s:6:\"string\";}s:11:\"server_cert\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Server
  certificate including the server's public key.\";s:4:\"type\";s:6:\"string\";}s:9:\"user_cert\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"User
  certificate including the user's public key.\";s:4:\"type\";s:6:\"string\";}s:8:\"user_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"User's
  private key.\";s:4:\"type\";s:6:\"string\";}}}s:9:\"Container\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":19:{s:7:\"Command\";O:8:\"stdClass\":2:{s:11:\"description\";s:142:\"The
  command and arguments that were passed to the container during container creation.
  This command is executed when the container is started.\";s:4:\"type\";s:6:\"string\";}s:14:\"ContainerState\";O:8:\"stdClass\":2:{s:11:\"description\";s:198:\"The
  current status of the container. The status can either be a transient state, such
  as BUILDING, and NETWORKING or a non-transient state, such as RUNNING, SHUTDOWN,
  CRASHED, PAUSED, or SUSPENDED. \";s:4:\"type\";s:6:\"string\";}s:7:\"Created\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"The
  time when the container was created.\";s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:3:\"Env\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"A
  list of all the environment variables of the container.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"Group\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Group\";}s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Unique
  identifier representing a container.\";s:4:\"type\";s:6:\"string\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:66:\"Full
  path to the container image in your private Bluemix registry.\";s:4:\"type\";s:6:\"string\";}s:7:\"ImageId\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Unique
  identifier representing a container image.\";s:4:\"type\";s:6:\"string\";}s:6:\"Labels\";O:8:\"stdClass\":2:{s:11:\"description\";s:162:\"List
  of custom metadata that was added to the container. Labels serve a wide range of
  uses, such as adding notes to a container. Every label is a key/ value pair.\";s:4:\"type\";s:6:\"object\";}s:6:\"Memory\";O:8:\"stdClass\":3:{s:11:\"description\";s:152:\"The
  amount of container memory in Megabyte that was assigned to your container. The
  memory is counted towards the quota that is allocated for the space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  name of the container. \";s:4:\"type\";s:6:\"string\";}s:5:\"Names\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  name of the container.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"NetworkSettings\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NetworkSetting\";}s:5:\"Ports\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Port\";}s:10:\"SizeRootFs\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"Total
  size of all the files in the container, in bytes. \";s:4:\"type\";s:7:\"integer\";}s:6:\"SizeRw\";O:8:\"stdClass\":2:{s:11:\"description\";s:206:\"The
  size of the files which have been created or changed, if you compare the container
  to its base image. Just after creation, this should be zero. Ass you modify (or
  create) files, this size will increase.\";s:4:\"type\";s:7:\"integer\";}s:7:\"Started\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Time
  when the container was started.\";s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:6:\"Status\";O:8:\"stdClass\":2:{s:11:\"description\";s:196:\"The
  current status of the container. The status can either be a transient state, such
  as BUILDING, and NETWORKING or a non-transient state, such as RUNNING, SHUTDOWN,
  CRASHED, PAUSED, or SUSPENDED\";s:4:\"type\";s:6:\"string\";}s:4:\"VCPU\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"Number
  of virtual CPUs that are assigned to the container.\";s:4:\"type\";s:7:\"integer\";}}}s:15:\"ContainerConfig\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":22:{s:11:\"ArgsEscaped\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:7:\"boolean\";}s:12:\"AttachStderr\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Attaches
  the container to stderr.\";s:4:\"type\";s:6:\"string\";}s:11:\"AttachStdin\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Attaches
  the container to sdtin.\";s:4:\"type\";s:6:\"string\";}s:12:\"AttachStdout\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Attaches
  the container to stdout.\";s:4:\"type\";s:6:\"string\";}s:3:\"Cmd\";O:8:\"stdClass\":3:{s:11:\"description\";s:403:\"The
  command and arguments in this list are passed to the container to be executed when
  the container is started. This command must be a long-running command. Do not use
  a short-lived command, for example, /bin/date, because it might cause the container
  to crash. <br>Sample long-running commands:<br>[\"ping\",\"localhost\"]<br>[\"tail\",\"-f\",\"/dev/null\"]<br>[\"sh\",\"-c\",\"while
  true; do date; sleep 20; done\"]\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:10:\"Domainname\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  domain name to be used for the container.\";s:4:\"type\";s:6:\"string\";}s:3:\"Env\";O:8:\"stdClass\":3:{s:11:\"description\";s:240:\"A
  list of environment variables in the form of key=value pairs. All keys in this list
  have to be unique. List multiple keys separately and if you include quotation marks,
  include them around both the environment variable name and the value.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"ExposedPorts\";O:8:\"stdClass\":3:{s:11:\"description\";s:66:\"List
  of public ports that were exposed during container creation. \";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:8:\"Hostname\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"The
  host name to be used for the container.\";s:4:\"type\";s:6:\"string\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:87:\"Full
  path to the image that the container is based on in your private Bluemix registry.\";s:4:\"type\";s:6:\"string\";}s:17:\"ImageArchitecture\";O:8:\"stdClass\":2:{s:11:\"description\";s:167:\"The
  hardware architecture the image is based on. It can either be 'amd64' indicating
  an Intel-based architecture, or 'ppc64le' representing a Power-based architecture.\";s:4:\"type\";s:6:\"string\";}s:6:\"Labels\";O:8:\"stdClass\":3:{s:11:\"description\";s:162:\"List
  of custom metadata that was added to the container. Labels serve a wide range of
  uses, such as adding notes to a container. Every label is a key/ value pair.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"Memory\";O:8:\"stdClass\":3:{s:11:\"description\";s:77:\"The
  amount of container memory that is assigned to the container in Megabyte.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:10:\"MemorySwap\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"The
  total container memory limit (memory + swap)\";s:4:\"type\";s:6:\"string\";}s:9:\"OpenStdin\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"When
  set to true, it opens stdin. \";s:4:\"type\";s:6:\"string\";}s:9:\"PortSpecs\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"Not
  supported by IBM Containers, empty string.\";s:4:\"type\";s:6:\"string\";}s:9:\"StdinOnce\";O:8:\"stdClass\":2:{s:11:\"description\";s:71:\"When
  set to true it closes stdin after the attached client disconnects.\";s:4:\"type\";s:6:\"string\";}s:3:\"Tty\";O:8:\"stdClass\":2:{s:11:\"description\";s:88:\"When
  set to true, attach standard streams to a tty, including stdin if it is not closed.\";s:4:\"type\";s:6:\"string\";}s:4:\"User\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"User
  to be used inside the container.\";s:4:\"type\";s:6:\"string\";}s:4:\"VCPU\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"Number
  of virtual CPUs that are assigned to the container.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"VolumesFrom\";O:8:\"stdClass\":2:{s:11:\"description\";s:99:\"List
  of volumes to inherit from another container. This feature is not supported in IBM
  Containers.\";s:4:\"type\";s:6:\"string\";}s:10:\"WorkingDir\";O:8:\"stdClass\":2:{s:11:\"description\";s:82:\"The
  working directory inside the container where specified commands are executed. \";s:4:\"type\";s:6:\"string\";}}}s:11:\"ContainerId\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Unique
  ID representing a container.\";s:4:\"type\";s:6:\"string\";}s:9:\"flavor_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  ID of the container size.\";s:4:\"type\";s:7:\"integer\";}s:3:\"mem\";O:8:\"stdClass\":2:{s:11:\"description\";s:202:\"The
  amount of container memory that has been assigned to the container. If the container
  memory was not specified in the API request, a container with 64 Megabyte container
  memory is created by default.\";s:4:\"type\";s:7:\"integer\";}s:4:\"vcpu\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"Number
  of virtual CPUs that are assigned to the container.\";s:4:\"type\";s:7:\"integer\";}}}s:13:\"ContainerInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":19:{s:10:\"BluemixApp\";O:8:\"stdClass\":2:{s:11:\"description\";s:82:\"The
  name of the Cloud Foundry app that was bound to the container during creation.\";s:4:\"type\";s:6:\"string\";}s:15:\"BluemixServices\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"The
  name of the Bluemix service instance that was bound to the container during creation.\";s:4:\"type\";s:6:\"string\";}s:6:\"Config\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ContainerConfig\";}s:14:\"ContainerState\";O:8:\"stdClass\":2:{s:11:\"description\";s:172:\"The
  current status of the container. This state can either be transient, such as BUILDING
  or NETWORKING, or non-transient, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.\";s:4:\"type\";s:6:\"string\";}s:7:\"Created\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"The
  date and time the container was created.\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:5:\"Group\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Group\";}s:10:\"HostConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/HostConfig\";}s:6:\"HostId\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"The
  ID representing the physical compute host.\";s:4:\"type\";s:6:\"string\";}s:8:\"Human_Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  name of the container. \";s:4:\"type\";s:6:\"string\";}s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Unique
  identifier representing a container.\";s:4:\"type\";s:6:\"string\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Unique
  identifier representing a container image.\";s:4:\"type\";s:6:\"string\";}s:6:\"Mounts\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"A
  list of volumes that are mounted to the container.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:4:\"Name\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The
  name of the container.\";s:4:\"type\";s:6:\"string\";}s:15:\"NetworkSettings\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NetworkSetting\";}s:4:\"Path\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"The
  environment variable indicating the binary location.\";s:4:\"type\";s:6:\"string\";}s:15:\"ResolveConfPath\";O:8:\"stdClass\":2:{s:11:\"description\";s:109:\"Path
  to the resolve.conf file inside the container. The resolve.conf file is used to
  resolve the DNS servers.\";s:4:\"type\";s:6:\"string\";}s:5:\"State\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ContainerState\";}s:7:\"Volumes\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Volume\";}s:9:\"VolumesRW\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"LIst
  of volumes that is mounted to the container.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}}s:14:\"ContainerState\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"ExitCode\";O:8:\"stdClass\":2:{s:11:\"description\";s:153:\"The
  exit code indicating the root cause of why the container exited. Review the Docker
  API documentation to find a list of exit codes and their meaning. \";s:4:\"type\";s:6:\"string\";}s:10:\"FinishedAt\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Time
  when the container stopped.\";s:4:\"type\";s:6:\"string\";}s:5:\"Ghost\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Not
  supported by IBM Containers, empty string\";s:4:\"type\";s:6:\"string\";}s:3:\"Pid\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"The
  process ID on the compute host that runs the container process.\";s:4:\"type\";s:7:\"integer\";}s:7:\"Running\";O:8:\"stdClass\":2:{s:11:\"description\";s:108:\"If
  set to true, the container is in a RUNNING state. If set to false, the container
  has stopped or crashed. \";s:4:\"type\";s:7:\"boolean\";}s:9:\"StartedAt\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Time
  when the container started.\";s:4:\"type\";s:6:\"string\";}s:6:\"Status\";O:8:\"stdClass\":2:{s:11:\"description\";s:172:\"The
  current status of the container. This state can either be transient, such as BUILDING
  or NETWORKING, or non-transient, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.\";s:4:\"type\";s:6:\"string\";}}}s:27:\"ContainersGroupsGetListItem\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:13:\"Creation_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Time
  when the container group is created.\";s:4:\"type\";s:6:\"string\";}s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Unique
  identifier of the container group.\";s:4:\"type\";s:6:\"string\";}s:4:\"Name\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Name
  of the container group.\";s:4:\"type\";s:6:\"string\";}s:4:\"Port\";O:8:\"stdClass\":3:{s:11:\"description\";s:78:\"The
  port number that is exposed to the public during container group creation.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"Routes\";O:8:\"stdClass\":3:{s:11:\"description\";s:128:\"The
  public route that is mapped to the container group. You can use this route to access
  your container group from the Internet.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"Status\";O:8:\"stdClass\":2:{s:11:\"description\";s:256:\"Current
  status of the container group. The container group status is a composite of ACTION
  and STATUS:<br><br> ACTIONS = (CREATE, DELETE, UPDATE, ROLLBACK, SUSPEND, RESUME,
  ADOPT, SNAPSHOT, CHECK, RESTORE)<br><br> STATUSES = (IN_PROGRESS, FAILED, COMPLETE)\";s:4:\"type\";s:6:\"string\";}s:12:\"Updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Time
  when the container group is changed and updated.\";s:4:\"type\";s:6:\"string\";}}}s:34:\"ContainersGroupsNameOrIdGetDetails\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":18:{s:13:\"Anti-affinity\";O:8:\"stdClass\":2:{s:11:\"description\";s:277:\"If
  set to `true` the container instances in the group are spread across separate physical
  compute nodes, which reduces the likelihood of containers crashing due to hardware
  failures. If set to `false`, the container instances in the group share the same
  physical compute node. \";s:4:\"type\";s:6:\"string\";}s:12:\"Autorecovery\";O:8:\"stdClass\":2:{s:11:\"description\";s:370:\"Can
  be either true or false. If set to true, the Autorecovery mode is enabled for your
  container group. In case a container instance crashes or stops, this instance is
  removed and a new one is automatically recreated. If set to false, the Autorecovery
  mode is disabled. In case a container instances crashes or stops, it is not automatically
  recreated by IBM Containers.\";s:4:\"type\";s:6:\"string\";}s:16:\"AvailabilityZone\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"Current
  IBM Containers availability zone on Openstack. \";s:4:\"type\";s:6:\"string\";}s:3:\"Cmd\";O:8:\"stdClass\":3:{s:11:\"description\";s:90:\"The
  Docker command that was specified to be run when the container instances are started.
  \";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:13:\"Creation_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Timestamp
  when the container group was created.\";s:4:\"type\";s:6:\"string\";}s:3:\"Env\";O:8:\"stdClass\":3:{s:11:\"description\";s:142:\"The
  list of environmental variables that were defined for the container group. Each
  environment variable consists of a unique key and a value.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"Unique
  identifier representing a specific container group.\";s:4:\"type\";s:6:\"string\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:81:\"The
  unique ID of the container image your container group instances are based on.\";s:4:\"type\";s:6:\"string\";}s:9:\"ImageName\";O:8:\"stdClass\":2:{s:11:\"description\";s:72:\"The
  full path to the container image in your private Bluemix repository.\";s:4:\"type\";s:6:\"string\";}s:6:\"Memory\";O:8:\"stdClass\":3:{s:11:\"description\";s:81:\"The
  size of each container instance that runs in the container group in MegaByte.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  name of the container group.\";s:4:\"type\";s:6:\"string\";}s:15:\"NumberInstances\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"CurrentSize\";O:8:\"stdClass\":3:{s:11:\"description\";s:84:\"The
  current number of container instances that are running in your container group.
  \";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"Desired\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  number of container instances that you require.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Max\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"The
  maximum number of container instance that you want to run in your container group.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Min\";O:8:\"stdClass\":3:{s:11:\"description\";s:87:\"The
  minimum number of container instances that you want to run in your container group.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Port\";O:8:\"stdClass\":3:{s:11:\"description\";s:119:\"The
  public port that has been exposed. If you specified a route, your container group
  is accessible from the Internet. \";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"Route_Status\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"in_progress\";O:8:\"stdClass\":2:{s:11:\"description\";s:204:\"Can
  be either true or false. If set to true, then the route is in the process of being
  mapped to the container group and set up in the GoRouter. Is set to false, then
  the set up of the route is completed.\";s:4:\"type\";s:7:\"boolean\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Info
  message for the user.\";s:4:\"type\";s:6:\"string\";}s:10:\"successful\";O:8:\"stdClass\":2:{s:11:\"description\";s:218:\"Can
  be either true or false. If set to true, then the route is successfully registrered
  with the GoRouter. If set to false, then the route registration has not yet finished
  yet or could not be completed without errors.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Routes\";O:8:\"stdClass\":3:{s:11:\"description\";s:158:\"The
  public route that is mapped to the container group. When you expose a public port,
  you can use the route to access your container group from the Internet.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"Status\";O:8:\"stdClass\":2:{s:11:\"description\";s:260:\"The
  current status of the container group. The container group status is a composite
  of ACTION and STATUS:<br><br> ACTIONS = (CREATE, DELETE, UPDATE, ROLLBACK, SUSPEND,
  RESUME, ADOPT, SNAPSHOT, CHECK, RESTORE)<br><br> STATUSES = (IN_PROGRESS, FAILED,
  COMPLETE)\";s:4:\"type\";s:6:\"string\";}s:11:\"UpdatedTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:114:\"Timestamp
  when the container group was updated. If the container group was not updated before,
  `null` is returned.\";s:4:\"type\";s:6:\"string\";}s:7:\"Volumes\";O:8:\"stdClass\":3:{s:11:\"description\";s:119:\"List
  of volumes to be associated with the container, in the format of volume name:path:mode
  where mode can be ro or rw.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}}s:40:\"ContainersGroupsNameOrIdMaproutePostInfo\";O:8:\"stdClass\":1:{s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/ContainersGroupsPostCreatedInfo\";}i:1;O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}s:40:\"ContainersGroupsNameOrIdPatchUpdatedInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"Autorecovery\";O:8:\"stdClass\":2:{s:11:\"description\";s:262:\"Enable
  or disable the Autorecovery mode for your container group. To enable it, enter true.
  If you want to disable it, enter false. Note: You can only enable/ disable Autorecovery
  mode if your container group was initially created with Autorecovery mode enabled.\";s:4:\"type\";s:6:\"string\";}s:11:\"Environment\";O:8:\"stdClass\":3:{s:11:\"description\";s:262:\"A
  list of environment variables that you want to add to your container group. Every
  environment variable needs to be a key=value pair. Every key that you use needs
  to be unique for this container group. Multiple environment variables are separated
  with comma (,)\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"NumberInstances\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"Desired\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  number of container instances that you require.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Max\";O:8:\"stdClass\":3:{s:11:\"description\";s:87:\"The
  maximum number of container instances that you want to run in your container group.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Min\";O:8:\"stdClass\":3:{s:11:\"description\";s:87:\"The
  minimum number of container instances that you want to run in your container group.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}}s:31:\"ContainersGroupsPostCreatedInfo\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"Unique
  identifier representing a specific container group.\";s:4:\"type\";s:6:\"string\";}s:8:\"Warnings\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Warning
  information (Initial warning is empty).\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:38:\"ContainersGroupsPostRequiredAttributes\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:12:\"Autorecovery\";O:8:\"stdClass\":2:{s:11:\"description\";s:447:\"(Optional)
  Enable the Auto-recovery mode for your container group. If set to true, IBM Containers
  checks the health of each instance with an HTTP request to the port that is assigned.
  If the health check does not receive a TCP response from a container instance in
  two subsequent 90-second intervals, the instance is removed and replaced with a
  new instance. If set to false and container instances crash, they are not recovered
  by IBM Containers.\";s:4:\"type\";s:6:\"string\";}s:10:\"BluemixApp\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"(Optional)
  The name of the Cloud Foundry app that you created in your organization space.\";s:4:\"type\";s:6:\"string\";}s:3:\"Cmd\";O:8:\"stdClass\":3:{s:11:\"description\";s:265:\"(Optional)
  Docker command that is passed to the container group to be run when the container
  instances are started. This command must be a long-running command. Do not use a
  short-lived command, for example, /bin/date, because it might cause the container
  to crash.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:3:\"Env\";O:8:\"stdClass\":3:{s:11:\"description\";s:249:\"(Optional)
  List of environmental variables. Every environment variable that is listed here
  needs to be a key=value pair. Every key that you use needs to be unique for this
  container group. Multiple environment variables are separated with comma (,).\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:380:\"(Required)
  The full path to your private Bluemix repository. If you want to use an image in
  your private Bluemix repository, specify the image in the following format: registry.ng.bluemix.net/NAMESPACE/IMAGE.
  If you want to use an IBM Containers provided image, do not include your organization's
  namespace. Specify the image in the following format: registry.ng.bluemix.net/IMAGE\";s:4:\"type\";s:6:\"string\";}s:6:\"Memory\";O:8:\"stdClass\":3:{s:11:\"description\";s:449:\"(Optional)
  The size of each container instance in the container group. The size of each container
  instance in the group. Choose one of the following sizes and enter the size in MegaBytes:
  Pico 64 MB, Nano 128 MB, Micro 256 MB, Tiny 512 MB, Small 1 GB (1024 MB), Medium
  2 GB (2048 MB), Large 4 GB (4096 MB) XLarge 8GB (8192 MB) and 2XLarge 16 GB (16384
  MB). If you do not specify a size, all container instances in this group are created
  with 256 MB.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":2:{s:11:\"description\";s:263:\"(Required)
  Name of the container group that you want to create. The name needs to be unique
  in your organization space and must start with a letter. Then, you can include uppercase
  letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-).\";s:4:\"type\";s:6:\"string\";}s:15:\"NumberInstances\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"Desired\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"(Optional)
  The number of container instances that you require.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Max\";O:8:\"stdClass\":3:{s:11:\"description\";s:98:\"(Optional)
  The maximum number of container instances that you want to run in your container
  group.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Min\";O:8:\"stdClass\":3:{s:11:\"description\";s:94:\"(Optional)
  The minimum number of container instances that need to run in your container group.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Port\";O:8:\"stdClass\":3:{s:11:\"description\";s:294:\"(Optional)
  Expose a port for HTTP traffic to make your container group available from the Internet.
  Every container instance that is started for this group, listens on this port. Container
  groups cannot expose multiple ports. Note: You need to expose a port, when \"Autorecovery\"
  is set to true.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"Route\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"domain\";O:8:\"stdClass\":2:{s:11:\"description\";s:171:\"The
  default system domain is mybluemix.net and already provides a SSL certificate, so
  you can access your container groups with HTTPS without any additional configuration.\";s:4:\"type\";s:6:\"string\";}s:4:\"host\";O:8:\"stdClass\":2:{s:11:\"description\";s:224:\"The
  host name of your container group, such as mycontainerhost. Do not include underscores
  (_) in the host name. The host and the domain combined form the full public route
  URL, such as http://mycontainerhost.mybluemix.net. \";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Volumes\";O:8:\"stdClass\":3:{s:11:\"description\";s:479:\"(Optional)
  List of volumes to be mounted to the container instances of your container group.
  You need to create the volume first by using the cf ic volume-create command before
  you can mount a volume to a container group. When you specify a volume, use the
  following format: NAME:PATH:MODE. For NAME, use either the name or ID of the volume.
  For the PATH, enter the absolute path to the volume directory in the container.
  For MODE, enter either ro (read-only) or rw (read-write).\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:2:{i:0;s:4:\"Name\";i:1;s:5:\"Image\";}}s:19:\"ContainersQuotaInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"account_type\";O:8:\"stdClass\":2:{s:11:\"description\";s:88:\"The
  Bluemix account type indicating the quota limits and how the organization is billed.\";s:4:\"type\";s:6:\"string\";}s:12:\"country_code\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"The
  country in which the account was opened.\";s:4:\"type\";s:6:\"string\";}s:9:\"org_quota\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:16:\"floating_ips_max\";O:8:\"stdClass\":2:{s:11:\"description\";s:93:\"The
  number of public IP addresses that can be assigned across all spaces of the organization.\";s:4:\"type\";s:6:\"string\";}s:26:\"floating_ips_space_default\";O:8:\"stdClass\":2:{s:11:\"description\";s:189:\"The
  number of public IP addresses that are required for one space. If the number of
  public IP addresses is not available, then a new space cannot be created to be used
  with IBM Containers. \";s:4:\"type\";s:6:\"string\";}s:18:\"floating_ips_usage\";O:8:\"stdClass\":3:{s:11:\"description\";s:96:\"The
  number of public IP addresses that are currently assigned to the spaces of the organization.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"ram_max\";O:8:\"stdClass\":3:{s:11:\"description\";s:118:\"The
  maximum amount of container memory on the compute host that can be assigned across
  the spaces of the organization.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"ram_space_default\";O:8:\"stdClass\":3:{s:11:\"description\";s:174:\"The
  amount of container memory that is required to be used for one space. If this amount
  is not available, then a new space cannot be created to be used with IBM Containers.
  \";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:9:\"ram_usage\";O:8:\"stdClass\":3:{s:11:\"description\";s:92:\"The
  amount of container memory that is currently used across all spaces of the organization.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"subnet_usage\";O:8:\"stdClass\":3:{s:11:\"description\";s:78:\"The
  number of subnets that were created across all spaces of the organization.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:15:\"subnets_default\";O:8:\"stdClass\":3:{s:11:\"description\";s:161:\"The
  number of subnets that is required to create a new space. If this number is not
  available, then a new space cannot be created to be used with IBM Containers.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"subnets_max\";O:8:\"stdClass\":3:{s:11:\"description\";s:105:\"The
  maximum number of container private subnet that can be created across all spaces
  of the organization.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:11:\"space_quota\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:16:\"floating_ips_max\";O:8:\"stdClass\":2:{s:11:\"description\";s:75:\"The
  maximum number of public IP addresses that can be allocated to a space.\";s:4:\"type\";s:6:\"string\";}s:7:\"ram_max\";O:8:\"stdClass\":3:{s:11:\"description\";s:108:\"The
  maximum amount of container memory that can be shared across all containers that
  are created in a space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"subnets_max\";O:8:\"stdClass\":3:{s:11:\"description\";s:71:\"The
  maximum number of private subnets that can be created in one space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}}s:19:\"ContainersQuotaList\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"floating_ips\";O:8:\"stdClass\":3:{s:11:\"description\";s:76:\"The
  new number of public IP addresses that you want to assign to your space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"ram\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"The
  amount of container memory that you want to assign to your space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}}s:19:\"ContainersUsageInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:14:\"AvailableSizes\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:47:\"#/definitions/ContainersUsageInfoAvailableSizes\";}s:4:\"type\";s:5:\"array\";}s:11:\"Environment\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"The
  IBM Containers machine where the space is located\";s:4:\"type\";s:6:\"string\";}s:6:\"Limits\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"containers\";O:8:\"stdClass\":3:{s:11:\"description\";s:208:\"The
  number of containers that can be created in the space. If -1 is returned, then an
  unlimited number of containers can be created. The number however is counted towards
  and limited by the container memory. \";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"floating_ips\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"The
  number of public IP addresses that can be allocated to the space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:9:\"memory_MB\";O:8:\"stdClass\":3:{s:11:\"description\";s:73:\"The
  amount of container memory that can be used in the space in megabyte.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"vcpu\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  number of virtual CPUs that are assigned to the space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Usage\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"containers\";O:8:\"stdClass\":3:{s:11:\"description\";s:153:\"The
  number of containers that were created in the space. All containers that count towards
  the quota limit are listed independent on their current state.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:12:\"floating_ips\";O:8:\"stdClass\":3:{s:11:\"description\";s:66:\"The
  number of public IP addresses that are allocated to the space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:18:\"floating_ips_bound\";O:8:\"stdClass\":3:{s:11:\"description\";s:77:\"The
  number of public IP addresses that are bound to a container in the space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"images\";O:8:\"stdClass\":3:{s:11:\"description\";s:77:\"The
  number of private images that were added to the private Bluemix registry.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:9:\"memory_MB\";O:8:\"stdClass\":3:{s:11:\"description\";s:113:\"The
  amount of container memory that is already used by the containers that were created
  in the space in megabyte.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"running\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"The
  number of containers that are currently in a running state.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"vcpu\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"The
  number of virtual CPUs that are allocated to the space.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}}s:33:\"ContainersUsageInfoAvailableSizes\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"disk\";O:8:\"stdClass\":3:{s:11:\"description\";s:90:\"The
  amount of disk space on the compute host that is assigned to the container in gigabyte\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  ID of the container size.\";s:4:\"type\";s:6:\"string\";}s:9:\"memory_MB\";O:8:\"stdClass\":3:{s:11:\"description\";s:97:\"The
  amount of container memory on the compute host that is assigned to the container
  in megabyte.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"The
  IBM Containers name of the container size.\";s:4:\"type\";s:6:\"string\";}s:5:\"vcpus\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"The
  number of virtual CPUs that can be assigned to the container.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}}s:24:\"ContainersVersionGetInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":11:{s:10:\"ApiVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"The
  current API version.\";s:4:\"type\";s:6:\"string\";}s:4:\"Arch\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"The
  current Arch version.\";s:4:\"type\";s:6:\"string\";}s:11:\"BuildDetail\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":12:{s:3:\"api\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"The
  build ID of the current API version.\";s:4:\"type\";s:6:\"string\";}s:9:\"automount\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"The
  build ID of the current automount microservice version.\";s:4:\"type\";s:6:\"string\";}s:9:\"grupdater\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"The
  build ID of the current grupdater microservice version.\";s:4:\"type\";s:6:\"string\";}s:7:\"harmony\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"The
  build ID of the current harmony microservice version.\";s:4:\"type\";s:6:\"string\";}s:14:\"health-monitor\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"The
  build ID of the current health-monitor microservice version.\";s:4:\"type\";s:6:\"string\";}s:6:\"hijack\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"The
  build ID of the current hijack microservice version.\";s:4:\"type\";s:6:\"string\";}s:4:\"ldap\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  build ID of the current ldap microservice version.\";s:4:\"type\";s:6:\"string\";}s:6:\"logmet\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"The
  build ID of the current logmet microservice version.\";s:4:\"type\";s:6:\"string\";}s:10:\"lumberjack\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"The
  build ID of the current lumberjack microservice version.\";s:4:\"type\";s:6:\"string\";}s:13:\"redis-cluster\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"The
  build ID of the current redis-cluster version.\";s:4:\"type\";s:6:\"string\";}s:9:\"sgwatcher\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"The
  build ID of the current sgwatcher microservice version.\";s:4:\"type\";s:6:\"string\";}s:6:\"volmgr\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"The
  build ID of the current volumes manager microservice version.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"BuildID\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"BuildNumber\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:9:\"BuildTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:73:\"Timestamp
  when the API version and all attached microservices were built.\";s:4:\"type\";s:6:\"string\";}s:9:\"GitCommit\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:9:\"GoVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"The
  latest Go version.\";s:4:\"type\";s:6:\"string\";}s:13:\"KernelVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The
  latest Kernel version.\";s:4:\"type\";s:6:\"string\";}s:2:\"Os\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Bluemix
  Containers\";s:4:\"type\";s:6:\"string\";}s:7:\"Version\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"The
  latest API version.\";s:4:\"type\";s:6:\"string\";}}}s:15:\"CreateContainer\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":10:{s:10:\"BluemixApp\";O:8:\"stdClass\":2:{s:11:\"description\";s:171:\"The
  name of the Cloud Foundry app that you want to bind to your container. The Cloud
  Foundry app must be created in the same space where you want to create your container.\";s:4:\"type\";s:6:\"string\";}s:3:\"Cmd\";O:8:\"stdClass\":3:{s:11:\"description\";s:403:\"The
  command and arguments in this list are passed to the container to be executed when
  the container is started. This command must be a long-running command. Do not use
  a short-lived command, for example, /bin/date, because it might cause the container
  to crash. <br>Sample long-running commands:<br>[\"ping\",\"localhost\"]<br>[\"tail\",\"-f\",\"/dev/null\"]<br>[\"sh\",\"-c\",\"while
  true; do date; sleep 20; done\"]\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"Cpuset\";O:8:\"stdClass\":2:{s:11:\"description\";s:145:\"Pins
  the container processes to a specific CPU core on the compute host. For example:
  0 means that processes are executed on the first core only.\";s:4:\"type\";s:6:\"string\";}s:3:\"Env\";O:8:\"stdClass\":3:{s:11:\"description\";s:240:\"A
  list of environment variables in the form of key=value pairs. All keys in this list
  have to be unique. List multiple keys separately and if you include quotation marks,
  include them around both the environment variable name and the value.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"ExposedPorts\";O:8:\"stdClass\":3:{s:11:\"description\";s:111:\"All
  public ports that need to be exposed for the container, so the container can be
  accessed from the Internet.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:10:\"HostConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/HostConfig\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:113:\"Full
  path to the image in your private Bluemix registry in the format `registry.ng.bluemix.net/namespace/image`.
  \";s:4:\"type\";s:6:\"string\";}s:6:\"Memory\";O:8:\"stdClass\":3:{s:11:\"description\";s:267:\"The
  container memory that is set for the container in Megabyte. Choose one of the following
  sizes: Pico 64 MB, Nano 128 MB, Micro 256 MB, Tiny 512 MB, Small 1 GB (1024 MB),
  Medium 2 GB (2048 MB), Large 4 GB (4096 MB) XLarge 8GB (8192 MB) and 2XLarge 16
  GB (16384 MB).\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:10:\"NumberCpus\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"Number
  of virtual CPUs that are allocated to the container.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"Volumes\";O:8:\"stdClass\":2:{s:11:\"description\";s:495:\"Mount
  a volume to a container by specifying the details in the following format: `VOLUME_NAME:/DIRECTORY_PATH[:ro]`.
  Example: testvolume:/volumedata/temp:rw. By default, all volumes will be set up
  with read-write access inside the container (rw). If you wish to set up your volume
  with read-only access, enter `ro`.  Note: To mount a volume to a container, you
  must create the volume in your space first by using the `cf ic volume-create` command,
  or calling the `POST /volumes/create endpoint`.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:5:\"Image\";}}s:9:\"Fileshare\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:8:\"capacity\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"The
  size of the file share in gigabyte.\";s:4:\"type\";s:7:\"integer\";}s:12:\"created_date\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"The
  timestamp when the file share was created.\";s:4:\"type\";s:6:\"string\";}s:6:\"fsName\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  name of the file share.\";s:4:\"type\";s:6:\"string\";}s:8:\"hostPath\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"The
  path to the volume on the host node.\";s:4:\"type\";s:6:\"string\";}s:4:\"iops\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"The
  number of Input/Output operations per second. \";s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:9:\"iopsTotal\";O:8:\"stdClass\":2:{s:11:\"description\";s:261:\"The
  total number of IOPS considering the size of the file share. The size of your file
  share in gigabyte multiplied with the number of IOPS indicates the total number
  of IOPS. The higher the number of IOPS the faster you can read from and write to
  your volumes.\";s:4:\"type\";s:7:\"integer\";}s:7:\"orderId\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"The
  ID received from softlayer when the file share was ordered to be set up in softlayer.\";s:4:\"type\";s:6:\"string\";}s:8:\"provider\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  provider of the file share.\";s:4:\"type\";s:6:\"string\";}s:9:\"spaceGuid\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"The
  unique ID representing a Bluemix space in which the file share was created.\";s:4:\"type\";s:6:\"string\";}s:5:\"state\";O:8:\"stdClass\":2:{s:11:\"description\";s:111:\"The
  current state of the file share. When the file share is ready to be used, this attribute
  is set to `READY`.\";s:4:\"type\";s:6:\"string\";}s:12:\"updated_date\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"The
  timestamp when the file share last was updated.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:14:\"FileshareParam\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"fsIOPS\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"The
  number of input/output transactions per second. Available values are 0.25, 2 or
  4.\";s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:6:\"fsName\";O:8:\"stdClass\":2:{s:11:\"description\";s:157:\"The
  name of the new file share that you want to create. The name can contain uppercase
  letters, lowercase letters, numbers, underscores (_), and hyphens (-).\";s:4:\"type\";s:6:\"string\";}s:6:\"fsSize\";O:8:\"stdClass\":2:{s:11:\"description\";s:178:\"The
  size of the file share in gigabyte. Run `cf ic volume fs-flavor-list` or call the
  GET /volumes/fs/flavors/json API endpoint to retrieve a list of available file share
  sizes. \";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:3:{i:0;s:6:\"fsName\";i:1;s:6:\"fsSize\";i:2;s:6:\"fsIOPS\";}s:4:\"type\";s:6:\"object\";}s:14:\"FileshareUsage\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:15:\"available_space\";O:8:\"stdClass\":2:{s:11:\"description\";s:69:\"The
  amount of space that is available in the file share in gigabytes.\";s:4:\"type\";s:6:\"string\";}s:11:\"total_space\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"The
  total size of the file share in gigabytes.\";s:4:\"type\";s:6:\"string\";}s:10:\"used_space\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"The
  amount of space that is currently used from the file share. \";s:4:\"type\";s:6:\"string\";}s:21:\"used_space_percentage\";O:8:\"stdClass\":2:{s:11:\"description\";s:77:\"The
  amount of space that is currently used from the file share in percentage.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:10:\"FloatingIP\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"Bindings\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Binding\";}s:9:\"IpAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:66:\"The
  public IP address that is allocated to the organization space.\";s:4:\"type\";s:6:\"string\";}}}s:19:\"GetFileshareDetails\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"fs\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Fileshare\";}s:4:\"type\";s:5:\"array\";}s:7:\"fsUsage\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/FileshareUsage\";}s:4:\"type\";s:5:\"array\";}s:8:\"volnames\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"A
  list of volume names that are mounted to the file share.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Group\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"Unique
  identifier representing a group.\";s:4:\"type\";s:6:\"string\";}s:4:\"Name\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Name
  of the group.\";s:4:\"type\";s:6:\"string\";}}}s:10:\"HostConfig\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"Binds\";O:8:\"stdClass\":3:{s:11:\"description\";s:133:\"A
  list of volumes to be bound to the container. Each volume must be listed in the
  following format: VOLNAME:/CONTAINER_PATH:rw [ro]. \";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:10:\"ExtraHosts\";O:8:\"stdClass\":3:{s:11:\"description\";s:120:\"A
  list of hostnames/IP mappings to be added to the container\u2019s /etc/hosts file.
  Specified in the form [\"hostname:IP\"]\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"Links\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"A
  list of containers that need to be linked.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"PortBindings\";O:8:\"stdClass\":3:{s:11:\"description\";s:189:\"The
  container ports that you want to expose to the public. Ports need to be specified
  in the form of &lt;port&gt;/&lt;protocol&gt;: [{ \"HostIp\": \"&lt;IP&gt;\", \"HostPort\":
  \"&lt;port&gt;\" }]\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ImageDetail\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":13:{s:12:\"Architecture\";O:8:\"stdClass\":2:{s:11:\"description\";s:126:\"The
  hardware architecture for which the image was built for. The architecture can either
  be Intel (amd64) or Power (ppc64le). \";s:4:\"type\";s:6:\"string\";}s:6:\"Config\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":19:{s:11:\"ArgsEscaped\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:7:\"boolean\";}s:12:\"AttachStderr\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Attaches
  the container to stderr.\";s:4:\"type\";s:7:\"boolean\";}s:11:\"AttachStdin\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Attaches
  the container to stdin.\";s:4:\"type\";s:7:\"boolean\";}s:12:\"AttachStdout\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Attaches
  the container to stdout.\";s:4:\"type\";s:7:\"boolean\";}s:3:\"Cmd\";O:8:\"stdClass\":3:{s:11:\"description\";s:403:\"The
  command and arguments in this list are passed to the container to be executed when
  the container is started. This command must be a long-running command. Do not use
  a short-lived command, for example, /bin/date, because it might cause the container
  to crash. <br>Sample long-running commands:<br>[\"ping\",\"localhost\"]<br>[\"tail\",\"-f\",\"/dev/null\"]<br>[\"sh\",\"-c\",\"while
  true; do date; sleep 20; done\"]\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:10:\"Domainmame\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  domain name to be used for the container.\";s:4:\"type\";s:6:\"string\";}s:10:\"Entrypoint\";O:8:\"stdClass\":2:{s:11:\"description\";s:90:\"The
  entrypoint specifies a command that will always be executed when the container starts.\";s:4:\"type\";s:6:\"string\";}s:3:\"Env\";O:8:\"stdClass\":3:{s:11:\"description\";s:240:\"A
  list of environment variables in the form of key=value pairs. All keys in this list
  have to be unique. List multiple keys separately and if you include quotation marks,
  include them around both the environment variable name and the value.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"ExposedPorts\";O:8:\"stdClass\":3:{s:11:\"description\";s:94:\"A
  list of all udp and tcp ports that have been publicly exposed during the container
  creation.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:8:\"Hostname\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  host name of the container provided by Openstack. \";s:4:\"type\";s:6:\"string\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"The
  unique ID of the image. \";s:4:\"type\";s:6:\"string\";}s:6:\"Labels\";O:8:\"stdClass\":3:{s:11:\"description\";s:179:\"List
  of custom metadata that was added to the image. Labels serve a wide range of uses,
  such as adding notes or license requirements to an image. Every label is a key/
  value pair.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:7:\"OnBuild\";O:8:\"stdClass\":3:{s:11:\"description\";s:3:\"???\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"OpenStdin\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"When
  set to true, it opens stdin.\";s:4:\"type\";s:7:\"boolean\";}s:9:\"StdinOnce\";O:8:\"stdClass\":2:{s:11:\"description\";s:71:\"When
  set to true it closes stdin after the attached client disconnects.\";s:4:\"type\";s:7:\"boolean\";}s:3:\"Tty\";O:8:\"stdClass\":2:{s:11:\"description\";s:88:\"When
  set to true, attach standard streams to a tty, including stdin if it is not closed.\";s:4:\"type\";s:7:\"boolean\";}s:4:\"User\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"The
  user to be used inside the container.\";s:4:\"type\";s:6:\"string\";}s:7:\"Volumes\";O:8:\"stdClass\":2:{s:11:\"description\";s:250:\"Docker
  specific. Not supported by IBM Containers. The path to the volume that is created
  when deploying a container from the image. To use a volume in IBM Containers, you
  must first create a volume and then mount it to your container during creation.\";s:4:\"type\";s:6:\"string\";}s:10:\"WorkingDir\";O:8:\"stdClass\":2:{s:11:\"description\";s:81:\"The
  working directory inside the container where specified commands are executed.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"Container\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"???\";s:4:\"type\";s:6:\"string\";}s:15:\"ContainerConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ContainerConfig\";}s:7:\"Created\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  time when the image was created.\";s:4:\"type\";s:6:\"string\";}s:13:\"DockerVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"???\";s:4:\"type\";s:6:\"string\";}s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Unique
  ID of the image that you inspected. \";s:4:\"type\";s:6:\"string\";}s:2:\"Os\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"???\";s:4:\"type\";s:6:\"string\";}s:6:\"Parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"The
  ID of the parent image that was used to build this image.\";s:4:\"type\";s:6:\"string\";}s:4:\"Size\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"The
  real size of the image. \";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"Tag\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"The
  version of the image \";s:4:\"type\";s:6:\"string\";}s:9:\"Throwaway\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"???\";s:4:\"type\";s:6:\"string\";}s:11:\"VirtualSize\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"The
  virtual size of the image.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:9:\"ImageInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"Created\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"The
  time when your container image was created. \";s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:2:\"Id\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  unique identifier representing a container image. \";s:4:\"type\";s:6:\"string\";}s:5:\"Image\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  name of your container image.\";s:4:\"type\";s:6:\"string\";}s:8:\"RepoTags\";O:8:\"stdClass\":3:{s:11:\"description\";s:143:\"The
  full path to the private Bluemix registry where the image is stored including the
  registry name, the organization namespace, and image tag.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:4:\"Size\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"The
  real size of the container image.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"VirtualSize\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"The
  virtual size of the container image.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}}s:9:\"Namespace\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"namespace\";O:8:\"stdClass\":2:{s:11:\"description\";s:113:\"The
  namespace that is either set for an organization, or a namespace that is not available
  to be used in Bluemix.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Network\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":11:{s:7:\"Aliases\";O:8:\"stdClass\":2:{s:11:\"description\";s:80:\"Alternative
  name of the private container network the container is connected to.\";s:4:\"type\";s:6:\"string\";}s:10:\"EndpointID\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Unique
  ID representing a container.\";s:4:\"type\";s:6:\"string\";}s:7:\"Gateway\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"The
  private IP address of the network gateway in IPv4 format.\";s:4:\"type\";s:6:\"string\";}s:17:\"GlobalIPv6Address\";O:8:\"stdClass\":2:{s:11:\"description\";s:130:\"Private
  IP address of the container in IPv6 format. IBM Containers only supports IPv4 format.
  This attribute is returned as empty.\";s:4:\"type\";s:6:\"string\";}s:19:\"GlobalIPv6PrefixLen\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"Not
  supported by IBM Containers, empty string.\";s:4:\"type\";s:7:\"integer\";}s:10:\"IPAMConfig\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Specific
  configurations for the network driver.\";s:4:\"type\";s:6:\"string\";}s:11:\"IPPrefixLen\";O:8:\"stdClass\":2:{s:11:\"description\";s:261:\"The
  prefix of the subnet in the private container network. The prefix indicates that
  16 bits out of 32 bits are used to address the network. As every IPv4 IP adress
  consists of 32 bits, the last 16 bits are used to assign private IP addresses to
  the container. \";s:4:\"type\";s:6:\"string\";}s:11:\"IPv6Gateway\";O:8:\"stdClass\":2:{s:11:\"description\";s:140:\"The
  private IP address of the network gateway in IPv6 format. IBM Containers only supports
  IPv4 format. This attribute is returned as empty.\";s:4:\"type\";s:6:\"string\";}s:5:\"Links\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"List
  of container names that are linked to the container. \";s:4:\"type\";s:6:\"string\";}s:10:\"MacAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"The
  MAC address that is assigned to the container.\";s:4:\"type\";s:6:\"string\";}s:9:\"NetworkID\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"Unique
  identifier representing the private container network.\";s:4:\"type\";s:6:\"string\";}}}s:14:\"NetworkSetting\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:6:\"Bridge\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"The
  name of the private network bridge.\";s:4:\"type\";s:6:\"string\";}s:7:\"Gateway\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"The
  IP address of the private network gateway in IPv4 format.\";s:4:\"type\";s:6:\"string\";}s:9:\"IpAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"The
  private IP address that is assigned to the container.\";s:4:\"type\";s:6:\"string\";}s:11:\"IpPrefixLen\";O:8:\"stdClass\":3:{s:11:\"description\";s:0:\"\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:10:\"MacAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"The
  MAC address that was assigned to the container. \";s:4:\"type\";s:6:\"string\";}s:7:\"Network\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Network\";}s:11:\"PortMapping\";O:8:\"stdClass\":2:{s:11:\"description\";s:208:\"Specific
  to Docker. List of private container ports and their mapping to the host ports.
  In IBM Containers all container ports are exposed on the host by default. This attribute
  is returned as an empty list. \";s:4:\"type\";s:6:\"string\";}s:5:\"Ports\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"All
  ports of the container that were exposed to the public.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"PublicIpAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  Public IP address that was bound to the container.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:9:\"IpAddress\";i:1;s:15:\"PublicIpAddress\";}}s:4:\"Port\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"IP\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"Public
  IP address that was bound to the container in IPv4 format.\";s:4:\"type\";s:6:\"string\";}s:11:\"PrivatePort\";O:8:\"stdClass\":2:{s:11:\"description\";s:81:\"The
  private port of the container on which the container listens during run time.\";s:4:\"type\";s:6:\"string\";}s:10:\"PublicPort\";O:8:\"stdClass\":2:{s:11:\"description\";s:196:\"The
  public port that was exposed during container creation. When a public port is exposed,
  a public IP address can be bound to the container which makes the container accessible
  from the internet.\";s:4:\"type\";s:6:\"string\";}s:4:\"Type\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"The
  type of IP protocol that is used for the port. It can either be `udp` or `tcp`.
  \ \";s:4:\"type\";s:6:\"string\";}}}s:5:\"Route\";O:8:\"stdClass\":3:{s:11:\"description\";s:128:\"The
  public route that is mapped to the container group. You can use this route to access
  your container group from the Internet.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"domain\";O:8:\"stdClass\":2:{s:11:\"description\";s:171:\"The
  default system domain is mybluemix.net and already provides a SSL certificate, so
  you can access your container groups with HTTPS without any additional configuration.\";s:4:\"type\";s:6:\"string\";}s:4:\"host\";O:8:\"stdClass\":2:{s:11:\"description\";s:223:\"The
  host name of your container group, such as mycontainerhost. Do not include underscores
  (_) in the host name. The host and the domain combined form the full public route
  URL, such as http://mycontainerhost.mybluemix.net.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:12:\"UpdateVolume\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"addSpaces\";O:8:\"stdClass\":3:{s:11:\"description\";s:176:\"The
  name or ID of the space where you want to provision your existing volume. Run `cf
  spaces` to retrieve the name, or `cf space <space_name> --guid` to retrieve the
  space ID. \";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"removeSpaces\";O:8:\"stdClass\":3:{s:11:\"description\";s:182:\"The
  name or ID of the space from which you want to unprovision your existing volume.
  Run `cf spaces` to retrieve the name, or `cf space <space_name> --guid` to retrieve
  the space ID.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}}s:6:\"Volume\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"fsID\";O:8:\"stdClass\":2:{s:11:\"description\";s:78:\"
  Unique identifier representing the file share on which the volume is hosted. \";s:4:\"type\";s:6:\"string\";}s:8:\"hostPath\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Full
  path to the mounted volume inside the container.\";s:4:\"type\";s:6:\"string\";}s:20:\"otherSpaceVisibility\";O:8:\"stdClass\":3:{s:11:\"description\";s:116:\"List
  of space IDs in which the volume is visible and can be used by all the single containers
  and container groups. \";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"spaceGuid\";O:8:\"stdClass\":2:{s:11:\"description\";s:70:\"Unique
  identifier representing the space where the volume got created.\";s:4:\"type\";s:6:\"string\";}s:7:\"volName\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"The
  name of the volume.\";s:4:\"type\";s:6:\"string\";}}}s:18:\"getContainerStatus\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"NameOrId\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"The
  unique identifier of the container. \";s:4:\"type\";s:6:\"string\";}s:6:\"Status\";O:8:\"stdClass\":2:{s:11:\"description\";s:185:\"The
  current status of the container. The status can either be a transient one, such
  as BUILDING or NETWORKING, or a non-transient one, such as RUNNING, SHUTDOWN, CRASHED,
  or SUSPENDED. \";s:4:\"type\";s:6:\"string\";}s:9:\"Transient\";O:8:\"stdClass\":2:{s:11:\"description\";s:337:\"When
  set to true, the current container state is temporary and will change soon. An example
  for a transient state is the BUILDING state. A container that is created will be
  set to the BUILDING state until all container layers are created and the container
  is started. When set to false, the container state is permanent, such as CRASHED.\";s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:8:\"NameOrId\";}}}"
...
