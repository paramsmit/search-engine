---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":12:{s:7:\"contact\";O:8:\"stdClass\":4:{s:5:\"email\";s:19:\"info@musixmatch.com\";s:4:\"name\";s:10:\"Musixmatch\";s:3:\"url\";s:22:\"https://musixmatch.com\";s:9:\"x-twitter\";s:10:\"Musixmatch\";}s:11:\"description\";s:6809:\"Musixmatch
  lyrics API is a robust service that permits you to search and retrieve lyrics in
  the simplest possible way. It just works.\n\nInclude millions of licensed lyrics
  on your website or in your application legally.\n\nThe fastest, most powerful and
  legal way to display lyrics on your website or in your application.\n\n#### Read
  musixmatch API Terms & Conditions and the Privacy Policy:\nBefore getting started,
  you must take a look at the [API Terms & Conditions](http://musixmatch.com/apiterms/)
  and the [Privacy Policy](https://developer.musixmatch.com/privacy). We\u2019ve worked
  hard to make this service completely legal so that we are all protected from any
  foreseeable liability. Take the time to read this stuff.\n\n#### Register for an
  API key:\nAll you need to do is [register](https://developer.musixmatch.com/signup)
  in order to get your API key, a mandatory parameter for most of our API calls. It\u2019s
  your personal identifier and should be kept secret:\n\n```\n  https://api.musixmatch.com/ws/v1.1/track.get?apikey=YOUR_API_KEY\n```\n####
  Integrate the musixmatch service with your web site or application\nIn the most
  common scenario you only need to implement two API calls: \nThe first call is to
  match your catalog to ours using the [track.search](#!/Track/get_track_search) function
  and the second is to get the lyrics using the [track.lyrics.get](#!/Lyrics/get_track_lyrics_get)
  api. That\u2019s it!\n\n## API Methods\nWhat does the musiXmatch API do?\n\nThe
  musiXmatch API allows you to read objects from our huge 100% licensed lyrics database.\n\nTo
  make your life easier we are providing you with one or more examples to show you
  how it could work in the wild. You\u2019ll find both the API request and API response
  in all the available output formats for each API call. Follow the links below for
  the details.\n\nThe current API version is 1.1, the root URL is located at https://api.musixmatch.com/ws/1.1/\n\nSupported
  input parameters can be found on the page [Input Parameters](https://developer.musixmatch.com/documentation/input-parameters).
  Use UTF-8 to encode arguments when calling API methods.\n\nEvery response includes
  a status_code. A list of all status codes can be consulted at [Status Codes](https://developer.musixmatch.com/documentation/status-codes).\n\n##
  Music meta data\nThe musiXmatch api is built around lyrics, but there are many other
  data we provide through the api that can be used to improve every existent music
  service.\n\n## Track\nInside the track object you can get the following extra information:\n\n###
  TRACK RATING\n\nThe track rating is a score 0-100 identifying how popular is a song
  in musixmatch.\n\nYou can use this information to sort search results, like the
  most popular songs of an artist, of a music genre, of a lyrics language.\n\n###
  INSTRUMENTAL AND EXPLICIT FLAGS\n\nThe instrumental flag identifies songs with music
  only, no lyrics.\n\nThe explicit flag identifies songs with explicit lyrics or explicit
  title. We're able to identify explicit words and set the flag for the most common
  languages.\n\n### FAVOURITES\n\nHow many users have this song in their list of favourites.\n\nCan
  be used to sort tracks by num favourite to identify more popular tracks within a
  set.\n\n### MUSIC GENRE\n\nThe music genere of the song.\n\nCan be used to group
  songs by genre, as input for similarity alghorithms, artist genre identification,
  navigate songs by genere, etc.\n\n### SONG TITLES TRANSLATIONS\n\nThe track title,
  as translated in different lanauages, can be used to display the right writing for
  a given user, example:\n\nLIES (Bigbang) becomes \u5728\u5149\u5316\u9580 in chinese\nHALLELUJAH
  (Bigbang) becomes \u30CF\u30EC\u30EB\u30E4 in japanese\n\n\n## Artist\nInside the
  artist object you can get the following nice extra information:\n\n### COMMENTS
  AND COUNTRY\n\nAn artist comment is a short snippet of text which can be mainly
  used for disambiguation.\n\nThe artist country is the born country of the artist/group\n\nThere
  are two perfect search result if you search by artist with the keyword \"U2\". Indeed
  there are two distinct music groups with this same name, one is the most known irish
  group of Bono Vox, the other is a less popular (world wide speaking) group from
  Japan.\n\nHere's how you can made use of the artist comment in your search result
  page:\n\nU2 (Irish rock band)\nU2 (\u3042\u304D\u3084\u307E\u3046\u306B)\nYou can
  also show the artist country for even better disambiguation:\n\nU2 (Irish rock band)
  from Ireland\nU2 (\u3042\u304D\u3084\u307E\u3046\u306B) from Japan\nARTIST TRANSLATIONS\n\nWhen
  you create a world wide music related service you have to take into consideration
  to display the artist name in the user's local language. These translation are also
  used as aliases to improve the search results.\n\nLet's use PSY for this example.\n\nWestern
  people know him as PSY but korean want to see the original name \uC2F8\uC774.\n\nUsing
  the name translations provided by our api you can show to every user the writing
  they expect to see.\n\nFurthermore, when you search for \"psy gangnam style\" or
  \"\uC2F8\uC774 gangnam style\" with our search/match api you will still be able
  to find the song.\n\n### ARTIST RATING\n\nThe artist rating is a score 0-100 identifying
  how popular is an artist in musixmatch.\n\nYou can use this information to build
  charts, for suggestions, to sort search results. In the example above about U2,
  we use the artist rating to show the irish band before the japanese one in our serp.\n\n###
  ARTIST MUSIC GENRE\n\nWe provide one or more main artist genre, this information
  can be used to calculate similar artist, suggestions, or the filter a search by
  artist genre.\n\n\n\n## Album\nInside the album object you can get the following
  nice extra information:\n\n### ALBUM RATING\n\nThe album rating is a score 0-100
  identifying how popular is an album in musixmatch.\n\nYou can use this information
  to sort search results, like the most popular albums of an artist.\n\n### ALBUM
  RATING\n\nThe album rating is a score 0-100 identifying how popular is an album
  in musixmatch.\n\nYou can use this information to sort search results, like the
  most popular albums of an artist.\n\n### ALBUM COPYRIGHT AND LABEL\n\nFor most of
  our albums we can provide extra information like for example:\n\nLabel: Universal-Island
  Records Ltd.\nCopyright: (P) 2013 Rubyworks, under license to Columbia Records,
  a Division of Sony Music Entertainment.\nALBUM TYPE AND RELEASE DATE\n\nThe album
  official release date can be used to sort an artist's albums view starting by the
  most recent one.\n\nAlbum can also be filtered or grouped by type: Single, Album,
  Compilation, Remix, Live. This can help to build an artist page with a more organized
  structure.\n\n### ALBUM MUSIC GENRE\n\nFor most of the albums we provide two groups
  of music genres. Primary and secondary. This information can be used to help user
  navigate albums by genre.\n\nAn example could be:\n\nPrimary genere: POP\nSecondary
  genre: K-POP or Mandopop\n\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:34:\"http://opensource.org/licenses/MIT\";}s:14:\"termsOfService\";s:31:\"http://musixmatch.com/apiterms/\";s:5:\"title\";s:10:\"Musixmatch\";s:7:\"version\";s:5:\"1.1.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"media\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:83:\"https://api.apis.guru/v2/cache/logo/https_twitter.com_Musixmatch_profile_image.jpeg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:87:\"https://raw.githubusercontent.com/musixmatch/musixmatch-sdk/master/swagger/swagger.yaml\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"musixmatch.com\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"musixmatch\";s:4:\"type\";s:7:\"openapi\";}}"
host: api.musixmatch.com
basePath: /ws/1.1
paths:
  /album.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch album id
        in: query
        name: album_id
        required: true
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      album:
                        $ref: '#/definitions/Album'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Album
      operationId: album.get.get
  /album.tracks.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch album id
        in: query
        name: album_id
        required: true
        type: string
      - description: When set, filter only contents with lyrics
        in: query
        name: f_has_lyrics
        required: false
        type: string
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track_list:
                        description: A list of tracks
                        items:
                          $ref: '#/definitions/Track'
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Track
      operationId: album.tracks.get.get
  /artist.albums.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch artist id
        in: query
        name: artist_id
        required: true
        type: string
      - description: Sort by release date (asc|desc)
        in: query
        name: s_release_date
        required: false
        type: string
      - description: Group by Album Name
        in: query
        name: g_album_name
        required: false
        type: string
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      album_list:
                        description: A list of albums
                        items:
                          properties:
                            album:
                              $ref: '#/definitions/Album'
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Album
      operationId: artist.albums.get.get
  /artist.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: tThe musiXmatch artist id
        in: query
        name: artist_id
        required: true
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist:
                        $ref: '#/definitions/Artist'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Artist
      operationId: artist.get.get
  /artist.related.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch artist id
        in: query
        name: artist_id
        required: true
        type: string
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist_list:
                        description: A list of artists
                        items:
                          properties:
                            artist:
                              $ref: '#/definitions/Artist'
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Artist
      operationId: artist.related.get.get
  /artist.search:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The song artist
        in: query
        name: q_artist
        required: false
        type: string
      - description: When set, filter by this artist id
        in: query
        name: f_artist_id
        required: false
        type: number
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist_list:
                        description: A list of artists
                        items:
                          properties:
                            artist:
                              $ref: '#/definitions/Artist'
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Artist
      operationId: artist.search.get
  /chart.artists.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      - default: us
        description: A valid ISO 3166 country code
        in: query
        name: country
        required: false
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist_list:
                        description: A list of artists
                        items:
                          properties:
                            artist:
                              $ref: '#/definitions/Artist'
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Artist
      operationId: chart.artists.get.get
  /chart.tracks.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      - default: us
        description: A valid ISO 3166 country code
        in: query
        name: country
        required: false
        type: string
      - description: When set, filter only contents with lyrics
        in: query
        name: f_has_lyrics
        required: false
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track_list:
                        description: A list of tracks
                        items:
                          properties:
                            track:
                              $ref: '#/definitions/Track'
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Track
      operationId: chart.tracks.get.get
  /matcher.lyrics.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The song title
        in: query
        name: q_track
        required: false
        type: string
      - description: The song artist
        in: query
        name: q_artist
        required: false
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      lyrics:
                        $ref: '#/definitions/Lyrics'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Lyrics
      operationId: matcher.lyrics.get.get
  /matcher.subtitle.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The song title
        in: query
        name: q_track
        required: false
        type: string
      - description: tThe song artist
        in: query
        name: q_artist
        required: false
        type: string
      - description: Filter by subtitle length in seconds
        in: query
        name: f_subtitle_length
        required: false
        type: number
      - description: Max deviation for a subtitle length in seconds
        in: query
        name: f_subtitle_length_max_deviation
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      subtitle:
                        $ref: '#/definitions/Subtitle'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Subtitle
      operationId: matcher.subtitle.get.get
  /matcher.track.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The song artist
        in: query
        name: q_artist
        required: false
        type: string
      - description: The song title
        in: query
        name: q_track
        required: false
        type: string
      - description: When set, filter only contents with lyrics
        in: query
        name: f_has_lyrics
        required: false
        type: number
      - description: When set, filter only contents with subtitles
        in: query
        name: f_has_subtitle
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track:
                        $ref: '#/definitions/Track'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Track
      operationId: matcher.track.get.get
  /track.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch track id
        in: query
        name: track_id
        required: true
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track:
                        $ref: '#/definitions/Track'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Track
      operationId: track.get.get
  /track.lyrics.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch track id
        in: query
        name: track_id
        required: true
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      lyrics:
                        $ref: '#/definitions/Lyrics'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Lyrics
      operationId: track.lyrics.get.get
  /track.search:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The song title
        in: query
        name: q_track
        required: false
        type: string
      - description: The song artist
        in: query
        name: q_artist
        required: false
        type: string
      - description: Any word in the lyrics
        in: query
        name: q_lyrics
        required: false
        type: string
      - description: When set, filter by this artist id
        in: query
        name: f_artist_id
        required: false
        type: number
      - description: When set, filter by this music category id
        in: query
        name: f_music_genre_id
        required: false
        type: number
      - description: Filter by the lyrics language (en,it,..)
        in: query
        name: f_lyrics_language
        required: false
        type: number
      - description: When set, filter only contents with lyrics
        in: query
        name: f_has_lyrics
        required: false
        type: number
      - description: Sort by our popularity index for artists (asc|desc)
        in: query
        name: s_artist_rating
        required: false
        type: string
      - description: Sort by our popularity index for tracks (asc|desc)
        in: query
        name: s_track_rating
        required: false
        type: string
      - default: 1
        description: Search only a part of the given query string.Allowed range is
          (0.1 u2013 0.9)
        in: query
        name: quorum_factor
        required: false
        type: number
      - description: Define the page size for paginated results.Range is 1 to 100.
        in: query
        name: page_size
        required: false
        type: number
      - description: Define the page number for paginated results
        in: query
        name: page
        required: false
        type: number
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track_list:
                        description: A list of tracks
                        items:
                          properties:
                            track:
                              $ref: '#/definitions/Track'
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Track
      operationId: track.search.get
  /track.snippet.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch track id
        in: query
        name: track_id
        required: true
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      snippet:
                        $ref: '#/definitions/Snippet'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Snippet
      operationId: track.snippet.get.get
  /track.subtitle.get:
    get:
      description: ""
      parameters:
      - default: json
        description: 'output format: json, jsonp, xml.'
        in: query
        name: format
        required: false
        type: string
      - description: jsonp callback
        in: query
        name: callback
        required: false
        type: string
      - description: The musiXmatch track id
        in: query
        name: track_id
        required: true
        type: string
      responses:
        200:
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      subtitle:
                        $ref: '#/definitions/Subtitle'
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
      - key: []
      summary: ""
      tags:
      - Subtitle
      operationId: track.subtitle.get.get
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":6:{s:5:\"Album\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"a
  album of songs in the Musixmatch database.\";s:10:\"properties\";O:8:\"stdClass\":22:{s:15:\"album_copyright\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_100x100\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_350x350\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_500x500\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_800x800\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"album_edit_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:8:\"album_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:11:\"album_label\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:10:\"album_mbid\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:10:\"album_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"album_pline\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"album_rating\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"album_release_date\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:18:\"album_release_type\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:17:\"album_track_count\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:15:\"album_vanity_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:9:\"artist_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:11:\"artist_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"primary_genres\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"music_genre_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"music_genre\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"music_genre_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"music_genre_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:25:\"music_genre_name_extended\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:21:\"music_genre_parent_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"music_genre_vanity\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"restricted\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"secondary_genres\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"music_genre_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:12:\"updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:14:\"a
  Album object\";}s:6:\"Artist\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"a
  artist in the Musixmatch database.\";s:10:\"properties\";O:8:\"stdClass\":18:{s:17:\"artist_alias_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:12:\"artist_alias\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:14:\"artist_comment\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"artist_country\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"artist_credits\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"artist_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:15:\"artist_edit_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:9:\"artist_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:11:\"artist_mbid\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"artist_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:28:\"artist_name_translation_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:23:\"artist_name_translation\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"language\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"translation\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:13:\"artist_rating\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"artist_share_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:18:\"artist_twitter_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:16:\"artist_vanity_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:7:\"managed\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:14:\"primary_genres\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"music_genre_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"music_genre\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"music_genre_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"music_genre_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:25:\"music_genre_name_extended\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:21:\"music_genre_parent_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"music_genre_vanity\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"restricted\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"secondary_genres\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"music_genre_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:12:\"updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:15:\"a
  Artist object\";}s:6:\"Lyrics\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"a
  Lyrics in the Musixmatch database.\";s:10:\"properties\";O:8:\"stdClass\":18:{s:16:\"action_requested\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:8:\"can_edit\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:8:\"explicit\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:17:\"html_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"instrumental\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:6:\"locked\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:11:\"lyrics_body\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:16:\"lyrics_copyright\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:9:\"lyrics_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:15:\"lyrics_language\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:27:\"lyrics_language_description\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:18:\"pixel_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"publisher_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:10:\"restricted\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:19:\"script_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:8:\"verified\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:11:\"writer_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:5:\"title\";s:15:\"a
  Lyrics object\";s:4:\"type\";s:6:\"object\";}s:7:\"Snippet\";O:8:\"stdClass\":4:{s:11:\"description\";s:50:\"Snippet
  of lyrics text in the Musixmatch database.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:17:\"html_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"instrumental\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"pixel_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:10:\"restricted\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:19:\"script_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"snippet_body\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:10:\"snippet_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"snippet_language\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:16:\"a
  Snippet object\";s:4:\"type\";s:6:\"object\";}s:8:\"Subtitle\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"a
  synchronized lyrics subtitle in the Musixmatch database.\";s:10:\"properties\";O:8:\"stdClass\":13:{s:17:\"html_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:16:\"lyrics_copyright\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:18:\"pixel_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"publisher_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:10:\"restricted\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:19:\"script_tracking_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:13:\"subtitle_body\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"subtitle_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:17:\"subtitle_language\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:29:\"subtitle_language_description\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:15:\"subtitle_length\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:12:\"updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"writer_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:5:\"title\";s:17:\"a
  Subtitle object\";}s:5:\"Track\";O:8:\"stdClass\":4:{s:11:\"description\";s:33:\"a
  song in the Musixmatch database\";s:10:\"properties\";O:8:\"stdClass\":35:{s:22:\"album_coverart_100x100\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_350x350\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_500x500\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:22:\"album_coverart_800x800\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:8:\"album_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:10:\"album_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:9:\"artist_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:11:\"artist_mbid\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:11:\"artist_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:14:\"commontrack_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:21:\"commontrack_vanity_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:8:\"explicit\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"first_release_date\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:10:\"has_lyrics\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:13:\"has_subtitles\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:12:\"instrumental\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:9:\"lyrics_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:13:\"num_favourite\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:14:\"primary_genres\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"music_genre_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"music_genre\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"music_genre_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"music_genre_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:25:\"music_genre_name_extended\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:21:\"music_genre_parent_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"music_genre_vanity\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"restricted\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"secondary_genres\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"music_genre_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"music_genre\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"music_genre_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"music_genre_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:25:\"music_genre_name_extended\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:21:\"music_genre_parent_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:18:\"music_genre_vanity\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:11:\"subtitle_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:14:\"track_edit_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:8:\"track_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:10:\"track_isrc\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"track_length\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:10:\"track_mbid\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:10:\"track_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:27:\"track_name_translation_list\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"track_rating\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:15:\"track_share_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:19:\"track_soundcloud_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"number\";}s:16:\"track_spotify_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:18:\"track_xboxmusic_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}s:12:\"updated_time\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:14:\"a
  Track object\";s:4:\"type\";s:6:\"object\";}}"
...
