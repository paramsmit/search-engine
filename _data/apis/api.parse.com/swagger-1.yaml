---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:488:\"Headline : Parse
  offers developers a backend-as-a-service platform for their mobile applications.
  Developers can use SDKs for both iOS and Android to persist data and more. The REST
  API lets developers interact with Parse from computers that aren't mobile devices.
  With the APIs developers can have their webserver show data from Parse on a website,
  upload large amounts of data that will later be consumed in a mobile app, download
  recent data to run their own custom analytics and more.\";s:7:\"version\";s:1:\"1\";s:5:\"title\";s:5:\"Parse\";}"
host: api.parse.com
basePath: /1
paths:
  /batch:
    post:
      summary: To reduce the amount of time spent on network round trips, you can
        create, update, or delete up to 50 objects in one call, using the batch endpoint.
      description: To reduce the amount of time spent on network round trips, y...
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/batchPost'
      responses:
        200:
          description: (Untitled)
          schema:
            type: array
            items:
              $ref: '#/definitions/batchResponse'
  /classes/{className}:
    get:
      summary: Retreives objects. The response body is a JSON object containing all
        the user-provided fields,rnplus the createdAt, updatedAt, and objectId fields.rn
      description: Retreives objects. The response body is a JSON object contai...
      operationId: GET
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/model730'
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/classesQuery'
    post:
      summary: Creates an object. When the creation is successful, the HTTP response
        is a 201 Createdrnand the Location header contains the object URL for the
        new object.rn
      description: Creates an object. When the creation is successful, the HTTP...
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/classPost'
      responses:
        201:
          description: (Untitled)
          schema:
            $ref: '#/definitions/collectionPostResponse'
    parameters:
    - name: className
      in: path
      description: (Untitled)
      required: true
      type: string
  /classes/{className}/{objectId}:
    get:
      summary: Retreive instance by objectId
      description: Retreive instance by objectId
      operationId: GET
      consumes: []
      parameters: []
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/classGet'
    put:
      summary: Updates an object. Any keys you don't specify will remain unchanged,
        so you can update just a subset of the object's data.rn
      description: Updates an object. Any keys you don't specify will remain un...
      operationId: PUT
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/classPut'
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/collectionPutResponse'
    delete:
      summary: Delete instance by objectIdrn
      description: Delete instance by objectIdrn
      operationId: DELETE
      consumes: []
      parameters: []
      responses: []
    parameters:
    - name: className
      in: path
      description: (Untitled)
      required: true
      type: string
    - name: objectId
      in: path
      description: (Untitled)
      required: true
      type: string
  /events/AppOpened:
    post:
      summary: Starts to collect data on when and how often the application is opened.
      description: Starts to collect data on when and how often the application...
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/analyticsAppOpened'
      responses: []
  /events/{eventName}:
    post:
      summary: Starts to collect data on how oftern the particular event occurs, with
        some additional metadata.
      description: Starts to collect data on how oftern the particular event oc...
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/analytics'
      responses: []
    parameters:
    - name: eventName
      in: path
      description: (Untitled)
      required: true
      type: string
  /files/{fileName}:
    post:
      summary: To upload a file to Parse, send a POST request to the files URL, postfixed
        with the name of the file.rnThe request must contain the Content-Type header
        associated with the file.rnKeep in mind that files are limited to 10 megabytesrn
      description: To upload a file to Parse, send a POST request to the files ...
      operationId: POST
      consumes:
      - '*/*'
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/model607'
      responses:
        201:
          description: (Untitled)
          schema:
            $ref: '#/definitions/fileResponse'
    parameters:
    - name: fileName
      in: path
      description: (Untitled)
      required: true
      type: string
  /functions/{functionName}:
    post:
      summary: Call a function.
      description: Call a function.
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/functions'
      responses: []
    parameters:
    - name: functionName
      in: path
      description: (Untitled)
      required: true
      type: string
  /installations:
    get:
      summary: Get all installations, optionally filtered
      description: Get all installations, optionally filtered
      operationId: GET
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/model957'
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/installationsQuery'
    post:
      summary: Create a new installation
      description: Create a new installation
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/installationPost'
      responses:
        201:
          description: (Untitled)
          schema:
            $ref: '#/definitions/collectionPostResponse'
  /login:
    get:
      summary: Logs in a user to his or her account. Response provides a 'sessionToken'
        which is used to invoke methods with authorized access.
      description: Logs in a user to his or her account. Response provides a 's...
      operationId: GET
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/model649'
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/userGet'
  /push:
    post:
      summary: Send a push notification
      description: Send a push notification
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/push'
      responses: []
  /requestPasswordReset:
    post:
      summary: Initiates password reset for a users who has email associated with
        his or her account.
      description: Initiates password reset for a users who has email associate...
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/requestPasswordReset'
      responses: []
  /roles:
    get:
      summary: Get all roles, optionally filtered
      description: Get all roles, optionally filtered
      operationId: GET
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/model575'
      responses: []
    post:
      summary: Create a new role
      description: Create a new role
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/rolePost'
      responses:
        201:
          description: (Untitled)
          schema:
            $ref: '#/definitions/collectionPostResponse'
  /users:
    get:
      summary: Get all users, optionally filtered
      description: Get all users, optionally filtered
      operationId: GET
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/model514'
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/usersQuery'
    post:
      summary: Signs up a new user.rn
      description: Signs up a new user.rn
      operationId: POST
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: (Untitled)
        required: true
        schema:
          $ref: '#/definitions/userPost'
      responses:
        201:
          description: (Untitled)
          schema:
            $ref: '#/definitions/usersPostResponse'
  /users/me:
    get:
      summary: Retrieve the user associated with the session token placed into the
        'X-Parse-Session-Token' header.rnIf the session token is not valid, an error
        object is returned.rn
      description: Retrieve the user associated with the session token placed i...
      operationId: GET
      consumes: []
      parameters: []
      responses:
        200:
          description: (Untitled)
          schema:
            $ref: '#/definitions/userGet'
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":19:{s:22:\"collectionPostResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"collectionPutResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"updatedAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"classesQuery\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"updatedAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:9:\"functions\";O:8:\"stdClass\":0:{}s:13:\"batchResponse\";O:8:\"stdClass\":0:{}s:8:\"rolePost\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:3:\"ACL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:1:\"*\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"read\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"write\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}}}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"__op\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:13:\"^AddRelation$\";}s:7:\"objects\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"__type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:7:\"^_Role$\";}s:9:\"className\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:5:\"users\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"__op\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:13:\"^AddRelation$\";}s:7:\"objects\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"__type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:7:\"^_User$\";}s:9:\"className\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}}}s:18:\"installationsQuery\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"devicetype\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"updatedAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:4:\"push\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"channels\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:19:\"expiration_interval\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"push_time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"where\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:9:\"analytics\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"__type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"iso\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"dimensions\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:7:\"userGet\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"updatedAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:17:\"usersPostResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"sessionToken\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"classPost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:8:\"classPut\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:10:\"usersQuery\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"updatedAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:8:\"userPost\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"analyticsAppOpened\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"__type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"iso\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:8:\"classGet\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"objectId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"createdAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"updatedAt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:20:\"requestPasswordReset\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"fileResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
