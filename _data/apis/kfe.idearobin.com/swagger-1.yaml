---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:11:\"description\";s:75:\"This is a documentation
  for external API endpoints for KFE-CRM application.\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:7:\"KFE
  CRM\";s:14:\"termsOfService\";s:24:\"http://swagger.io/terms/\";}"
host: kfe.idearobin.com
basePath: /api/v1/external
paths:
  /customer:
    get:
      tags:
      - customer
      summary: Show customer list
      description: Lists all customer records
      operationId: getCustomers
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/per_page'
      - name: uid
        in: query
        description: Customer id
        type: integer
      - name: email_address
        in: query
        description: Customer email address
        type: string
      - name: username
        in: query
        description: Customer username
        type: string
      - name: phone
        in: query
        description: Customer phone number
        type: string
      responses:
        200:
          description: List of customers
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        401:
          $ref: '#/responses/Standard401Unauthorized'
    post:
      tags:
      - customer
      summary: Creates new customer
      description: Store a new customer record. Creates a billing address for the
        customer.
      operationId: addCustomer
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/first_name'
      - $ref: '#/parameters/last_name'
      - $ref: '#/parameters/email_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/age_test'
      - $ref: '#/parameters/age_test_date'
      - $ref: '#/parameters/company'
      - $ref: '#/parameters/street1'
      - $ref: '#/parameters/street2'
      - $ref: '#/parameters/city'
      - $ref: '#/parameters/zone'
      - $ref: '#/parameters/postal_code'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /customer/{customer_id}:
    get:
      tags:
      - customer
      summary: Show customer
      description: Show a specific customer record
      operationId: getCustomer
      parameters:
      - $ref: '#/parameters/customer_id'
      - name: with_tabs_data
        in: query
        description: Includes ARP Views and Webpage visits records for the customer
        required: false
        type: boolean
      - name: with_items
        in: query
        description: Includes customer products & services records availed
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        200:
          description: Customer record
          schema:
            $ref: '#/definitions/Customer'
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
    put:
      tags:
      - customer
      summary: Update customer
      description: Update a specific customer record. Updates customer's billing address
        as well.
      operationId: updateCustomer
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/customer_id'
      - $ref: '#/parameters/first_name'
      - $ref: '#/parameters/last_name'
      - $ref: '#/parameters/email_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/age_test'
      - $ref: '#/parameters/age_test_date'
      - $ref: '#/parameters/company'
      - $ref: '#/parameters/street1'
      - $ref: '#/parameters/street2'
      - $ref: '#/parameters/city'
      - $ref: '#/parameters/zone'
      - $ref: '#/parameters/postal_code'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
    delete:
      tags:
      - customer
      summary: Delete customer
      description: Delete a specified customer record
      operationId: deleteCustomer
      parameters:
      - $ref: '#/parameters/customer_id'
      produces:
      - application/json
      responses:
        200:
          description: Customer record deleted
          schema:
            $ref: '#/definitions/Customer'
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /customer/{customer_id}/products:
    post:
      tags:
      - customer products
      summary: Add product to specified customer.
      description: Add product to specified customer. Identifies product level based
        on product added.
      operationId: addCustomerProduct
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/customer_id'
      - name: reference_id
        in: formData
        required: true
        description: Refers to product id
        type: integer
      - name: name
        in: formData
        required: true
        description: Product name
        type: integer
      - name: description
        in: formData
        description: Product description
        type: integer
      - name: availed_at
        in: formData
        description: Refers to product id
        type: string
        format: date-time
      - name: status
        in: formData
        description: Active for 1, not active for 0
        type: boolean
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /customer/{customer_id}/products/{customer_product_id}:
    delete:
      tags:
      - customer products
      summary: Remove product from specified customer.
      description: Remove product from specified customer. Identifies product level
        based on existing latest product previously availed.
      operationId: deleteCustomerProduct
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/customer_id'
      - name: customer_product_id
        in: path
        required: true
        description: Customer product id
        type: integer
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets:
    post:
      tags:
      - ticket
      summary: Create new ticket of ticket type
      description: Creates new ticket of given ticket type (ticket_type_id)
      operationId: addTicket
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: ticket_type_id
        in: formData
        required: true
        description: Valid ticket type
        type: integer
        minimum: 0
        maximum: 9
      - $ref: '#/parameters/ip_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/staff_id'
      - $ref: '#/parameters/state_id'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets/age-test:
    post:
      tags:
      - ticket age test
      summary: Creates new Age Test ticket
      description: Creates new age test ticket. Updates customer age test fields
      operationId: storeAgeTestTicket
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/uid'
      - $ref: '#/parameters/ticket_age_test'
      - $ref: '#/parameters/ticket_age_test_date'
      - $ref: '#/parameters/ip_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/staff_id'
      - $ref: '#/parameters/state_id'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets/active-free-member/arp-emails:
    post:
      tags:
      - ticket active free member
      summary: Add Customer ARP Email
      description: Add ARP Email to specified customer. Do checking if viewed emails
        reached 20% from overall emails. <br>Creates ticket (active free member type)
        if condition is true.
      operationId: addCustomerArpEmail
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/ticket_customer_id'
      - $ref: '#/parameters/email_reference_id'
      - $ref: '#/parameters/email_subject'
      - $ref: '#/parameters/email_content'
      - $ref: '#/parameters/email_date'
      - $ref: '#/parameters/email_view_status'
      - $ref: '#/parameters/ip_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/staff_id'
      - $ref: '#/parameters/state_id'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets/active-free-member/arp-emails/{arp_email_id}:
    put:
      tags:
      - ticket active free member
      summary: Update Customer ARP Email
      description: Update ARP Email to specified customer. Do checking if viewed emails
        reached 20% from overall emails. <br>Creates ticket (active free member type)
        if condition is true.
      operationId: updateCustomerArpEmail
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: arp_email_id
        in: path
        required: true
        description: Customer ARP email id
        type: integer
      - $ref: '#/parameters/ticket_customer_id'
      - $ref: '#/parameters/email_subject'
      - $ref: '#/parameters/email_content'
      - $ref: '#/parameters/email_date'
      - $ref: '#/parameters/email_view_status'
      - $ref: '#/parameters/ip_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/staff_id'
      - $ref: '#/parameters/state_id'
      - $ref: '#/parameters/ticket_id'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets/active-free-member/webpage-visits:
    post:
      tags:
      - ticket active free member
      summary: Add Webpage visits & Active Free Member ticket
      description: Adds webpage visits records. Creates active free member ticket.
      operationId: addWebpageVisitAFMTicket
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: webpage_visit_input
        in: body
        description: Webpage input to be created
        required: true
        schema:
          $ref: '#/definitions/WebpageVisit'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets/multiple-product-click:
    post:
      tags:
      - ticket multiple product click
      summary: Creates new Multiple Product Click ticket
      description: Creates new Multiple Product Click ticket
      operationId: addMultipleProductClickTicket
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: multiple_product_click_input
        in: body
        description: Multiple product click to be created
        required: true
        schema:
          $ref: '#/definitions/WebpageVisit'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
  /tickets/uncompleted:
    post:
      tags:
      - ticket uncompleted
      summary: Create uncompleted order ticket
      description: Store a new uncompleted order record
      operationId: addUncompletedOrderTicket
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/uid'
      - name: order_id
        in: formData
        required: true
        description: Order ID
        type: integer
      - name: order_creation_date
        in: formData
        required: true
        description: Date of order was created
        type: string
      - name: total_price
        in: formData
        required: true
        description: Total price of order
        type: integer
      - $ref: '#/parameters/ip_address'
      - $ref: '#/parameters/phone'
      - $ref: '#/parameters/staff_id'
      - $ref: '#/parameters/state_id'
      responses:
        400:
          $ref: '#/responses/CustomerNotFoundOrInvalidInput'
        401:
          $ref: '#/responses/Standard401Unauthorized'
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":3:{s:8:\"Customer\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"first_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"last_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"email_address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"User\";}}s:12:\"WebpageVisit\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:11:\"customer_id\";i:1;s:28:\"customer_webpage_visits_data\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"customer_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:28:\"customer_webpage_visits_data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/WebpageVisitData\";}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:12:\"WebpageVisit\";}}s:16:\"WebpageVisitData\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"ticket_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"customer_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"product_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:12:\"product_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"datetime_clicked\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"page_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"visited_at\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}}"
...
