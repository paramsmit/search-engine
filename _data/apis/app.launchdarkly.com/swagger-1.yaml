---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:7:\"contact\";O:8:\"stdClass\":3:{s:5:\"email\";s:24:\"support@launchdarkly.com\";s:4:\"name\";s:20:\"LaunchDarkly
  Support\";s:3:\"url\";s:32:\"https://support.launchdarkly.com\";}s:11:\"description\";s:56:\"Build
  custom integrations with the LaunchDarkly REST API\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}s:14:\"termsOfService\";s:30:\"https://launchdarkly.com/terms\";s:5:\"title\";s:12:\"LaunchDarkly\";s:7:\"version\";s:5:\"2.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:15:\"developer_tools\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:110:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_895331003236892673_d0bCtJhv_400x400.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:54:\"https://launchdarkly.github.io/ld-openapi/swagger.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:16:\"launchdarkly.com\";}"
host: app.launchdarkly.com
basePath: /api/v2
paths:
  /:
    get:
      operationId: getRoot
      responses:
        200:
          $ref: '#/responses/Root200'
        401:
          $ref: '#/responses/Standard401'
      summary: Get the root resource
      tags:
      - root
  /auditlog:
    get:
      operationId: getAuditLogEntries
      responses:
        200:
          description: Audit log entries response
          schema:
            $ref: '#/definitions/AuditLogEntries'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
      summary: Fetch a list of all webhooks
      tags:
      - audit log
  /auditlog/{resourceId}:
    get:
      operationId: getAuditLogEntry
      parameters:
      - $ref: '#/parameters/ResourceId'
      responses:
        200:
          description: Audit log entry response
          schema:
            $ref: '#/definitions/AuditLogEntry'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get a webhook by ID
      tags:
      - audit log
  /environments/{projectKey}:
    post:
      operationId: postEnvironment
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentPostRequest'
      responses:
        201:
          $ref: '#/responses/Standard201'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        409:
          $ref: '#/responses/Standard409'
      summary: Create an environment
      tags:
      - environments
  /environments/{projectKey}/{environmentKey}:
    delete:
      operationId: deleteEnvironment
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      responses:
        204:
          $ref: '#/responses/Standard204'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Delete an environment by ID
      tags:
      - environments
    get:
      operationId: getEnvironment
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      responses:
        200:
          description: Environment response
          schema:
            $ref: '#/definitions/Environment'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get an environment by key.
      tags:
      - environments
    patch:
      operationId: patchEnvironment
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/PatchRequest'
      responses:
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
        409:
          $ref: '#/responses/Standard409'
      summary: Modify an environment by ID
      tags:
      - environments
  /flag-statuses/{projectKey}/{environmentKey}:
    get:
      operationId: getFeatureFlagStatus
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      responses:
        200:
          description: List of feature flag statuses
          schema:
            $ref: '#/definitions/FeatureFlagStatuses'
        401:
          $ref: '#/responses/Standard401'
      summary: Get a list of statuses for all feature flags
      tags:
      - flags
  /flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}:
    get:
      operationId: getFeatureFlagStatuses
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/FeatureFlagKey'
      responses:
        200:
          description: Feature flag status by flag key
          schema:
            $ref: '#/definitions/FeatureFlagStatus'
        401:
          $ref: '#/responses/Standard401'
      summary: Get a list of statuses for all feature flags
      tags:
      - flags
  /flags/{projectKey}:
    get:
      operationId: getFeatureFlags
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKeyQuery'
      - $ref: '#/parameters/Tag'
      responses:
        200:
          description: Flags response
          schema:
            $ref: '#/definitions/FeatureFlags'
        401:
          $ref: '#/responses/Standard401'
      summary: Get a list of all features in the given project.
      tags:
      - flags
    post:
      operationId: postFeatureFlag
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagPostRequest'
      responses:
        201:
          $ref: '#/responses/Standard201'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        409:
          $ref: '#/responses/Standard409'
      summary: Create a feature flag
      tags:
      - flags
  /flags/{projectKey}/{featureFlagKey}:
    delete:
      operationId: deleteFeatureFlag
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      responses:
        204:
          $ref: '#/responses/Standard204'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Delete a feature flag by ID
      tags:
      - flags
    get:
      operationId: getFeatureFlag
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKeyQuery'
      responses:
        200:
          description: Flag response
          schema:
            $ref: '#/definitions/FeatureFlag'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get a single feature flag by key.
      tags:
      - flags
    patch:
      operationId: patchFeatureFlag
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/PatchRequest'
      responses:
        200:
          $ref: '#/responses/FeatureFlags200'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
        409:
          $ref: '#/responses/Standard409'
      summary: Modify a feature flag by ID
      tags:
      - flags
  /projects:
    get:
      operationId: getProjects
      responses:
        200:
          description: Projects response
          schema:
            $ref: '#/definitions/Projects'
        401:
          $ref: '#/responses/Standard401'
      summary: Returns a list of all projects in the account.
      tags:
      - projects
    post:
      operationId: postProject
      parameters:
      - $ref: '#/parameters/ProjectPostRequest'
      responses:
        201:
          $ref: '#/responses/Standard201'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        409:
          $ref: '#/responses/Standard409'
      summary: Create a project
      tags:
      - projects
  /projects/{projectKey}:
    delete:
      operationId: deleteProject
      parameters:
      - $ref: '#/parameters/ProjectKey'
      responses:
        204:
          $ref: '#/responses/Standard204'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Delete a project by ID
      tags:
      - projects
    get:
      operationId: getProject
      parameters:
      - $ref: '#/parameters/ProjectKey'
      responses:
        200:
          $ref: '#/responses/Projects200'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get a project by key.
      tags:
      - projects
    patch:
      operationId: patchProject
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/PatchRequest'
      responses:
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
        409:
          $ref: '#/responses/Standard409'
      summary: Modify a project by ID
      tags:
      - projects
  /user-search/{projectKey}/{environmentKey}:
    get:
      operationId: getSearchUsers
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/Query'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/After'
      responses:
        200:
          description: Users response
          schema:
            $ref: '#/definitions/Users'
        401:
          $ref: '#/responses/Standard401'
      summary: Search users in LaunchDarkly based on their last active date, or a
        search query.
      tags:
      - users
  /users/{projectKey}/{environmentKey}:
    get:
      operationId: getUsers
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/Limit'
      responses:
        200:
          description: Users response
          schema:
            $ref: '#/definitions/Users'
        401:
          $ref: '#/responses/Standard401'
      summary: List all users in the environment.
      tags:
      - users
  /users/{projectKey}/{environmentKey}/{userKey}:
    delete:
      operationId: deleteUser
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/UserKey'
      responses:
        204:
          $ref: '#/responses/Standard204'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Delete a user by ID
      tags:
      - users
    get:
      operationId: getUser
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/UserKey'
      responses:
        200:
          description: User response
          schema:
            $ref: '#/definitions/User'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get a user by key.
      tags:
      - users
  /users/{projectKey}/{environmentKey}/{userKey}/flags:
    get:
      operationId: getUserFlagSettings
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/UserKey'
      responses:
        200:
          description: User flags settings response
          schema:
            $ref: '#/definitions/UserFlagSettings'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Lists the current flag settings for a given user.
      tags:
      - user settings
  /users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}:
    get:
      operationId: getUserFlagSetting
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/UserKey'
      - $ref: '#/parameters/FeatureFlagKey'
      responses:
        200:
          description: User flag setting response
          schema:
            $ref: '#/definitions/UserFlagSetting'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get a user by key.
      tags:
      - user settings
    put:
      operationId: putFlagSetting
      parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/UserKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/UserSettingsPutRequest'
      responses:
        204:
          $ref: '#/responses/Standard204'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Specifically enable or disable a feature flag for a user based on their
        key.
      tags:
      - user settings
  /webhooks:
    get:
      operationId: getWebhooks
      responses:
        200:
          description: Webhooks response
          schema:
            $ref: '#/definitions/Webhooks'
        401:
          $ref: '#/responses/Standard401'
      summary: Fetch a list of all webhooks
      tags:
      - webhooks
    post:
      operationId: postWebhook
      parameters:
      - $ref: '#/parameters/WebhookPostRequest'
      responses:
        201:
          $ref: '#/responses/Standard201'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
      summary: Create a webhook
      tags:
      - webhooks
  /webhooks/{resourceId}:
    delete:
      operationId: deleteWebhook
      parameters:
      - $ref: '#/parameters/ResourceId'
      responses:
        204:
          $ref: '#/responses/Standard204'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Delete a webhook by ID
      tags:
      - webhooks
    get:
      operationId: getWebhook
      parameters:
      - $ref: '#/parameters/ResourceId'
      responses:
        200:
          $ref: '#/responses/Webhooks200'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
      summary: Get a webhook by ID
      tags:
      - webhooks
    patch:
      operationId: patchWebhook
      parameters:
      - $ref: '#/parameters/ResourceId'
      - $ref: '#/parameters/PatchRequest'
      responses:
        200:
          $ref: '#/responses/Webhooks200'
        400:
          $ref: '#/responses/Standard400'
        401:
          $ref: '#/responses/Standard401'
        404:
          $ref: '#/responses/Standard404'
        409:
          $ref: '#/responses/Standard409'
      summary: Modify a webhook by ID
      tags:
      - webhooks
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":25:{s:15:\"AuditLogEntries\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AuditLogEntry\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:13:\"AuditLogEntry\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":10:{s:3:\"_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:4:\"date\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"member\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Member\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"target\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"resources\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"titleVerb\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Clause\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"attribute\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"negate\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"op\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"values\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:11:\"Environment\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:3:\"_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:6:\"apiKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"defaultTtl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"mobileKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"secureMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:11:\"FeatureFlag\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":12:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:11:\"_maintainer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Member\";}s:12:\"creationDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:12:\"environments\";O:8:\"stdClass\":2:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FeatureFlagConfig\";}s:4:\"type\";s:6:\"object\";}s:16:\"includeInSnippet\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"maintainerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"tags\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"temporary\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"variations\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Variation\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:17:\"FeatureFlagConfig\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:8:\"archived\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"fallthrough\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"rollout\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Rollout\";}s:9:\"variation\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:12:\"lastModified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"on\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"rules\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Rule\";}s:4:\"type\";s:5:\"array\";}s:4:\"salt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"sel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"targets\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Target\";}s:4:\"type\";s:5:\"array\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:17:\"FeatureFlagStatus\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:7:\"default\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"lastRequested\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"FeatureFlagStatuses\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/FeatureFlagStatus\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:12:\"FeatureFlags\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/FeatureFlag\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Link\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Links\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"self\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Member\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:3:\"_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:14:\"_pendingInvite\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"customRoles\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"isBeta\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Project\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Environment\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Projects\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:3:\"_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Project\";}s:4:\"type\";s:5:\"array\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Rollout\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"variations\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/WeightedVariation\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Rule\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"clauses\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Clause\";}s:4:\"type\";s:5:\"array\";}s:7:\"rollout\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Rollout\";}s:9:\"variation\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Target\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"values\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"variation\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:4:\"User\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:6:\"avatar\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"environmentId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastPing\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":2:{s:7:\"example\";O:8:\"stdClass\":3:{s:6:\"custom\";O:8:\"stdClass\":1:{s:7:\"company\";s:11:\"example.com\";}s:3:\"key\";s:6:\"a00bea\";s:4:\"name\";s:10:\"Bob
  Loblaw\";}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:15:\"UserFlagSetting\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:6:\"_value\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"setting\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:16:\"UserFlagSettings\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";O:8:\"stdClass\":2:{s:14:\"alternate.page\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"self\";O:8:\"stdClass\":2:{s:4:\"href\";s:64:\"/api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page\";s:4:\"type\";s:16:\"application/json\";}}s:6:\"_value\";s:6:\"false,\";}s:10:\"sort.order\";O:8:\"stdClass\":1:{s:6:\"_links\";O:8:\"stdClass\":2:{s:6:\"_value\";b:1;s:4:\"self\";O:8:\"stdClass\":2:{s:4:\"href\";s:60:\"/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order\";s:4:\"type\";s:16:\"application/json\";}}}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Users\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:4:\"type\";s:5:\"array\";}s:10:\"totalCount\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}s:4:\"type\";s:6:\"object\";}s:9:\"Variation\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:1:{i:0;s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:7:\"Webhook\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:3:\"_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:2:\"on\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"secret\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"tags\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Webhooks\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"_links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Links\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Webhook\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:17:\"WeightedVariation\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"variation\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"weight\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}"
...
