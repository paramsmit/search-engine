---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:3209:\"<p style=\"text-align:
  justify;\">This is a documentation for CORE API v2.0. The CORE API is the programming
  \n    interface to <a href=\"http://core-project.kmi.open.ac.uk/\">CORE</a>. You
  can use the API to access the \n    resources harvested and enriched by CORE. The
  API described here is currently in beta. If you \n    encounter any problems with
  the API, please report them to us.</p>\n\n<h2>Overview</h2>\n<p style=\"text-align:
  justify;\">The API is organised by resource type. The resources are <b>articles</b>,
  \n    <b>journals</b> and <b>repositories</b> and are represented using JSON data
  format. Furthermore, \n    each resource has a list of methods. The API also provides
  two global methods for accessing all resources at once.</p>\n\n<h2>Response format</h2>\n<p
  style=\"text-align: justify;\">Response for each query contains two fields: <b>status</b>
  and <b>data</b>.\n    In case of an error status, the data field is empty. The data
  field contains a single object\n    in case the request is for a specific identifier
  (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects,
  for example for search queries. In case of batch requests, the response\n    is
  an array of objects, each of which contains its own <b>status</b> and <b>data</b>
  fields.\n    For search queries the response contains an additional field <b>totalHits</b>,
  which is the \n    total number of items which match the search criteria.</p>\n\n<h2>Search
  query syntax</h2>\n\n<p style=\"text-align: justify\">All of the API search methods
  allow using complex search queries.\n    The query can be a simple string or it
  can be built using terms and operators described in Elasticsearch\n    <a href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\">documentation</a>.\n
  \   The usable field names are <strong>title</strong>, <strong>description</strong>,
  <strong>fullText</strong>, \n    <strong>authorsString</strong>, <strong>publisher</strong>,
  <strong>repositoryIds</strong>, <strong>doi</strong>,\n    <strong>identifiers</strong>
  (which is a list of article identifiers including OAI, URL, etc.), <strong>language.name</strong>
  \n    and <strong>year</strong>. Some example queries:\n</p>\n\n<ul style=\"margin-left:
  30px;\">\n    <li><p>title:psychology and language.name:English</p></li>\n    <li><p>repositoryIds:86
  AND year:2014</p></li>\n    <li><p>identifiers:\"oai:aura.abdn.ac.uk:2164/3837\"
  OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"</p></li>\n    <li><p>doi:\"10.1186/1471-2458-6-309\"</p></li>\n</ul>\n\n<h2>Sort
  order</h2>\n\n<p style=\"text-align: justify;\">For search queries, the results
  are ordered by relevance score. For batch \n    requests, the results are retrieved
  in the order of the requests.</p>\n\n<h2>Parameters</h2>\n<p style=\"text-align:
  justify;\">The API methods allow different parameters to be passed. Additionally,
  there is an API key parameter which is common to all API methods. For all API methods
  \n    the API key can be provided either as a query parameter or in the request
  header. If the API key \n    is not provided, the API will return HTTP 401 error.
  You can register for an API key <a href=\"/intro/api\">here</a>.</p>\n\n<h2>API
  methods</h2>\n\";s:5:\"title\";s:18:\"CORE API v2 (beta)\";s:7:\"version\";s:3:\"2.0\";s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:41:\"http://core.ac.uk/images/CORE-logo-sm.png\";}s:8:\"x-origin\";O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:28:\"http://core.ac.uk/api-v2/doc\";s:7:\"version\";s:3:\"1.2\";}s:14:\"x-providerName\";s:10:\"core.ac.uk\";}"
host: core.ac.uk
basePath: /api-v2
paths:
  /articles/get:
    post:
      description: Method accepts a JSON array of CORE IDs and retrieves a list of
        articles. The response array is ordered based on the order of the IDs in the
        request array.
      parameters:
      - description: JSON array with CORE IDs of articles that need to be fetched
        in: body
        name: body
        required: true
        schema:
          items:
            type: integer
          type: array
      - default: true
        description: Whether to retrieve the full article metadata or only the IDs.
          The default value is true
        in: query
        name: metadata
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve fulltexts of the articles. The default value
          is false
        in: query
        name: fulltext
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve citations found in the articles. The default
          value is false
        in: query
        name: citations
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve lists of similar articles. The default value
          is false. Because the similar articles are calculated on demand, setting
          this parameter to true might slightly slow down the response time
        in: query
        name: similar
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve CORE IDs of different versions of the articles.
          The default value is false
        in: query
        name: duplicate
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve lists of URLs of the article fulltexts. The
          default value is false
        in: query
        name: urls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs which were extracted from
          the article fulltext. The default value is false. This parameter is not
          available in CORE API v2.0 beta
        in: query
        name: extractedUrls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve the raw XML metadata of the articles. The
          default value is false
        in: query
        name: faithfulMetadata
        required: false
        type: boolean
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/ArticleResponse'
            type: array
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
      summary: Batch operation for retrieving articles by CORE ID
      tags:
      - articles
  /articles/get/{coreId}:
    get:
      description: Method will retrieve an article based on given CORE ID.
      parameters:
      - description: CORE ID of the article that needs to be fetched.
        format: int64
        in: path
        name: coreId
        required: true
        type: integer
      - default: true
        description: Whether to retrieve the full article metadata or only the ID.
          The default value is true.
        in: query
        name: metadata
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve full text of the article. The default value
          is false
        in: query
        name: fulltext
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve citations found in the article. The default
          value is false
        in: query
        name: citations
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of similar articles. The default value
          is false. Because the similar articles are calculated on demand, setting
          this parameter to true might slightly slow down the response time
        in: query
        name: similar
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of CORE IDs of different versions
          of the article. The default value is false
        in: query
        name: duplicate
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs from which the article can
          be downloaded. This can include links to PDFs as well as HTML pages. The
          default value is false
        in: query
        name: urls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs which were extracted from
          the article fulltext. The default value is false. This parameter is not
          available in CORE API v2.0 beta
        in: query
        name: extractedUrls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve the raw XML metadata of the article. The
          default value is false
        in: query
        name: faithfulMetadata
        required: false
        type: boolean
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ArticleResponse'
        400:
          description: Invalid identifier supplied
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Get article by CORE ID
      tags:
      - articles
  /articles/get/{coreId}/download/pdf:
    get:
      description: Method will retrieve an article based on given CORE ID.
      parameters:
      - description: ID of article history that needs to be fetched
        in: path
        name: coreId
        required: true
        type: string
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/pdf
      responses:
        200:
          description: Successful operation
        401:
          description: Invalid or no API key provided
        404:
          description: No Article pdf found
        429:
          description: Too many requests in given amount of time
      summary: Get fulltext PDF by CORE ID
      tags:
      - articles
  /articles/get/{coreId}/history:
    get:
      description: Method accepts a single CORE ID and returns a list of all historical
        versions of the article, which are stored in CORE database. The results are
        ordered from the newest one to the oldest one.
      parameters:
      - description: CORE ID of the article which history should be fetched
        in: path
        name: coreId
        required: true
        type: string
      - default: 1
        description: Which page of the history results should be retrieved. Can be
          any number betwen 1 and 100, default is 1 (first page).
        format: int32
        in: query
        maximum: 100
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of results to return per page. Can be any number between
          10 and 100, default is 10.
        format: int32
        in: query
        maximum: 100
        minimum: 10
        name: pageSize
        required: false
        type: integer
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ArticleHistoryResponse'
        400:
          description: Parameter invalid or out of bounds
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Get article history by CORE ID
      tags:
      - articles
  /articles/search:
    post:
      description: Method accepts a JSON array of search queries and parameters. It
        then searches through all articles and returns a JSON array of search results
        for each of the queries. Method searches through all article fields (title,
        authors, subjects, identifiers, etc.).
      parameters:
      - description: JSON array with search queries and parameters. One request can
          contain up to 100 queries
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/SearchRequest'
          type: array
      - default: true
        description: Whether to retrieve the full article metadata or only the ID.
          The default value is true.
        in: query
        name: metadata
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve full text of the article. The default value
          is false
        in: query
        name: fulltext
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve citations found in the article. The default
          value is false
        in: query
        name: citations
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of similar articles. The default value
          is false. Because the similar articles are calculated on demand, setting
          this parameter to true might slightly slow down the response time
        in: query
        name: similar
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of CORE IDs of different versions
          of the article. The default value is false
        in: query
        name: duplicate
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs from which the article can
          be downloaded. This can include links to PDFs as well as HTML pages. The
          default value is false
        in: query
        name: urls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs which were extracted from
          the article fulltext. The default value is false. This parameter is not
          available in CORE API v2.0 beta
        in: query
        name: extractedUrls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve the raw XML metadata of the article. The
          default value is false
        in: query
        name: faithfulMetadata
        required: false
        type: boolean
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/ArticleSearchResponse'
            type: array
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
      summary: Batch operation for search through articles
      tags:
      - articles
  /articles/search/{query}:
    get:
      description: Searches through all articles and returns a JSON array with search
        results. Method searches through all article fields.
      parameters:
      - description: The search query
        format: int64
        in: path
        name: query
        required: true
        type: integer
      - default: 1
        description: Which page of the search results should be retrieved. Can be
          any number betwen 1 and 100, default is 1 (first page).
        format: int32
        in: query
        maximum: 100
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of results to return per page. Can be any number between
          10 and 100, default is 10.
        format: int32
        in: query
        maximum: 100
        minimum: 10
        name: pageSize
        required: false
        type: integer
      - default: true
        description: Whether to retrieve the full article metadata or only the ID.
          The default value is true.
        in: query
        name: metadata
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve full text of the article. The default value
          is false
        in: query
        name: fulltext
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve citations found in the article. The default
          value is false
        in: query
        name: citations
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of similar articles. The default value
          is false. Because the similar articles are calculated on demand, setting
          this parameter to true might slightly slow down the response time
        in: query
        name: similar
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of CORE IDs of different versions
          of the article. The default value is false
        in: query
        name: duplicate
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs from which the article can
          be downloaded. This can include links to PDFs as well as HTML pages. The
          default value is false
        in: query
        name: urls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs which were extracted from
          the article fulltext. The default value is false. This parameter is not
          available in CORE API v2.0 beta
        in: query
        name: extractedUrls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve the raw XML metadata of the article. The
          default value is false
        in: query
        name: faithfulMetadata
        required: false
        type: boolean
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ArticleSearchResponse'
        400:
          description: Parameter invalid or out of bounds
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Search through all documents
      tags:
      - articles
  /articles/similar:
    post:
      description: Method accepts a text and retrieves a JSON array of articles which
        are similar to the given text. The response array is ordered based on similarity
        score, starting from the most similar.
      parameters:
      - description: The text that requires similar articles to be calculated on
        in: body
        name: body
        required: true
        schema:
          type: string
      - default: 10
        description: How many similar articles to retrieve at most. Can be any number
          betwen 1 and 100, default is 10
        in: query
        maximum: 100
        minimum: 1
        name: limit
        required: false
        type: integer
      - default: true
        description: Whether to retrieve the full article metadata or only the IDs
          of the similar articles. The default value is true
        in: query
        name: metadata
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve fulltexts of the similar articles. The default
          value is false
        in: query
        name: fulltext
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve citations found in the articles. The default
          value is false
        in: query
        name: citations
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve lists of similar articles. The default value
          is false. Because the similar articles are calculated on demand, setting
          this parameter to true might slightly slow down the response time
        in: query
        name: similar
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve CORE IDs of different versions of the articles.
          The default value is false
        in: query
        name: duplicate
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve lists of URLs of the article fulltexts. The
          default value is false
        in: query
        name: urls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve a list of URLs which were extracted from
          the article fulltext. The default value is false. This parameter is not
          available in CORE API v2.0 beta
        in: query
        name: extractedUrls
        required: false
        type: boolean
      - default: false
        description: Whether to retrieve the raw XML metadata of the articles. The
          default value is false
        in: query
        name: faithfulMetadata
        required: false
        type: boolean
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ArticleSimilarResponse'
        400:
          description: Missing text in request body or parameter out of bounds or
            invalid parameter
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Get articles by similarity to a text
      tags:
      - articles
  /journals/get:
    post:
      description: Method accepts a JSON array of ISSNs and retrieves a list of journals.
      parameters:
      - description: JSON array with ISSNs of journals that need to be fetched
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/JournalResponse'
            type: array
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
      summary: Batch operation for retrieving journals by ISSN
      tags:
      - journals
  /journals/get/{issn}:
    get:
      description: Returns a journal with given ISSN identifier.
      parameters:
      - description: ISSN identifier of journal that needs to be fetched.
        in: path
        name: issn
        required: true
        type: string
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/JournalResponse'
        400:
          description: Invalid ISSN identifier supplied
        401:
          description: Invalid or no API key provided
      summary: Find journal by ISSN
      tags:
      - journals
  /journals/search:
    post:
      description: Method accepts a JSON array of search queries and parameters. It
        then searches through all journals and returns a JSON array of search results
        for each of the queries. Method searches through all journal fields (title,
        identifiers, subjects, language, rights and publisher).
      parameters:
      - description: JSON array with search queries and parameters. One request can
          contain up to 100 queries.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/SearchRequest'
          type: array
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/JournalResponse'
            type: array
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
      summary: Batch operation for search through journals
      tags:
      - journals
  /journals/search/{query}:
    get:
      description: Searches through all journals and returns a JSON array of search
        results. Method searches through all journal fields (title, identifiers, subjects,
        language, rights and publisher).
      parameters:
      - description: Search query
        in: path
        name: query
        required: true
        type: string
      - default: 1
        description: Which page of the search results should be retrieved. Can be
          any number betwen 1 and 100, default is 1 (first page).
        format: int32
        in: query
        maximum: 100
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of results to return per page. Can be any number between
          10 and 100, default is 10.
        format: int32
        in: query
        maximum: 100
        minimum: 10
        name: pageSize
        required: false
        type: integer
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/JournalSearchResponse'
        400:
          description: Parameter invalid or out of bounds
        401:
          description: Invalid or no API key provided
      summary: Search through journals
      tags:
      - journals
  /repositories/get:
    post:
      description: Method accepts a JSON array of CORE repository IDs and retrieves
        a list of repositories. The response array is ordered based on the order of
        the IDs in the request array. The maximum number of IDs in request is 100.
      parameters:
      - description: JSON array with CORE repository IDs of repositories that need
          to be fetched
        in: body
        name: body
        required: true
        schema:
          items:
            type: integer
          type: array
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/RepositoryResponse'
            type: array
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
      summary: Batch operation for retrieving repositories by CORE repository ID
      tags:
      - repositories
  /repositories/get/{repositoryId}:
    get:
      description: Method will retrieve a repository based on given CORE repository
        ID.
      parameters:
      - description: CORE repository ID of the article that needs to be fetched.
        in: path
        name: repositoryId
        required: true
        type: integer
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/RepositoryResponse'
        400:
          description: Invalid identifier supplied
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Get repository by CORE repository ID
      tags:
      - repositories
  /repositories/search:
    post:
      description: Method accepts a JSON array of search queries and parameters. It
        then searches through all repositories and returns a JSON array of search
        results for each of the queries. Method searches through all repository fields.
      parameters:
      - description: JSON array with search queries and parameters. One request can
          contain up to 100 queries
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/SearchRequest'
          type: array
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/RepositorySearchResponse'
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
      summary: Batch operation for searching through repositories
      tags:
      - repositories
  /repositories/search/{query}:
    get:
      description: Searches through all repositories and returns a JSON array with
        search results. Method searches through all repository fields.
      parameters:
      - description: The search query
        in: path
        name: query
        required: true
        type: string
      - default: 1
        description: Which page of the search results should be retrieved. Can be
          any number betwen 1 and 100, default is 1 (first page).
        format: int32
        in: query
        maximum: 100
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of results to return per page. Can be any number between
          10 and 100, default is 10.
        format: int32
        in: query
        maximum: 100
        minimum: 10
        name: pageSize
        required: false
        type: integer
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/RepositorySearchResponse'
        400:
          description: Parameter invalid or out of bounds
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Search through all repositories
      tags:
      - repositories
  /search:
    post:
      description: Method accepts a JSON array of search queries. It searches through
        all resources and returns a JSON array with search results for each of the
        queries. Method searches through all resources and all fields. The results
        are ordered by relevance score and contain type of the relevant resource and
        its ID. Furthermore, the responses are oredered based on the order of the
        request items. The metadata of each resource need to be obtained through an
        appropriate method.
      parameters:
      - description: JSON array with search queries and pagination parameters. One
          request can contain up to 100 queries
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/SearchRequest'
          type: array
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/SearchAllResponse'
            type: array
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
      summary: Batch operation for search through all resources
      tags:
      - all
  /search/{query}:
    get:
      description: Searches through all resources and returns a JSON array with search
        results. Method searches through all resources and all fields. The results
        are ordered by relevance score and contain type of the relevant resource and
        its ID. The metadata of each resource need to be obtained through an appropriate
        method.
      parameters:
      - description: The search query
        in: path
        name: query
        required: true
        type: string
      - default: 1
        description: Which page of the search results should be retrieved. Can be
          any number betwen 1 and 100, default is 1 (first page).
        format: int32
        in: query
        maximum: 100
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of results to return per page. Can be any number between
          10 and 100, default is 10.
        format: int32
        in: query
        maximum: 100
        minimum: 10
        name: pageSize
        required: false
        type: integer
      - description: Your Api Key. Also accepts apiKey as a header
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/SearchAllResponse'
        400:
          description: Parameter invalid or out of bounds
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
      summary: Search through all resources
      tags:
      - all
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":19:{s:7:\"Article\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":29:{s:7:\"authors\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"List
  of article authors\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"citations\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Citations
  found in the article\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Citation\";}s:4:\"type\";s:5:\"array\";}s:12:\"contributors\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"List
  of article contributors\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"The
  abstract\";s:4:\"type\";s:6:\"string\";}s:10:\"duplicates\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"Duplicate
  article IDs\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";s:5:\"array\";}s:13:\"extractedUrls\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"URLs
  which were extracted from the article fulltext\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:8:\"fulltext\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Article
  full text\";s:4:\"type\";s:6:\"string\";}s:18:\"fulltextIdentifier\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Link
  to the PDF with the article fulltext\";s:4:\"type\";s:6:\"string\";}s:12:\"fulltextUrls\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"URLs
  of the fulltext version of this article\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:11:\"hasFullText\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"Whether
  CORE can provide the fulltext of the article\";s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"Article
  ID\";s:4:\"type\";s:7:\"integer\";}s:11:\"identifiers\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"List
  of document identifiers\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:18:\"journalIdentifiers\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"List
  of journal identifiers of journals this article belongs to\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"journalTitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"Title
  of the journal this article belongs to\";s:4:\"type\";s:6:\"string\";}s:8:\"language\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/Language\";s:11:\"description\";s:23:\"Language
  of the article\";}s:18:\"originalIdentifier\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"URL
  from which CORE harvested the fulltext. Not available in CORE API v2.0 beta\";s:4:\"type\";s:6:\"string\";}s:9:\"publisher\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Publisher
  of the article\";s:4:\"type\";s:6:\"string\";}s:12:\"rawRecordXml\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/RawRecordXml\";s:11:\"description\";s:16:\"Raw
  XML metadata\";}s:9:\"relations\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"URLs
  of relating articles, etc.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"repositories\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"List
  of repositories this article belongs to\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:13:\"repositoryIds\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"List
  of repository IDs of repositories this article belongs to\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";s:5:\"array\";}s:12:\"similarities\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Similar
  articles\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Similar\";}s:4:\"type\";s:5:\"array\";}s:4:\"size\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Size
  of the PDF in bytes\";s:4:\"type\";s:7:\"integer\";}s:7:\"snippet\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"Search
  snippet\";s:4:\"type\";s:6:\"string\";}s:8:\"subjects\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Article
  subjects\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Article
  title\";s:4:\"type\";s:6:\"string\";}s:6:\"topics\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Article
  topics\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"types\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Types,
  e.g. conference paper, journal paper, etc.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:4:\"year\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"Year
  the article was published\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:1:{i:0;s:2:\"id\";}}s:22:\"ArticleHistoryResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"List
  of article versions\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/RawRecordXml\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:6:\"status\";}}s:15:\"ArticleResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Article\";s:11:\"description\";s:19:\"The
  fetched article\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"data\";i:1;s:6:\"status\";}}s:21:\"ArticleSearchResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Search
  results\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Article\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}s:9:\"totalHits\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Total
  number of articles matching the search criteria\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:9:\"totalHits\";}}s:22:\"ArticleSimilarResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Similar
  articles\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Article\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"data\";i:1;s:6:\"status\";}}s:8:\"Citation\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"authors\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"Authors
  of the article\";s:4:\"type\";s:6:\"string\";}s:4:\"date\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"Date
  the cited article was published\";s:4:\"type\";s:6:\"string\";}s:3:\"doi\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Digital
  Object Identifier\";s:4:\"type\";s:6:\"string\";}s:9:\"rawString\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"Citation
  as raw string\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Title
  of the cited article\";s:4:\"type\";s:6:\"string\";}}}s:7:\"Journal\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"identifiers\";O:8:\"stdClass\":3:{s:11:\"description\";s:123:\"List
  of journal identifiers (e.g. URL, OAI or ISSN). The type is prepended to the identifier
  string (e.g. 'issn:2296-0597')\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:8:\"language\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Language
  of the journal\";s:4:\"type\";s:6:\"string\";}s:9:\"publisher\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Publisher
  of the journal\";s:4:\"type\";s:6:\"string\";}s:6:\"rights\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Copyright
  license of the journal\";s:4:\"type\";s:6:\"string\";}s:8:\"subjects\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"List
  of journal subjects\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Journal
  title\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:11:\"identifiers\";}}s:15:\"JournalResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Journal\";s:11:\"description\";s:19:\"The
  fetched journal\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:5:{i:0;s:2:\"OK\";i:1;s:9:\"NOT_FOUND\";i:2;s:16:\"TOO_MANY_QUERIES\";i:3;s:17:\"MISSING_PARAMETER\";i:4;s:17:\"INVALID_PARAMETER\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:6:\"status\";}}s:21:\"JournalSearchResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Search
  results\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Journal\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:5:{i:0;s:2:\"OK\";i:1;s:9:\"NOT_FOUND\";i:2;s:16:\"TOO_MANY_QUERIES\";i:3;s:17:\"MISSING_PARAMETER\";i:4;s:17:\"INVALID_PARAMETER\";}s:4:\"type\";s:6:\"string\";}s:9:\"totalHits\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Total
  number of journals matching the search criteria\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:2:{i:0;s:6:\"status\";i:1;s:9:\"totalHits\";}}s:8:\"Language\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"RawRecordXml\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"datetime\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"Timestamp
  when CORE harvested the metadata\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:8:\"metadata\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"The
  raw XML metadata\";s:4:\"type\";s:6:\"string\";}}}s:10:\"Repository\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"CORE
  repository ID\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Repository
  name\";s:4:\"type\";s:6:\"string\";}s:10:\"openDoarId\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"ID
  of the repository in Open DOAR\";s:4:\"type\";s:7:\"integer\";}s:18:\"repositoryLocation\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/RepositoryLocation\";s:11:\"description\";s:26:\"Location
  of the repository\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"Repository
  URI\";s:4:\"type\";s:6:\"string\";}}}s:18:\"RepositoryLocation\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"country\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Country
  name\";s:4:\"type\";s:6:\"string\";}s:11:\"countryCode\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Two
  letter country code\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"CORE
  repository ID\";s:4:\"type\";s:7:\"integer\";}s:8:\"latitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"longitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:14:\"repositoryName\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Repository
  name\";s:4:\"type\";s:6:\"string\";}}}s:18:\"RepositoryResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Repository\";s:11:\"description\";s:22:\"The
  fetched repository\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:6:\"status\";}}s:24:\"RepositorySearchResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Search
  results\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Repository\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}s:9:\"totalHits\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"Total
  number of repositories matching the search criteria\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:2:{i:0;s:6:\"status\";i:1;s:9:\"totalHits\";}}s:8:\"Resource\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Identifier
  of the resource\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"Type
  of the resource\";s:4:\"enum\";a:3:{i:0;s:7:\"journal\";i:1;s:7:\"article\";i:2;s:10:\"repository\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"type\";}}s:17:\"SearchAllResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"List
  of relevant resources\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resource\";}s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Operation
  status\";s:4:\"enum\";a:6:{i:0;s:2:\"OK\";i:1;s:9:\"Not found\";i:2;s:16:\"Too many
  queries\";i:3;s:17:\"Missing parameter\";i:4;s:17:\"Invalid parameter\";i:5;s:23:\"Parameter
  out of bounds\";}s:4:\"type\";s:6:\"string\";}s:9:\"totalHits\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Total
  number of items matching the search criteria\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:9:\"totalHits\";}}s:13:\"SearchRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"page\";O:8:\"stdClass\":5:{s:7:\"default\";i:1;s:11:\"description\";s:112:\"Which
  page of the search results should be retrieved. Can be any number from 1 to 100,
  default is 1 (first page)\";s:7:\"maximum\";i:100;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:8:\"pageSize\";O:8:\"stdClass\":5:{s:7:\"default\";i:10;s:11:\"description\";s:89:\"The
  number of results to return per page. Can be any number from 10 to 100, default
  is 10\";s:7:\"maximum\";i:100;s:7:\"minimum\";i:10;s:4:\"type\";s:7:\"integer\";}s:5:\"query\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Search
  query\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:5:\"query\";}}s:7:\"Similar\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"CORE
  ID of the similar article\";s:4:\"type\";s:7:\"integer\";}s:5:\"score\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Similarity
  score\";s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Title
  of the similar article\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:5:\"score\";}}}"
...
