---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"xMatters Integration
  API\";s:7:\"version\";s:5:\"0.2.0\";s:5:\"title\";s:24:\"xMatters Integration API\";}"
host: cloudagent.no-ip.org
basePath: /api/integration/1
paths:
  /functions/{functionId}:
    get:
      tags:
      - Functions
      summary: Retrieve function information including number of log requests remaining
        for a given function
      operationId: getFunction
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/functionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Function'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        429:
          $ref: '#/responses/429'
    patch:
      tags:
      - Functions
      summary: Set function info including number of log requests remaining for a
        given integration
      operationId: patchFunction
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/functionId'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Function'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Function'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        429:
          $ref: '#/responses/429'
  /functions/{functionId}/results:
    get:
      tags:
      - Functions
      summary: Retrieve the most recent processing results and logs for a given function
      operationId: getFunctionResults
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/functionId'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/limit'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/JobResult'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /functions/{functionId}/triggers:
    post:
      tags:
      - Invocations
      summary: Trigger the integration function specified with the payload provided
      operationId: postFunctionTrigger
      consumes:
      - application/json
      - application/xml
      - application/soap+xml
      - text/xml
      - '*/*'
      produces:
      - application/json
      - application/xml
      - application/soap+xml
      - text/xml
      parameters:
      - $ref: '#/parameters/functionId'
      - in: body
        name: body
        description: body
        required: true
        schema:
          $ref: '#/definitions/Trigger'
      responses:
        202:
          description: Accepted
          schema:
            $ref: '#/definitions/Invocation'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
  /invocations/{invocationId}/log:
    get:
      tags:
      - Invocations
      summary: Fetch the log for an invocation
      operationId: getInvocationLog
      consumes:
      - application/json
      produces:
      - application/octet-stream
      parameters:
      - $ref: '#/parameters/invocationId'
      responses:
        200:
          description: OK
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        429:
          $ref: '#/responses/429'
  /tickets:
    get:
      tags:
      - Tickets
      summary: Gets a list of tickets for the current org, or for all tickets if org
        not specified.
      operationId: getTickets
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/orgId'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
    post:
      tags:
      - Tickets
      summary: Post a request to configure the current org to have this many tickets
        with this batch size.
      operationId: postTicket
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: ticket request
        required: true
        schema:
          $ref: '#/definitions/TicketRequest'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        201:
          description: Tickets created
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
    delete:
      tags:
      - Tickets
      summary: Remove all tickets that belong to the current org
      operationId: removeTicket
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          $ref: '#/responses/200'
        204:
          $ref: '#/responses/204'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        429:
          $ref: '#/responses/429'
definitions: !php/object "O:8:\"stdClass\":15:{s:8:\"Function\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"stuff\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Trigger\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"A
  random blob of whatever\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:10:\"Invocation\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Ticket\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"stuff\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"HttpRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"body\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"headers\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"method\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:10:\"remoteAddr\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"requestId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"timestamp\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"GoldenTicket\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:9:\"batchSize\";i:1;s:6:\"orgKey\";i:2;s:4:\"uuid\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"batchSize\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:92:\"Max
  batch size of requests that will be processed before the ticket is returned to the
  queue\";}s:6:\"orgKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Organization
  identifier\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"UUID
  for the Golden Ticket instance\";}}}s:20:\"Map\xABstring,string\xBB\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:20:\"WebhookConfiguration\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"action\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"integrationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"mainMethod\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"requestsToLog\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"webhookId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"JobResult\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:13:\"completedTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:3:\"job\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/IntegrationServiceJob\";}s:11:\"logfileName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:9:\"COMPLETED\";i:1;s:7:\"WARNING\";i:2;s:6:\"FAILED\";}}}}s:24:\"IntegrationConfiguration\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":9:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"endpoints\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/EndpointConfiguration\";}}s:19:\"endpointsFromString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"integrationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:23:\"integrationIdFromString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"revision\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"script\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"webhooks\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/WebhookConfiguration\";}}}}s:21:\"IntegrationServiceJob\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:19:\"communicationPlanId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"integrationServiceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"integrationServiceName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"logged\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"orgKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"request\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/HttpRequest\";}}}s:21:\"EndpointConfiguration\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"alias\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"authPreemptive\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"authType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"BatchResult\";O:8:\"stdClass\":2:{s:8:\"required\";a:6:{i:0;s:9:\"batchSize\";i:1;s:9:\"batchUuid\";i:2;s:16:\"goldenTicketUuid\";i:3;s:12:\"numCompleted\";i:4;s:6:\"orgKey\";i:5;s:14:\"scriptRunnerId\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"batchSize\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:40:\"Batch
  size allotted by the Golden Ticket\";}s:9:\"batchUuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"Unique
  key identifying the batch\";}s:16:\"goldenTicketUuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"UUID
  for the Golden Ticket instance\";}s:12:\"numCompleted\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:31:\"Actual
  number of jobs processed\";}s:6:\"orgKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"Unique
  key identifying the org\";}s:14:\"scriptRunnerId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:42:\"Identifier
  of the script executor instance\";}}}s:17:\"LogCounterRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:23:\"loggedRequestsRemaining\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:13:\"TicketRequest\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:9:\"batchSize\";i:1;s:10:\"numTickets\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"batchSize\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:93:\"Max
  batch size of requests that will be processed before each ticket is returned to
  the queue\";}s:10:\"numTickets\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:27:\"Number
  of tickets requested\";}}}}"
...
