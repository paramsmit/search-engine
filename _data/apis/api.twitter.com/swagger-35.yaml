---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:7:\"version\";s:3:\"1.1\";s:5:\"title\";s:16:\"Twitter
  REST API\";}"
host: api.twitter.com
basePath: /1.1
paths:
  /statuses/mentions_timeline:
    get:
      description: Returns the 20 most recent mentions for the authenticating user
      parameters:
      - name: count
        in: query
        description: Specifies the number of tweets to try and retrieve
        required: false
        type: string
      - name: since_id
        in: query
        description: Returns result with an ID greater than the specified ID
        required: false
        type: string
      - name: max_id
        in: query
        description: Returns results with an ID less than or equal to the specified
          ID
        required: false
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      - name: contributor_details
        in: query
        description: This parameter enhances the contributors element of the status
          response
        required: false
        type: string
      - name: include_entities
        in: query
        description: The entities node will be disincluded when set to false
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /statuses/user_timeline:
    get:
      description: Returns a collection of the most recent Tweets posted by the User
      parameters:
      - name: count
        in: query
        description: Specifies the number of tweets to try and retrieve
        required: false
        type: string
      - name: since_id
        in: query
        description: Returns result with an ID greater than the specified ID
        required: false
        type: string
      - name: max_id
        in: query
        description: Returns results with an ID less than or equal to the specified
          ID
        required: false
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      - name: exclude_replies
        in: query
        description: This paramters will prevent from appearing in the returned timeline
        required: false
        type: boolean
      - name: contributor_details
        in: query
        description: This paramters enhances the contributors element of the status
          response to include the screen_name of the contributor
        required: false
        type: boolean
      - name: include_rts
        in: query
        description: When set to false, the timeline will strip any native retweet
        required: false
        type: boolean
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /statuses/home_timeline:
    get:
      description: Returns a collection of the most recent Tweets
      parameters:
      - name: since_id
        in: query
        description: Returns result with an ID greater than the specified ID
        required: false
        type: string
      - name: max_id
        in: query
        description: Returns results with an ID less than or equal to the specified
          ID
        required: false
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      - name: exclude_replies
        in: query
        description: This paramters will prevent from appearing in the returned timeline
        required: false
        type: boolean
      - name: contributor_details
        in: query
        description: This paramters enhances the contributors element of the status
          response to include the screen_name of the contributor
        required: false
        type: boolean
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /statuses/retweets/{id}:
    get:
      description: Retruns a collection of the 100 most recent retweets of the tweet
        specified by the id
      parameters:
      - name: id
        in: path
        description: The numerical ID of the desired status
        required: true
        type: string
      - name: count
        in: query
        description: Specifies the number of tweets to try and retrieve
        required: false
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
    post:
      description: Retweens a tweet
      parameters:
      - name: id
        in: path
        description: The numerical ID of the desired status
        required: true
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /statuses/show/{id}:
    get:
      description: Retruns a single Tweet
      parameters:
      - name: id
        in: path
        description: The numerical ID of the desired status
        required: true
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      - name: include_my_retweet
        in: query
        description: When set to either true, t or 1, any Tweets returned that have
          been retweeted by the authenticating
        required: true
        type: string
      - name: include_entities
        in: query
        description: The entities node will be disincluded when set to false
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /statuses/destroy/{id}:
    post:
      description: Destroys the status specified by the required ID parameter
      parameters:
      - name: id
        in: path
        description: The numerical ID of the desired status
        required: true
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /statuses/update:
    post:
      description: Updates the authenticating user's status
      parameters:
      - name: status
        in: query
        description: The text of your status update
        required: true
        type: string
      - name: in_reply_to_status_id
        in: query
        description: The ID of an existing status
        required: false
        type: string
      - name: lat
        in: query
        description: The latitude of the location
        required: false
        type: string
      - name: long
        in: query
        description: The longitude of the location
        required: false
        type: string
      - name: place_id
        in: query
        description: A place in the world
        required: false
        type: string
      - name: display_coordinates
        in: query
        description: Whether or not to put a pin on the exact coordinates a tweet
        required: false
        type: string
      - name: trim_user
        in: query
        description: When set to either true, t or 1, each tweet returned in a timeline
          will include a user object
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
        403:
          description: Error
      security:
      - oauth:
        - basic
  /statuses/oembed:
    get:
      description: Returns information allowing the creation of an embedded representation
      parameters:
      - name: id
        in: query
        description: The tweet/status id to return embed code for
        required: true
        type: string
      - name: url
        in: query
        description: The encoded URL of the Tweet status to be embedded
        required: true
        type: string
      - name: maxwidth
        in: query
        description: The maximum width in pixels that the embed should be rendered
          at
        required: false
        type: string
      - name: hide_media
        in: query
        description: Specifies whether the embedded tweet should automatically show
          the original message in the case that the embedded Tweet is a reply
        required: false
        type: string
      - name: hide_thread
        in: query
        description: Specifies whether the embedded Tweet html should include a 'script'
          element pointing to widgets.js
        required: false
        type: string
      - name: align
        in: query
        description: Specifies whether the embedded Tweet should be left aligned
        required: false
        type: string
      - name: related
        in: query
        description: A value for the TWT related parameters
        required: false
        type: string
      - name: lang
        in: query
        description: Languages code for the rendered embed
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /lists/list:
    get:
      description: Return all lists the authenticating or specified user subscribes
        to, including their own.
      parameters:
      - name: screen_name
        in: query
        description: The screen name of the user for whom to return results for
        required: true
        type: string
      - name: user_id
        in: query
        description: The ID of the user for whom to return results for
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Lists'
      security:
      - oauth:
        - basic
  /lists/statuses:
    get:
      description: Returns a timeline of tweets authored by memebers of the specified
        list
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list by its slug instead of its numerical
          id
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      - name: since_id
        in: query
        description: Returns results with an ID greater than the sepcified ID
        required: false
        type: string
      - name: max_id
        in: query
        description: Returns results with an ID less than or equal to the specified
          ID
        required: false
        type: string
      - name: count
        in: query
        description: Specifies the number of results to retrieve per page
        required: false
        type: string
      - name: include_entities
        in: query
        description: Entities are ON by default
        required: false
        type: string
      - name: include_rts
        in: query
        description: When set to either true, t or 1, the list timeline will contain
          native retweets in addition to the standard stream of tweets
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /lists/members/destroy:
    get:
      description: Returns the list of memebers destroy
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list by its slug instrad of its numerical
          id
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: user_id
        in: query
        description: The id of the user for whom to remove from the list
        required: false
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to remove from the list
        required: false
        type: string
      - name: owner_id
        in: query
        description: The is of the user who wons the list being requested by a slug
        required: false
        type: string
      responses:
        200:
          description: Success
      security:
      - oauth:
        - basic
  /lists/memberships:
    get:
      description: Returns the lists of the specified user has been added to
      parameters:
      - name: user_id
        in: query
        description: The id of the user for whom to return results for
        required: false
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to return results for
        required: false
        type: string
      - name: cursor
        in: query
        description: Breaks the results into pages
        required: false
        type: string
      - name: filter_to_owned_lists
        in: query
        description: When set to true, t or 1, will return just lists the authenticating
          user owns
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
      security:
      - oauth:
        - basic
  /lists/subscribers:
    get:
      description: Returns the subscribers of the specified list
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list by its slug insted of its numerical id
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: the screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      - name: cursor
        in: query
        description: Breaks the results into pages
        required: false
        type: string
      - name: include_entities
        in: query
        description: Wehn set to either true, t or 1
        required: false
        type: string
      - name: skip_status
        in: query
        description: When set to either true, t or 1
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
      security:
      - oauth:
        - basic
  /lists/subscribers/create:
    post:
      description: Subscribes the authenticated user to the specified list
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: the screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Lists'
      security:
      - oauth:
        - basic
  /lists/subscribers/show:
    get:
      description: Check if the specified user is a subscriber of the specified list
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: user_id
        in: query
        description: The id of the user for whom to remove from the list
        required: false
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to remove from the list
        required: false
        type: string
      - name: owner_id
        in: query
        description: The is of the user who wons the list being requested by a slug
        required: false
        type: string
      - name: include_entities
        in: query
        description: Wehn set to either true, t or 1
        required: false
        type: string
      - name: skip_status
        in: query
        description: When set to either true, t or 1
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /lists/subscribers/destroy:
    get:
      description: Returns list of subscribers destroy
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: the screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      responses:
        200:
          description: Success
  /lists/members/create_all:
    get:
      description: Returns lists of members create_all
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: the screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      - name: user_id
        in: query
        description: The id of the user for whom to remove from the list
        required: false
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to remove from the list
        required: false
        type: string
      responses:
        200:
          description: Success
      security:
      - oauth:
        - basic
  /list/members/show:
    get:
      description: Check if the specified user is a member of the specified list
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: user_id
        in: query
        description: The id of the user for whom to remove from the list
        required: false
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to remove from the list
        required: false
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      - name: include_entities
        in: query
        description: Wehn set to either true, t or 1
        required: false
        type: string
      - name: skip_status
        in: query
        description: When set to either true, t or 1
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /list/members:
    get:
      description: Returns the members of the specified list
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      - name: include_entities
        in: query
        description: Wehn set to either true, t or 1
        required: false
        type: string
      - name: skip_status
        in: query
        description: When set to either true, t or 1
        required: false
        type: string
      - name: cursor
        in: query
        description: Breaks the results into pages
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /list/members/create:
    post:
      description: Returns list of members create
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to remove from the list
        required: false
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      responses:
        200:
          description: Success
      security:
      - oauth:
        - basic
  /lists/destroy:
    post:
      description: Returns list of destroy
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Lists'
      security:
      - oauth:
        - basic
  /lists/update:
    post:
      description: Returns lists of updates
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      - name: name
        in: query
        description: The name for the list
        required: false
        type: string
      - name: mode
        in: query
        description: Whether your list is public or private
        required: false
        type: string
      - name: description
        in: query
        description: The description to give the list
        required: false
        type: string
      responses:
        200:
          description: Success
      security:
      - oauth:
        - basic
  /lists/create:
    post:
      description: Returns list of create
      parameters:
      - name: name
        in: query
        description: The name for the list
        required: false
        type: string
      - name: mode
        in: query
        description: Whether your list is public or private
        required: false
        type: string
      - name: description
        in: query
        description: The description to give the list
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Lists'
      security:
      - oauth:
        - basic
  /lists/show:
    get:
      description: Returns list of show
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Lists'
      security:
      - oauth:
        - basic
  /lists/subscriptions:
    get:
      description: Returns list of subscriptions
      parameters:
      - name: screen_name
        in: query
        description: The screen name of the user
        required: false
        type: string
      - name: user_id
        in: query
        description: The id of the user for whom to return results for
        required: false
        type: string
      - name: count
        in: query
        description: The amount of results to return per page
        required: false
        type: string
      - name: cursor
        in: query
        description: Breaks the results into pages
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
      security:
      - oauth:
        - basic
  /list/members/destroy_all:
    get:
      description: Returns lists of destroy all
      parameters:
      - name: list_id
        in: query
        description: The numerical id of the list
        required: true
        type: string
      - name: slug
        in: query
        description: You can identify a list being requested by a slug
        required: true
        type: string
      - name: user_id
        in: query
        description: The id of the user for whom to remove from the list
        required: false
        type: string
      - name: screen_name
        in: query
        description: The screen name of the user for whom to remove from the list
        required: false
        type: string
      - name: owner_screen_name
        in: query
        description: The screen name of the user who owns the list being requested
          by a slug
        required: false
        type: string
      - name: owner_id
        in: query
        description: The user ID of the user who owns the list being requested by
          a slug
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Cursor_lists'
      security:
      - oauth:
        - basic
  /direct_messages/sent:
    get:
      description: return 20 most recent direct messages sent
      parameters:
      - name: since_id
        in: query
        required: false
        type: string
      - name: max_id
        in: query
        required: false
        type: string
      - name: count
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: string
      - name: include_entities
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Messages'
  /direct_messages/show:
    get:
      description: returns a single direct message specified by an id
      parameters:
      - name: id
        in: query
        description: ID of direct message
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Messages'
      security:
      - oauth:
        - basic
  /search/tweets:
    get:
      description: returns collection of relevant Tweets matching query
      parameters:
      - name: q
        in: query
        description: URL-encoded search query of 500 characters max
        required: true
        type: string
      - name: geocode
        in: query
        description: returns tweets by users located within given radius
        required: false
        type: string
      - name: lang
        in: query
        description: restricts tweets to a given language
        required: false
        type: string
      - name: locale
        in: query
        description: language of query you are sending
        required: false
        type: string
      - name: result_type
        in: query
        description: specifies type of search results you prefer
        required: false
        type: string
      - name: count
        in: query
        description: number of tweets to return
        required: false
        type: string
      - name: until
        in: query
        description: returns tweets created before given date
        required: false
        type: string
      - name: since_id
        in: query
        description: return results with ID greater than specified
        required: false
        type: string
      - name: max_id
        in: query
        description: returns results with an ID less than/equal to specified ID
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: callback
        in: query
        description: response will use the callback with given name
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Tweets'
      security:
      - oauth:
        - basic
  /saved_searches/list:
    get:
      description: Returns the authenticated user's saved search queries
      parameters: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Query'
      security:
      - oauth:
        - basic
  /saved_searches/show/{id}:
    get:
      description: Retrieve the information for the saved search represented by the
        given id
      parameters:
      - name: id
        in: path
        description: The id of the saved search
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Query'
      security:
      - oauth:
        - basic
  /saved_searches/create:
    post:
      description: Create a new saved search for the authenticated user
      parameters:
      - name: query
        in: query
        description: The query of the search the user would like to save
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Query'
      security:
      - oauth:
        - basic
  /saved_searches/destroy/{id}:
    post:
      description: Destroy a saved search for the authenticating user
      parameters:
      - name: id
        in: path
        description: The id of the saved search
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Query'
      security:
      - oauth:
        - basic
  /direct_messages:
    get:
      description: return 20 most recent direct messages sent to user
      parameters:
      - name: since_id
        in: query
        description: return results with ID greater than specified
        required: false
        type: string
      - name: max_id
        in: query
        description: returns results with an ID less than/equal to specified ID
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to include status
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Messages'
      security:
      - oauth:
        - basic
  /direct_messages/destroy:
    post:
      description: destroys direct messages specified in required ID
      parameters:
      - name: id
        in: query
        description: ID of direct message to delete
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Messages'
      security:
      - oauth:
        - basic
  /direct_messages/new:
    post:
      description: sends a new direct message to specified user
      parameters:
      - name: user_id
        in: query
        description: description
        required: true
        type: string
      - name: screen_name
        in: query
        description: screen name of user receiving message
        required: false
        type: string
      - name: text
        in: query
        description: text of your direct message
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Messages'
      security:
      - oauth:
        - basic
  /friends/ids:
    get:
      description: returns a cursored collection of user IDs followed by user
      parameters:
      - name: user_id
        in: query
        description: ID of user for whom to return results for
        required: false
        type: string
      - name: screen_name
        in: query
        description: screen name of user for whom to return results for
        required: false
        type: string
      - name: cursor
        in: query
        description: causes list of connections to be broken in pages
        required: false
        type: string
      - name: stringify_ids
        in: query
        description: IDs converted to strings
        required: false
        type: string
      - name: count
        in: query
        description: number of IDs to attempt retrieval of
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
      security:
      - oauth:
        - basic
  /followers/ids:
    get:
      description: returns a cursored collection of user IDs following the user
      parameters:
      - name: user_id
        in: query
        description: ID of user for whom to return results for
        required: false
        type: string
      - name: screen_name
        in: query
        description: screen name of user for whom to return results for
        required: false
        type: string
      - name: cursor
        in: query
        description: causes list of connections to be broken in pages
        required: false
        type: string
      - name: stringify_ids
        in: query
        description: IDs converted to strings
        required: false
        type: string
      - name: count
        in: query
        description: number of IDs to attempt retrieval of
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
      security:
      - oauth:
        - basic
  /friendships/incoming:
    get:
      description: returns collection of IDs of users with pending follow request
      parameters:
      - name: cursor
        in: query
        description: causes list of connections to be broken in pages
        required: false
        type: string
      - name: stringify_ids
        in: query
        description: IDs converted to strings
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
      security:
      - oauth:
        - basic
  /friendships/outgoing:
    get:
      description: returns collection of IDs of users with pending follow request
        from the user
      parameters:
      - name: cursor
        in: query
        description: causes list of connections to be broken in pages
        required: false
        type: string
      - name: stringify_ids
        in: query
        description: IDs converted to strings
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cursor_ids'
      security:
      - oauth:
        - basic
  /friendships/create:
    post:
      description: allows users to follow user sepcified by ID
      parameters:
      - name: screen_name
        in: query
        description: screen name of user for whom to befriend
        required: false
        type: string
      - name: user_id
        in: query
        description: ID of user for whom to befriend
        required: false
        type: string
      - name: follow
        in: query
        description: enable notifications for target user
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /friendships/destroy:
    post:
      description: allows user to unfollow user psecified by ID
      parameters:
      - name: screen_name
        in: query
        description: screen name of user for whom to befriend
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user for whom to befriend
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /friendships/update:
    post:
      description: Allows one to enable or disable settings for specified user
      parameters:
      - name: screen_name
        in: query
        description: screen name of user for whom to befriend
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user for whom to befriend
        required: true
        type: string
      - name: device
        in: query
        description: enable/disable device notifications for user
        required: true
        type: string
      - name: retweets
        in: query
        description: enable/disable retweets from target user
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Friendship'
      security:
      - oauth:
        - basic
  /friendships/show:
    get:
      description: returns detailed info about relationship between two users
      parameters:
      - name: source_id
        in: query
        description: user id of subject user
        required: false
        type: string
      - name: source_screen_name
        in: query
        description: screen_name of subject user
        required: false
        type: string
      - name: target_id
        in: query
        description: user id of target user
        required: true
        type: string
      - name: target_screen_name
        in: query
        description: screen name of target user
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Friendship'
      security:
      - oauth:
        - basic
  /account/settings:
    get:
      summary: returns settings for user
      description: returns settings for user
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
    post:
      summary: updates user's settings
      description: updates user's settings
      parameters:
      - name: trend_location_woeid
        in: query
        description: the Yahoo! Where On Earth ID to user as defaul tend location
        required: false
        type: string
      - name: sleep_time_enabled
        in: query
        description: enables/disables sleep time, silencing notifications
        required: false
        type: string
      - name: start_sleep_time
        in: query
        description: the hour that sleep time should begin if enabled
        required: false
        type: string
      - name: end_sleep_time
        in: query
        description: the hour that sleep time should end if enabled
        required: false
        type: string
      - name: time_zone
        in: query
        description: timezone dates and times should be displayed in
        required: false
        type: string
      - name: lang
        in: query
        description: language which Twitter should render in for the user
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
  /account/update_delivery_device:
    post:
      summary: sets which device Twitter delivers updates to for user
      description: sets which device Twitter delivers updates to for user
      parameters:
      - name: device
        in: query
        description: must be one of sms, none
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
  /account/update_profile:
    post:
      summary: sets values that users ar eable to set under Account tab
      description: sets values that users ar eable to set under Account tab
      parameters:
      - name: name
        in: query
        description: full name of profile
        required: false
        type: string
      - name: url
        in: query
        description: url associated with profile
        required: false
        type: string
      - name: location
        in: query
        description: city or country describing where user of account is.
        required: false
        type: string
      - name: description
        in: query
        description: a description of user owning account
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to include statuses in response
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
  /account/update_profile_background_image:
    post:
      summary: updates user's profile background image
      description: updates user's profile background image
      consumes:
      - multipart/form-data
      parameters:
      - name: tile
        in: query
        description: whether or not to tile background image
        required: false
        type: string
      - name: use
        in: query
        description: display background image or not
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to include status in returned user objects
        required: false
        type: string
      - name: file
        in: formData
        description: image to replace background image of profile
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
  /account/update_profile_colors:
    post:
      summary: sets one or more hex values that controls color scheme
      description: sets one or more hex values that controls color scheme
      parameters:
      - name: profile_background_color
        in: query
        description: profile background color
        required: false
        type: string
      - name: profile_link_color
        in: query
        description: profile link color
        required: false
        type: string
      - name: profile_sidebar_border_color
        in: query
        description: profile sidebar's border color
        required: false
        type: string
      - name: profile_sidebar_fill_color
        in: query
        description: profile's sidebar background color
        required: false
        type: string
      - name: profile_text_color
        in: query
        description: profile text color
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to include statuses
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
  /account/update_profile_image:
    post:
      summary: updates user's profile image
      description: updates user's profile image
      consumes:
      - multipart/form-data
      parameters:
      - name: skip_status
        in: query
        description: whether or not to include statuses
        required: false
        type: string
      - name: image
        in: formData
        description: image to be set as profile image
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Settings'
      security:
      - oauth:
        - basic
  /blocks/list:
    get:
      summary: disallows retweets and device notifications from a user
      description: disallows retweets and device notifications from a user
      parameters:
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to include statuses in response
        required: false
        type: string
      - name: cursor
        in: query
        description: breaks block of user to be broken up into pages
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cursor_users'
      security:
      - oauth:
        - basic
  /blocks/ids:
    get:
      summary: returns array of numeric user ids of blocked users
      description: returns array of numeric user ids of blocked users
      parameters:
      - name: stringify_ids
        in: query
        description: returns array of numeric IDs as string IDs
        required: false
        type: string
      - name: cursor
        in: query
        description: breaks up block of user IDs into pages
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cursor_users'
      security:
      - oauth:
        - basic
  /blocks/create:
    post:
      summary: blocks the specified user
      description: blocks the specified user
      parameters:
      - name: screen_name
        in: query
        description: screen name of user to be blocked
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user to be blocked
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to skip statuses
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /blocks/destroy:
    post:
      summary: un-blocks the specified user
      description: un-blocks the specified user
      parameters:
      - name: screen_name
        in: query
        description: screen name of user to be un-blocked
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user to be un-blocked
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to skip statuses
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /users/lookup:
    get:
      summary: returns fully-hydrated user objects up to 100
      description: returns fully-hydrated user objects up to 100
      parameters:
      - name: screen_name
        in: query
        description: screen name of user to lookup
        required: false
        type: string
      - name: user_id
        in: query
        description: ID of user to lookup
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /users/show:
    get:
      summary: returns a variety of info about specified user
      description: returns a variety of info about specified user
      parameters:
      - name: screen_name
        in: query
        description: screen name of user to be shown
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user to be shown
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /users/search:
    get:
      summary: simple relevance-based user search
      description: simple relevance-based user search
      parameters:
      - name: q
        in: query
        description: the search query to run against people search
        required: true
        type: string
      - name: page
        in: query
        description: specifies the page of results to receive
        required: false
        type: string
      - name: count
        in: query
        description: number of people to return per page
        required: false
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /users/contributees:
    get:
      summary: collection of users specified user can contribute to
      description: collection of users specified user can contribute to
      parameters:
      - name: screen_name
        in: query
        description: screen name of user that is contributed to
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user to that is contributed to
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to skip statuses
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /users/contributors:
    get:
      summary: collection of users that can contribute to specified account
      description: collection of users that can contribute to specified account
      parameters:
      - name: screen_name
        in: query
        description: screen name of user contributing
        required: true
        type: string
      - name: user_id
        in: query
        description: ID of user contributing
        required: true
        type: string
      - name: include_entities
        in: query
        description: whether or not to include entities
        required: false
        type: string
      - name: skip_status
        in: query
        description: whether or not to skip statuses
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /geo/id/{place_id}:
    get:
      description: Returns all the information about a know place
      parameters:
      - name: place_id
        in: path
        description: A place in the world
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
      security:
      - oauth:
        - basic
  /geo/reverse_geoncode:
    get:
      description: Given a latitude and a longitude, searches for up to 20 places
        that can be used as a place_id when updatting a status
      parameters:
      - name: lat
        in: query
        description: The latitude to search around
        required: true
        type: string
      - name: long
        in: query
        description: The longtitude to search around
        required: true
        type: string
      - name: accuracy
        in: query
        description: A hint on region in which to search
        required: false
        type: string
      - name: granularity
        in: query
        description: This is the minimal granularity of place types to return
        required: false
        type: string
      - name: max_results
        in: query
        description: A hint as to the number of results to return
        required: false
        type: string
      - name: callback
        in: query
        description: If supplied, the responses will use the JSON format with a callback
          of the given name
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
      security:
      - oauth:
        - basic
  /geo/search:
    get:
      description: Search for places that can be attached to a statuses/updates
      parameters:
      - name: lat
        in: query
        description: The latitude to search around
        required: true
        type: string
      - name: long
        in: query
        description: The longtitude to search around
        required: true
        type: string
      - name: query
        in: query
        description: Free-form text to match against while executing a geo-based query
        required: true
        type: string
      - name: ip
        in: query
        description: An Ip address
        required: true
        type: string
      - name: accuracy
        in: query
        description: A hint on region in which to search
        required: false
        type: string
      - name: granularity
        in: query
        description: This is the minimal granularity of place types to return
        required: false
        type: string
      - name: contained_within
        in: query
        description: This is the place_id which you would like to restrict the search
          results to
        required: false
        type: string
      - name: attribute:street_address
        in: query
        description: This parameter searches for places which have this givven street
          address
        required: false
        type: string
      - name: callback
        in: query
        description: If supplied, the responses will use the JSON format with a callback
          of the given name
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
      security:
      - oauth:
        - basic
  /geo/similar_places:
    get:
      description: Locates places near the given coordinates which are similar in
        name
      parameters:
      - name: lat
        in: query
        description: The latitude to search around
        required: true
        type: string
      - name: long
        in: query
        description: The longtitude to search around
        required: true
        type: string
      - name: name
        in: query
        description: The name a place is known as
        required: true
        type: string
      - name: contained_within
        in: query
        description: This is the place_id which you would like to restrict the search
          results to
        required: false
        type: string
      - name: attribute:street_address
        in: query
        description: This parameter searches for places which have this givven street
          address
        required: false
        type: string
      - name: callback
        in: query
        description: If supplied, the responses will use the JSON format with a callback
          of the given name
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Places'
      security:
      - oauth:
        - basic
  /geo/places:
    get:
      description: Create a new place object at the given latitude and logitude
      parameters:
      - name: lat
        in: query
        description: The latitude to search around
        required: true
        type: string
      - name: long
        in: query
        description: The longtitude to search around
        required: true
        type: string
      - name: name
        in: query
        description: The name a place is known as
        required: true
        type: string
      - name: token
        in: query
        description: The token found in the response from geo/similar_places
        required: true
        type: string
      - name: contained_within
        in: query
        description: This is the place_id which you would like to restrict the search
          results to
        required: false
        type: string
      - name: attribute:street_address
        in: query
        description: This parameter searches for places which have this givven street
          address
        required: false
        type: string
      - name: callback
        in: query
        description: If supplied, the responses will use the JSON format with a callback
          of the given name
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Places'
      security:
      - oauth:
        - basic
  /trends/place:
    get:
      description: Returns the top 10 trending topics for a specific WOEID
      parameters:
      - name: id
        in: query
        description: The yahoo where on earch id
        required: true
        type: string
      - name: exclude
        in: query
        description: Setting this equal to hashtages will remove all hashtages from
          the trends list
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TrendInfo'
      security:
      - oauth:
        - basic
  /trends/available:
    get:
      description: Returns the availability
      parameters: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
      security:
      - oauth:
        - basic
  /trends/closest:
    get:
      description: Returns the location that Twitter has trending topic information
        for
      parameters:
      - name: lat
        in: query
        description: If provided with a long parameter the available trend locations
          wil be stored by distance
        required: true
        type: string
      - name: long
        in: query
        description: If provided with a lat parameters the available trend locations
          will be sorted by distance
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
      security:
      - oauth:
        - basic
  /users/report_spam:
    post:
      description: Returna users report spam
      parameters:
      - name: screen_name
        in: query
        description: The ID or screen_name of the user you want to report as a spammer
        required: false
        type: string
      - name: user_id
        in: query
        description: The ID of the user you want to report as a spammer
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Users'
      security:
      - oauth:
        - basic
  /help/configuration:
    get:
      description: Returns the current configuration used by Twitter including twitter.com
        slugs which are not usernames
      parameters: []
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Help_Config'
      security:
      - oauth:
        - basic
  /help/languages:
    get:
      description: Returns the list of languages supported by Twitter along with the
        language code supported by Twitter
      parameters: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Help_Language'
      security:
      - oauth:
        - basic
  /help/privacy:
    get:
      description: Returns Twitter's privacy policy
      parameters: []
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Help_Privacy'
      security:
      - oauth:
        - basic
  /help/tos:
    get:
      description: Returns the Twitter Terms of Service
      parameters: []
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Help_Tos'
      security:
      - oauth:
        - basic
  /application/rate_limit_status:
    get:
      description: Returns the current rate limits for methods belonging to the specified
        resource families
      parameters:
      - name: resources
        in: query
        description: A comma-separated list of resource families you want to know
          the current rate limit disposition for
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: Success
      security:
      - oauth:
        - basic
produces:
- application/json
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":33:{s:6:\"Tweets\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":32:{s:12:\"contributors\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Contributors\";}}s:11:\"coordinates\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Coordinates\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"current_user_retweet\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Tweets\";}s:8:\"entities\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Entities\";}s:14:\"favorite_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"favorited\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"filter_level\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"in_reply_to_screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"in_reply_to_status_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:25:\"in_reply_to_status_id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"in_reply_to_user_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:23:\"in_reply_to_user_id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"lang\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Places\";}s:18:\"possibly_sensitive\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"quoted_status_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:20:\"quoted_status_id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"quoted_status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Tweets\";}s:6:\"scopes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:13:\"retweet_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"retweeted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"retweeted_status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Tweets\";}s:6:\"source\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"truncated\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Users\";}s:18:\"withheld_copyright\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:18:\"withheld_countries\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:14:\"withheld_scope\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Contributors\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"Coordinates\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"coordinates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Users\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":43:{s:20:\"contributors_enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"default_profile\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:21:\"default_profile_image\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"entities\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Entities\";}s:15:\"favorites_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:19:\"follow_request_sent\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"following\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:15:\"followers_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:13:\"friends_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"geo_enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"is_translator\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"lang\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"listed_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"notifications\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:24:\"profile_background_color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:28:\"profile_background_image_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:34:\"profile_background_image_url_https\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"profile_background_tile\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"profile_banner_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"profile_image_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"profile_image_url_https\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"profile_link_color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:28:\"profile_sidebar_border_color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"profile_sidebar_fill_color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"profile_text_color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:28:\"profile_use_background_image\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"protected\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"show_all_inline_media\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Tweets\";}s:14:\"statuses_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"time_zone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"utc_offset\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"verified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:21:\"withheld_in_countries\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"withheld_scope\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"hashtags\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Hashtags\";}}s:5:\"media\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Media\";}}s:4:\"urls\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/URL\";}}s:13:\"user_mentions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/User_Mention\";}}}}s:8:\"Hashtags\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"indices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Media\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:11:\"display_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"expanded_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"indices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:9:\"media_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"media_url_https\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"sizes\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Sizes\";}s:16:\"source_status_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:20:\"source_status_id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"Size\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:1:\"h\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"resize\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:1:\"w\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:5:\"Sizes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"thumb\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Size\";}s:5:\"large\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Size\";}s:6:\"medium\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Size\";}s:5:\"small\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Size\";}}}s:3:\"URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"display_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"expanded_url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"indices\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"User_Mention\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"indices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Places\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:10:\"attributes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:12:\"bounding_box\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Bounding_box\";}s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"country_code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"full_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"place_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Bounding_box\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"coordinates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Lists\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"following\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Users\";}s:12:\"member_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"subscriber_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:3:\"uri\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Cursor_lists\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:15:\"previous_cursor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"lists\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Lists\";}}s:19:\"previous_cursor_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"next_cursor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:15:\"next_cursor_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Cursor_users\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:15:\"previous_cursor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Users\";}}s:19:\"previous_cursor_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"next_cursor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:15:\"next_cursor_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"Cursor_ids\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:15:\"previous_cursor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:19:\"previous_cursor_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"next_cursor\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:15:\"next_cursor_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Messages\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"entities\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Entities\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"id_string\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"recipient\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Users\";}s:12:\"recipient_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:21:\"recipient_screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"sender\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Users\";}s:9:\"sender_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:18:\"sender_screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Query\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"position\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"query\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"Friendship\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"relationship\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Targets\";}s:6:\"source\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Source\";}}}s:7:\"Targets\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"target\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Target\";}}}s:6:\"Target\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"followed_by\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"following\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:6:\"Source\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:6:\"can_dm\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"blocking\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"id_str\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"all_replies\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"want_retweets\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"marked_spam\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"followed_by\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:20:\"notifications_enable\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"following\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:8:\"Settings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:10:\"sleep_time\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Sleep\";}s:26:\"use_cookie_personalization\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"trend_location\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}}s:8:\"language\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"discoverable_by_email\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"always_use_https\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"protected\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"geo_enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:21:\"show_all_inline_media\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"screen_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Sleep\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"end_time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"start_time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Location\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"placeType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/PlaceType\";}s:5:\"woeid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"countryCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"parentid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:9:\"PlaceType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:9:\"TrendInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"as_of\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"locations\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Location\";}}s:6:\"trends\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Trends\";}}}}s:6:\"Trends\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:6:\"events\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"promoted_content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"query\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"Help_Config\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:23:\"dm_text_character_limit\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:29:\"characters_reserved_per_media\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:20:\"max_media_per_upload\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:18:\"non_username_paths\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:16:\"photo_size_limit\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"photo_sizes\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Sizes\";}}}s:13:\"Help_Language\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Help_Privacy\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"privacy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Help_Tos\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"Tos\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
