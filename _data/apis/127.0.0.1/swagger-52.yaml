---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:13:\"StarredUp API\";s:7:\"version\";s:3:\"1.0\";}"
host: 127.0.0.1:8000
paths:
  /Clients: []
  /members: []
  /products: []
  /reviews: []
  /swagger:
    get:
      responses:
        200:
          description: Success
  /clients/{clientId}:
    get:
      tags:
      - clients
      summary: Get a single client by ID
      description: Return JSON object of a single client
      operationId: getClient
      produces:
      - application/json
      parameters:
      - name: clientId
        in: path
        description: Client ID of the desired client
        required: true
        type: integer
      responses:
        200:
          description: Success => [client => {client}]
        404:
          description: 'No client found for ID: {clientId}'
  /clients/add:
    post:
      tags:
      - clients
      summary: Save or Update a single client with a payload
      description: Return JSON with the effected client ID
      operationId: addClient
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Update a client by adding the clientId to the payload
        schema:
          $ref: '#/definitions/Client'
      responses:
        200:
          description: Success => [clientId => {clientId}]
        404:
          description: No client found for id {clientId}
  /clients/{clientId}/remove:
    post:
      tags:
      - clients
      summary: Deactivate a client
      description: Return JSON object of the effected client and isActive status
      operationId: removeClient
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: clientId
        in: path
        description: The client ID of the client to be deactivated
        required: true
        type: integer
      responses:
        200:
          description: Success => [clientId => {clientId}, isActive => {isActive}]
        404:
          description: 'No client found for ID: {clientId}'
        409:
          description: Client has already been removed
  /members/{memberId}:
    get:
      tags:
      - members
      summary: Get a single member by ID
      description: Return JSON object of a single member
      operationId: getMember
      produces:
      - application/json
      parameters:
      - name: memberId
        in: path
        description: Member ID of the desired member
        required: true
        type: integer
      responses:
        200:
          description: Success => [member => {member}]
        404:
          description: 'No member found for ID: {memberId}'
  /members/add:
    post:
      tags:
      - members
      summary: Save or Update a single member with a payload
      description: Return JSON with the effected member ID
      operationId: addMember
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Update a member by adding the memberId to the payload
        schema:
          $ref: '#/definitions/Member'
      responses:
        200:
          description: Success => [memberId => {memberId}]
        404:
          description: No member found for id {memberId}
  /members/{memberId}/remove:
    post:
      tags:
      - members
      summary: Deactivate a member
      description: Return JSON object of the effected member and isActive status
      operationId: removeMember
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: memberId
        in: path
        description: The member ID of the member to be deactivated
        required: true
        type: integer
      responses:
        200:
          description: Success => [memberId => {memberId}, isActive => {isActive}]
        404:
          description: 'No member found for ID: {memberId}'
        409:
          description: Member has already been removed
  /products/{productId}:
    get:
      tags:
      - products
      summary: Get a single product by ID
      description: Return JSON object of a single product
      operationId: getProduct
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: Product ID of the desired product
        required: true
        type: integer
      responses:
        200:
          description: Success => [product => {product}]
        404:
          description: 'No product found for ID: {productId}'
  /products/add:
    post:
      tags:
      - products
      summary: Save or Update a single product with a payload
      description: Return JSON with the effected product ID
      operationId: addProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Update a product by adding the productId to the payload
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: Success => [productId => {productId}]
        404:
          description: No product found for id {productId}
  /products/{productId}/remove:
    post:
      tags:
      - products
      summary: Deactivate a product
      description: Return JSON object of the effected product and isActive status
      operationId: removeProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: The product ID of the product to be deactivated
        required: true
        type: integer
      responses:
        200:
          description: Success => [productId => {productId}, isActive => {isActive}]
        404:
          description: 'No product found for ID: {productId}'
        409:
          description: Product has already been removed
  /reviews/{reviewId}:
    get:
      tags:
      - reviews
      summary: Get a single review by ID
      description: Return JSON object of a single review
      operationId: getReview
      produces:
      - application/json
      parameters:
      - name: reviewId
        in: path
        description: Review ID of the desired review
        required: true
        type: integer
      responses:
        200:
          description: Success => [product => {product}]
        404:
          description: 'No product found for ID: {productId}'
  /reviews/add:
    post:
      tags:
      - reviews
      summary: Adds a new review
      description: Adds a new review
      operationId: addReview
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Updates a review based on this data
        schema:
          $ref: '#/definitions/Review'
      responses:
        200:
          description: Success => [review => {review}]
        404:
          description: 'No review found for ID: {reviewId}'
  /reviews/{reviewId}/remove:
    post:
      tags:
      - reviews
      summary: Deactivate a review
      description: Return JSON object of the effected review and isActive status
      operationId: removeReview
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewId
        in: path
        description: The ID of the review to be deactivated
        required: true
        type: integer
      responses:
        200:
          description: Success => [reviewId => {reviewId}, isActive => {isActive}]
        404:
          description: 'No review found for ID: {reviewId}'
        409:
          description: Review has already been removed
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":4:{s:6:\"Client\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:11:\"client_name\";i:1;s:18:\"client_member_name\";i:2;s:15:\"client_password\";}s:4:\"type\";s:6:\"object\";}s:6:\"Member\";O:8:\"stdClass\":2:{s:8:\"required\";a:6:{i:0;s:10:\"memberName\";i:1;s:9:\"firstName\";i:2;s:8:\"lastName\";i:3;s:5:\"email\";i:4;s:8:\"password\";i:5;s:3:\"dob\";}s:4:\"type\";s:6:\"object\";}s:7:\"Product\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:11:\"productName\";i:1;s:3:\"upc\";}s:10:\"properties\";O:8:\"stdClass\":11:{s:9:\"productId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:11:\"productName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"Amazon
  Echo\";}s:18:\"productDescription\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"null\";}s:13:\"productRating\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";s:7:\"example\";s:4:\"null\";}s:11:\"reviewCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";s:4:\"null\";}s:19:\"productManufacturer\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"Amazon\";}s:3:\"upc\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"848719071733\";}s:12:\"productImage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"null\";}s:15:\"productCategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"Mobile
  Devices\";}s:18:\"productSubcategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"Tablets\";}s:10:\"isFeatured\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";i:1;}}s:4:\"type\";s:6:\"object\";}s:6:\"Review\";O:8:\"stdClass\":3:{s:8:\"required\";a:5:{i:0;s:9:\"productId\";i:1;s:11:\"reviewTitle\";i:2;s:11:\"description\";i:3;s:6:\"rating\";i:4;s:3:\"upc\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:8:\"reviewId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:9:\"productId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:8:\"memberId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:16:\"originalMemberId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:11:\"reviewTitle\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"Very
  Good\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"Very
  Good\";}s:6:\"rating\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:7:\"example\";d:4.5;}s:18:\"originalMemberName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"sam123\";}s:10:\"isFeatured\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";i:1;}}s:4:\"type\";s:6:\"object\";}}"
...
