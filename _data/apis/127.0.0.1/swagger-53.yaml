---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:11:\"description\";s:36446:\"This is the
  specification for the Cardano Wallet API, automatically generated as a [Swagger](https://swagger.io/)
  spec from the [Servant](http://haskell-servant.readthedocs.io/en/stable/) API of
  [Cardano](https://github.com/input-output-hk/cardano-sl).\n\nSoftware Version   |
  Git Revision\n-------------------|-------------------\ncardano-sl:10 | 0d2289790d8c57aade1c7e31b643894ec229958e\n\n>
  **Warning**: This version is currently a **BETA-release** which is still under testing
  before\n> its final stable release. Should you encounter any issues or have any
  remarks, please let us\n> know; your feedback is highly appreciated.\n\n\nGetting
  Started\n===============\n\nIn the following examples, we will use *curl* to illustrate
  request to an API running on the default port **8090**.\n\nPlease note that wallet
  web API uses TLS for secure communication. Requests to the API need to\nsend a client
  CA certificate that was used when launching the node and identifies the client as\nbeing
  permitted to invoke the server API.\n\nCreating a New Wallet\n---------------------\n\nYou
  can create your first wallet using the [`POST /api/v1/wallets`](#tag/Wallets%2Fpaths%2F~1api~1v1~1wallets%2Fpost)
  endpoint as follow:\n\n```\ncurl -X POST https://localhost:8090/api/v1/wallets \\\n
  \ -H \"Accept: application/json; charset=utf-8\" \\\n  -H \"Content-Type: application/json;
  charset=utf-8\" \\\n  --cacert ./scripts/tls-files/ca.crt \\\n  -d '{\n  \"operation\":
  \"create\",\n  \"backupPhrase\": [\"squirrel\", \"material\", \"silly\", \"twice\",
  \"direct\", \"slush\", \"pistol\", \"razor\", \"become\", \"junk\", \"kingdom\",
  \"flee\"],\n  \"assuranceLevel\": \"normal\",\n  \"name\": \"MyFirstWallet\",\n
  \ \"spendingPassword\": \"5416b2988745725998907addf4613c9b0764f04959030e1b81c603b920a115d0\"\n}'\n```\n\n>
  **Warning**: Those 12 mnemonic words given for the backup phrase act as an example.
  **Do\n> not** use them on a production system. See the section below about mnemonic
  codes for more\n> information.\n\nThe `spendingPassword` is optional but highly
  recommended. It a string of 32\ncharacters, encoded in base 16, yielding to an hexadecimal
  sequence of 64 bytes.\nThis passphrase is required for sensitive operations on the
  wallet and adds\nan extra security layer to it.\n\nTo generate a valid `spendingPassword`,
  please follow the following steps:\n\n- Pick a long sentence using a wide variety
  of characters (uppercase, lowercase,\n  whitespace, punctuation, etc). Using a computer
  to randomly generate\n  a passphrase is best, as humans aren't a good source of
  randomness.\n\n- Compute an appropriate hash of this passphrase. You'll need to
  use an\n  algorithm that yields a 32-byte long string (e.g. *SHA256* or *BLAKE2b*).\n\n-
  Hex-encode the 32-byte hash into a 64-byte sequence of bytes.\n\nAs a response,
  the API provides you with a unique wallet `id` to be used in subsequent\nrequests.
  Make sure to store it / write it down. Note that every API response is\n[jsend-compliant](https://labs.omniti.com/labs/jsend);
  Cardano also augments responses with\nmeta-data specific to pagination. More details
  in the section below about [Pagination](#section/Pagination)\n\n```json\n{\n    \"status\":
  \"success\",\n    \"data\": {\n        \"createdAt\": \"2029-10-05T15:07:16.313354\",\n
  \       \"syncState\": {\n            \"tag\": \"synced\",\n            \"data\":
  null\n        },\n        \"balance\": 43665522219500065,\n        \"hasSpendingPassword\":
  false,\n        \"assuranceLevel\": \"strict\",\n        \"name\": \"My wallet\",\n
  \       \"id\": \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n
  \       \"spendingPasswordLastUpdate\": \"1999-05-26T17:51:24.639141\"\n    },\n
  \   \"meta\": {\n        \"pagination\": {\n            \"page\": 1,\n            \"perPage\":
  46,\n            \"totalPages\": 1,\n            \"totalEntries\": 2\n        }\n
  \   }\n}\n```\n\nYou have just created your first wallet. Information about this
  wallet can be retrieved using the [`GET /api/v1/wallets/{walletId}`](#tag/Wallets%2Fpaths%2F~1api~1v1~1wallets~1{walletId}%2Fget)\nendpoint
  as follows:\n\n```\ncurl -X GET https://localhost:8090/api/v1/wallets/{{walletId}}
  \\\n     -H \"Accept: application/json; charset=utf-8\" \\\n     --cacert ./scripts/tls-files/ca.crt\n```\n\nReceiving
  ADA\n-------------\n\nTo receive _ADA_ from other users you should provide your
  address. This address can be obtained\nfrom an account. Each wallet contains at
  least one account. An account is like a pocket inside\nof your wallet. Vew all existing
  accounts of a wallet by using the [`GET /api/v1/wallets/{{walletId}}/accounts`](#tag/Accounts%2Fpaths%2F~1api~1v1~1wallets~1{walletId}~1accounts%2Fget)\nendpoint:\n\n```\ncurl
  -X GET https://localhost:8090/api/v1/wallets/{{walletId}}/accounts?page=1&per_page=10
  \\\n  -H \"Accept: application/json; charset=utf-8\" \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\nSince
  you have, for now, only a single wallet, you'll see something like this:\n\n```json\n{\n
  \   \"status\": \"success\",\n    \"data\": [\n        {\n            \"amount\":
  29208924123228353,\n            \"addresses\": [\n                {\n                    \"used\":
  false,\n                    \"changeAddress\": false,\n                    \"id\":
  \"Un4ZpTvXtoKqKLYYxbXsQaf95Zm2SWynjzwt8beEQGQH9TJNdxdqeMVWEnrdfrHpjzqvZRH4RkfbbHmTGWMse2V2rG7X3bsHMUeT9bE6web8rxBD\"\n
  \               }\n            ],\n            \"name\": \"My account\",\n            \"walletId\":
  \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n
  \           \"index\": 1\n        },\n        {\n            \"amount\": 28089727180413548,\n
  \           \"addresses\": [\n                {\n                    \"used\": false,\n
  \                   \"changeAddress\": true,\n                    \"id\": \"eMNXLAmamdgVtScerkn5qQpADPmbkEL53PFLMuKHpfxuoSFXVgaSTKgVn4KWoiczUsy9Cj2BSzvdjYnhy7zM16Ra6qoVGEpGeVcpWhXAYC4iJVvXL12KiZ7FfGvFcm8bBN6p2BQ1Jaqw6NtL9nfTDhAcWiTzpPQEFGyrXkB7UaN4scyuNKpz53EZzuTM1JvAnoZJxgF2KPEym1YwKBq2AWNmDmEGxC1nhHSL7q26S8yk4GP9QrLHFf1iDs5x4QybBAATku9cuwix6y9ndQh38hzBkeuz\"\n
  \               },\n                {\n                    \"used\": true,\n                    \"changeAddress\":
  true,\n                    \"id\": \"Un4ZpTvXtoKsYS9eJXKLvz3WXnvbi1r3Fyj5RYe2VwbJLYyEstShsixtan4wzGeuHWXKh7vjoZrLsTUHtKMePaCe49ASyHTdLRyNeXAtnEcxNLGa\"\n
  \               }\n            ],\n            \"name\": \"My account\",\n            \"walletId\":
  \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n
  \           \"index\": 0\n        }\n    ],\n    \"meta\": {\n        \"pagination\":
  {\n            \"page\": 1,\n            \"perPage\": 46,\n            \"totalPages\":
  1,\n            \"totalEntries\": 2\n        }\n    }\n}\n```\n\nAll the wallet's
  accounts are listed under the `addresses` field. You can communicate one of\nthese
  addresses to receive _ADA_ on the associated account.\n\n\nSending ADA\n-----------\n\nIn
  order to send _ADA_ from one of your accounts to another address, you must create
  a new\npayment transaction using the [`POST /api/v1/transactions`](#tag/Transactions%2Fpaths%2F~1api~1v1~1transactions%2Fpost)\nendpoint
  as follows:\n\n```\ncurl -X POST https://localhost:8090/api/v1/transactions \\\n
  \ -H \"Accept: application/json; charset=utf-8\" \\\n  -H \"Content-Type: application/json;
  charset=utf-8\" \\\n  --cacert ./scripts/tls-files/ca.crt \\\n  -d '{\n  \"destinations\":
  [{\n    \"amount\": 14,\n    \"address\": \"A7k5bz1QR2...Tx561NNmfF\"\n  }],\n  \"source\":
  {\n    \"accountIndex\": 0,\n    \"walletId\": \"Ae2tdPwUPE...8V3AVTnqGZ\"\n  },\n
  \ \"spendingPassword\": \"5416b2988745725998907addf4613c9b0764f04959030e1b81c603b920a115d0\"\n}'\n```\n\nNote
  that, in order to perform a transaction, you need to have enough existing _ADA_
  on the\nsource account! The Cardano API is designed to accomodate multiple recipients
  payments\nout-of-the-box; notice how `destinations` is a list of addresses (and
  corresponding amounts).\n\nWhen the transaction succeeds, funds are no longer available
  in the sources addresses, and are\nsoon made available to the destinations within
  a short delay. Note that, you can at any time see\nthe status of your wallets by
  using the [`GET /api/v1/transactions`](#tag/Transactions%2Fpaths%2F~1api~1v1~1transactions%2Fget)\nendpoint
  as follows:\n\n```\ncurl -X GET https://localhost:8090/api/v1/transactions?wallet_id=Ae2tdPwUPE...8V3AVTnqGZ\\\n
  \    -H \"Accept: application/json; charset=utf-8\" \\\n     --cacert ./scripts/tls-files/ca.crt
  \\\n```\n\nHere we constrained the request to a specific account. After our previous
  transaction the output\nshould look roughly similar to this:\n\n```json\n{\n    \"status\":
  \"success\",\n    \"data\": [\n        {\n            \"creationTime\": \"1992-04-19T20:16:49.472681\",\n
  \           \"status\": {\n                \"tag\": \"applying\",\n                \"data\":
  {}\n            },\n            \"amount\": 18382944037988940,\n            \"inputs\":
  [\n                {\n                    \"amount\": 40694552308742354,\n                    \"address\":
  \"dA2W35xz9sn8suQCUwP8H7W2wMsMKzxrBzuMcTPGAHMVcHgrXYZArTPKeuvBdKuCZ7wCvYtfXFsjY1nFseZNLLmfYjS51GcCz6uy7VMKi2R4K6kuwp2WN9bmuHL6fjtuo9hTCSm8SQecYPfdDPsZ35DTFXzT6ucqzhoiREfHLcBBscLQrWcu7enhMquWdmvRo1mH9rz6fknwXiBAufBrEThQiq9RnPyTtpcFk1RQoKHesRaj8kzoaN5o7Aqh9aQE6D35gj591X49LXJHk61gbRq2JZmQUP63ZEzXHF9EQ2WA4vaynoLVSWjqNtvCmV4VnxaVvk9kam8Tkyz5JBCD\"\n
  \               }\n            ],\n            \"direction\": \"incoming\",\n            \"outputs\":
  [\n                {\n                    \"amount\": 7068087782723049,\n                    \"address\":
  \"DxiwK26gE3Ko2qsUT6tPngPomkeG5L6f4h5QqBA4NFjjEjA6tZhMCVNEe2Hr9H1kFoS2zuLXKZn5DuoFMSSpdaZoXEVoJVt2EGKxiYt4RYUPsTiwKR4T8FqqJTFGMkUodJnvjAEidJ1XZ78ywWazPZgbn5HECHehYMGbf3vAZ6S3pB4YFvbGtwtz4ujgzsNvbtAxaKYBTZSQNEkjEYCoFeyiEdQdV7ukiQC4Aq8\"\n
  \               }\n            ],\n            \"confirmations\": 3,\n            \"id\":
  \"d827de094565984c09b06ac4953a2666c6385ed2b88635936d3d78bd28ed93b8\",\n            \"type\":
  \"foreign\"\n        },\n        {\n            \"creationTime\": \"1986-02-27T17:22:10.441586\",\n
  \           \"status\": {\n                \"tag\": \"creating\",\n                \"data\":
  {}\n            },\n            \"amount\": 37459517070855051,\n            \"inputs\":
  [\n                {\n                    \"amount\": 40040427156045597,\n                    \"address\":
  \"NBimUZYpm3G9myazCVJw4959W7MYMEEwCemHKwMS4B3vtAm4r6QW1V8pQTpLjpiHZq4\"\n                }\n
  \           ],\n            \"direction\": \"outgoing\",\n            \"outputs\":
  [\n                {\n                    \"amount\": 27053209422730094,\n                    \"address\":
  \"NBimUZYpm3FngMZu1Mg8NMpEiC8VZUcaRKhHXPKwkfZRUfUF7ovPwgdXpbMn7q87xJB\"\n                },\n
  \               {\n                    \"amount\": 41013698606904243,\n                    \"address\":
  \"NBimUZYpm3G2QVAkFp5a6vxEgcRUH4PgYBFrfeqSKWMLYJJ5vRQj45eefAC9e9zaKYD\"\n                }\n
  \           ],\n            \"confirmations\": 1,\n            \"id\": \"f5c79aba1f0102dce829e331574141be10d3db93e6b13f8a70d463124dc0bd8f\",\n
  \           \"type\": \"local\"\n        }\n    ],\n    \"meta\": {\n        \"pagination\":
  {\n            \"page\": 1,\n            \"perPage\": 46,\n            \"totalPages\":
  1,\n            \"totalEntries\": 2\n        }\n    }\n}\n```\n\nIn addition, and
  because it is not possible to _preview_ a transaction, one can lookup a\ntransaction's
  fees using the [`POST /api/v1/transactions/fees`](#tag/Transactions%2Fpaths%2F~1api~1v1~1transactions~1fees%2Fpost)\nendpoint
  to get an estimation of those fees.\nSee [Estimating Transaction Fees](#section/Common-Use-Cases/Estimating-Transaction-Fees)
  for more details.\n\n\nPagination\n==========\n\n**All GET requests of the API are
  paginated by default**. Whilst this can be a source of\nsurprise, is the best way
  of ensuring the performance of GET requests is not affected by the\nsize of the
  data storage.\n\nVersion `V1` introduced a different way of requesting information
  to the API. In particular,\nGET requests which returns a _collection_ (i.e. typically
  a JSON array of resources) lists\nextra parameters which can be used to modify the
  shape of the response. In particular, those\nare:\n\n* `page`: (Default value: **1**).\n*
  `per_page`: (Default value: **10**)\n\nFor a more accurate description, see the
  section `Parameters` of each GET request, but as a\nbrief overview the first two
  control how many results and which results to access in a\npaginated request.\n\n\nFiltering
  and Sorting\n=====================\n\n`GET` endpoints which list collection of resources
  supports filters & sort operations, which\nare clearly marked in the swagger docs
  with the `FILTER` or `SORT` labels. The query format is\nquite simple, and it goes
  this way:\n\n\nFilter Operators\n----------------\n\n| Operator | Description                                                               |
  Example                |\n|----------|---------------------------------------------------------------------------|------------------------|\n|
  -        | If **no operator** is passed, this is equivalent to `EQ` (see below).
  \    | `balance=10`           |\n| `EQ`     | Retrieves the resources with index
  _equal_ to the one provided.           | `balance=EQ[10]`       |\n| `LT`     |
  Retrieves the resources with index _less than_ the one provided.          | `balance=LT[10]`
  \      |\n| `LTE`    | Retrieves the resources with index _less than equal_ the
  one provided.    | `balance=LTE[10]`      |\n| `GT`     | Retrieves the resources
  with index _greater than_ the one provided.       | `balance=GT[10]`       |\n|
  `GTE`    | Retrieves the resources with index _greater than equal_ the one provided.
  | `balance=GTE[10]`      |\n| `RANGE`  | Retrieves the resources with index _within
  the inclusive range_ [k,k].    | `balance=RANGE[10,20]` |\n\nSort Operators\n--------------\n\n|
  Operator | Description                                                               |
  Example                |\n|----------|---------------------------------------------------------------------------|------------------------|\n|
  `ASC`    | Sorts the resources with the given index in _ascending_ order.            |
  `sort_by=ASC[balance]` |\n| `DES`    | Sorts the resources with the given index
  in _descending_ order.           | `sort_by=DES[balance]` |\n| -        | If **no
  operator** is passed, this is equivalent to `DES` (see above).    | `sort_by=balance`
  \     |\n\n\nErrors\n======\n\nIn case a request cannot be served by the API, a
  non-2xx HTTP response will be issued, together\nwith a [JSend-compliant](https://labs.omniti.com/labs/jsend)
  JSON Object describing the error\nin detail together with a numeric error code which
  can be used by API consumers to implement\nproper error handling in their application.
  For example, here's a typical error which might be\nissued:\n\n``` json\n{\n    \"status\":
  \"error\",\n    \"diagnostic\": {},\n    \"message\": \"WalletNotFound\"\n}\n```\n\nExisting
  Wallet Errors\n----------------------\n\nError Name / Description | HTTP Error code
  | Example\n-------------------------|-----------------|---------\n`NotEnoughMoney`<br/>Not
  enough available coins to proceed.|403|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"needMore\":&nbsp;1400<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"NotEnoughMoney\"<br/>}</pre>\n`OutputIsRedeem`<br/>One
  of the TX outputs is a redemption address.|403|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"address\":&nbsp;\"Ae2tdPwUPEZ9ekGYaavZoWCYiLvboFMPHC732Ta8Z2NocXVfHQQWMpa9ymk\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"OutputIsRedeem\"<br/>}</pre>\n`MigrationFailed`<br/>Error
  while migrating a legacy type into the current version.|422|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"description\":&nbsp;\"Migration&nbsp;failed\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"MigrationFailed\"<br/>}</pre>\n`JSONValidationFailed`<br/>Couldn't
  decode a JSON input.|400|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"validationError\":&nbsp;\"Expected&nbsp;String,&nbsp;found&nbsp;Null.\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"JSONValidationFailed\"<br/>}</pre>\n`UnknownError`<br/>Unexpected
  internal error.|500|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"msg\":&nbsp;\"Unknown&nbsp;error\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"UnknownError\"<br/>}</pre>\n`InvalidAddressFormat`<br/>Provided
  address format is not valid.|401|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"msg\":&nbsp;\"Invalid&nbsp;base58&nbsp;representation.\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"InvalidAddressFormat\"<br/>}</pre>\n`WalletNotFound`<br/>Reference
  to an unexisting wallet was given.|404|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"WalletNotFound\"<br/>}</pre>\n`WalletAlreadyExists`<br/>Can't
  create or restore a wallet. The wallet already exists.|403|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"WalletAlreadyExists\"<br/>}</pre>\n`AddressNotFound`<br/>Reference
  to an unexisting address was given.|404|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"AddressNotFound\"<br/>}</pre>\n`MissingRequiredParams`<br/>Missing
  required parameters in the request payload.|400|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"params\":&nbsp;[<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"wallet_id\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"walletId\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"MissingRequiredParams\"<br/>}</pre>\n`WalletIsNotReadyToProcessPayments`<br/>This
  wallet is restoring, and it cannot send new transactions until restoration completes.|403|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"stillRestoring\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"throughput\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\":&nbsp;400,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"unit\":&nbsp;\"blocksPerSecond\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"percentage\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\":&nbsp;80,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"unit\":&nbsp;\"percent\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"estimatedCompletionTime\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\":&nbsp;3000,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"unit\":&nbsp;\"milliseconds\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"WalletIsNotReadyToProcessPayments\"<br/>}</pre>\n`NodeIsStillSyncing`<br/>The
  node is still syncing with the blockchain, and cannot process the request yet.|412|<pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"error\",<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"diagnostic\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"stillSyncing\":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\":&nbsp;42,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"unit\":&nbsp;\"percent\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"message\":&nbsp;\"NodeIsStillSyncing\"<br/>}</pre>\n\n\nMonetary
  Denomination & Units\n=============================\n\nCardano's currency is called
  _ADA_ ( \u20B3 ). _ADA_ has up to **6** decimal places; hence the\nsmallest monetary
  unit that can be represented in the Cardano's blockhain is: 0.000001\u20B3. This\nis
  also called a _Lovelace_ (Cardano's currency is named after the mathematician and
  computer\nscientist [Ada Lovelace](https://en.wikipedia.org/wiki/Ada_Lovelace)).
  Put in another way, one\n_ADA_ is equal to one million _Lovelace_.\n\nADA        |
  Lovelace\n-----------|----------\n`1`        | `1 000 000`\n`.000 001` | `1`\n\n>
  **Warning**: All amounts manipulated in the API are given and expected in Lovelace.\n\n\nMnemonic
  Codes\n==============\n\nThe full list of accepted mnemonic codes to secure a wallet
  is defined by the [BIP-39\nspecifications](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
  Note that\npicking up 12 random words from the list **is not enough** and leads
  to poor security. Make\nsure to carefully follow the steps described in the protocol
  when you generate words for a new\nwallet.\n\n\nVersioning & Legacy\n===================\n\nThe
  API is **versioned**, meaning that is possible to access different versions of the
  API by adding the _version number_ in the URL.\n\n**For the sake of backward compatibility,
  we expose the legacy version of the API, available simply as unversioned endpoints.**\n\nThis
  means that _omitting_ the version number would call the old version of the API.
  Deprecated\nendpoints are currently grouped under an appropriate section; they would
  be removed in upcoming\nreleased, if you're starting a new integration with Cardano-SL,
  please ignore these.\n\nNote that Compatibility between major versions is not _guaranteed_,
  i.e. the request & response formats might differ.\n\n\nDisable TLS (Not Recommended)\n-----------------------------\n\nIf
  needed, you can disable TLS by providing the `--no-tls` flag to the wallet or by
  running a wallet in debug mode with `--wallet-debug` turned on.\n\n\nCommon Use-Cases\n================\n\nSending
  Money to Multiple Recipients\n------------------------------------\n\nAs seen in
  [Sending ADA](#section/Getting-Started/Sending-ADA), you can send _ADA_ to\nanother
  party using the [`POST /api/v1/transactions`](#tag/Transactions%2Fpaths%2F~1api~1v1~1transactions%2Fpost)
  endpoint.\nImportant to notice is the type of the field `destinations`: it's a list,
  enabling you to provide more\nthan one destination. Each destination is composed
  of:\n\n- An address\n- A corresponding amount\n\nThe overall transaction corresponds
  to the sum of each outputs. For instance, to send money to\ntwo parties simultaneously:\n\n```\ncurl
  -X POST https://localhost:8090/api/v1/transactions \\\n  -H \"Accept: application/json;
  charset=utf-8\" \\\n  -H \"Content-Type: application/json; charset=utf-8\" \\\n
  \ --cacert ./scripts/tls-files/ca.crt \\\n  -d '{\n  \"destinations\": [\n    {\n
  \     \"amount\": 14,\n      \"address\": \"A7k5bz1QR2...Tx561NNmfF\"\n    },\n
  \   {\n      \"amount\": 42,\n      \"address\": \"B56n78WKE8...jXAa34NUFz\"\n    }\n
  \ ],\n  \"source\": {\n    \"accountIndex\": 0,\n    \"walletId\": \"Ae2tdPwUPE...8V3AVTnqGZ\"\n
  \ },\n  \"spendingPassword\": \"5416b2988745725998907addf4613c9b0764f04959030e1b81c603b920a115d0\"\n}'\n```\n\n\nEstimating
  Transaction Fees\n---------------------------\n\nWhen you submit a transaction to
  the network, some fees apply depending on, but not only, the\nselected grouping
  policy and the available inputs on the source wallet. There's actually a\ntrade-off
  between fees, cryptographic security, throughput and privacy. The more inputs are\nselected,
  the bigger is the payload, the bigger are the fees.\n\nThe API lets you estimate
  fees for a given transaction via the [`POST /api/v1/transaction/fees`](#tag/Transactions%2Fpaths%2F~1api~1v1~1transactions~1fees%2Fpost)\nendpoint.
  The request payload is identical to the one you would make to create a transaction:\n\n```\ncurl
  -X POST https://localhost:8090/api/v1/transactions/fees \\\n  -H \"Accept: application/json;
  charset=utf-8\" \\\n  -H \"Content-Type: application/json; charset=utf-8\" \\\n
  \ --cacert ./scripts/tls-files/ca.crt \\\n  -d '{\n  \"destinations\": [{\n      \"amount\":
  14,\n      \"address\": \"A7k5bz1QR2...Tx561NNmfF\"\n  }],\n  \"source\": {\n    \"accountIndex\":
  0,\n    \"walletId\": \"Ae2tdPwUPE...8V3AVTnqGZ\"\n  }\n}'\n```\n\nThe API resolves
  with an estimated amount in _ADA_. This estimation highly depends on the\ncurrent
  state of the ledger and diverges with time.\n\n```json\n{\n    \"status\": \"success\",\n
  \   \"data\": {\n        \"estimatedAmount\": 25132995790248024\n    },\n    \"meta\":
  {\n        \"pagination\": {\n            \"page\": 1,\n            \"perPage\":
  46,\n            \"totalPages\": 1,\n            \"totalEntries\": 2\n        }\n
  \   }\n}\n```\n\n\nManaging Accounts\n-----------------\n\nA wallet isn't limited
  to one account. It can actually be useful to have more than one account\nin order
  to separate business activities. With the API, you can retrieve a specific account,\ncreate
  new ones, list all existing accounts of a wallet or edit a few things on an existing\naccount.
  By default, your wallet comes with a provided account. Let's see how to create a
  fresh\nnew account on a wallet using [`POST /api/v1/wallets/{{walletId}}/accounts`](#tag/Accounts%2Fpaths%2F~1api~1v1~1wallets~1{walletId}~1accounts%2Fpost):\n\n```\ncurl
  -X POST \\\n  https://localhost:8090/api/v1/Ae2tdPwUPE...8V3AVTnqGZ/accounts \\\n
  \ -H 'Content-Type: application/json;charset=utf-8' \\\n  -H 'Accept: application/json;charset=utf-8'
  \\\n  --cacert ./scripts/tls-files/ca.crt \\\n  -d '{\n  \"name\": \"MyOtherAccount\",\n
  \ \"spendingPassword\": \"5416b2988745725998907addf4613c9b0764f04959030e1b81c603b920a115d0\"\n}'\n```\n\nNote
  that the `spendingPassword` here should match the one provided earlier in [Creating
  a\nNew Wallet](#section/Getting-Started/Creating-a-New-Wallet).\n\n\n```json\n{\n
  \   \"status\": \"success\",\n    \"data\": {\n        \"amount\": 7328081618979461,\n
  \       \"addresses\": [\n            {\n                \"used\": true,\n                \"changeAddress\":
  true,\n                \"id\": \"9k3qsjoVJ869taCWqcBT55hnVdQb9bQK29d8KCjTXvYxKm4MgiGJ9cZdvYBvq3By5qMcpJPR741HrZTTxwDEMjvbHgTHTNtxKC3MJQfrwsk2BqtE4KktKJc1RBUaq8b9MU7Q5FBjE4uesiTWhy5ikqwHDjcfKm8hXqzLfrAKPjk7iwurf8vDufvQ8HnHXyPEspsM4SSeZARYM6xfBQBVywuNMb1BfNCqBPm\"\n
  \           },\n            {\n                \"used\": true,\n                \"changeAddress\":
  false,\n                \"id\": \"2reD6PLk2vQ3tf7WBb2T34xFpYpatCQfeBCLKtJCbggz1baCdYfpWmXVQJkBVnELThvogsL9fGA5HRSsgMqQCEfXz9n3fs6gKMJteRVdv3BKKLv8EEip2to3eMWkkGFcUXT9oqB6UsRtvooYfR9oQxiZhvvf4DJ652aPzpV7XtLnsavuU6w9VXBUCiWLAUZYAJG59eWooWKooUuwr9zRZJy5NdpChPLr1ic88QoPidR329VdRNnkViMdc69MxzYzmmi2uRSMngxoW6pJR82KnMCGYm4Lg61Ba3C1UcghPUb1MKujkozeZ49TF76PkKa5ez1MQdfhDRtPaDVj4x\"\n
  \           }\n        ],\n        \"name\": \"My account\",\n        \"walletId\":
  \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n
  \       \"index\": 1\n    },\n    \"meta\": {\n        \"pagination\": {\n            \"page\":
  1,\n            \"perPage\": 46,\n            \"totalPages\": 1,\n            \"totalEntries\":
  2\n        }\n    }\n}\n```\n\nYou can always retrieve this account description
  later if needed via [`GET /api/v1/wallets/{{walletId}}/accounts/{{accountId}}`](#tag/Accounts%2Fpaths%2F~1api~1v1~1wallets~1{walletId}~1accounts~1{accountId}%2Fget).\n\nFor
  example:\n\n```\ncurl -X GET \\\n  https://127.0.0.1:8090/api/v1/wallets/Ae2tdPwUPE...8V3AVTnqGZ/accounts/2902829384
  \\\n  -H 'Accept: application/json;charset=utf-8' \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\nFor
  a broader view, the full list of accounts of a given wallet can be retrieved using
  [`GET /api/v1/wallets/{{walletId}}/accounts`](#tag/Accounts%2Fpaths%2F~1api~1v1~1wallets~1{walletId}~1accounts%2Fget)\n```\ncurl
  -X GET \\\n  https://127.0.0.1:8090/api/v1/wallets/Ae2tdPwUPE...8V3AVTnqGZ/accounts
  \\\n  -H 'Accept: application/json;charset=utf-8' \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\n```json\n{\n
  \   \"status\": \"success\",\n    \"data\": [\n        {\n            \"amount\":
  29208924123228353,\n            \"addresses\": [\n                {\n                    \"used\":
  false,\n                    \"changeAddress\": false,\n                    \"id\":
  \"Un4ZpTvXtoKqKLYYxbXsQaf95Zm2SWynjzwt8beEQGQH9TJNdxdqeMVWEnrdfrHpjzqvZRH4RkfbbHmTGWMse2V2rG7X3bsHMUeT9bE6web8rxBD\"\n
  \               }\n            ],\n            \"name\": \"My account\",\n            \"walletId\":
  \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n
  \           \"index\": 1\n        },\n        {\n            \"amount\": 28089727180413548,\n
  \           \"addresses\": [\n                {\n                    \"used\": false,\n
  \                   \"changeAddress\": true,\n                    \"id\": \"eMNXLAmamdgVtScerkn5qQpADPmbkEL53PFLMuKHpfxuoSFXVgaSTKgVn4KWoiczUsy9Cj2BSzvdjYnhy7zM16Ra6qoVGEpGeVcpWhXAYC4iJVvXL12KiZ7FfGvFcm8bBN6p2BQ1Jaqw6NtL9nfTDhAcWiTzpPQEFGyrXkB7UaN4scyuNKpz53EZzuTM1JvAnoZJxgF2KPEym1YwKBq2AWNmDmEGxC1nhHSL7q26S8yk4GP9QrLHFf1iDs5x4QybBAATku9cuwix6y9ndQh38hzBkeuz\"\n
  \               },\n                {\n                    \"used\": true,\n                    \"changeAddress\":
  true,\n                    \"id\": \"Un4ZpTvXtoKsYS9eJXKLvz3WXnvbi1r3Fyj5RYe2VwbJLYyEstShsixtan4wzGeuHWXKh7vjoZrLsTUHtKMePaCe49ASyHTdLRyNeXAtnEcxNLGa\"\n
  \               }\n            ],\n            \"name\": \"My account\",\n            \"walletId\":
  \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n
  \           \"index\": 0\n        }\n    ],\n    \"meta\": {\n        \"pagination\":
  {\n            \"page\": 1,\n            \"perPage\": 46,\n            \"totalPages\":
  1,\n            \"totalEntries\": 2\n        }\n    }\n}\n```\n\n\nManaging Addresses\n------------------\n\nBy
  default, wallets you create are provided with an account which has one default address.
  It\nis possible (and recommended) for an account to manage multiple addresses. Address
  reuse\nactually reduces privacy for it tights more transactions to a small set of
  addresses.\n\nWhen paying, the wallet makes many of these choices for you. Addresses
  are\nselected from a wallet's account based on several different strategies and\npolicies.\n\nTo
  create a new address, use the [`POST /api/v1/addresses`](#tag/Addresses%2Fpaths%2F~1api~1v1~1addresses%2Fpost)\nendpoint:\n\n```\ncurl
  -X POST \\\n  https://localhost:8090/api/v1/addresses \\\n  -H 'Content-Type: application/json;charset=utf-8'
  \\\n  -H 'Accept: application/json;charset=utf-8' \\\n  --cacert ./scripts/tls-files/ca.crt
  \\\n  -d '{\n    \"walletId\": \"Ae2tdPwUPE...V3AVTnqGZ4\",\n    \"accountIndex\":
  2147483648\n}'\n```\n\n```json\n{\n    \"status\": \"success\",\n    \"data\": {\n
  \       \"used\": true,\n        \"changeAddress\": true,\n        \"id\": \"42wmHXYSz61HYLB2tdFyR3P2VGsqNuoDaqUeozkaU8D2pbtJeWNViA7HrmWiuEK785DwsLEgJqCkpnDD1B2RgNFcQ4GD5YjvkxgVzJ8eQ787P16RGeqM5iKR6Kcu8cYtEeP8B8oY1iTXDz1bQ5ae8y2dyhzjqkGJVAxeCFXov1Rf1n\"\n
  \   },\n    \"meta\": {\n        \"pagination\": {\n            \"page\": 1,\n            \"perPage\":
  46,\n            \"totalPages\": 1,\n            \"totalEntries\": 2\n        }\n
  \   }\n}\n```\n\nIf your wallet is protected with a password, this password is also
  required in order to create\nnew addresses for that wallet. In such case, the field
  `spendingPassword` should match the one\ndefined earlier to protect your wallet.\n\nAddresses
  generated as just described are always valid. When the API encounters\nan invalid
  address however (e.g. when provided by another party), it will fail with a\nclient
  error.\n\nYou can always view all your available addresses across all your wallets
  by using\n[`GET /api/v1/addresses`](#tag/Addresses%2Fpaths%2F~1api~1v1~1addresses%2Fget):\n\n```\ncurl
  -X GET https://localhost:8090/api/v1/addresses \\\n  -H 'Accept: application/json;charset=utf-8'
  \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\n```json\n{\n    \"status\": \"success\",\n
  \   \"data\": [\n        \"7J1MaQmKydNjjDZjGJbyjnSLtj6H6irfYqx3sxUd4a8L5umQi4UNa3Z88QECYEkCd4eShHE9Sd5fGR5xkz8sn6of5nrjEvS11WjiGSw37XV45v2\",\n
  \       \"AL91N9VXRTCdEAuNHNij1dpotEjcotTHaAavVpXoR1ckgokd1g4owdYN2WCjyRs1u4ChP4fezGK5oviUge4nSaJUdiCFesqnSHcR8vPTepYsscTtgqm\"\n
  \   ],\n    \"meta\": {\n        \"pagination\": {\n            \"page\": 1,\n            \"perPage\":
  46,\n            \"totalPages\": 1,\n            \"totalEntries\": 2\n        }\n
  \   }\n}\n```\n\nChecking Synchronization Progress\n---------------------------------\n\nYou
  can control the synchronization progress of the underlying node hosting the wallet's
  server\nvia [`GET /api/v1/node-info`](#tag/Info%2Fpaths%2F~1api~1v1~1node-info%2Fget).
  The output is\nrather verbose and gives real-time progress updates about the current
  node.\n\n```\ncurl -X GET https://localhost:8090/api/v1/node-info \\\n  -H 'Accept:
  application/json;charset=utf-8' \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\n```json\n{\n
  \   \"status\": \"success\",\n    \"data\": {\n        \"blockchainHeight\": {\n
  \           \"quantity\": 1.2822931622135091772e19,\n            \"unit\": \"blocks\"\n
  \       },\n        \"localTimeInformation\": {\n            \"differenceFromNtpServer\":
  {\n                \"quantity\": 0,\n                \"unit\": \"microseconds\"\n
  \           }\n        },\n        \"subscriptionStatus\": {\n            \"85.242.106.23:2446:1\":
  \"subscribing\",\n            \"119.17.4.92:3451:2\": \"subscribing\"\n        },\n
  \       \"syncProgress\": {\n            \"quantity\": 77,\n            \"unit\":
  \"percent\"\n        },\n        \"localBlockchainHeight\": {\n            \"quantity\":
  9631745999145585284,\n            \"unit\": \"blocks\"\n        }\n    },\n    \"meta\":
  {\n        \"pagination\": {\n            \"page\": 1,\n            \"perPage\":
  46,\n            \"totalPages\": 1,\n            \"totalEntries\": 2\n        }\n
  \   }\n}\n```\n\n\nRetrieving Transaction History\n------------------------------\n\nIf
  needed, applications may regularly poll the wallet's backend to retrieve the history
  of\ntransactions of a given wallet. Using the [`GET /api/v1/transactions`](#tag/Transactions%2Fpaths%2F~1api~1v1~1transactions%2Fget)\nendpoint,
  you can view the status of all transactions that ever sent or took money from the\nwallet.\n\nThe
  following table sums up the available filters (also detailed in the endpoint documentation
  details):\n\nFilter On                   | Corresponding Query Parameter(s)\n----------------------------|
  ------------------------------\nWallet                      | `wallet_id`\nWallet's
  account            | `account_index` + `wallet_id`\nAddress                     |
  `address`\nTransaction's creation time | `created_at`\nTransaction's id            |
  `id`\n\nFor example, in order to retrieve the last 50 transactions of a particular
  account,\nordered by descending date:\n\n```\ncurl -X GET https://127.0.0.1:8090/api/v1/transactions?wallet_id=Ae2tdPwU...3AVTnqGZ&account_index=2902829384&sort_by=DES\\[created_at\\]&per_page=50'
  \\\n  -H 'Accept: application/json;charset=utf-8' \\\n  --cacert ./scripts/tls-files/ca.crt\n```\nFor
  example, in order to retrieve the last 50 transactions, ordered by descending date:\n\n```\ncurl
  -X GET 'https://127.0.0.1:8090/api/v1/transactions?wallet_id=Ae2tdPwU...3AVTnqGZ
  &sort_by=DES\\[created_at\\]&per_page=50' \\\n  -H 'Accept: application/json;charset=utf-8'
  \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\n\nAnother example, if you were
  to look for all transactions made since the 1st of January 2018:\n\n```\ncurl -X
  GET 'https://127.0.0.1:8090/api/v1/transactions?wallet_id=Ae2tdPwU...3AVTnqGZ&created_at=GT\\[2018-01-01T00:00:00.00000\\]'
  \\\n  -H 'Accept: application/json;charset=utf-8' \\\n  --cacert ./scripts/tls-files/ca.crt\n```\n\nMake
  sure to carefully read the section about [Pagination](#section/Pagination) to fully\nleverage
  the API capabilities.\n\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:80:\"https://raw.githubusercontent.com/input-output-hk/cardano-sl/develop/lib/LICENSE\";}s:5:\"title\";s:18:\"Cardano
  Wallet API\";s:7:\"version\";s:5:\"1.3.0\";}"
host: 127.0.0.1:8090
paths:
  /api/v1/addresses:
    get:
      parameters:
      - default: 1
        description: The page number to fetch for this request. The minimum is **1**.  If
          nothing is specified, **this value defaults to 1** and always shows the
          first entries in the requested collection.n
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of entries to display for each page. The minimum is
          **1**, whereas the maximum is **50**. If nothing is specified, **this value
          defaults to 10**.n
        in: query
        maximum: 50
        minimum: 1
        name: per_page
        required: false
        type: integer
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<[WalletAddress]>'
        400:
          description: Invalid `per_page` or `page`
      summary: Returns a list of the addresses.
      tags:
      - Addresses
    post:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NewAddress'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<WalletAddress>'
        400:
          description: Invalid `body`
      summary: Creates a new Address.
      tags:
      - Addresses
  /api/v1/addresses/{address}:
    get:
      parameters:
      - in: path
        name: address
        required: true
        type: string
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<WalletAddress>'
        404:
          description: '`address` not found'
      summary: Returns interesting information about an address, if available and
        valid.
      tags:
      - Addresses
  /api/v1/node-info:
    get:
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<NodeInfo>'
      summary: Retrieves the dynamic information for this node.
      tags:
      - Info
  /api/v1/node-settings:
    get:
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<NodeSettings>'
      summary: Retrieves the static settings for this node.
      tags:
      - Settings
  /api/v1/transactions:
    get:
      parameters:
      - in: query
        name: wallet_id
        required: false
        type: string
      - in: query
        maximum: 4294967295
        minimum: 0
        name: account_index
        required: false
        type: integer
      - in: query
        name: address
        required: false
        type: string
      - default: 1
        description: The page number to fetch for this request. The minimum is **1**.  If
          nothing is specified, **this value defaults to 1** and always shows the
          first entries in the requested collection.n
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of entries to display for each page. The minimum is
          **1**, whereas the maximum is **50**. If nothing is specified, **this value
          defaults to 10**.n
        in: query
        maximum: 50
        minimum: 1
        name: per_page
        required: false
        type: integer
      - description: 'A **FILTER** operation on a Transaction. Filters support a variety
          of queries on the resource. These are: nn- `EQ[value]`    : only allow values
          equal to `value`n- `LT[value]`    : allow resource with attribute less than
          the `value`n- `GT[value]`    : allow objects with an attribute greater than
          the `value`n- `GTE[value]`   : allow objects with an attribute at least
          the `value`n- `LTE[value]`   : allow objects with an attribute at most the
          `value`n- `RANGE[lo,hi]` : allow objects with the attribute in the range
          between `lo` and `hi`n- `IN[a,b,c,d]`  : allow objects with the attribute
          belonging to one provided.nn'
        in: query
        name: id
        type: string
      - description: 'A **FILTER** operation on a Transaction. Filters support a variety
          of queries on the resource. These are: nn- `EQ[value]`    : only allow values
          equal to `value`n- `LT[value]`    : allow resource with attribute less than
          the `value`n- `GT[value]`    : allow objects with an attribute greater than
          the `value`n- `GTE[value]`   : allow objects with an attribute at least
          the `value`n- `LTE[value]`   : allow objects with an attribute at most the
          `value`n- `RANGE[lo,hi]` : allow objects with the attribute in the range
          between `lo` and `hi`n- `IN[a,b,c,d]`  : allow objects with the attribute
          belonging to one provided.nn'
        in: query
        name: created_at
        type: string
      - allowEmptyValue: true
        description: 'A **SORT** operation on this Transaction. Allowed keys: `created_at`.n'
        in: query
        name: sort_by
        required: false
        type: string
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<[Transaction]>'
        400:
          description: Invalid `per_page` or `page` or `address` or `account_index`
            or `wallet_id`
      summary: Returns the transaction history, i.e the list of all the past transactions.
      tags:
      - Transactions
    post:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Payment'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Transaction>'
        400:
          description: Invalid `body`
      summary: Generates a new transaction from the source to one or multiple target
        addresses.
      tags:
      - Transactions
  /api/v1/transactions/fees:
    post:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Payment'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<EstimatedFees>'
        400:
          description: Invalid `body`
      summary: Estimate the fees which would originate from the payment.
      tags:
      - Transactions
  /api/v1/wallets:
    get:
      parameters:
      - default: 1
        description: The page number to fetch for this request. The minimum is **1**.  If
          nothing is specified, **this value defaults to 1** and always shows the
          first entries in the requested collection.n
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of entries to display for each page. The minimum is
          **1**, whereas the maximum is **50**. If nothing is specified, **this value
          defaults to 10**.n
        in: query
        maximum: 50
        minimum: 1
        name: per_page
        required: false
        type: integer
      - description: 'A **FILTER** operation on a Wallet. Filters support a variety
          of queries on the resource. These are: nn- `EQ[value]`    : only allow values
          equal to `value`n- `LT[value]`    : allow resource with attribute less than
          the `value`n- `GT[value]`    : allow objects with an attribute greater than
          the `value`n- `GTE[value]`   : allow objects with an attribute at least
          the `value`n- `LTE[value]`   : allow objects with an attribute at most the
          `value`n- `RANGE[lo,hi]` : allow objects with the attribute in the range
          between `lo` and `hi`n- `IN[a,b,c,d]`  : allow objects with the attribute
          belonging to one provided.nn'
        in: query
        name: id
        type: string
      - description: 'A **FILTER** operation on a Wallet. Filters support a variety
          of queries on the resource. These are: nn- `EQ[value]`    : only allow values
          equal to `value`n- `LT[value]`    : allow resource with attribute less than
          the `value`n- `GT[value]`    : allow objects with an attribute greater than
          the `value`n- `GTE[value]`   : allow objects with an attribute at least
          the `value`n- `LTE[value]`   : allow objects with an attribute at most the
          `value`n- `RANGE[lo,hi]` : allow objects with the attribute in the range
          between `lo` and `hi`n- `IN[a,b,c,d]`  : allow objects with the attribute
          belonging to one provided.nn'
        in: query
        name: balance
        type: string
      - allowEmptyValue: true
        description: 'A **SORT** operation on this Wallet. Allowed keys: `balance,created_at`.n'
        in: query
        name: sort_by
        required: false
        type: string
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<[Wallet]>'
        400:
          description: Invalid `per_page` or `page`
      summary: Returns a list of the available wallets.
      tags:
      - Wallets
    post:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NewWallet'
      produces:
      - application/json;charset=utf-8
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Wallet>'
        400:
          description: Invalid `body`
      summary: Creates a new or restores an existing Wallet.
      tags:
      - Wallets
  /api/v1/wallets/{walletId}:
    delete:
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json;charset=utf-8
      responses:
        204:
          description: ""
        404:
          description: '`walletId` not found'
      summary: Deletes the given Wallet and all its accounts.
      tags:
      - Wallets
    get:
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Wallet>'
        404:
          description: '`walletId` not found'
      summary: Returns the Wallet identified by the given walletId.
      tags:
      - Wallets
    put:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/WalletUpdate'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Wallet>'
        400:
          description: Invalid `body`
        404:
          description: '`walletId` not found'
      summary: Update the Wallet identified by the given walletId.
      tags:
      - Wallets
  /api/v1/wallets/{walletId}/accounts:
    get:
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - default: 1
        description: The page number to fetch for this request. The minimum is **1**.  If
          nothing is specified, **this value defaults to 1** and always shows the
          first entries in the requested collection.n
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of entries to display for each page. The minimum is
          **1**, whereas the maximum is **50**. If nothing is specified, **this value
          defaults to 10**.n
        in: query
        maximum: 50
        minimum: 1
        name: per_page
        required: false
        type: integer
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<[Account]>'
        400:
          description: Invalid `per_page` or `page`
        404:
          description: '`walletId` not found'
      summary: Retrieves the full list of Accounts.
      tags:
      - Accounts
    post:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NewAccount'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Account>'
        400:
          description: Invalid `body`
        404:
          description: '`walletId` not found'
      summary: Creates a new Account for the given Wallet.
      tags:
      - Accounts
  /api/v1/wallets/{walletId}/accounts/{accountId}:
    delete:
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - in: path
        maximum: 4294967295
        minimum: 0
        name: accountId
        required: true
        type: integer
      produces:
      - application/json;charset=utf-8
      responses:
        204:
          description: ""
        404:
          description: '`walletId` or `accountId` not found'
      summary: Deletes an Account.
      tags:
      - Accounts
    get:
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - in: path
        maximum: 4294967295
        minimum: 0
        name: accountId
        required: true
        type: integer
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Account>'
        404:
          description: '`walletId` or `accountId` not found'
      summary: Retrieves a specific Account.
      tags:
      - Accounts
    put:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - in: path
        maximum: 4294967295
        minimum: 0
        name: accountId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccountUpdate'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Account>'
        400:
          description: Invalid `body`
        404:
          description: '`walletId` or `accountId` not found'
      summary: Update an Account for the given Wallet.
      tags:
      - Accounts
  /api/v1/wallets/{walletId}/password:
    put:
      consumes:
      - application/json;charset=utf-8
      parameters:
      - in: path
        name: walletId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PasswordUpdate'
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WalletResponse<Wallet>'
        400:
          description: Invalid `body`
        404:
          description: '`walletId` not found'
      summary: Updates the password for the given Wallet.
      tags:
      - Wallets
definitions: !php/object "O:8:\"stdClass\":56:{s:7:\"Account\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":5:{s:9:\"addresses\";a:1:{i:0;O:8:\"stdClass\":3:{s:13:\"changeAddress\";b:1;s:2:\"id\";s:59:\"Ae2tdPwUPEZ3hmyBxBGfSLZHzETDof8afvg1vFogbukKJS75xChNyvwiuR6\";s:4:\"used\";b:1;}}s:6:\"amount\";i:11091176260625603;s:5:\"index\";i:1;s:4:\"name\";s:10:\"My
  account\";s:8:\"walletId\";s:93:\"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"addresses\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"Public
  addresses pointing to this account.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/WalletAddress\";}s:4:\"type\";s:5:\"array\";}s:6:\"amount\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Available
  funds, in Lovelace.\";s:7:\"maximum\";i:45000000000000000;s:4:\"type\";s:6:\"number\";}s:5:\"index\";O:8:\"stdClass\":4:{s:11:\"description\";s:45:\"Account's
  index in the wallet, starting at 0.\";s:7:\"maximum\";i:4294967295;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Account's
  name.\";s:4:\"type\";s:6:\"string\";}s:8:\"walletId\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Id
  of the wallet this account belongs to.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:5:{i:0;s:5:\"index\";i:1;s:9:\"addresses\";i:2;s:6:\"amount\";i:3;s:4:\"name\";i:4;s:8:\"walletId\";}s:4:\"type\";s:6:\"object\";}s:13:\"AccountUpdate\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":1:{s:4:\"name\";s:9:\"myAccount\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"New
  account's name.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:14:\"AssuranceLevel\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:6:\"normal\";i:1;s:6:\"strict\";}s:4:\"type\";s:6:\"string\";}s:16:\"BlockchainHeight\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":3:{s:7:\"maximum\";d:1.8446744073709552E+19;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:6:\"blocks\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}s:23:\"EstimatedCompletionTime\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":2:{s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"milliseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}s:13:\"EstimatedFees\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":1:{s:15:\"estimatedAmount\";i:25132995790248024;}s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"estimatedAmount\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Estimated
  fees, in Lovelace.\";s:7:\"maximum\";i:45000000000000000;s:4:\"type\";s:6:\"number\";}}s:8:\"required\";a:1:{i:0;s:15:\"estimatedAmount\";}s:4:\"type\";s:6:\"object\";}s:19:\"LocalTimeDifference\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"microseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}s:8:\"Metadata\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"pagination\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/PaginationMetadata\";}}s:8:\"required\";a:1:{i:0;s:10:\"pagination\";}s:4:\"type\";s:6:\"object\";}s:10:\"NewAccount\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:4:\"name\";s:8:\"MyWallet\";s:16:\"spendingPassword\";s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Account's
  name.\";s:4:\"type\";s:6:\"string\";}s:16:\"spendingPassword\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"Wallet's
  protection password, required if defined.\";s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:10:\"NewAddress\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:12:\"accountIndex\";i:2;s:16:\"spendingPassword\";s:64:\"0001010001010101010200020001010201000200010201020202000200010000\";s:8:\"walletId\";s:93:\"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"accountIndex\";O:8:\"stdClass\":4:{s:11:\"description\";s:48:\"Target
  account's index to store this address in.\";s:7:\"maximum\";i:4294967295;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:16:\"spendingPassword\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"Wallet's
  protection password, required if defined.\";s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}s:8:\"walletId\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Corresponding
  wallet identifier.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:12:\"accountIndex\";i:1;s:8:\"walletId\";}s:4:\"type\";s:6:\"object\";}s:9:\"NewWallet\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":5:{s:14:\"assuranceLevel\";s:6:\"strict\";s:12:\"backupPhrase\";a:12:{i:0;s:6:\"absurd\";i:1;s:6:\"amount\";i:2;s:7:\"divorce\";i:3;s:8:\"acoustic\";i:4;s:7:\"abandon\";i:5;s:6:\"absurd\";i:6;s:7:\"abandon\";i:7;s:7:\"ability\";i:8;s:8:\"acoustic\";i:9;s:6:\"amount\";i:10;s:6:\"letter\";i:11;s:5:\"agree\";}s:4:\"name\";s:9:\"My
  Wallet\";s:9:\"operation\";s:7:\"restore\";s:16:\"spendingPassword\";N;}s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"assuranceLevel\";O:8:\"stdClass\":3:{s:11:\"description\";s:89:\"Desired
  assurance level based on the number of confirmations counter of each transaction.\";s:4:\"enum\";a:2:{i:0;s:6:\"normal\";i:1;s:6:\"strict\";}s:4:\"type\";s:6:\"string\";}s:12:\"backupPhrase\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Backup
  phrase to restore the wallet.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"Wallet's
  name.\";s:4:\"type\";s:6:\"string\";}s:9:\"operation\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Create
  a new wallet or Restore an existing one.\";s:4:\"enum\";a:2:{i:0;s:6:\"create\";i:1;s:7:\"restore\";}s:4:\"type\";s:6:\"string\";}s:16:\"spendingPassword\";O:8:\"stdClass\":3:{s:11:\"description\";s:82:\"Optional
  (but recommended) password to protect the wallet on sensitive operations.\";s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:12:\"backupPhrase\";i:1;s:14:\"assuranceLevel\";i:2;s:4:\"name\";i:3;s:9:\"operation\";}s:4:\"type\";s:6:\"object\";}s:8:\"NodeInfo\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":5:{s:16:\"blockchainHeight\";O:8:\"stdClass\":2:{s:8:\"quantity\";d:1.5458011915754004E+19;s:4:\"unit\";s:6:\"blocks\";}s:21:\"localBlockchainHeight\";O:8:\"stdClass\":2:{s:8:\"quantity\";d:1.2988764939106871E+19;s:4:\"unit\";s:6:\"blocks\";}s:20:\"localTimeInformation\";O:8:\"stdClass\":1:{s:23:\"differenceFromNtpServer\";N;}s:18:\"subscriptionStatus\";O:8:\"stdClass\":1:{s:20:\"95.131.147.69:4154:1\";s:11:\"subscribing\";}s:12:\"syncProgress\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:77;s:4:\"unit\";s:7:\"percent\";}}s:10:\"properties\";O:8:\"stdClass\":5:{s:16:\"blockchainHeight\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"If
  known, the current blockchain height, in number of blocks.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":3:{s:7:\"maximum\";d:1.8446744073709552E+19;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:6:\"blocks\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}s:21:\"localBlockchainHeight\";O:8:\"stdClass\":4:{s:11:\"description\";s:45:\"Local
  blockchain height, in number of blocks.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":3:{s:7:\"maximum\";d:1.8446744073709552E+19;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:6:\"blocks\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}s:20:\"localTimeInformation\";O:8:\"stdClass\":4:{s:11:\"description\";s:41:\"Information
  about the clock on this node.\";s:7:\"example\";O:8:\"stdClass\":1:{s:23:\"differenceFromNtpServer\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:-1;s:4:\"unit\";s:12:\"microseconds\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:23:\"differenceFromNtpServer\";O:8:\"stdClass\":4:{s:11:\"description\";s:141:\"The
  difference in microseconds between the node time and the NTP server. This value
  will be null if the NTP server is pending or unavailable.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"microseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:18:\"subscriptionStatus\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/SubscriptionStatus\";}s:11:\"description\";s:37:\"Is
  the node connected to the network?\";s:4:\"type\";s:6:\"object\";}s:12:\"syncProgress\";O:8:\"stdClass\":4:{s:11:\"description\";s:35:\"Syncing
  progression, in percentage.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:100;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:7:\"percent\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:4:{i:0;s:12:\"syncProgress\";i:1;s:21:\"localBlockchainHeight\";i:2;s:20:\"localTimeInformation\";i:3;s:18:\"subscriptionStatus\";}s:4:\"type\";s:6:\"object\";}s:12:\"NodeSettings\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":4:{s:11:\"gitRevision\";s:9:\"0e1c9322a\";s:14:\"projectVersion\";s:1:\"2\";s:12:\"slotDuration\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:77;s:4:\"unit\";s:12:\"milliseconds\";}s:12:\"softwareInfo\";O:8:\"stdClass\":2:{s:15:\"applicationName\";s:1:\"1\";s:7:\"version\";i:0;}}s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"gitRevision\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Git
  revision of this deployment.\";s:4:\"type\";s:6:\"string\";}s:14:\"projectVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Current
  project's version.\";s:4:\"type\";s:6:\"string\";}s:12:\"slotDuration\";O:8:\"stdClass\":4:{s:11:\"description\";s:19:\"Duration
  of a slot.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"milliseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}s:12:\"softwareInfo\";O:8:\"stdClass\":4:{s:11:\"description\";s:57:\"Various
  pieces of information about the current software.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"applicationName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:4294967295;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:2:{i:0;s:15:\"applicationName\";i:1;s:7:\"version\";}s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:4:{i:0;s:12:\"slotDuration\";i:1;s:12:\"softwareInfo\";i:2;s:14:\"projectVersion\";i:3;s:11:\"gitRevision\";}s:4:\"type\";s:6:\"object\";}s:4:\"Page\";O:8:\"stdClass\":3:{s:7:\"default\";i:1;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:18:\"PaginationMetadata\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"page\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Page\";}s:7:\"perPage\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/PerPage\";}s:12:\"totalEntries\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:9223372036854775807;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:10:\"totalPages\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:9223372036854775807;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}}s:8:\"required\";a:4:{i:0;s:10:\"totalPages\";i:1;s:4:\"page\";i:2;s:7:\"perPage\";i:3;s:12:\"totalEntries\";}s:4:\"type\";s:6:\"object\";}s:14:\"PasswordUpdate\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:3:\"new\";s:64:\"0000010001010101000001000202010200010202000102000000000100000100\";s:3:\"old\";s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"new\";O:8:\"stdClass\":3:{s:11:\"description\";s:13:\"New
  passowrd.\";s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}s:3:\"old\";O:8:\"stdClass\":3:{s:11:\"description\";s:13:\"Old
  password.\";s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:3:\"old\";i:1;s:3:\"new\";}s:4:\"type\";s:6:\"object\";}s:7:\"Payment\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":4:{s:12:\"destinations\";a:2:{i:0;O:8:\"stdClass\":2:{s:7:\"address\";s:111:\"7J1MaQmKydNdKZ8ASMptqTpSiq6k8QwjD5w8hsnMF6iGQSFLZNbjgVjDhKtAa2vWYNCXvRixXTeuxKAfSHUBcjoieTUHcDaFPMgUtnhVnwk2rbz\";s:6:\"amount\";i:27889372662178400;}i:1;O:8:\"stdClass\":2:{s:7:\"address\";s:69:\"2cWKMJemoBamMBMBYJWe5aQR3xitBLbjVbt4yxQUWUWC8KGGHvYF8BfUQwmAs5je5fSii\";s:6:\"amount\";i:33829516096667581;}}s:14:\"groupingPolicy\";N;s:6:\"source\";O:8:\"stdClass\":2:{s:12:\"accountIndex\";i:2;s:8:\"walletId\";s:93:\"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\";}s:16:\"spendingPassword\";s:64:\"0200020002020202010000010101020100020001020201020001000101010101\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"destinations\";O:8:\"stdClass\":4:{s:11:\"description\";s:41:\"One
  or more destinations for the payment.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/PaymentDistribution\";}s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:14:\"groupingPolicy\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"Optional
  strategy to use for selecting the transaction inputs.\";s:4:\"enum\";a:2:{i:0;s:19:\"OptimizeForSecurity\";i:1;s:25:\"OptimizeForHighThroughput\";}s:4:\"type\";s:6:\"string\";}s:6:\"source\";O:8:\"stdClass\":5:{s:11:\"description\";s:23:\"Source
  for the payment.\";s:7:\"example\";O:8:\"stdClass\":2:{s:12:\"accountIndex\";i:1;s:8:\"walletId\";s:93:\"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"accountIndex\";O:8:\"stdClass\":4:{s:11:\"description\";s:44:\"Corresponding
  account's index on the wallet.\";s:7:\"maximum\";i:4294967295;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:8:\"walletId\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"Target
  wallet identifier to reach.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"walletId\";i:1;s:12:\"accountIndex\";}s:4:\"type\";s:6:\"object\";}s:16:\"spendingPassword\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"Wallet's
  protection password, required to spend funds if defined.\";s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:6:\"source\";i:1;s:12:\"destinations\";}s:4:\"type\";s:6:\"object\";}s:19:\"PaymentDistribution\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:7:\"address\";s:107:\"5FCjkr138i9tdQcx7jejtHoC1P9Nbqu571n2TUC13i3ev2DEbihcsX8hEt784zt4WUGLdCsxZkgeGk9Z8ZufUjh5VbUZgR7CN8Er5JW8LW5\";s:6:\"amount\";i:361333354208714;}s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"address\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Address
  to map coins to.\";s:4:\"type\";s:6:\"string\";}s:6:\"amount\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Amount
  of coin to bind, in Lovelace.\";s:7:\"maximum\";i:45000000000000000;s:4:\"type\";s:6:\"number\";}}s:8:\"required\";a:2:{i:0;s:7:\"address\";i:1;s:6:\"amount\";}s:4:\"type\";s:6:\"object\";}s:13:\"PaymentSource\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:12:\"accountIndex\";i:1;s:8:\"walletId\";s:93:\"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"accountIndex\";O:8:\"stdClass\":4:{s:11:\"description\";s:44:\"Corresponding
  account's index on the wallet.\";s:7:\"maximum\";i:4294967295;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:8:\"walletId\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"Target
  wallet identifier to reach.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"walletId\";i:1;s:12:\"accountIndex\";}s:4:\"type\";s:6:\"object\";}s:7:\"PerPage\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:7:\"maximum\";i:50;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:14:\"ResponseStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"success\";i:1;s:4:\"fail\";i:2;s:5:\"error\";}s:4:\"type\";s:6:\"string\";}s:12:\"SlotDuration\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"milliseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}s:18:\"SubscriptionStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:10:\"subscribed\";i:1;s:11:\"subscribing\";}s:4:\"type\";s:6:\"string\";}s:14:\"SyncPercentage\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:100;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:7:\"percent\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}s:12:\"SyncProgress\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:23:\"estimatedCompletionTime\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:2;s:4:\"unit\";s:12:\"milliseconds\";}s:10:\"percentage\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:96;s:4:\"unit\";s:7:\"percent\";}s:10:\"throughput\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:2;s:4:\"unit\";s:15:\"blocksPerSecond\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:23:\"estimatedCompletionTime\";O:8:\"stdClass\":4:{s:11:\"description\";s:95:\"The
  estimated time the wallet is expected to be fully sync, based on the information
  available.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":2:{s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"milliseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}s:10:\"percentage\";O:8:\"stdClass\":4:{s:11:\"description\";s:37:\"The
  sync percentage, from 0% to 100%.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:100;s:7:\"minimum\";i:0;s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:7:\"percent\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}s:10:\"throughput\";O:8:\"stdClass\":4:{s:11:\"description\";s:42:\"The
  sync throughput, measured in blocks/s.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:15:\"blocksPerSecond\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:3:{i:0;s:23:\"estimatedCompletionTime\";i:1;s:10:\"throughput\";i:2;s:10:\"percentage\";}s:4:\"type\";s:6:\"object\";}s:9:\"SyncState\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/SyncProgress\";}s:3:\"tag\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:9:\"restoring\";i:1;s:6:\"synced\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:3:\"tag\";}s:4:\"type\";s:6:\"object\";}s:14:\"SyncThroughput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:15:\"blocksPerSecond\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"quantity\";i:1;s:4:\"unit\";}s:4:\"type\";s:6:\"object\";}s:8:\"TimeInfo\";O:8:\"stdClass\":3:{s:7:\"example\";O:8:\"stdClass\":1:{s:23:\"differenceFromNtpServer\";O:8:\"stdClass\":2:{s:8:\"quantity\";i:-1;s:4:\"unit\";s:12:\"microseconds\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:23:\"differenceFromNtpServer\";O:8:\"stdClass\":4:{s:11:\"description\";s:141:\"The
  difference in microseconds between the node time and the NTP server. This value
  will be null if the NTP server is pending or unavailable.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"unit\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:12:\"microseconds\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:8:\"quantity\";}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:9:\"Timestamp\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Time
  in ISO 8601 format\";s:4:\"type\";s:6:\"string\";}s:11:\"Transaction\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":9:{s:6:\"amount\";i:28311699119270855;s:13:\"confirmations\";i:4;s:12:\"creationTime\";s:26:\"1977-09-26T13:35:28.425218\";s:9:\"direction\";s:8:\"outgoing\";s:2:\"id\";s:64:\"848d6fadc04dcd9af1bc462df5938ecfbe810c5ecb50971db1cf7ae224bb5955\";s:6:\"inputs\";a:1:{i:0;O:8:\"stdClass\":2:{s:7:\"address\";s:115:\"AL91N9VXRTCwikvJJVEQeGTH4wwxtSY8d7m26bFyWD7PmfqUpdYgCV1jigD5ivbzh88BR8FFvdpkU8P3uuispBsdZNXCurGREicGjMW74F7GitSX4oc\";s:6:\"amount\";i:13019322832706804;}}s:7:\"outputs\";a:3:{i:0;O:8:\"stdClass\":2:{s:7:\"address\";s:65:\"2657WMsDfac6JxtEAjpN9KnwE9kfc6jUzhYXRyY3FFPwEyM5nNjPUBHDbFUwndGNx\";s:6:\"amount\";i:14984536053034711;}i:1;O:8:\"stdClass\":2:{s:7:\"address\";s:65:\"2657WMsDfac6VJfxAHRezMNbBhvYzrDVf5F2W7s7LGAgtp6m9B5Df8EQkwktLsEee\";s:6:\"amount\";i:13290197696443539;}i:2;O:8:\"stdClass\":2:{s:7:\"address\";s:112:\"Un4ZpTvXtoL29niUxfBPFJN3eR135cu799S3t8Pq1Vv48GwBuSEzUPHLDz6SwpewGafkin1iF6itRkKBK4VUiEDZeEH5EKBPg9agUUr9NNKKTsRm\";s:6:\"amount\";i:21095182977599617;}}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":0:{}s:3:\"tag\";s:9:\"persisted\";}s:4:\"type\";s:7:\"foreign\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:6:\"amount\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"Coins
  moved as part of the transaction, in Lovelace.\";s:7:\"maximum\";i:45000000000000000;s:4:\"type\";s:6:\"number\";}s:13:\"confirmations\";O:8:\"stdClass\":4:{s:11:\"description\";s:24:\"Number
  of confirmations.\";s:7:\"maximum\";d:1.8446744073709552E+19;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:12:\"creationTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"Timestamp
  indicating when the transaction was created.\";s:4:\"type\";s:6:\"string\";}s:9:\"direction\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Direction
  for this transaction.\";s:4:\"enum\";a:2:{i:0;s:8:\"outgoing\";i:1;s:8:\"incoming\";}s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Transaction's
  id.\";s:4:\"type\";s:6:\"string\";}s:6:\"inputs\";O:8:\"stdClass\":4:{s:11:\"description\";s:38:\"One
  or more input money distributions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/PaymentDistribution\";}s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:7:\"outputs\";O:8:\"stdClass\":4:{s:11:\"description\";s:39:\"One
  or more ouputs money distributions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/PaymentDistribution\";}s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:6:\"status\";O:8:\"stdClass\":4:{s:11:\"description\";s:49:\"Shows
  whether or not the transaction is accepted.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:3:\"tag\";O:8:\"stdClass\":2:{s:4:\"enum\";a:5:{i:0;s:8:\"applying\";i:1;s:14:\"inNewestBlocks\";i:2;s:9:\"persisted\";i:3;s:9:\"wontApply\";i:4;s:8:\"creating\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:3:\"tag\";i:1;s:4:\"data\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Whether
  the transaction is entirely local or foreign.\";s:4:\"enum\";a:2:{i:0;s:5:\"local\";i:1;s:7:\"foreign\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:9:{i:0;s:2:\"id\";i:1;s:13:\"confirmations\";i:2;s:6:\"amount\";i:3;s:6:\"inputs\";i:4;s:7:\"outputs\";i:5;s:4:\"type\";i:6;s:9:\"direction\";i:7;s:12:\"creationTime\";i:8;s:6:\"status\";}s:4:\"type\";s:6:\"object\";}s:20:\"TransactionDirection\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:8:\"outgoing\";i:1;s:8:\"incoming\";}s:4:\"type\";s:6:\"string\";}s:17:\"TransactionStatus\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:3:\"tag\";O:8:\"stdClass\":2:{s:4:\"enum\";a:5:{i:0;s:8:\"applying\";i:1;s:14:\"inNewestBlocks\";i:2;s:9:\"persisted\";i:3;s:9:\"wontApply\";i:4;s:8:\"creating\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:3:\"tag\";i:1;s:4:\"data\";}s:4:\"type\";s:6:\"object\";}s:15:\"TransactionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:157:\"A
  transaction is 'local' if all the inputs and outputs belong to the current wallet.
  A transaction is foreign if the transaction is not local to this wallet.\";s:4:\"enum\";a:2:{i:0;s:5:\"local\";i:1;s:7:\"foreign\";}s:4:\"type\";s:6:\"string\";}s:9:\"V1Address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"V1BackupPhrase\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"V1Coin\";O:8:\"stdClass\":2:{s:7:\"maximum\";i:45000000000000000;s:4:\"type\";s:6:\"number\";}s:22:\"V1InputSelectionPolicy\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:19:\"OptimizeForSecurity\";i:1;s:25:\"OptimizeForHighThroughput\";}s:4:\"type\";s:6:\"string\";}s:12:\"V1PassPhrase\";O:8:\"stdClass\":2:{s:6:\"format\";s:10:\"hex|base16\";s:4:\"type\";s:6:\"string\";}s:17:\"V1SoftwareVersion\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"applicationName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:4294967295;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:2:{i:0;s:15:\"applicationName\";i:1;s:7:\"version\";}s:4:\"type\";s:6:\"object\";}s:7:\"Version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"Wallet\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":8:{s:14:\"assuranceLevel\";s:6:\"normal\";s:7:\"balance\";i:41984918983627325;s:9:\"createdAt\";s:26:\"2032-07-26T13:46:01.035803\";s:19:\"hasSpendingPassword\";b:0;s:2:\"id\";s:93:\"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\";s:4:\"name\";s:9:\"My
  wallet\";s:26:\"spendingPasswordLastUpdate\";s:26:\"2029-04-05T12:13:13.241896\";s:9:\"syncState\";O:8:\"stdClass\":2:{s:4:\"data\";N;s:3:\"tag\";s:6:\"synced\";}}s:10:\"properties\";O:8:\"stdClass\":8:{s:14:\"assuranceLevel\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"The
  assurance level of the wallet.\";s:4:\"enum\";a:2:{i:0;s:6:\"normal\";i:1;s:6:\"strict\";}s:4:\"type\";s:6:\"string\";}s:7:\"balance\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Current
  balance, in Lovelace.\";s:7:\"maximum\";i:45000000000000000;s:4:\"type\";s:6:\"number\";}s:9:\"createdAt\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"The
  timestamp that the wallet was created.\";s:4:\"type\";s:6:\"string\";}s:19:\"hasSpendingPassword\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Whether
  or not the wallet has a passphrase.\";s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Unique
  wallet identifier.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"Wallet's
  name.\";s:4:\"type\";s:6:\"string\";}s:26:\"spendingPasswordLastUpdate\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"The
  timestamp that the passphrase was last updated.\";s:4:\"type\";s:6:\"string\";}s:9:\"syncState\";O:8:\"stdClass\":4:{s:11:\"description\";s:31:\"The
  sync state for this wallet.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/SyncProgress\";}s:3:\"tag\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:9:\"restoring\";i:1;s:6:\"synced\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:3:\"tag\";}s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:8:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:7:\"balance\";i:3;s:19:\"hasSpendingPassword\";i:4;s:26:\"spendingPasswordLastUpdate\";i:5;s:9:\"createdAt\";i:6;s:14:\"assuranceLevel\";i:7;s:9:\"syncState\";}s:4:\"type\";s:6:\"object\";}s:13:\"WalletAddress\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":3:{s:13:\"changeAddress\";b:1;s:2:\"id\";s:67:\"NBimUZYpm3G7XADsiwr8dMagbHWtPtgJfvpiLPJHNBc29yqXPre8kFmfeBfFH18gYiG\";s:4:\"used\";b:0;}s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"changeAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"True
  if this address stores change from a previous transaction.\";s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Actual
  address.\";s:4:\"type\";s:6:\"string\";}s:4:\"used\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"True
  if this address has been used.\";s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:4:\"used\";i:2;s:13:\"changeAddress\";}s:4:\"type\";s:6:\"object\";}s:8:\"WalletId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"WalletOperation\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:6:\"create\";i:1;s:7:\"restore\";}s:4:\"type\";s:6:\"string\";}s:23:\"WalletResponse<Account>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Account\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:29:\"WalletResponse<EstimatedFees>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/EstimatedFees\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:24:\"WalletResponse<NodeInfo>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/NodeInfo\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:28:\"WalletResponse<NodeSettings>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/NodeSettings\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:27:\"WalletResponse<Transaction>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Transaction\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:22:\"WalletResponse<Wallet>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Wallet\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:29:\"WalletResponse<WalletAddress>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/WalletAddress\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:25:\"WalletResponse<[Account]>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Account\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:29:\"WalletResponse<[Transaction]>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Transaction\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:31:\"WalletResponse<[WalletAddress]>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/WalletAddress\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:24:\"WalletResponse<[Wallet]>\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"data\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Wallet\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Metadata\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ResponseStatus\";}}s:8:\"required\";a:3:{i:0;s:4:\"data\";i:1;s:6:\"status\";i:2;s:4:\"meta\";}s:4:\"type\";s:6:\"object\";}s:12:\"WalletUpdate\";O:8:\"stdClass\":4:{s:7:\"example\";O:8:\"stdClass\":2:{s:14:\"assuranceLevel\";s:6:\"normal\";s:4:\"name\";s:9:\"My
  Wallet\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:14:\"assuranceLevel\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"New
  assurance level.\";s:4:\"enum\";a:2:{i:0;s:6:\"normal\";i:1;s:6:\"strict\";}s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"New
  wallet's name.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:14:\"assuranceLevel\";i:1;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}}"
...
