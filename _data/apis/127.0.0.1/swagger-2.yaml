---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:13:\"Openchain API\";s:11:\"description\";s:61:\"Interact
  with the enterprise Blockchain through Openchain API\";s:7:\"version\";s:5:\"1.0.0\";}"
host: 127.0.0.1:3000
paths:
  /chain:
    get:
      summary: Blockchain Information
      description: The Chain endpoint returns information about the current state
        of the blockchain such as the height, the current block hash, and the previous
        block hash.
      tags:
      - Blockchain
      operationId: getChain
      responses:
        200:
          description: Blockchain information
          schema:
            $ref: '#/definitions/BlockchainInfo'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /chain/blocks/{Block}:
    get:
      summary: Individual Block Information
      description: The {Block} endpoint returns information about a specific block
        within the Blockchain. Note that the genesis block is block zero.
      tags:
      - Block
      operationId: getBlock
      parameters:
      - name: Block
        in: path
        description: Block number to retrieve
        type: integer
        format: uint64
        required: true
      responses:
        200:
          description: Individual Block contents
          schema:
            $ref: '#/definitions/Block'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /devops/deploy:
    post:
      summary: Service endpoint for deploying Chaincode
      description: The /devops/deploy endpoint receives Chaincode deployment requests.
        The Chaincode and the required entities are first packaged into a container
        and subsequently deployed to the blockchain. If the Chaincode build and deployment
        are successful, a confirmation message is returned. Otherwise, an error is
        displayed alongside with a reason for the failure.
      tags:
      - Devops
      operationId: chaincodeDeploy
      parameters:
      - name: ChaincodeSpec
        in: body
        description: Chaincode specification message
        required: true
        schema:
          $ref: '#/definitions/ChaincodeSpec'
      responses:
        200:
          description: Successfully deployed chainCode
          schema:
            $ref: '#/definitions/OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /devops/invoke:
    post:
      summary: Service endpoint for invoking Chaincode functions
      description: The /devops/invoke endpoint receives requests for invoking functions
        in deployed Chaincodes. If the Chaincode function is invoked sucessfully,
        a transaction id is returned. Otherwise, an error is displayed alongside with
        a reason for the failure.
      tags:
      - Devops
      operationId: chaincodeInvoke
      parameters:
      - name: ChaincodeInvocationSpec
        in: body
        description: Chaincode invocation message
        required: true
        schema:
          $ref: '#/definitions/ChaincodeInvocationSpec'
      responses:
        200:
          description: Successfully invoked transaction
          schema:
            $ref: '#/definitions/OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /devops/query:
    post:
      summary: Service endpoint for querying Chaincode state
      description: The /devops/query endpoint receives requests to query Chaincode
        state. The request triggers a query method on the target Chaincode, both identified
        in the required payload. If the query method is successful, the response defined
        within the method is returned. Otherwise, an error is displayed alongside
        with a reason for the failure.
      tags:
      - Devops
      operationId: chaincodeQuery
      parameters:
      - name: ChaincodeInvocationSpec
        in: body
        description: Chaincode invocation message
        required: true
        schema:
          $ref: '#/definitions/ChaincodeInvocationSpec'
      responses:
        200:
          description: Successfully queried chaincode
          schema:
            $ref: '#/definitions/OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registrar:
    post:
      summary: Service endpoint for registering a user with the certificate authority
      description: The /registrar endpoint receives requests to register a user with
        the certificate authority. The request must supply the registration id and
        password within the payload. If the registration is successful, the required
        transaction certificates are received and stored locally. Otherwise, an error
        is displayed alongside with a reason for the failure.
      tags:
      - Registrar
      operationId: registerUser
      parameters:
      - name: Secret
        in: body
        description: User enrollment credentials
        required: true
        schema:
          $ref: '#/definitions/Secret'
      responses:
        200:
          description: Successfully registered user with the certificate authority
          schema:
            $ref: '#/definitions/OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /registrar/{userID}:
    get:
      summary: Confirm the user has registered with the certificate authority
      description: The /registrar/{userID} endpoint confirms whether the specified
        user has registered with the certificate authority. If the user has registered,
        a confirmation message will be returned. Otherwise, an authorization failure
        will result.
      tags:
      - Registrar
      operationId: getUserRegistration
      parameters:
      - name: userID
        in: path
        description: Username for which registration is to be confirmed
        type: string
        required: true
      responses:
        200:
          description: Confirm registration for target user
          schema:
            $ref: '#/definitions/OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete user login tokens from local storage
      description: The /registrar/{userID} endpoint deletes any existing client login
        tokens from local storage. After the completion of this request, the target
        user will no longer be able to execute transactions.
      tags:
      - Registrar
      operationId: deleteUserRegistration
      parameters:
      - name: userID
        in: path
        description: Username for which login tokens are to be deleted
        type: string
        required: true
      responses:
        200:
          description: Confirm deletion of user login tokens
          schema:
            $ref: '#/definitions/OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":11:{s:14:\"BlockchainInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"height\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:6:\"uint64\";s:11:\"description\";s:33:\"Current
  height of the blockchain.\";}s:16:\"currentBlockHash\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"bytes\";s:11:\"description\";s:41:\"Hash
  of the last block in the blockchain.\";}s:17:\"previousBlockHash\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"bytes\";s:11:\"description\";s:45:\"Hash
  of the previous block in the blockchain.\";}}}s:5:\"Block\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"proposerID\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"Creator/originator
  of the block.\";}s:9:\"Timestamp\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Time
  of block creation.\";}s:12:\"transactions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Transaction\";}}s:9:\"stateHash\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"bytes\";s:11:\"description\";s:64:\"Global
  state hash after executing all transactions in the block.\";}s:17:\"previousBlockHash\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"bytes\";s:11:\"description\";s:45:\"Hash
  of the previous block in the blockchain.\";}}}s:11:\"Transaction\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"type\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:9:\"UNDEFINED\";s:7:\"example\";s:9:\"UNDEFINED\";s:4:\"enum\";a:5:{i:0;s:9:\"UNDEFINED\";i:1;s:13:\"CHAINCODE_NEW\";i:2;s:16:\"CHAINCODE_UPDATE\";i:3;s:17:\"CHAINCODE_EXECUTE\";i:4;s:19:\"CHAINCODE_TERMINATE\";}s:11:\"description\";s:17:\"Transaction
  type.\";}s:11:\"chaincodeID\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ChaincodeID\";s:11:\"description\";s:28:\"Unique
  Chaincode identifier.\";}s:8:\"function\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"Function
  to execute within a Chaincode.\";}s:4:\"args\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:45:\"Arguments
  supplied to the Chaincode function.\";}s:7:\"payload\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"bytes\";s:11:\"description\";s:50:\"Payload
  supplied for Chaincode function execution.\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"Unique
  transaction identifier.\";}}}s:11:\"ChaincodeID\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"path\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:88:\"Chaincode
  location in the file system. This value is required by the deploy transaction.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:87:\"Chaincode
  name identifier. This value is required by the invoke and query transactions.\";}}}s:13:\"ChaincodeSpec\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"type\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:6:\"GOLANG\";s:7:\"example\";s:6:\"GOLANG\";s:4:\"enum\";a:3:{i:0;s:9:\"UNDEFINED\";i:1;s:6:\"GOLANG\";i:2;s:4:\"NODE\";}s:11:\"description\";s:33:\"Chaincode
  specification language.\";}s:11:\"chaincodeID\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ChaincodeID\";s:11:\"description\";s:28:\"Unique
  Chaincode identifier.\";}s:7:\"ctorMsg\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChaincodeInput\";s:11:\"description\";s:50:\"Specific
  function to execute within the Chaincode.\";}s:13:\"secureContext\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"Username
  when security is enabled.\";}s:20:\"confidentialityLevel\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ConfidentialityLevel\";s:11:\"description\";s:39:\"Confidentiality
  level of the Chaincode.\";}}}s:23:\"ChaincodeInvocationSpec\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:13:\"chaincodeSpec\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ChaincodeSpec\";s:11:\"description\";s:32:\"Chaincode
  specification message.\";}}}s:20:\"ConfidentialityLevel\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:6:\"PUBLIC\";s:7:\"example\";s:6:\"PUBLIC\";s:4:\"enum\";a:2:{i:0;s:6:\"PUBLIC\";i:1;s:12:\"CONFIDENTIAL\";}s:11:\"description\";s:39:\"Confidentiality
  level of the Chaincode.\";}s:14:\"ChaincodeInput\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"function\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Function
  to execute within the Chaincode.\";}s:4:\"args\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:45:\"Arguments
  supplied to the Chaincode function.\";}}}s:6:\"Secret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"enrollId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"User
  enrollment id registered with the certificate authority.\";}s:12:\"enrollSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"User
  enrollment password registered with the certificate authority.\";}}}s:5:\"Error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"Error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"A
  descriptive message explaining the cause of error.\";}}}s:2:\"OK\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"OK\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:54:\"A
  descriptive message confirming a successful request.\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:74:\"An
  optional parameter containing additional information about the request.\";}}}}"
...
