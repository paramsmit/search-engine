---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":9:{s:11:\"description\";s:6833:\"API for a tool
  to craftsmen used to register working hours, material usage and quality assurance.
  \   \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to
  communicate with the API. API access is only allowed with SSL encrypted connection
  (https).\n# Authentication\nURL query authentication with an API key is used, so
  appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta
  settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination`
  object it means the endpoint supports pagination - currently it's only possible
  to change pages with `?page={page_number}` but implementing custom page sizes are
  on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases
  - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently
  experimental, but on some endpoints it's implemented on URL querys so eg. to order
  Invoices by `invoice_number` appending `?sort=Invoices.invoice_number&direction=desc`
  would sort the list descending by the value of `invoice_number`.\n# Associations\nIs
  currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`
  \ to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n#
  Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files`
  handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files`
  allows uploading and showing files, not belonging to specific form or wall post.\n#
  Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object
  contains keys with the properties that failes validation like:\n```\n  {\n      \"success\":
  false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n
  \         \"message\": \"A validation error occurred\",\n          \"errorCount\":
  1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name
  that failed validation\n                  \"Contacts must have at least one contact
  type\" ## Message with further explanation\n              ]\n          }\n      }\n
  \ }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent
  forms registered and embed the details of the User that made the form, and eventual
  products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n
  \ OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n
  \   .url(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n
  \   .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\",
  \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n####
  Unirest\n```\n  HttpResponse<String> response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n
  \   .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\",
  \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n
  \ var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials
  = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if
  (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n
  \ \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\");\n
  \ xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\",
  \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings
  = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\",\n
  \   \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n
  \     \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function
  (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n
  \ var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url:
  'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort:
  'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n
  \      limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token':
  '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body)
  {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n###
  Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n
  \ \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n
  \     'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\",
  payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n###
  C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\");\n
  \ var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n
  \ request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse
  response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require
  'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n
  \ \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode
  = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"]
  = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response
  = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n
  \ <?php\n\n  $request = new HttpRequest();\n  $request->setUrl('https://app.apacta.com/api/v1/forms');\n
  \ $request->setMethod(HTTP_METH_GET);\n  \n  $request->setQueryData(array(\n    'extended'
  => 'true',\n    'sort' => 'Forms.created',\n    'direction' => 'DESC',\n    'include'
  => 'Products,CreatedBy',\n    'limit' => '5'\n  ));\n  \n  $request->setHeaders(array(\n
  \   'accept' => 'application/json',\n    'x-auth-token' => '{INSERT_YOUR_TOKEN}'\n
  \ ));\n  \n  try {\n    $response = $request->send();\n  \n    echo $response->getBody();\n
  \ } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n
  \ $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5'
  --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n
  \ \n```\";s:5:\"title\";s:6:\"Apacta\";s:7:\"version\";s:5:\"0.0.1\";s:21:\"x-apisguru-categories\";a:2:{i:0;s:15:\"time_management\";i:1;s:18:\"project_management\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#FFFFFF\";s:3:\"url\";s:94:\"https://api.apis.guru/v2/cache/logo/https_apacta.com_wp-content_uploads_2016_01_apactalogo.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:37:\"http://apidoc.apacta.com/swagger.yaml\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:10:\"apacta.com\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"apacta\";s:4:\"type\";s:7:\"openapi\";}}"
host: app.apacta.com
basePath: /api/v1
paths:
  /cities:
    get:
      parameters:
      - description: Used to search for a city with specific zip code
        in: query
        name: zip_code
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/City'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get list of cities supported in Apacta
      tags:
      - Cities
      operationId: cities.get
  /cities/{city_id}:
    get:
      parameters:
      - in: path
        name: city_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/City'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get details about one city
      tags:
      - Cities
      operationId: cities.city_id.get
  /clocking_records:
    get:
      parameters:
      - description: Used to search for active clocking records
        in: query
        name: active
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/ClockingRecord'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get a list of clocking records
      tags:
      - ClockingRecords
      operationId: clocking_records.get
    post:
      parameters:
      - in: body
        name: clocking_record
        required: true
        schema:
          properties:
            checkin_latitude:
              type: string
            checkin_longitude:
              type: string
            checkout_latitude:
              type: string
            checkout_longitude:
              type: string
            project_id:
              format: uuid
              type: string
          type: object
      responses:
        201:
          description: Successfully added clocking record
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Create clocking record for authenticated user
      tags:
      - ClockingRecords
      operationId: clocking_records.post
  /clocking_records/checkout:
    post:
      responses:
        201:
          description: Successfully checked out
          schema:
            properties:
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Checkout active clocking record for authenticated user
      tags:
      - ClockingRecords
      operationId: clocking_records.checkout.post
  /clocking_records/{clocking_record_id}:
    delete:
      parameters:
      - in: path
        name: clocking_record_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete a clocking record
      tags:
      - ClockingRecords
      operationId: clocking_records.clocking_record_id.delete
    get:
      parameters:
      - in: path
        name: clocking_record_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/ClockingRecord'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Clocking record not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Details of 1 clocking_record
      tags:
      - ClockingRecords
      operationId: clocking_records.clocking_record_id.get
    put:
      parameters:
      - in: path
        name: clocking_record_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit a clocking record
      tags:
      - ClockingRecords
      operationId: clocking_records.clocking_record_id.put
  /companies:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Company'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get a list of companies
      tags:
      - Companies
      operationId: companies.get
  /companies/{company_id}:
    get:
      parameters:
      - in: path
        name: company_id
        required: true
        type: string
      responses:
        200:
          description: Company object
          schema:
            properties:
              data:
                $ref: '#/definitions/Company'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Company not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Details of 1 company
      tags:
      - Companies
      operationId: companies.company_id.get
  /companies/{company_id}/integration_feature_settings:
    get:
      parameters:
      - in: path
        name: company_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/IntegrationFeatureSetting'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get a list of integration feature settings
      tags:
      - Companies
      operationId: companies.company_id.integration_feature_settings.get
  /companies/{company_id}/integration_feature_settings/{integration_feature_setting_id}:
    get:
      parameters:
      - in: path
        name: company_id
        required: true
        type: string
      - in: path
        name: integration_feature_setting_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/IntegrationFeatureSetting'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: IntegrationFeatureSetting not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show details of 1 integration feature setting
      tags:
      - Companies
      operationId: companies.company_id.integration_feature_settings.integration_feature_setting_id.get
  /contact_types:
    get:
      parameters:
      - description: Search for specific identifier value
        in: query
        name: identifier
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/ContactType'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get list of contact types supported in Apacta
      tags:
      - ContactTypes
      operationId: contact_types.get
  /contact_types/{contact_type_id}:
    get:
      parameters:
      - in: path
        name: contact_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/ContactType'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get details about one contact type
      tags:
      - ContactTypes
      operationId: contact_types.contact_type_id.get
  /contacts:
    get:
      parameters:
      - description: Used to search for a contact with a specific name
        in: query
        name: name
        required: false
        type: string
      - description: Search for values in CVR field
        in: query
        name: cvr
        type: string
      - description: Search for values in EAN field
        in: query
        name: ean
        type: string
      - description: Search for values in ERP id field
        in: query
        name: erp_id
        type: string
      - description: Used to show only contacts with with one specific `ContactType`
        format: uuid
        in: query
        name: contact_type
        type: string
      - description: Used to show only contacts with with one specific `City`
        in: query
        name: city
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Contact'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get a list of contacts
      tags:
      - Contacts
      operationId: contacts.get
    post:
      parameters:
      - in: body
        name: contact
        schema:
          properties:
            address:
              description: Street address
              maxLength: 255
              type: string
            city_id:
              format: uuid
              type: string
            contact_types:
              properties:
                _ids:
                  items:
                    type: string
                  type: array
              type: object
            cvr:
              maxLength: 255
              type: string
            description:
              maxLength: 8192
              type: string
            email:
              maxLength: 255
              type: string
            erp_id:
              description: If company has integration to an ERP system, and the contacts
                are synchronized, this will be the ERP-systems ID of this contact
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
            phone:
              description: Format like eg. `28680133` or `046158971404`
              maxLength: 32
              type: string
            website:
              maxLength: 255
              type: string
          type: object
      responses:
        201:
          description: Successfully added contact
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add a new contact
      tags:
      - Contacts
      operationId: contacts.post
  /contacts/{contact_id}:
    delete:
      parameters:
      - in: path
        name: contact_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete a contact
      tags:
      - Contacts
      operationId: contacts.contact_id.delete
    get:
      parameters:
      - in: path
        name: contact_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Contact'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Contact not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Details of 1 contact
      tags:
      - Contacts
      operationId: contacts.contact_id.get
    put:
      parameters:
      - in: path
        name: contact_id
        required: true
        type: string
      - in: body
        name: contact
        schema:
          properties:
            address:
              description: Street address
              maxLength: 255
              type: string
            city_id:
              format: uuid
              type: string
            contact_types:
              properties:
                _ids:
                  items:
                    type: string
                  type: array
              type: object
            cvr:
              maxLength: 255
              type: string
            description:
              maxLength: 8192
              type: string
            email:
              maxLength: 255
              type: string
            erp_id:
              description: If company has integration to an ERP system, and the contacts
                are synchronized, this will be the ERP-systems ID of this contact
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
            phone:
              description: Format like eg. `28680133` or `046158971404`
              maxLength: 32
              type: string
            website:
              maxLength: 255
              type: string
          type: object
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit a contact
      tags:
      - Contacts
      operationId: contacts.contact_id.put
  /currencies:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Currency'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get list of currencies supported in Apacta
      tags:
      - Currencies
      operationId: currencies.get
  /currencies/{currency_id}:
    get:
      parameters:
      - in: path
        name: currency_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Currency'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get details about one currency
      tags:
      - Currencies
      operationId: currencies.currency_id.get
  /employee_hours:
    get:
      parameters:
      - description: Date formatted as Y-m-d (2016-06-28)
        in: query
        name: date_from
        required: true
        type: string
      - description: Date formatted as Y-m-d (2016-06-28)
        in: query
        name: date_to
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                description: One element per form in the period
                items:
                  properties:
                    form_date:
                      description: Y-m-d formatted
                      format: date
                      type: string
                    form_id:
                      format: uuid
                      type: string
                    project_name:
                      type: string
                    total_hours:
                      description: The amount of hours in seconds
                      format: int32
                      type: integer
                    working_description:
                      description: Trimmed at 50 characters
                      type: string
                    working_description_full:
                      description: Full work description (if available)
                      type: string
                  type: object
                type: array
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Used to retrieve details about the logged in user's hours
      tags:
      - EmployeeHours
      operationId: employee_hours.get
  /expense_files:
    get:
      parameters:
      - format: uuid
        in: query
        name: created_by_id
        type: string
      - format: uuid
        in: query
        name: expense_id
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/ExpenseFile'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of expense files
      tags:
      - ExpenseFiles
      operationId: expense_files.get
    post:
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: file
        required: true
        type: file
      - in: formData
        name: description
        required: false
        type: string
      responses:
        201:
          description: Successfully added file
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add file to expense
      tags:
      - ExpenseFiles
      operationId: expense_files.post
  /expense_files/{expense_file_id}:
    delete:
      parameters:
      - in: path
        name: expense_file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete file
      tags:
      - ExpenseFiles
      operationId: expense_files.expense_file_id.delete
    get:
      parameters:
      - in: path
        name: expense_file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show file
      tags:
      - ExpenseFiles
      operationId: expense_files.expense_file_id.get
    put:
      parameters:
      - format: uuid
        in: path
        name: expense_file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit file
      tags:
      - ExpenseFiles
      operationId: expense_files.expense_file_id.put
  /expense_lines:
    get:
      parameters:
      - format: uuid
        in: query
        name: created_by_id
        type: string
      - format: uuid
        in: query
        name: currency_id
        type: string
      - format: uuid
        in: query
        name: expense_id
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/ExpenseLine'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of expense lines
      tags:
      - ExpenseLines
      operationId: expense_lines.get
    post:
      parameters:
      - in: body
        name: expense_line
        schema:
          properties:
            buying_price:
              format: float
              type: number
            currency_id:
              format: uuid
              type: string
            expense_id:
              format: uuid
              type: string
            quantity:
              format: int32
              type: integer
            selling_price:
              format: float
              type: number
            text:
              maxLength: 255
              type: string
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add line to expense
      tags:
      - ExpenseLines
      operationId: expense_lines.post
  /expense_lines/{expense_line_id}:
    delete:
      parameters:
      - in: path
        name: expense_line_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/ExpenseLine'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete expense line
      tags:
      - ExpenseLines
      operationId: expense_lines.expense_line_id.delete
    get:
      parameters:
      - in: path
        name: expense_line_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/ExpenseLine'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show expense line
      tags:
      - ExpenseLines
      operationId: expense_lines.expense_line_id.get
    put:
      parameters:
      - in: path
        name: expense_line_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/ExpenseLine'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit expense line
      tags:
      - ExpenseLines
      operationId: expense_lines.expense_line_id.put
  /expenses:
    get:
      parameters:
      - format: uuid
        in: query
        name: created_by_id
        type: string
      - format: uuid
        in: query
        name: company_id
        type: string
      - format: uuid
        in: query
        name: contact_id
        type: string
      - format: uuid
        in: query
        name: project_id
        type: string
      - description: Created after date
        format: date
        in: query
        name: gt_created
        type: string
      - description: Created before date
        format: date
        in: query
        name: lt_created
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Expense'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of expenses
      tags:
      - Expenses
      operationId: expenses.get
    post:
      parameters:
      - in: body
        name: expense_line
        schema:
          properties:
            contact_id:
              format: uuid
              type: string
            currency_id:
              format: uuid
              type: string
            delivery_date:
              format: date
              type: string
            description:
              maxLength: 8192
              type: string
            project_id:
              format: uuid
              type: string
            reference:
              maxLength: 8192
              type: string
            short_text:
              maxLength: 255
              type: string
            supplier_invoice_number:
              maxLength: 255
              type: string
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add line to expense
      tags:
      - Expenses
      operationId: expenses.post
  /expenses/{expense_id}:
    delete:
      parameters:
      - in: path
        name: expense_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Expense'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete expense
      tags:
      - Expenses
      operationId: expenses.expense_id.delete
    get:
      parameters:
      - in: path
        name: expense_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Expense'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show expense
      tags:
      - Expenses
      operationId: expenses.expense_id.get
    put:
      parameters:
      - in: path
        name: expense_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Expense'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit expense
      tags:
      - Expenses
      operationId: expenses.expense_id.put
  /expenses/{expense_id}/original_files:
    get:
      parameters:
      - in: path
        name: expense_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of all OIOUBL files for the expense
      tags:
      - Expense OIOUBL files
      operationId: expenses.expense_id.original_files.get
  /expenses/{expense_id}/original_files/{file_id}:
    get:
      parameters:
      - in: path
        name: expense_id
        required: true
        type: string
      - in: path
        name: file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show OIOUBL file
      tags:
      - Expense OIOUBL files
      operationId: expenses.expense_id.original_files.file_id.get
  /form_field_types:
    get:
      parameters:
      - description: Used to filter on the `name` of the form_fields
        in: query
        name: name
        required: false
        type: string
      - description: Used to filter on the `identifier` of the form_fields
        in: query
        name: identifier
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/FormFieldType'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get list of form field types
      tags:
      - FormFieldTypes
      operationId: form_field_types.get
  /form_field_types/{form_field_type_id}:
    get:
      parameters:
      - in: path
        name: form_field_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/FormFieldType'
              success:
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get details about single `FormField`
      tags:
      - FormFieldTypes
      operationId: form_field_types.form_field_type_id.get
  /form_fields:
    post:
      parameters:
      - in: body
        name: form_field
        schema:
          properties:
            comment:
              maxLength: 8192
              type: string
            content_value:
              maxLength: 255
              type: string
            file_id:
              format: uuid
              type: string
            form_field_type_id:
              format: uuid
              type: string
            form_id:
              format: uuid
              type: string
            form_template_field_id:
              format: uuid
              type: string
            placement:
              format: int32
              type: integer
          type: object
      responses:
        201:
          description: Successfully added field
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add a new field to a `Form`
      tags:
      - FormFields
      operationId: form_fields.post
  /form_fields/{form_field_id}:
    get:
      parameters:
      - in: path
        name: form_field_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/FormField'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get details about single `FormField`
      tags:
      - FormFields
      operationId: form_fields.form_field_id.get
  /form_templates:
    get:
      parameters:
      - description: Used to filter on the `name` of the form_templates
        in: query
        name: name
        type: string
      - description: Used to filter on the `identifier` of the form_templates
        in: query
        name: identifier
        required: false
        type: string
      - description: Used to filter on the `pdf_template_identifier` of the form_templates
        in: query
        name: pdf_template_identifier
        type: string
      - description: Used to filter on the `description` of the form_templates
        in: query
        name: description
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/FormTemplate'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get array of form_templates for your company
      tags:
      - FormTemplates
      operationId: form_templates.get
  /form_templates/{form_template_id}:
    get:
      parameters:
      - in: path
        name: form_template_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/FormTemplate'
              success:
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View one form template
      tags:
      - FormTemplates
      operationId: form_templates.form_template_id.get
  /forms:
    get:
      parameters:
      - description: Used to have extended details from the forms from the `Form`'s
          `FormFields`
        enum:
        - true
        - false
        in: query
        name: extended
        type: string
      - description: Used in conjunction with `date_to` to only show forms within
          these dates - format like `2016-28-05`
        format: Y-m-d
        in: query
        name: date_from
        type: string
      - description: Used in conjunction with `date_from` to only show forms within
          these dates - format like `2016-28-30`
        format: Y-m-d
        in: query
        name: date_to
        type: string
      - description: Used to filter on the `project_id` of the forms
        format: uuid
        in: query
        name: project_id
        type: string
      - description: Used to filter on the `created_by_id` of the forms
        in: query
        name: created_by_id
        required: false
        type: string
      - description: Used to filter on the `form_template_id` of the forms
        in: query
        name: form_template_id
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Form'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Retrieve array of forms
      tags:
      - Forms
      operationId: forms.get
    post:
      description: Used to add a form into the system
      parameters:
      - in: body
        name: form
        schema:
          properties:
            form_template_id:
              format: uuid
              type: string
            project_id:
              format: uuid
              type: string
          required:
          - project_id
          - form_template_id
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add new form
      tags:
      - Forms
      operationId: forms.post
  /forms/{form_id}:
    delete:
      description: You can only delete the forms that you've submitted yourself
      parameters:
      - in: path
        name: form_id
        required: true
        type: string
      responses:
        200:
          description: OK
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete a form
      tags:
      - Forms
      operationId: forms.form_id.delete
    get:
      parameters:
      - in: path
        name: form_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Form'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View form
      tags:
      - Forms
      operationId: forms.form_id.get
    put:
      parameters:
      - in: path
        name: form_id
        required: true
        type: string
      responses:
        200:
          description: OK
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit a form
      tags:
      - Forms
      operationId: forms.form_id.put
  /invoice_lines:
    get:
      parameters:
      - format: uuid
        in: query
        name: invoice_id
        type: string
      - format: uuid
        in: query
        name: product_id
        type: string
      - format: uuid
        in: query
        name: user_id
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: discount_text
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/InvoiceLine'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View list of invoice lines
      tags:
      - InvoiceLines
      operationId: invoice_lines.get
    post:
      parameters:
      - in: body
        name: invoice_line
        schema:
          properties:
            description:
              maxLength: 8192
              type: string
            discount_percent:
              format: int32
              type: integer
            discount_text:
              maxLength: 255
              type: string
            invoice_id:
              format: uuid
              type: string
            name:
              maxLength: 2048
              type: string
            product_id:
              format: uuid
              type: string
            quantity:
              format: int32
              type: integer
            selling_price:
              format: float
              type: number
            user_id:
              format: uuid
              type: string
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add invoice
      tags:
      - InvoiceLines
      operationId: invoice_lines.post
  /invoice_lines/{invoice_line_id}:
    delete:
      parameters:
      - format: uuid
        in: path
        name: invoice_line_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete invoice line
      tags:
      - InvoiceLines
      operationId: invoice_lines.invoice_line_id.delete
    get:
      parameters:
      - format: uuid
        in: path
        name: invoice_line_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/InvoiceLine'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View invoice line
      tags:
      - InvoiceLines
      operationId: invoice_lines.invoice_line_id.get
    put:
      parameters:
      - format: uuid
        in: path
        name: invoice_line_id
        required: true
        type: string
      - in: body
        name: invoice_line
        schema:
          properties:
            description:
              maxLength: 8192
              type: string
            discount_percent:
              format: int32
              type: integer
            discount_text:
              maxLength: 255
              type: string
            invoice_id:
              format: uuid
              type: string
            name:
              maxLength: 2048
              type: string
            product_id:
              format: uuid
              type: string
            quantity:
              format: int32
              type: integer
            selling_price:
              format: float
              type: number
            user_id:
              format: uuid
              type: string
          type: object
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit invoice line
      tags:
      - InvoiceLines
      operationId: invoice_lines.invoice_line_id.put
  /invoices:
    get:
      parameters:
      - description: Used to filter on the `contact_id` of the invoices
        format: uuid
        in: query
        name: contact_id
        type: string
      - description: Used to filter on the `project_id` of the invoices
        format: uuid
        in: query
        name: project_id
        required: false
        type: string
      - description: Used to filter on the `invoice_number` of the invoices
        in: query
        name: invoice_number
        type: string
      - in: query
        name: offer_number
        type: string
      - enum:
        - 0
        - 1
        in: query
        name: is_draft
        type: integer
      - enum:
        - 0
        - 1
        in: query
        name: is_offer
        type: integer
      - enum:
        - 0
        - 1
        in: query
        name: is_locked
        type: integer
      - format: date
        in: query
        name: date_from
        type: string
      - format: date
        in: query
        name: date_to
        type: string
      - format: date
        in: query
        name: issued_date
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Invoice'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View list of invoices
      tags:
      - Invoices
      operationId: invoices.get
    post:
      parameters:
      - in: body
        name: invoice
        schema:
          properties:
            contact_id:
              format: uuid
              type: string
            created_or_modified_gte:
              format: date
              type: string
            date_from:
              format: date
              type: string
            date_to:
              format: date
              type: string
            erp_id:
              maxLength: 255
              type: string
            erp_payment_term_id:
              maxLength: 255
              type: string
            invoice_number:
              format: int32
              maxLength: 8
              type: integer
            is_draft:
              type: boolean
            is_locked:
              type: boolean
            is_offer:
              type: boolean
            issued_date:
              format: date
              type: string
            message:
              maxLength: 8192
              type: string
            offer_number:
              format: int32
              maxLength: 8
              type: integer
            payment_due_date:
              format: date
              type: string
            payment_term_id:
              format: uuid
              type: string
            project_id:
              format: uuid
              type: string
            reference:
              maxLength: 255
              type: string
            vat_percent:
              format: int32
              maxLength: 2
              type: integer
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add invoice
      tags:
      - Invoices
      operationId: invoices.post
  /invoices/{invoice_id}:
    delete:
      parameters:
      - in: path
        name: invoice_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete invoice
      tags:
      - Invoices
      operationId: invoices.invoice_id.delete
    get:
      parameters:
      - in: path
        name: invoice_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Invoice'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View invoice
      tags:
      - Invoices
      operationId: invoices.invoice_id.get
    put:
      parameters:
      - in: path
        name: invoice_id
        required: true
        type: string
      - in: body
        name: invoice
        schema:
          properties:
            contact_id:
              format: uuid
              type: string
            date_from:
              format: date
              type: string
            date_to:
              format: date
              type: string
            erp_id:
              maxLength: 255
              type: string
            erp_payment_term_id:
              maxLength: 255
              type: string
            invoice_number:
              format: int32
              maxLength: 8
              type: integer
            is_draft:
              type: boolean
            is_locked:
              type: boolean
            is_offer:
              type: boolean
            issued_date:
              format: date
              type: string
            message:
              maxLength: 8192
              type: string
            offer_number:
              format: int32
              maxLength: 8
              type: integer
            payment_due_date:
              format: date
              type: string
            payment_term_id:
              format: uuid
              type: string
            project_id:
              format: uuid
              type: string
            reference:
              maxLength: 255
              type: string
            vat_percent:
              format: int32
              maxLength: 2
              type: integer
          type: object
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit invoice
      tags:
      - Invoices
      operationId: invoices.invoice_id.put
  /mass_messages_users:
    get:
      parameters:
      - description: Used to filter on the `is_read` of the mass messages
        in: query
        name: is_read
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/MassMessagesUser'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View list of mass messages for specific user
      tags:
      - MassMessagesUsers
      operationId: mass_messages_users.get
  /mass_messages_users/{mass_messages_user_id}:
    get:
      parameters:
      - in: path
        name: mass_messages_user_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/MassMessagesUser'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View mass message
      tags:
      - MassMessagesUsers
      operationId: mass_messages_users.mass_messages_user_id.get
    put:
      parameters:
      - in: path
        name: mass_messages_user_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit mass message
      tags:
      - MassMessagesUsers
      operationId: mass_messages_users.mass_messages_user_id.put
  /materials:
    get:
      parameters:
      - description: Used to filter on the `barcode` of the materials
        in: query
        name: barcode
        required: false
        type: string
      - description: Used to filter on the `name` of the materials
        in: query
        name: name
        required: false
        type: string
      - description: Used to find materials used in specific project by `project_id`
        format: uuid
        in: query
        name: project_id
        required: false
        type: string
      - description: Used to find currently rented materials
        in: query
        name: currently_rented
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Material'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View list of all materials
      tags:
      - Materials
      operationId: materials.get
  /materials/{material_id}:
    delete:
      parameters:
      - in: path
        name: material_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete material
      tags:
      - Materials
      operationId: materials.material_id.delete
    get:
      parameters:
      - in: path
        name: material_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Material'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View material
      tags:
      - Materials
      operationId: materials.material_id.get
    put:
      parameters:
      - in: path
        name: material_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit material
      tags:
      - Materials
      operationId: materials.material_id.put
  /materials/{material_id}/rentals/:
    get:
      parameters:
      - in: path
        name: material_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/MaterialRental'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of rentals for specific material
      tags:
      - MaterialRentals
      operationId: materials.material_id.rentals.get
    post:
      parameters:
      - in: body
        name: material_rental
        schema:
          properties:
            form_id:
              format: uuid
              type: string
            from_date:
              format: dateTime
              type: string
            is_invoiced:
              format: dateTime
              type: string
            material_id:
              format: uuid
              type: string
            project_id:
              format: uuid
              type: string
            quantity:
              format: float
              type: number
            to_date:
              format: dateTime
              type: string
          type: object
      - in: path
        name: material_id
        required: true
        type: string
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add material rental
      tags:
      - MaterialRentals
      operationId: materials.material_id.rentals.post
  /materials/{material_id}/rentals/checkout/:
    post:
      parameters:
      - in: path
        name: material_id
        required: true
        type: string
      - in: body
        name: material_rental
        schema:
          properties:
            form_id:
              format: uuid
              type: string
            material_rental_id:
              format: uuid
              type: string
            to_date:
              format: dateTime
              type: string
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Checkout material rental
      tags:
      - MaterialRentals
      operationId: materials.material_id.rentals.checkout.post
  /materials/{material_id}/rentals/{material_rental_id}/:
    delete:
      description: Delete rental for material
      parameters:
      - format: uuid
        in: path
        name: material_id
        required: true
        type: string
      - format: uuid
        in: path
        name: material_rental_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete material rental
      tags:
      - MaterialRentals
      operationId: materials.material_id.rentals.material_rental_id.delete
    get:
      parameters:
      - in: path
        name: material_id
        required: true
        type: string
      - in: path
        name: material_rental_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/MaterialRental'
              success:
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show rental foor materi
      tags:
      - MaterialRentals
      operationId: materials.material_id.rentals.material_rental_id.get
    post:
      parameters:
      - in: body
        name: material
        schema:
          properties:
            barcode:
              type: string
            billing_cysle:
              enum:
              - hourly
              - daily
              - weekly
              type: string
            cost_price:
              format: float
              type: number
            description:
              type: string
            is_single_usage:
              type: boolean
            name:
              type: string
            selling_price:
              format: float
              type: number
          type: object
      - in: path
        name: material_id
        required: true
        type: string
      - in: path
        name: material_rental_id
        required: true
        type: string
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add material
      tags:
      - Materials
      operationId: materials.material_id.rentals.material_rental_id.post
    put:
      description: Edit material rental
      parameters:
      - format: uuid
        in: path
        name: material_id
        required: true
        type: string
      - format: uuid
        in: path
        name: material_rental_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit material rental
      tags:
      - MaterialRentals
      operationId: materials.material_id.rentals.material_rental_id.put
  /payment_term_types:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/PaymentTermType'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get a list of payment term types
      tags:
      - PaymentTermTypes
      operationId: payment_term_types.get
  /payment_term_types/{payment_term_type_id}:
    get:
      parameters:
      - in: path
        name: payment_term_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/PaymentTermType'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Details of 1 payment term type
      tags:
      - PaymentTermTypes
      operationId: payment_term_types.payment_term_type_id.get
  /payment_terms:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/PaymentTerm'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get a list of payment terms
      tags:
      - PaymentTerms
      operationId: payment_terms.get
  /payment_terms/{payment_term_id}:
    get:
      parameters:
      - in: path
        name: payment_term_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/PaymentTerm'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: PaymentTerm not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Details of 1 payment term
      tags:
      - PaymentTerms
      operationId: payment_terms.payment_term_id.get
  /ping:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              status:
                default: ok
                type: string
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Check if API is up and API key works
      tags:
      - Ping
      operationId: ping.get
  /products:
    get:
      parameters:
      - description: Used to filter on the `name` of the products
        in: query
        name: name
        type: string
      - description: Used to filter on the `product_number` of the products
        format: uuid
        in: query
        name: product_number
        type: string
      - description: Used to filter on the `barcode` of the products
        in: query
        name: barcode
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Product'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List products
      tags:
      - Products
      operationId: products.get
    post:
      parameters:
      - in: body
        name: product
        schema:
          properties:
            barcode:
              maxLength: 255
              type: string
            buying_price:
              format: double
              type: number
            description:
              maxLength: 8192
              type: string
            erp_id:
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
            product_number:
              maxLength: 255
              type: string
            selling_price:
              format: double
              type: number
          required:
          - name
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add new product
      tags:
      - Products
      operationId: products.post
  /products/{product_id}:
    delete:
      parameters:
      - in: path
        name: product_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete a product
      tags:
      - Products
      operationId: products.product_id.delete
    get:
      parameters:
      - in: path
        name: product_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Product'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View single product
      tags:
      - Products
      operationId: products.product_id.get
    put:
      parameters:
      - in: path
        name: product_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit a product
      tags:
      - Products
      operationId: products.product_id.put
  /project_statuses:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/ProjectStatus'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get list of project statuses
      tags:
      - ProjectStatuses
      operationId: project_statuses.get
  /project_statuses/{project_status_id}:
    get:
      parameters:
      - in: path
        name: project_status_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/ProjectStatus'
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get details about one contact type
      tags:
      - ProjectStatuses
      operationId: project_statuses.project_status_id.get
  /projects:
    get:
      parameters:
      - default: false
        description: Unless this is set to `true` only open projects will be shown
        in: query
        name: show_all
        required: false
        type: boolean
      - description: Used to filter on the `contact_id` of the projects
        format: uuid
        in: query
        name: contact_id
        type: string
      - description: Used to filter on the `project_status_id` of the projects
        format: uuid
        in: query
        name: project_status_id
        type: string
      - collectionFormat: csv
        description: Used to filter on the `project_status_id` of the projects (match
          any of the provided values)
        in: query
        items:
          format: uuid
          type: string
        name: project_status_ids
        type: array
      - description: Used to search on the `name` of the projects
        in: query
        name: name
        type: string
      - description: Used to search on the `erp_id` of the projects
        in: query
        name: erp_id
        type: string
      - description: Show projects with start time after than this value
        in: query
        name: start_time_gte
        type: string
      - description: Show projects with start time before this value
        in: query
        name: start_time_lte
        type: string
      - description: Show only projects with start time on specific date
        in: query
        name: start_time_eq
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/Project'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View list of projects
      tags:
      - Projects
      operationId: projects.get
    post:
      parameters:
      - in: body
        name: project
        schema:
          properties:
            contact_id:
              format: uuid
              type: string
            description:
              maxLength: 8192
              type: string
            erp_project_id:
              maxLength: 255
              type: string
            erp_task_id:
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
            project_status_id:
              format: uuid
              type: string
            start_time:
              format: datetime
              type: string
            street_name:
              maxLength: 255
              type: string
          required:
          - name
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add a project
      tags:
      - Projects
      operationId: projects.post
  /projects/{project_id}:
    delete:
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete a project
      tags:
      - Projects
      operationId: projects.project_id.delete
    get:
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/Project'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View specific project
      tags:
      - Projects
      operationId: projects.project_id.get
    put:
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      - in: body
        name: project
        schema:
          properties:
            contact_id:
              format: uuid
              type: string
            description:
              maxLength: 8192
              type: string
            erp_project_id:
              maxLength: 255
              type: string
            erp_task_id:
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
            project_status_id:
              format: uuid
              type: string
            start_time:
              format: datetime
              type: string
            street_name:
              maxLength: 255
              type: string
          required:
          - name
          type: object
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit a project
      tags:
      - Projects
      operationId: projects.project_id.put
  /projects/{project_id}/files:
    get:
      description: Used to show files uploaded to a project from wall post or form
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of files uploaded to project
      tags:
      - Projects
      operationId: projects.project_id.files.get
  /projects/{project_id}/files/{file_id}/:
    delete:
      description: Delete file uploaded to a project from wall post or form
      parameters:
      - format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - format: uuid
        in: path
        name: file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete file
      tags:
      - Projects
      operationId: projects.project_id.files.file_id.delete
    get:
      description: Show file uploaded to a project from wall post or form
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      - in: path
        name: file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show file
      tags:
      - Projects
      operationId: projects.project_id.files.file_id.get
    put:
      description: Edit file uploaded to a project from wall post or form
      parameters:
      - format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - format: uuid
        in: path
        name: file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit file
      tags:
      - Projects
      operationId: projects.project_id.files.file_id.put
  /projects/{project_id}/project_files:
    get:
      description: Returns files belonging to the project, not uploaded from wall
        post or form
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: string
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of project files uploaded to project
      tags:
      - Projects
      operationId: projects.project_id.project_files.get
    post:
      consumes:
      - multipart/form-data
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      - in: formData
        name: file
        required: true
        type: file
      responses:
        201:
          description: Successfully added project file
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add project file to projects
      tags:
      - Projects
      operationId: projects.project_id.project_files.post
  /projects/{project_id}/project_files/{project_file_id}/:
    delete:
      parameters:
      - format: uuid
        in: path
        name: project_file_id
        required: true
        type: string
      - format: uuid
        in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete project file
      tags:
      - Projects
      operationId: projects.project_id.project_files.project_file_id.delete
    get:
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      - in: path
        name: project_file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show project file
      tags:
      - Projects
      operationId: projects.project_id.project_files.project_file_id.get
    put:
      parameters:
      - format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - format: uuid
        in: path
        name: project_file_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                default: true
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit project file
      tags:
      - Projects
      operationId: projects.project_id.project_files.project_file_id.put
  /projects/{project_id}/users/:
    get:
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/User'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Show list of users added to project
      tags:
      - Projects
      operationId: projects.project_id.users.get
    post:
      parameters:
      - in: path
        name: project_id
        required: true
        type: string
      - in: body
        name: user_id
        schema:
          properties:
            user_id:
              format: uuid
              type: string
          required:
          - user_id
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add user to project
      tags:
      - Projects
      operationId: projects.project_id.users.post
  /projects/{project_id}/users/{user_id}:
    delete:
      parameters:
      - in: path
        name: user_id
        required: true
        type: string
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete user from project
      tags:
      - Projects
      operationId: projects.project_id.users.user_id.delete
    get:
      parameters:
      - in: path
        name: user_id
        required: true
        type: string
      - in: path
        name: project_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/User'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View specific user assigned to project
      tags:
      - Projects
      operationId: projects.project_id.users.user_id.get
  /stock_locations:
    get:
      parameters:
      - description: Used to filter on the `name` of the stock_locations
        in: query
        name: name
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/StockLocation'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List stock_locations
      tags:
      - StockLocations
      operationId: stock_locations.get
    post:
      parameters:
      - in: body
        name: location
        schema:
          properties:
            name:
              maxLength: 255
              type: string
          required:
          - name
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add new stock_locations
      tags:
      - StockLocations
      operationId: stock_locations.post
  /stock_locations/{location_id}:
    delete:
      parameters:
      - in: path
        name: location_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete location
      tags:
      - StockLocations
      operationId: stock_locations.location_id.delete
    get:
      parameters:
      - in: path
        name: location_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/StockLocation'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View single location
      tags:
      - StockLocations
      operationId: stock_locations.location_id.get
    put:
      parameters:
      - in: path
        name: location_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit location
      tags:
      - StockLocations
      operationId: stock_locations.location_id.put
  /time_entries:
    get:
      parameters:
      - in: query
        name: user_id
        type: string
      - in: query
        name: form_id
        type: string
      - in: query
        name: project_id
        type: string
      - in: query
        name: gt_from_time
        type: string
      - in: query
        name: lt_from_time
        type: string
      - in: query
        name: gt_to_time
        type: string
      - in: query
        name: lt_to_time
        type: string
      - in: query
        name: lt_sum
        type: string
      - in: query
        name: gt_sum
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/TimeEntry'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List time entries
      tags:
      - TimeEntries
      operationId: time_entries.get
    post:
      parameters:
      - in: body
        name: time_entry
        schema:
          properties:
            form_id:
              format: uuid
              type: string
            from_time:
              format: dateTime
              type: string
            is_all_day:
              type: boolean
            project_id:
              format: uuid
              type: string
            sum:
              description: Amount of seconds - should only be included when using
                is_all_day, otherwise will be calculated from from_time and to_time
              format: int32
              type: integer
            time_entry_type_id:
              format: uuid
              type: string
            to_time:
              format: dateTime
              type: string
            user_id:
              format: uuid
              type: string
          required:
          - user_id
          - time_entry_type_id
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add new time entry
      tags:
      - TimeEntries
      operationId: time_entries.post
  /time_entries/{time_entry_id}:
    delete:
      parameters:
      - format: uuid
        in: path
        name: time_entry_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete time entry
      tags:
      - TimeEntries
      operationId: time_entries.time_entry_id.delete
    get:
      parameters:
      - format: uuid
        in: path
        name: time_entry_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/TimeEntry'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View time entry
      tags:
      - TimeEntries
      operationId: time_entries.time_entry_id.get
    put:
      parameters:
      - format: uuid
        in: path
        name: time_entry_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit time entry
      tags:
      - TimeEntries
      operationId: time_entries.time_entry_id.put
  /time_entry_intervals:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/TimeEntryInterval'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List possible time entry intervals
      tags:
      - TimeEntryIntervals
      operationId: time_entry_intervals.get
  /time_entry_intervals/{time_entry_interval_id}:
    get:
      parameters:
      - format: uuid
        in: path
        name: time_entry_interval_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/TimeEntryInterval'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View time entry interval
      tags:
      - TimeEntryIntervals
      operationId: time_entry_intervals.time_entry_interval_id.get
  /time_entry_types:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/TimeEntryType'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List time entries types
      tags:
      - TimeEntryTypes
      operationId: time_entry_types.get
    post:
      parameters:
      - in: body
        name: time_entry_type
        schema:
          properties:
            description:
              maxLength: 8192
              type: string
            name:
              maxLength: 255
              type: string
            time_entry_interval_id:
              format: uuid
              type: string
            time_entry_value_type_id:
              format: uuid
              type: string
          required:
          - time_entry_interval_id
          - time_entry_value_type_id
          - name
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add new time entry type
      tags:
      - TimeEntryTypes
      operationId: time_entry_types.post
  /time_entry_types/{time_entry_type_id}:
    delete:
      parameters:
      - format: uuid
        in: path
        name: time_entry_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete time entry type
      tags:
      - TimeEntryTypes
      operationId: time_entry_types.time_entry_type_id.delete
    get:
      parameters:
      - format: uuid
        in: path
        name: time_entry_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/TimeEntryType'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View time entry type
      tags:
      - TimeEntryTypes
      operationId: time_entry_types.time_entry_type_id.get
    put:
      parameters:
      - format: uuid
        in: path
        name: time_entry_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit time entry type
      tags:
      - TimeEntryTypes
      operationId: time_entry_types.time_entry_type_id.put
  /time_entry_unit_types:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/TimeEntryUnitType'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List possible time entry unit types
      tags:
      - TimeEntryUnitTypes
      operationId: time_entry_unit_types.get
  /time_entry_unit_types/{time_entry_unit_type_id}:
    get:
      parameters:
      - format: uuid
        in: path
        name: time_entry_unit_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/TimeEntryUnitType'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View time entry unit type
      tags:
      - TimeEntryUnitTypes
      operationId: time_entry_unit_types.time_entry_unit_type_id.get
  /time_entry_value_types:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/TimeEntryValueType'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: List possible time entry value types
      tags:
      - TimeEntryValueTypes
      operationId: time_entry_value_types.get
  /time_entry_value_types/{time_entry_value_type_id}:
    get:
      parameters:
      - format: uuid
        in: path
        name: time_entry_value_type_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/TimeEntryValueType'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View time entry value type
      tags:
      - TimeEntryValueTypes
      operationId: time_entry_value_types.time_entry_value_type_id.get
  /users:
    get:
      parameters:
      - description: Used to filter on the `first_name` of the users
        in: query
        name: first_name
        required: false
        type: string
      - description: Used to filter on the `last_name` of the users
        in: query
        name: last_name
        required: false
        type: string
      - description: Used to filter on the `email` of the users
        in: query
        name: email
        type: string
      - description: Used to filter on the `stock_location_id` of the users
        in: query
        name: stock_location_id
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/User'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Get list of users in company
      tags:
      - Users
      operationId: users.get
    post:
      parameters:
      - in: body
        name: user
        schema:
          properties:
            city_id:
              format: uuid
              type: string
            cost_price:
              description: Cost of salaries
              format: float
              type: number
            email:
              format: email
              maxLength: 255
              type: string
            extra_price:
              description: Additional cost on this employee (pension, vacation etc.)
              format: float
              type: number
            first_name:
              maxLength: 255
              type: string
            is_active:
              type: boolean
            language_id:
              format: uuid
              type: string
            last_name:
              maxLength: 255
              type: string
            mobile:
              maxLength: 32
              type: string
            mobile_countrycode:
              maxLength: 8
              type: string
            password:
              format: password
              maxLength: 255
              type: string
            phone:
              maxLength: 32
              type: string
            phone_countrycode:
              maxLength: 8
              type: string
            receive_form_mails:
              description: If `true` the employee will receive an email receipt of
                every form submitted
              type: boolean
            sale_price:
              description: The price this employee costs per hour when working
              format: float
              type: number
            street_name:
              maxLength: 255
              type: string
          required:
          - first_name
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add user to company
      tags:
      - Users
      operationId: users.post
  /users/{user_id}:
    delete:
      parameters:
      - in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Delete user
      tags:
      - Users
      operationId: users.user_id.delete
    get:
      parameters:
      - in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/User'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View user
      tags:
      - Users
      operationId: users.user_id.get
    put:
      parameters:
      - in: path
        name: user_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  type: object
                type: array
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Edit user
      tags:
      - Users
      operationId: users.user_id.put
  /wall_comments:
    post:
      parameters:
      - in: body
        name: wall_comment
        schema:
          properties:
            message:
              type: string
            wall_post_id:
              format: uuid
              type: string
          required:
          - wall_post_id
          - message
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add wall comment
      tags:
      - WallComments
      operationId: wall_comments.post
  /wall_comments/{wall_comment_id}:
    get:
      parameters:
      - in: path
        name: wall_comment_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/WallComment'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View wall comment
      tags:
      - WallComments
      operationId: wall_comments.wall_comment_id.get
  /wall_posts:
    get:
      parameters:
      - format: uuid
        in: query
        name: project_id
        required: true
        type: string
      - format: uuid
        in: query
        name: user_id
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/WallPost'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
        401:
          description: Not authorized to access project
        404:
          description: Project not found
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View list of wall posts
      tags:
      - WallPosts
      operationId: wall_posts.get
    post:
      parameters:
      - in: body
        name: wall_post
        schema:
          properties:
            message:
              type: string
            project_id:
              format: uuid
              type: string
          required:
          - project_id
          - message
          type: object
      responses:
        201:
          description: OK
          schema:
            properties:
              data:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
              success:
                default: true
                type: boolean
            type: object
        422:
          description: Validation error
          schema:
            $ref: '#/definitions/ErrorValidation'
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: Add a wall post
      tags:
      - WallPosts
      operationId: wall_posts.post
  /wall_posts/{wall_post_id}:
    get:
      parameters:
      - in: path
        name: wall_post_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/WallPost'
              success:
                type: boolean
            type: object
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: View wall post
      tags:
      - WallPosts
      operationId: wall_posts.wall_post_id.get
  /wall_posts/{wall_post_id}/wall_comments:
    get:
      parameters:
      - in: path
        name: wall_post_id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/WallComment'
                type: array
              pagination:
                $ref: '#/definitions/PaginationDetails'
              success:
                type: boolean
            type: object
        401:
          description: Not authorized to access project
        404:
          description: Wall post not found
      security:
      - X-Auth-Token: []
      - api_key: []
      summary: See wall comments to a wall post
      tags:
      - WallPosts
      operationId: wall_posts.wall_post_id.wall_comments.get
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":40:{s:4:\"City\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"zip_code\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:11;s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:14:\"ClockingRecord\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":14:{s:10:\"checked_in\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:11:\"checked_out\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:16:\"checkin_latitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"checkin_longitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"checkout_latitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"checkout_longitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Company\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":20:{s:7:\"city_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:17:\"contact_person_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:3:\"cvr\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:7:\"expired\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"file_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:13:\"invoice_email\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"language_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:19:\"next_invoice_number\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:9:\"maxLength\";i:8;s:4:\"type\";s:7:\"integer\";}s:5:\"phone\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"Format
  like eg. `28680133` or `046158971404`\";s:9:\"maxLength\";i:32;s:4:\"type\";s:6:\"string\";}s:17:\"phone_countrycode\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Format
  like eg. `45` or `49`\";s:9:\"maxLength\";i:3;s:4:\"type\";s:6:\"string\";}s:18:\"receive_form_mails\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"street_name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"vat_percent\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:9:\"maxLength\";i:12;s:4:\"type\";s:7:\"integer\";}s:7:\"website\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Contact\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":15:{s:7:\"address\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Street
  address\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"city_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"company_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:84:\"Only
  filled out if this represents another company within Apacta (used for partners)\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:3:\"cvr\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:6:\"erp_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:127:\"If
  company has integration to an ERP system, and the contacts are synchronized, this
  will be the ERP-systems ID of this contact\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"Format
  like eg. `28680133` or `046158971404`\";s:9:\"maxLength\";i:32;s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ContactType\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"One
  of 3 values\";s:4:\"enum\";a:3:{i:0;s:6:\"client\";i:1;s:7:\"partner\";i:2;s:8:\"supplier\";}s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Currency\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"currency_sign\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8;s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"ErrorNotFound\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"The
  HTTP status code\";s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":3:{s:7:\"default\";s:27:\"A
  validation error occurred\";s:11:\"description\";s:13:\"Error message\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"The
  url from which this originated\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"success\";O:8:\"stdClass\":2:{s:7:\"default\";b:0;s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:15:\"ErrorValidation\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"The
  HTTP status code\";s:4:\"type\";s:7:\"integer\";}s:10:\"errorCount\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  amount of validation errors\";s:4:\"type\";s:7:\"integer\";}s:6:\"errors\";O:8:\"stdClass\":2:{s:11:\"description\";s:109:\"Object
  that contains details information about which properties failed validation and what
  rules they failed.\";s:4:\"type\";s:6:\"object\";}s:7:\"message\";O:8:\"stdClass\":3:{s:7:\"default\";s:27:\"A
  validation error occurred\";s:11:\"description\";s:13:\"Error message\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"The
  url from which this originated\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"success\";O:8:\"stdClass\":2:{s:7:\"default\";b:0;s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Expense\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":14:{s:10:\"company_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"contact_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:11:\"currency_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:13:\"delivery_date\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:9:\"reference\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:10:\"short_text\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:23:\"supplier_invoice_number\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ExpenseFile\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":13:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:10:\"expense_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:4:\"file\";O:8:\"stdClass\":3:{s:11:\"description\";s:11:\"File's
  name\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:14:\"file_extension\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:18:\"file_original_name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:9:\"file_size\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"File
  size in bytes\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:9:\"file_type\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"File's
  MIME type\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"file_url\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ExpenseLine\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:12:\"buying_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:11:\"currency_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:10:\"expense_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"selling_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:4:\"text\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Form\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":14:{s:14:\"approved_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:9:\"form_date\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:16:\"form_template_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"is_draft\";O:8:\"stdClass\":2:{s:7:\"default\";b:0;s:4:\"type\";s:7:\"boolean\";}s:11:\"is_invoiced\";O:8:\"stdClass\":2:{s:7:\"default\";b:0;s:4:\"type\";s:7:\"boolean\";}s:9:\"is_shared\";O:8:\"stdClass\":2:{s:7:\"default\";b:0;s:4:\"type\";s:7:\"boolean\";}s:12:\"mass_form_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"FormField\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":12:{s:7:\"comment\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:13:\"content_value\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:7:\"file_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:18:\"form_field_type_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"form_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:22:\"form_template_field_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:9:\"placement\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:13:\"FormFieldType\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Read-only\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:12:\"FormTemplate\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":12:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:16:\"form_category_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:25:\"form_overview_category_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:9:\"is_active\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:23:\"pdf_template_identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:25:\"IntegrationFeatureSetting\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:13:\"default_value\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:22:\"integration_feature_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:17:\"is_custom_setting\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Invoice\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":28:{s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"contact_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:11:\"currency_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:9:\"date_from\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:7:\"date_to\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:6:\"erp_id\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:19:\"erp_payment_term_id\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"eu_customer\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"gross_payment\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:14:\"integration_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:14:\"invoice_number\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:9:\"maxLength\";i:8;s:4:\"type\";s:7:\"integer\";}s:8:\"is_draft\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"is_locked\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"is_offer\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"issued_date\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:11:\"net_payment\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:12:\"offer_number\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:9:\"maxLength\";i:8;s:4:\"type\";s:7:\"integer\";}s:16:\"payment_due_date\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:15:\"payment_term_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:9:\"reference\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"vat_percent\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:9:\"maxLength\";i:2;s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:11:\"InvoiceLine\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":14:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:16:\"discount_percent\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"discount_text\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"invoice_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:2048;s:4:\"type\";s:6:\"string\";}s:10:\"product_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"selling_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"MassMessage\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}}s:4:\"type\";s:6:\"object\";}s:16:\"MassMessagesUser\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"is_read\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"is_sent_email\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"mass_message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/MassMessage\";}s:15:\"mass_message_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Material\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":14:{s:7:\"barcode\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:13:\"billing_cycle\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"cost_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:15:\"is_single_usage\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:2048;s:4:\"type\";s:6:\"string\";}s:13:\"selling_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}}s:4:\"type\";s:6:\"object\";}s:14:\"MaterialRental\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":13:{s:6:\"amount\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:9:\"from_date\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:11:\"is_invoiced\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:11:\"material_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:7:\"to_date\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:17:\"PaginationDetails\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:12:\"current_page\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"has_next_page\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"has_prev_page\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"limit\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"page_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"PaymentTerm\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:14:\"days_of_credit\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:9:\"maxLength\";i:11;s:4:\"type\";s:7:\"integer\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:20:\"payment_term_type_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"PaymentTermType\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Product\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":13:{s:7:\"barcode\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:12:\"buying_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:6:\"erp_id\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:14:\"product_number\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:13:\"selling_price\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Project\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":13:{s:10:\"contact_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:14:\"erp_project_id\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"erp_task_id\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:17:\"project_status_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"start_time\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"datetime\";s:4:\"type\";s:6:\"string\";}s:11:\"street_name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:13:\"ProjectStatus\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":4:{s:11:\"description\";s:15:\"One
  of 3 values\";s:4:\"enum\";a:3:{i:0;s:17:\"ready_for_billing\";i:1;s:4:\"open\";i:2;s:6:\"closed\";}s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"StockLocation\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"TimeEntry\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":14:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:7:\"form_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:9:\"from_time\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"is_all_day\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:3:\"sum\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"Amount
  of seconds\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:18:\"time_entry_type_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"to_time\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:17:\"TimeEntryInterval\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"TimeEntryType\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:22:\"time_entry_interval_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:24:\"time_entry_value_type_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:17:\"TimeEntryUnitType\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":10:{s:12:\"abbreviation\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:18:\"TimeEntryValueType\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8192;s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:14:\"modified_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:23:\"time_entry_unit_type_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"User\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":25:{s:7:\"api_key\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"city_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"company_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:10:\"cost_price\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Cost
  of salaries\";s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:13:\"created_by_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:5:\"email\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:11:\"extra_price\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"Additional
  cost on this employee (pension, vacation etc.)\";s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:10:\"first_name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:9:\"full_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"READ-ONLY\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:9:\"is_active\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"language_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:9:\"last_name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:6:\"mobile\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:32;s:4:\"type\";s:6:\"string\";}s:18:\"mobile_countrycode\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8;s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:8:\"password\";O:8:\"stdClass\":3:{s:6:\"format\";s:8:\"password\";s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:32;s:4:\"type\";s:6:\"string\";}s:17:\"phone_countrycode\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:8;s:4:\"type\";s:6:\"string\";}s:18:\"receive_form_mails\";O:8:\"stdClass\":2:{s:11:\"description\";s:76:\"If
  `true` the employee will receive an email receipt of every form submitted\";s:4:\"type\";s:7:\"boolean\";}s:10:\"sale_price\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  price this employee costs per hour when working\";s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:11:\"street_name\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"WallComment\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:255;s:4:\"type\";s:6:\"string\";}s:12:\"wall_post_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:8:\"WallPost\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/created\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/deleted\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/modified\";}s:10:\"project_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"READ-ONLY\";s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"READ-ONLY
  - only present if it's an deleted object\";s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"READ-ONLY\";s:6:\"format\";s:8:\"dateTime\";s:4:\"type\";s:6:\"string\";}}"
...
