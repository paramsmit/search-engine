---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":12:{s:7:\"contact\";O:8:\"stdClass\":2:{s:5:\"email\";s:11:\"oss@maif.fr\";s:4:\"name\";s:13:\"Otoroshi
  Team\";}s:11:\"description\";s:39:\"Admin API of the Otoroshi reverse proxy\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}s:5:\"title\";s:14:\"Otoroshi
  Admin\";s:7:\"version\";s:5:\"1.1.2\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:15:\"developer_tools\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#FFFFFF\";s:3:\"url\";s:101:\"https://api.apis.guru/v2/cache/logo/https_maif.github.io_otoroshi_assets_images_svg_otoroshi_logo.svg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:84:\"https://raw.githubusercontent.com/MAIF/otoroshi/master/docs/manual/code/swagger.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:10:\"maif.local\";s:13:\"x-serviceName\";s:8:\"otoroshi\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:19:\"maif_local_otoroshi\";s:4:\"type\";s:7:\"openapi\";}}"
host: maif.local
basePath: /api
paths:
  /api/apikeys:
    get:
      deprecated: false
      description: Get all api keys
      operationId: allApiKeys
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/ApiKey'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all api keys
      tags:
      - apikeys
  /api/globalconfig:
    get:
      deprecated: false
      description: Get the full configuration of Otoroshi
      operationId: globalConfig
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/GlobalConfig'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get the full configuration of Otoroshi
      tags:
      - configuration
    patch:
      deprecated: false
      description: Update the global configuration with a diff
      operationId: patchGlobalConfig
      parameters:
      - description: The updated global config as patch
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Patch'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/GlobalConfig'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update the global configuration with a diff
      tags:
      - configuration
    put:
      deprecated: false
      description: Update the global configuration
      operationId: putGlobalConfig
      parameters:
      - description: The updated global config
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GlobalConfig'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/GlobalConfig'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update the global configuration
      tags:
      - configuration
  /api/groups:
    get:
      deprecated: false
      description: Get all service groups
      operationId: allServiceGroups
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all service groups
      tags:
      - groups
    post:
      deprecated: false
      description: Create a new service group
      operationId: createGroup
      parameters:
      - description: The service group to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Create a new service group
      tags:
      - groups
  /api/groups/{groupId}/apikeys:
    get:
      deprecated: false
      description: Get all api keys for the group of a service
      operationId: apiKeysFromGroup
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/ApiKey'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all api keys for the group of a service
      tags:
      - apikeys
    post:
      deprecated: false
      description: Create a new api key for a group
      operationId: createApiKeyFromGroup
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: The api key to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKey'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Create a new api key for a group
      tags:
      - apikeys
  /api/groups/{groupId}/apikeys/{clientId}:
    delete:
      deprecated: false
      description: Delete an api key for a specified service group
      operationId: deleteApiKeyFromGroup
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Deleted'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Delete an api key
      tags:
      - apikeys
    get:
      deprecated: false
      description: Get an api key for a specified service group
      operationId: apiKeyFromGroup
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get an api key
      tags:
      - apikeys
    patch:
      deprecated: false
      description: Update an api key for a specified service descriptor with a diff
      operationId: patchApiKeyFromGroup
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      - description: The patch for the api key
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Patch'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update an api key with a diff
      tags:
      - apikeys
    put:
      deprecated: false
      description: Update an api key for a specified service group
      operationId: updateApiKeyFromGroup
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      - description: The updated api key
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKey'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update an api key
      tags:
      - apikeys
  /api/groups/{groupId}/apikeys/{clientId}/quotas:
    delete:
      deprecated: false
      description: Reset the quota state of an api key
      operationId: resetApiKeyFromGroupQuotas
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Quotas'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Reset the quota state of an api key
      tags:
      - apikeys
    get:
      deprecated: false
      description: Get the quota state of an api key
      operationId: apiKeyFromGroupQuotas
      parameters:
      - description: The api key group id
        in: path
        name: groupId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Quotas'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get the quota state of an api key
      tags:
      - apikeys
  /api/groups/{serviceGroupId}:
    delete:
      deprecated: false
      description: Delete a service group
      operationId: deleteGroup
      parameters:
      - description: The service group id
        in: path
        name: serviceGroupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Deleted'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Delete a service group
      tags:
      - groups
    get:
      deprecated: false
      description: Get a service group
      operationId: serviceGroup
      parameters:
      - description: The service group id
        in: path
        name: serviceGroupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a service group
      tags:
      - groups
    patch:
      deprecated: false
      description: Update a service group with a diff
      operationId: patchGroup
      parameters:
      - description: The service group id
        in: path
        name: serviceGroupId
        required: true
        type: string
      - description: The patch for the service group
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Patch'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update a service group with a diff
      tags:
      - groups
    put:
      deprecated: false
      description: Update a service group
      operationId: updateGroup
      parameters:
      - description: The service group id
        in: path
        name: serviceGroupId
        required: true
        type: string
      - description: The updated service group
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update a service group
      tags:
      - groups
  /api/groups/{serviceGroupId}/services:
    get:
      deprecated: false
      description: Get all services descriptor for a group
      operationId: serviceGroupServices
      parameters:
      - description: The service group id
        in: path
        name: serviceGroupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/ApiKey'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all services descriptor for a group
      tags:
      - services
  /api/import:
    post:
      deprecated: false
      description: Import the full state of Otoroshi as a file
      operationId: fullImportFromFile
      parameters:
      - description: The full export
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ImportExport'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Done'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Import the full state of Otoroshi as a file
      tags:
      - import
  /api/live:
    get:
      deprecated: false
      description: Get global otoroshi stats
      operationId: globalLiveStats
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Stats'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get global otoroshi stats
      tags:
      - stats
  /api/live/{id}:
    get:
      deprecated: false
      description: Get live feed of global otoroshi stats (global) or for a service
        {id}
      operationId: serviceLiveStats
      parameters:
      - description: The service id or global for otoroshi stats
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Stats'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get live feed of otoroshi stats
      tags:
      - stats
  /api/otoroshi.json:
    get:
      deprecated: false
      description: Export the full state of Otoroshi
      operationId: fullExport
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ImportExport'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Export the full state of Otoroshi
      tags:
      - import
    post:
      deprecated: false
      description: Import the full state of Otoroshi
      operationId: fullImport
      parameters:
      - description: The full export
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ImportExport'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Done'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Import the full state of Otoroshi
      tags:
      - import
  /api/services:
    get:
      deprecated: false
      description: Get all services
      operationId: allServices
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Service'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all services
      tags:
      - services
    post:
      deprecated: false
      description: Create a new service descriptor
      operationId: createService
      parameters:
      - description: The service descriptor to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Service'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Service'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Create a new service descriptor
      tags:
      - services
  /api/services/{serviceId}:
    delete:
      deprecated: false
      description: Delete a service descriptor
      operationId: deleteService
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Deleted'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Delete a service descriptor
      tags:
      - services
    get:
      deprecated: false
      description: Get a service descriptor
      operationId: service
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Service'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a service descriptor
      tags:
      - services
    patch:
      deprecated: false
      description: Update a service descriptor with a diff
      operationId: patchService
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The patch for the service
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Patch'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Service'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update a service descriptor with a diff
      tags:
      - services
    put:
      deprecated: false
      description: Update a service descriptor
      operationId: updateService
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The updated service descriptor
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Service'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Service'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update a service descriptor
      tags:
      - services
  /api/services/{serviceId}/apikeys:
    get:
      deprecated: false
      description: Get all api keys for the group of a service
      operationId: apiKeys
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/ApiKey'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all api keys for the group of a service
      tags:
      - apikeys
    post:
      deprecated: false
      description: Create a new api key for a service
      operationId: createApiKey
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The api key to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKey'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Create a new api key for a service
      tags:
      - apikeys
  /api/services/{serviceId}/apikeys/{clientId}:
    delete:
      deprecated: false
      description: Delete an api key for a specified service descriptor
      operationId: deleteApiKey
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Deleted'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Delete an api key
      tags:
      - apikeys
    get:
      deprecated: false
      description: Get an api key for a specified service descriptor
      operationId: apiKey
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get an api key
      tags:
      - apikeys
    patch:
      deprecated: false
      description: Update an api key for a specified service descriptor with a diff
      operationId: patchApiKey
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      - description: The patch for the api key
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Patch'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update an api key with a diff
      tags:
      - apikeys
    put:
      deprecated: false
      description: Update an api key for a specified service descriptor
      operationId: updateApiKey
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      - description: The updated api key
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApiKey'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update an api key
      tags:
      - apikeys
  /api/services/{serviceId}/apikeys/{clientId}/group:
    get:
      deprecated: false
      description: Get the group of an api key
      operationId: apiKeyGroup
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get the group of an api key
      tags:
      - apikeys
  /api/services/{serviceId}/apikeys/{clientId}/quotas:
    delete:
      deprecated: false
      description: Reset the quota state of an api key
      operationId: resetApiKeyQuotas
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Quotas'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Reset the quota state of an api key
      tags:
      - apikeys
    get:
      deprecated: false
      description: Get the quota state of an api key
      operationId: apiKeyQuotas
      parameters:
      - description: The api key service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: the api key id
        in: path
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Quotas'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get the quota state of an api key
      tags:
      - apikeys
  /api/services/{serviceId}/targets:
    delete:
      deprecated: false
      description: Delete a service descriptor target
      operationId: serviceDeleteTarget
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Target'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Delete a service descriptor target
      tags:
      - services
    get:
      deprecated: false
      description: Get a service descriptor targets
      operationId: serviceTargets
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Target'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a service descriptor targets
      tags:
      - services
    patch:
      deprecated: false
      description: Update a service descriptor targets
      operationId: updateServiceTargets
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The patch for the service targets
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Patch'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Target'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update a service descriptor targets
      tags:
      - services
    post:
      deprecated: false
      description: Add a target to a service descriptor
      operationId: serviceAddTarget
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The updated service descriptor
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Target'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Target'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Add a target to a service descriptor
      tags:
      - services
  /api/services/{serviceId}/template:
    delete:
      deprecated: false
      description: Delete a service descriptor error template
      operationId: deleteServiceTemplate
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Deleted'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Delete a service descriptor error template
      tags:
      - services
    get:
      deprecated: false
      description: Get a service descriptor error template
      operationId: serviceTemplate
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ErrorTemplate'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a service descriptor error template
      tags:
      - services
    post:
      deprecated: false
      description: Update a service descriptor targets
      operationId: createServiceTemplate
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The patch for the service error template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ErrorTemplate'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ErrorTemplate'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Create a service descriptor error template
      tags:
      - services
    put:
      deprecated: false
      description: Update an error template to a service descriptor
      operationId: updateServiceTemplate
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        type: string
      - description: The updated service descriptor template
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ErrorTemplate'
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ErrorTemplate'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Update an error template to a service descriptor
      tags:
      - services
  /health:
    get:
      deprecated: false
      description: Import the full state of Otoroshi as a file
      operationId: health
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/OtoroshiHealth'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        404:
          description: Resource not found or does not exist
      summary: Return current Otoroshi health
      tags:
      - health
  /lines:
    get:
      deprecated: false
      description: Get all environments provided by the current Otoroshi instance
      operationId: allLines
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Environment'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all environments
      tags:
      - environments
  /lines/{line}/services:
    get:
      deprecated: false
      description: Get all services for an environment provided by the current Otoroshi
        instance
      operationId: servicesForALine
      parameters:
      - description: The environment where to find services
        in: path
        name: line
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/Service'
            type: array
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get all services for an environment
      tags:
      - environments
  /new/apikey:
    get:
      deprecated: false
      description: Get a template of an Otoroshi Api Key. The generated entity is
        not persisted
      operationId: initiateApiKey
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ApiKey'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a template of an Otoroshi Api Key
      tags:
      - templates
  /new/group:
    get:
      deprecated: false
      description: Get a template of an Otoroshi service group. The generated entity
        is not persisted
      operationId: initiateServiceGroup
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a template of an Otoroshi service group
      tags:
      - templates
  /new/service:
    get:
      deprecated: false
      description: Get a template of an Otoroshi service descriptor. The generated
        entity is not persisted
      operationId: initiateService
      parameters: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Service'
        400:
          description: Bad resource format. Take another look to the swagger, or open
            an issue :)
        401:
          description: You have to provide an Api Key. Api Key can be passed with
            'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic
            http authentication
        404:
          description: Resource not found or does not exist
      security:
      - otoroshi_auth: []
      summary: Get a template of an Otoroshi service descriptor
      tags:
      - templates
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":27:{s:6:\"ApiKey\";O:8:\"stdClass\":4:{s:11:\"description\";s:124:\"An
  Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of
  the same Api Key for multiple services.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:15:\"authorizedGroup\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  group id on which the key is authorized\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"clientId\";O:8:\"stdClass\":3:{s:11:\"description\";s:95:\"The
  unique id of the Api Key. Usually 16 random alpha numerical characters, but can
  be anything\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:10:\"clientName\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"The
  name of the api key, for humans ;-)\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:12:\"clientSecret\";O:8:\"stdClass\":3:{s:11:\"description\";s:92:\"The
  secret of the Api Key. Usually 64 random alpha numerical characters, but can be
  anything\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:10:\"dailyQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:34:\"Authorized
  number of calls per day\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:7:\"enabled\";O:8:\"stdClass\":3:{s:11:\"description\";s:100:\"Whether
  or not the key is enabled. If disabled, resources won't be available to calls using
  this key\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:8:\"metadata\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:29:\"Bunch
  of metadata for the key\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:12:\"monthlyQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"Authorized
  number of calls per month\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:15:\"throttlingQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"Authorized
  number of calls per second, measured on 10 seconds\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:5:{i:0;s:8:\"clientId\";i:1;s:12:\"clientSecret\";i:2;s:10:\"clientName\";i:3;s:15:\"authorizedGroup\";i:4;s:7:\"enabled\";}s:4:\"type\";s:6:\"object\";}s:11:\"Auth0Config\";O:8:\"stdClass\":4:{s:11:\"description\";s:30:\"Configuration
  for Auth0 domain\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"callbackUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"Auth0
  callback URL\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"clientId\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"Auth0
  client id\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:12:\"clientSecret\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"Auth0
  client secret\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:6:\"domain\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"Auth0
  domain\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:8:\"clientId\";i:1;s:12:\"clientSecret\";i:2;s:6:\"domain\";i:3;s:11:\"callbackUrl\";}s:4:\"type\";s:6:\"object\";}s:6:\"Canary\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"The
  configuration of the canary mode for a service descriptor\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"enabled\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"Use
  canary mode for this service\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:4:\"root\";O:8:\"stdClass\":3:{s:11:\"description\";s:176:\"Otoroshi
  will append this root to any target choosen. If the specified root is '/api/foo',
  then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:7:\"targets\";O:8:\"stdClass\":3:{s:11:\"description\";s:220:\"The
  list of target that Otoroshi will proxy and expose through the subdomain defined
  before. Otoroshi will do round-robin load balancing between all those targets with
  circuit breaker mecanism to avoid cascading failures\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Target\";}s:4:\"type\";s:5:\"array\";}s:7:\"traffic\";O:8:\"stdClass\":4:{s:11:\"description\";s:53:\"Ratio
  of traffic that will be sent to canary targets.\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:4:{i:0;s:7:\"enabled\";i:1;s:7:\"traffic\";i:2;s:7:\"targets\";i:3;s:4:\"root\";}s:4:\"type\";s:6:\"object\";}s:14:\"CleverSettings\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"Configuration
  for CleverCloud client\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"consumerKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"CleverCloud
  consumer key\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:14:\"consumerSecret\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"CleverCloud
  consumer token\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:6:\"orgaId\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"CleverCloud
  organization id\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:6:\"secret\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"CleverCloud
  oauth secret\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"CleverCloud
  oauth token\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:5:{i:0;s:11:\"consumerKey\";i:1;s:14:\"consumerSecret\";i:2;s:5:\"token\";i:3;s:6:\"secret\";i:4;s:6:\"orgaId\";}s:4:\"type\";s:6:\"object\";}s:12:\"ClientConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:65:\"The
  configuration of the circuit breaker for a service descriptor\";s:10:\"properties\";O:8:\"stdClass\":8:{s:13:\"backoffFactor\";O:8:\"stdClass\":4:{s:11:\"description\";s:55:\"Specify
  the factor to multiply the delay for each retry\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"callTimeout\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Specify
  how long each call should last at most in milliseconds\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"globalTimeout\";O:8:\"stdClass\":4:{s:11:\"description\";s:83:\"Specify
  how long the global call (with retries) should last at most in milliseconds\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:9:\"maxErrors\";O:8:\"stdClass\":4:{s:11:\"description\";s:67:\"Specify
  how many errors can pass before opening the circuit breaker\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"retries\";O:8:\"stdClass\":4:{s:11:\"description\";s:110:\"Specify
  how many times the client will try to fetch the result of the request after an error
  before giving up.\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"retryInitialDelay\";O:8:\"stdClass\":4:{s:11:\"description\";s:96:\"Specify
  the delay between two retries. Each retry, the delay is multiplied by the backoff
  factor\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:14:\"sampleInterval\";O:8:\"stdClass\":4:{s:11:\"description\";s:117:\"Specify
  the sliding window time for the circuit breaker in milliseconds, after this time,
  error count will be reseted\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"useCircuitBreaker\";O:8:\"stdClass\":3:{s:11:\"description\";s:102:\"Use
  a circuit breaker to avoid cascading failure when calling chains of services. Highly
  recommended !\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:8:{i:0;s:17:\"useCircuitBreaker\";i:1;s:7:\"retries\";i:2;s:9:\"maxErrors\";i:3;s:17:\"retryInitialDelay\";i:4;s:13:\"backoffFactor\";i:5;s:11:\"callTimeout\";i:6;s:13:\"globalTimeout\";i:7;s:14:\"sampleInterval\";}s:4:\"type\";s:6:\"object\";}s:7:\"Deleted\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"deleted\";O:8:\"stdClass\":2:{s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:7:\"deleted\";}s:4:\"type\";s:6:\"object\";}s:4:\"Done\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"done\";O:8:\"stdClass\":2:{s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:4:\"done\";}s:4:\"type\";s:6:\"object\";}s:11:\"Environment\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"The
  name of the environment for service descriptors\";s:7:\"example\";s:4:\"prod\";s:4:\"type\";s:6:\"string\";}s:13:\"ErrorTemplate\";O:8:\"stdClass\":4:{s:11:\"description\";s:40:\"Error
  templates for a service descriptor\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"messages\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:23:\"Map
  for custom messages\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:9:\"serviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:61:\"The
  Id of the service for which the error template is enabled\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:11:\"template40x\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  html template for 40x errors\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:11:\"template50x\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  html template for 50x errors\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:13:\"templateBuild\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  html template for build page\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:19:\"templateMaintenance\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  html template for maintenance page\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:6:{i:0;s:9:\"serviceId\";i:1;s:11:\"template40x\";i:2;s:11:\"template50x\";i:3;s:13:\"templateBuild\";i:4;s:19:\"templateMaintenance\";i:5;s:8:\"messages\";}s:4:\"type\";s:6:\"object\";}s:10:\"ExposedApi\";O:8:\"stdClass\":4:{s:11:\"description\";s:52:\"The
  Open API configuration for your service (if one)\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"exposeApi\";O:8:\"stdClass\":3:{s:11:\"description\";s:76:\"Whether
  or not the current service expose an API with an Open API descriptor\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:20:\"openApiDescriptorUrl\";O:8:\"stdClass\":4:{s:11:\"description\";s:34:\"The
  URL of the Open API descriptor\";s:7:\"example\";s:21:\"http://www.google.com\";s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:9:\"exposeApi\";}s:4:\"type\";s:6:\"object\";}s:12:\"GlobalConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:97:\"The
  global config object of Otoroshi, used to customize settings of the current Otoroshi
  instance\";s:10:\"properties\";O:8:\"stdClass\":23:{s:12:\"alertsEmails\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"Email
  addresses that will receive all Otoroshi alert events\";s:5:\"items\";O:8:\"stdClass\":3:{s:7:\"example\";s:17:\"admin@otoroshi.io\";s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:14:\"alertsWebhooks\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"Webhook
  that will receive all Otoroshi alert events\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Webhook\";}s:4:\"type\";s:5:\"array\";}s:18:\"analyticsEventsUrl\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"The
  URL to get analytics events from\";s:7:\"example\";s:21:\"http://www.google.com\";s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}s:17:\"analyticsWebhooks\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"Webhook
  that will receive all internal Otoroshi events\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Webhook\";}s:4:\"type\";s:5:\"array\";}s:11:\"apiReadOnly\";O:8:\"stdClass\":3:{s:11:\"description\";s:67:\"If
  enabled, Admin API won't be able to write/update/delete entities\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:22:\"autoLinkToDefaultGroup\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"If
  not defined, every new service descriptor will be added to the default group\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:21:\"backofficeAuth0Config\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Auth0Config\";s:11:\"description\";s:54:\"Optional
  configuration for the backoffice Auth0 domain\";}s:14:\"cleverSettings\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/CleverSettings\";s:11:\"description\";s:34:\"Optional
  CleverCloud configuration\";}s:18:\"endlessIpAddresses\";O:8:\"stdClass\":3:{s:11:\"description\";s:80:\"IP
  addresses for which any request to Otoroshi will respond with 128 Gb of zeros\";s:5:\"items\";O:8:\"stdClass\":3:{s:7:\"example\";s:15:\"192.192.192.192\";s:6:\"format\";s:4:\"ipv4\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:11:\"ipFiltering\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/IpFiltering\";}s:23:\"limitConcurrentRequests\";O:8:\"stdClass\":3:{s:11:\"description\";s:73:\"If
  enabled, Otoroshi will reject new request if too much at the same time\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:5:\"lines\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Possibles
  lines for Otoroshi\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"mailGunSettings\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MailgunSettings\";s:11:\"description\";s:30:\"Optional
  mailgun configuration\";}s:21:\"maxConcurrentRequests\";O:8:\"stdClass\":4:{s:11:\"description\";s:59:\"The
  number of authorized request processed at the same time\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:21:\"maxHttp10ResponseSize\";O:8:\"stdClass\":4:{s:11:\"description\";s:45:\"The
  max size in bytes of an HTTP 1.0 response\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:11:\"maxLogsSize\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"Number
  of events kept locally\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"middleFingers\";O:8:\"stdClass\":3:{s:11:\"description\";s:74:\"Use
  middle finger emoji as a response character for endless HTTP responses\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:20:\"perIpThrottlingQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:85:\"Authorized
  number of calls per second globally per IP address, measured on 10 seconds\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:22:\"privateAppsAuth0Config\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Auth0Config\";s:11:\"description\";s:56:\"Optional
  configuration for the private apps Auth0 domain\";}s:16:\"streamEntityOnly\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"HTTP
  will be streamed only. Doesn't work with old browsers\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:15:\"throttlingQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:70:\"Authorized
  number of calls per second globally, measured on 10 seconds\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:12:\"u2fLoginOnly\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"If
  enabled, login to backoffice through Auth0 will be disabled\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:18:\"useCircuitBreakers\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"If
  enabled, services will be authorized to use circuit breakers\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:15:{i:0;s:16:\"streamEntityOnly\";i:1;s:22:\"autoLinkToDefaultGroup\";i:2;s:23:\"limitConcurrentRequests\";i:3;s:21:\"maxConcurrentRequests\";i:4;s:18:\"useCircuitBreakers\";i:5;s:11:\"apiReadOnly\";i:6;s:12:\"u2fLoginOnly\";i:7;s:11:\"ipFiltering\";i:8;s:15:\"throttlingQuota\";i:9;s:20:\"perIpThrottlingQuota\";i:10;s:18:\"analyticsEventsUrl\";i:11;s:17:\"analyticsWebhooks\";i:12;s:14:\"alertsWebhooks\";i:13;s:12:\"alertsEmails\";i:14;s:18:\"endlessIpAddresses\";}s:4:\"type\";s:6:\"object\";}s:5:\"Group\";O:8:\"stdClass\":4:{s:11:\"description\";s:127:\"An
  Otoroshi service group is just a group of service descriptor. It is useful to be
  able to define Api Keys for the whole group\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"description\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"The
  descriptoin of the group\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:93:\"The
  unique id of the group. Usually 64 random alpha numerical characters, but can be
  anything\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"The
  name of the group\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:11:\"HealthCheck\";O:8:\"stdClass\":4:{s:11:\"description\";s:132:\"The
  configuration for checking health of a service. Otoroshi will perform GET call on
  the URL to check if the service is still alive\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"enabled\";O:8:\"stdClass\":3:{s:11:\"description\";s:71:\"Whether
  or not healthcheck is enabled on the current service descriptor\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:3:\"url\";O:8:\"stdClass\":4:{s:11:\"description\";s:16:\"The
  URL to check\";s:7:\"example\";s:21:\"http://www.google.com\";s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:7:\"enabled\";}s:4:\"type\";s:6:\"object\";}s:12:\"ImportExport\";O:8:\"stdClass\":4:{s:11:\"description\";s:106:\"The
  structure that can be imported to or exported from Otoroshi. It represent the memory
  state of Otoroshi\";s:10:\"properties\";O:8:\"stdClass\":12:{s:6:\"admins\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"Current
  U2F admin at the time of export\";s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:54:\"Administrator
  using FIDO U2F device to access Otoroshi\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"createdAt\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"The
  creation date of the user\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:5:\"label\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"The
  label for the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"The
  hashed password of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:12:\"registration\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:25:\"The
  U2F registration slug\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:8:\"username\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"The
  email address of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:5:{i:0;s:8:\"username\";i:1;s:5:\"label\";i:2;s:8:\"password\";i:3;s:9:\"createdAt\";i:4;s:12:\"registration\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:7:\"apiKeys\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"Current
  apik keys at the time of export\";s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:124:\"An
  Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of
  the same Api Key for multiple services.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:15:\"authorizedGroup\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  group id on which the key is authorized\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"clientId\";O:8:\"stdClass\":3:{s:11:\"description\";s:95:\"The
  unique id of the Api Key. Usually 16 random alpha numerical characters, but can
  be anything\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:10:\"clientName\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"The
  name of the api key, for humans ;-)\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:12:\"clientSecret\";O:8:\"stdClass\":3:{s:11:\"description\";s:92:\"The
  secret of the Api Key. Usually 64 random alpha numerical characters, but can be
  anything\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:10:\"dailyQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:34:\"Authorized
  number of calls per day\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:7:\"enabled\";O:8:\"stdClass\":3:{s:11:\"description\";s:100:\"Whether
  or not the key is enabled. If disabled, resources won't be available to calls using
  this key\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:8:\"metadata\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:29:\"Bunch
  of metadata for the key\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:12:\"monthlyQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"Authorized
  number of calls per month\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:15:\"throttlingQuota\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"Authorized
  number of calls per second, measured on 10 seconds\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:5:{i:0;s:8:\"clientId\";i:1;s:12:\"clientSecret\";i:2;s:10:\"clientName\";i:3;s:15:\"authorizedGroup\";i:4;s:7:\"enabled\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:9:\"appConfig\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:43:\"Current
  env variables at the time of export\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:6:\"config\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/GlobalConfig\";s:11:\"description\";s:43:\"Current
  global config at the time of export\";}s:4:\"date\";O:8:\"stdClass\":3:{s:7:\"example\";s:20:\"2017-07-21T17:32:28Z\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"dateRaw\";O:8:\"stdClass\":3:{s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:14:\"errorTemplates\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Current
  error templates at the time of export\";s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:40:\"Error
  templates for a service descriptor\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"messages\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:23:\"Map
  for custom messages\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:9:\"serviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:61:\"The
  Id of the service for which the error template is enabled\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:11:\"template40x\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  html template for 40x errors\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:11:\"template50x\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  html template for 50x errors\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:13:\"templateBuild\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  html template for build page\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:19:\"templateMaintenance\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  html template for maintenance page\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:6:{i:0;s:9:\"serviceId\";i:1;s:11:\"template40x\";i:2;s:11:\"template50x\";i:3;s:13:\"templateBuild\";i:4;s:19:\"templateMaintenance\";i:5;s:8:\"messages\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:5:\"label\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:18:\"serviceDescriptors\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Current
  service descriptors at the time of export\";s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:136:\"An
  otoroshi service descriptor. Represent a forward HTTP call on a domain to another
  location with some optional api management mecanism\";s:10:\"properties\";O:8:\"stdClass\":31:{s:6:\"Canary\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Canary\";}s:17:\"additionalHeaders\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:87:\"Specify
  headers that will be added to each client request. Useful to add authentication\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:3:\"api\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/ExposedApi\";}s:9:\"buildMode\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"Display
  a construction page when a user try to use the service\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:12:\"clientConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ClientConfig\";}s:6:\"domain\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"The
  domain on which the service is available.\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:7:\"enabled\";O:8:\"stdClass\":3:{s:11:\"description\";s:114:\"Activate
  or deactivate your service. Once disabled, users will get an error page saying the
  service does not exist\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:26:\"enforceSecureCommunication\";O:8:\"stdClass\":3:{s:11:\"description\";s:130:\"When
  enabled, Otoroshi will try to exchange headers with downstream service to ensure
  no one else can use the service from outside\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:3:\"env\";O:8:\"stdClass\":3:{s:11:\"description\";s:292:\"The
  line on which the service is available. Based on that value, the name of the line
  will be appended to the subdomain. For line prod, nothing will be appended. For
  example, if the subdomain is 'foo' and line is 'preprod', then the exposed service
  will be available at 'foo.preprod.mydomain'\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:10:\"forceHttps\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Will
  force redirection to https:// if not present\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:7:\"groupId\";O:8:\"stdClass\":3:{s:11:\"description\";s:167:\"Each
  service descriptor is attached to a group. A group can have one or more services.
  Each API key is linked to a group and allow access to every service in the group\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:11:\"healthCheck\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/HealthCheck\";}s:2:\"id\";O:8:\"stdClass\":4:{s:11:\"description\";s:47:\"A
  unique random string to identify your service\";s:7:\"example\";s:36:\"110e8400-e29b-11d4-a716-446655440000\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:11:\"ipFiltering\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/IpFiltering\";}s:9:\"localHost\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  host used localy, mainly localhost:xxxx\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:11:\"localScheme\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"The
  scheme used localy, mainly http\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:15:\"maintenanceMode\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"Display
  a maintainance page when a user try to use the service\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:15:\"matchingHeaders\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:98:\"Specify
  headers that MUST be present on client request to route it. Useful to implement
  versioning\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:12:\"matchingRoot\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  root path on which the service is available\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"metadata\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:33:\"Just
  a bunch of random properties\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:71:\"The
  name of your service. Only for debug and human readability purposes\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:10:\"privateApp\";O:8:\"stdClass\":3:{s:11:\"description\";s:119:\"When
  enabled, user will be allowed to use the service (UI) only if they are registered
  users of the private apps domain\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:15:\"privatePatterns\";O:8:\"stdClass\":3:{s:11:\"description\";s:107:\"If
  you define a public pattern that is a little bit too much, you can make some of
  public URL private again\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:14:\"publicPatterns\";O:8:\"stdClass\":3:{s:11:\"description\";s:275:\"By
  default, every services are private only and you'll need an API key to access it.
  However, if you want to expose a public UI, you can define one or more public patterns
  (regex) to allow access to anybody. For example if you want to allow anybody on
  any URL, just use '/.*'\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"redirectToLocal\";O:8:\"stdClass\":3:{s:11:\"description\";s:222:\"If
  you work locally with Otoroshi, you may want to use that feature to redirect one
  particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com
  to http://localhost:8080 to make some tests\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:4:\"root\";O:8:\"stdClass\":3:{s:11:\"description\";s:176:\"Otoroshi
  will append this root to any target choosen. If the specified root is '/api/foo',
  then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:22:\"secComExcludedPatterns\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"URI
  patterns excluded from secured communications\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:23:\"sendOtoroshiHeadersBack\";O:8:\"stdClass\":3:{s:11:\"description\";s:103:\"When
  enabled, Otoroshi will send headers to consumer like request id, client latency,
  overhead, etc ...\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:12:\"statsdConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/StatsdConfig\";}s:9:\"subdomain\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  subdomain on which the service is available\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:7:\"targets\";O:8:\"stdClass\":3:{s:11:\"description\";s:220:\"The
  list of target that Otoroshi will proxy and expose through the subdomain defined
  before. Otoroshi will do round-robin load balancing between all those targets with
  circuit breaker mecanism to avoid cascading failures\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Target\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:14:{i:0;s:2:\"id\";i:1;s:7:\"groupId\";i:2;s:4:\"name\";i:3;s:3:\"env\";i:4;s:6:\"domain\";i:5;s:9:\"subdomain\";i:6;s:7:\"targets\";i:7;s:4:\"root\";i:8;s:7:\"enabled\";i:9;s:10:\"privateApp\";i:10;s:10:\"forceHttps\";i:11;s:15:\"maintenanceMode\";i:12;s:9:\"buildMode\";i:13;s:26:\"enforceSecureCommunication\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:13:\"serviceGroups\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"Current
  service groups at the time of export\";s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:127:\"An
  Otoroshi service group is just a group of service descriptor. It is useful to be
  able to define Api Keys for the whole group\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"description\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"The
  descriptoin of the group\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:93:\"The
  unique id of the group. Usually 64 random alpha numerical characters, but can be
  anything\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"The
  name of the group\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:12:\"simpleAdmins\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"Current
  simple admins at the time of export\";s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:64:\"Administrator
  using just login/password tuple to access Otoroshi\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"createdAt\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"The
  creation date of the user\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:5:\"label\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"The
  label for the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"The
  hashed password of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"The
  email address of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:8:\"username\";i:1;s:5:\"label\";i:2;s:8:\"password\";i:3;s:9:\"createdAt\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:5:\"stats\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ImportExportStats\";s:11:\"description\";s:42:\"Current
  global stats at the time of export\";}}s:8:\"required\";a:11:{i:0;s:5:\"label\";i:1;s:7:\"dateRaw\";i:2;s:4:\"date\";i:3;s:5:\"stats\";i:4;s:6:\"config\";i:5;s:6:\"admins\";i:6;s:12:\"simpleAdmins\";i:7;s:13:\"serviceGroups\";i:8;s:7:\"apiKeys\";i:9;s:18:\"serviceDescriptors\";i:10;s:14:\"errorTemplates\";}s:4:\"type\";s:6:\"object\";}s:17:\"ImportExportStats\";O:8:\"stdClass\":4:{s:11:\"description\";s:47:\"Global
  stats for the current Otoroshi instances\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"calls\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"Number
  of calls to Otoroshi globally\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:6:\"dataIn\";O:8:\"stdClass\":4:{s:11:\"description\";s:44:\"The
  amount of data sent to Otoroshi globally\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:7:\"dataOut\";O:8:\"stdClass\":4:{s:11:\"description\";s:46:\"The
  amount of data sent from Otoroshi globally\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:3:{i:0;s:5:\"calls\";i:1;s:6:\"dataIn\";i:2;s:7:\"dataOut\";}s:4:\"type\";s:6:\"object\";}s:11:\"IpFiltering\";O:8:\"stdClass\":4:{s:11:\"description\";s:60:\"The
  filtering configuration block for a service of globally.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"blacklist\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Blacklisted
  IP addresses\";s:5:\"items\";O:8:\"stdClass\":3:{s:7:\"example\";s:15:\"192.192.192.192\";s:6:\"format\";s:4:\"ipv4\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"whitelist\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Whitelisted
  IP addresses\";s:5:\"items\";O:8:\"stdClass\":3:{s:7:\"example\";s:15:\"192.192.192.192\";s:6:\"format\";s:4:\"ipv4\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:2:{i:0;s:9:\"whitelist\";i:1;s:9:\"blacklist\";}s:4:\"type\";s:6:\"object\";}s:15:\"MailgunSettings\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"Configuration
  for mailgun api client\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"apiKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"Mailgun
  Api Key\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:6:\"domain\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Mailgun
  domain\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:6:\"apiKey\";i:1;s:6:\"domain\";}s:4:\"type\";s:6:\"object\";}s:14:\"OtoroshiHealth\";O:8:\"stdClass\":4:{s:11:\"description\";s:52:\"The
  structure that represent current Otoroshi health\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"datastore\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"healthy\";i:1;s:9:\"unhealthy\";i:2;s:11:\"unreachable\";}s:4:\"type\";s:6:\"string\";}s:8:\"otoroshi\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"healthy\";i:1;s:9:\"unhealthy\";i:2;s:4:\"down\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"otoroshi\";i:1;s:9:\"datastore\";}s:4:\"type\";s:6:\"object\";}s:5:\"Patch\";O:8:\"stdClass\":3:{s:11:\"description\";s:81:\"A
  set of changes described in JSON Patch format: http://jsonpatch.com/ (RFC 6902)\";s:5:\"items\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"op\";O:8:\"stdClass\":2:{s:4:\"enum\";a:5:{i:0;s:3:\"add\";i:1;s:7:\"replace\";i:2;s:6:\"remove\";i:3;s:4:\"copy\";i:4;s:4:\"test\";}s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":0:{}}s:8:\"required\";a:2:{i:0;s:2:\"op\";i:1;s:4:\"path\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:6:\"Quotas\";O:8:\"stdClass\":4:{s:11:\"description\";s:46:\"Quotas
  state for an api key on a service group\";s:10:\"properties\";O:8:\"stdClass\":9:{s:21:\"authorizedCallsPerDay\";O:8:\"stdClass\":4:{s:11:\"description\";s:38:\"The
  number of authorized calls per day\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:23:\"authorizedCallsPerMonth\";O:8:\"stdClass\":4:{s:11:\"description\";s:40:\"The
  number of authorized calls per month\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:21:\"authorizedCallsPerSec\";O:8:\"stdClass\":4:{s:11:\"description\";s:41:\"The
  number of authorized calls per second\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:18:\"currentCallsPerDay\";O:8:\"stdClass\":4:{s:11:\"description\";s:35:\"The
  current number of calls per day\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:20:\"currentCallsPerMonth\";O:8:\"stdClass\":4:{s:11:\"description\";s:37:\"The
  current number of calls per month\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:18:\"currentCallsPerSec\";O:8:\"stdClass\":4:{s:11:\"description\";s:38:\"The
  current number of calls per second\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:20:\"remainingCallsPerDay\";O:8:\"stdClass\":4:{s:11:\"description\";s:37:\"The
  remaining number of calls per day\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:22:\"remainingCallsPerMonth\";O:8:\"stdClass\":4:{s:11:\"description\";s:40:\"The
  number of authorized calls per month\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:20:\"remainingCallsPerSec\";O:8:\"stdClass\":4:{s:11:\"description\";s:40:\"The
  remaining number of calls per second\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:9:{i:0;s:21:\"authorizedCallsPerSec\";i:1;s:18:\"currentCallsPerSec\";i:2;s:20:\"remainingCallsPerSec\";i:3;s:21:\"authorizedCallsPerDay\";i:4;s:18:\"currentCallsPerDay\";i:5;s:20:\"remainingCallsPerDay\";i:6;s:23:\"authorizedCallsPerMonth\";i:7;s:20:\"currentCallsPerMonth\";i:8;s:22:\"remainingCallsPerMonth\";}s:4:\"type\";s:6:\"object\";}s:7:\"Service\";O:8:\"stdClass\":4:{s:11:\"description\";s:136:\"An
  otoroshi service descriptor. Represent a forward HTTP call on a domain to another
  location with some optional api management mecanism\";s:10:\"properties\";O:8:\"stdClass\":31:{s:6:\"Canary\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Canary\";}s:17:\"additionalHeaders\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:87:\"Specify
  headers that will be added to each client request. Useful to add authentication\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:3:\"api\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/ExposedApi\";}s:9:\"buildMode\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"Display
  a construction page when a user try to use the service\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:12:\"clientConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ClientConfig\";}s:6:\"domain\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"The
  domain on which the service is available.\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:7:\"enabled\";O:8:\"stdClass\":3:{s:11:\"description\";s:114:\"Activate
  or deactivate your service. Once disabled, users will get an error page saying the
  service does not exist\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:26:\"enforceSecureCommunication\";O:8:\"stdClass\":3:{s:11:\"description\";s:130:\"When
  enabled, Otoroshi will try to exchange headers with downstream service to ensure
  no one else can use the service from outside\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:3:\"env\";O:8:\"stdClass\":3:{s:11:\"description\";s:292:\"The
  line on which the service is available. Based on that value, the name of the line
  will be appended to the subdomain. For line prod, nothing will be appended. For
  example, if the subdomain is 'foo' and line is 'preprod', then the exposed service
  will be available at 'foo.preprod.mydomain'\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:10:\"forceHttps\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Will
  force redirection to https:// if not present\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:7:\"groupId\";O:8:\"stdClass\":3:{s:11:\"description\";s:167:\"Each
  service descriptor is attached to a group. A group can have one or more services.
  Each API key is linked to a group and allow access to every service in the group\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:11:\"healthCheck\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/HealthCheck\";}s:2:\"id\";O:8:\"stdClass\":4:{s:11:\"description\";s:47:\"A
  unique random string to identify your service\";s:7:\"example\";s:36:\"110e8400-e29b-11d4-a716-446655440000\";s:6:\"format\";s:4:\"uuid\";s:4:\"type\";s:6:\"string\";}s:11:\"ipFiltering\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/IpFiltering\";}s:9:\"localHost\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  host used localy, mainly localhost:xxxx\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:11:\"localScheme\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"The
  scheme used localy, mainly http\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:15:\"maintenanceMode\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"Display
  a maintainance page when a user try to use the service\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:15:\"matchingHeaders\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:98:\"Specify
  headers that MUST be present on client request to route it. Useful to implement
  versioning\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:12:\"matchingRoot\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  root path on which the service is available\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"metadata\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:33:\"Just
  a bunch of random properties\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":3:{s:11:\"description\";s:71:\"The
  name of your service. Only for debug and human readability purposes\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:10:\"privateApp\";O:8:\"stdClass\":3:{s:11:\"description\";s:119:\"When
  enabled, user will be allowed to use the service (UI) only if they are registered
  users of the private apps domain\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:15:\"privatePatterns\";O:8:\"stdClass\":3:{s:11:\"description\";s:107:\"If
  you define a public pattern that is a little bit too much, you can make some of
  public URL private again\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:14:\"publicPatterns\";O:8:\"stdClass\":3:{s:11:\"description\";s:275:\"By
  default, every services are private only and you'll need an API key to access it.
  However, if you want to expose a public UI, you can define one or more public patterns
  (regex) to allow access to anybody. For example if you want to allow anybody on
  any URL, just use '/.*'\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"redirectToLocal\";O:8:\"stdClass\":3:{s:11:\"description\";s:222:\"If
  you work locally with Otoroshi, you may want to use that feature to redirect one
  particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com
  to http://localhost:8080 to make some tests\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:4:\"root\";O:8:\"stdClass\":3:{s:11:\"description\";s:176:\"Otoroshi
  will append this root to any target choosen. If the specified root is '/api/foo',
  then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:22:\"secComExcludedPatterns\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"URI
  patterns excluded from secured communications\";s:5:\"items\";O:8:\"stdClass\":2:{s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:23:\"sendOtoroshiHeadersBack\";O:8:\"stdClass\":3:{s:11:\"description\";s:103:\"When
  enabled, Otoroshi will send headers to consumer like request id, client latency,
  overhead, etc ...\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:12:\"statsdConfig\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/StatsdConfig\";}s:9:\"subdomain\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  subdomain on which the service is available\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:7:\"targets\";O:8:\"stdClass\":3:{s:11:\"description\";s:220:\"The
  list of target that Otoroshi will proxy and expose through the subdomain defined
  before. Otoroshi will do round-robin load balancing between all those targets with
  circuit breaker mecanism to avoid cascading failures\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Target\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:14:{i:0;s:2:\"id\";i:1;s:7:\"groupId\";i:2;s:4:\"name\";i:3;s:3:\"env\";i:4;s:6:\"domain\";i:5;s:9:\"subdomain\";i:6;s:7:\"targets\";i:7;s:4:\"root\";i:8;s:7:\"enabled\";i:9;s:10:\"privateApp\";i:10;s:10:\"forceHttps\";i:11;s:15:\"maintenanceMode\";i:12;s:9:\"buildMode\";i:13;s:26:\"enforceSecureCommunication\";}s:4:\"type\";s:6:\"object\";}s:11:\"SimpleAdmin\";O:8:\"stdClass\":4:{s:11:\"description\";s:64:\"Administrator
  using just login/password tuple to access Otoroshi\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"createdAt\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"The
  creation date of the user\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:5:\"label\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"The
  label for the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"The
  hashed password of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"The
  email address of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:8:\"username\";i:1;s:5:\"label\";i:2;s:8:\"password\";i:3;s:9:\"createdAt\";}s:4:\"type\";s:6:\"object\";}s:5:\"Stats\";O:8:\"stdClass\":4:{s:11:\"description\";s:36:\"Live
  stats for a service or globally\";s:10:\"properties\";O:8:\"stdClass\":9:{s:5:\"calls\";O:8:\"stdClass\":4:{s:11:\"description\";s:52:\"Number
  of calls on the specified service or globally\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:25:\"concurrentHandledRequests\";O:8:\"stdClass\":4:{s:11:\"description\";s:42:\"The
  number of concurrent request currently\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:6:\"dataIn\";O:8:\"stdClass\":4:{s:11:\"description\";s:69:\"The
  amount of data sent to the specified service or Otoroshi globally\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:10:\"dataInRate\";O:8:\"stdClass\":4:{s:11:\"description\";s:67:\"The
  rate of data sent to the specified service or Otoroshi globally\";s:7:\"example\";d:42.200000000000003;s:6:\"format\";s:6:\"double\";s:4:\"type\";s:7:\"integer\";}s:7:\"dataOut\";O:8:\"stdClass\":4:{s:11:\"description\";s:71:\"The
  amount of data sent from the specified service or Otoroshi globally\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:11:\"dataOutRate\";O:8:\"stdClass\":4:{s:11:\"description\";s:69:\"The
  rate of data sent from the specified service or Otoroshi globally\";s:7:\"example\";d:42.200000000000003;s:6:\"format\";s:6:\"double\";s:4:\"type\";s:7:\"integer\";}s:8:\"duration\";O:8:\"stdClass\":4:{s:11:\"description\";s:31:\"The
  average duration for a call\";s:7:\"example\";d:42.200000000000003;s:6:\"format\";s:6:\"double\";s:4:\"type\";s:7:\"integer\";}s:8:\"overhead\";O:8:\"stdClass\":4:{s:11:\"description\";s:59:\"The
  average overhead time induced by Otoroshi for each call\";s:7:\"example\";d:42.200000000000003;s:6:\"format\";s:6:\"double\";s:4:\"type\";s:7:\"integer\";}s:4:\"rate\";O:8:\"stdClass\":4:{s:11:\"description\";s:76:\"The
  rate of data sent from and to the specified service or Otoroshi globally\";s:7:\"example\";d:42.200000000000003;s:6:\"format\";s:6:\"double\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:9:{i:0;s:5:\"calls\";i:1;s:6:\"dataIn\";i:2;s:7:\"dataOut\";i:3;s:4:\"rate\";i:4;s:8:\"duration\";i:5;s:8:\"overhead\";i:6;s:10:\"dataInRate\";i:7;s:11:\"dataOutRate\";i:8;s:25:\"concurrentHandledRequests\";}s:4:\"type\";s:6:\"object\";}s:12:\"StatsdConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:41:\"The
  configuration for statsd metrics push\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"datadog\";O:8:\"stdClass\":3:{s:11:\"description\";s:13:\"Datadog
  agent\";s:7:\"example\";b:1;s:4:\"type\";s:7:\"boolean\";}s:4:\"host\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"The
  host of the StatsD agent\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:4:\"port\";O:8:\"stdClass\":4:{s:11:\"description\";s:28:\"The
  port of the StatsD agent\";s:7:\"example\";i:123123;s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:3:{i:0;s:4:\"host\";i:1;s:4:\"port\";i:2;s:7:\"datadog\";}s:4:\"type\";s:6:\"object\";}s:6:\"Target\";O:8:\"stdClass\":4:{s:11:\"description\";s:81:\"A
  Target is where an HTTP call will be forwarded in the end from a service domain\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"host\";O:8:\"stdClass\":4:{s:11:\"description\";s:111:\"The
  host on which the HTTP call will be forwarded. Can be a domain name, or an IP address.
  Can also have a port\";s:7:\"example\";s:14:\"www.google.com\";s:6:\"format\";s:8:\"hostname\";s:4:\"type\";s:6:\"string\";}s:6:\"scheme\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"The
  protocol used for communication. Can be http or https\";s:7:\"example\";s:14:\"a
  string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"host\";i:1;s:6:\"scheme\";}s:4:\"type\";s:6:\"object\";}s:8:\"U2FAdmin\";O:8:\"stdClass\":4:{s:11:\"description\";s:54:\"Administrator
  using FIDO U2F device to access Otoroshi\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"createdAt\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"The
  creation date of the user\";s:7:\"example\";i:123;s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:5:\"label\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"The
  label for the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"The
  hashed password of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}s:12:\"registration\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:25:\"The
  U2F registration slug\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:8:\"username\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"The
  email address of the user\";s:7:\"example\";s:14:\"a string value\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:5:{i:0;s:8:\"username\";i:1;s:5:\"label\";i:2;s:8:\"password\";i:3;s:9:\"createdAt\";i:4;s:12:\"registration\";}s:4:\"type\";s:6:\"object\";}s:7:\"Webhook\";O:8:\"stdClass\":4:{s:11:\"description\";s:38:\"A
  callback URL where events are posted\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"headers\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:41:\"Headers
  to authorize the call or whatever\";s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"key\";s:5:\"value\";}s:4:\"type\";s:6:\"object\";}s:3:\"url\";O:8:\"stdClass\":4:{s:11:\"description\";s:31:\"The
  URL where events are posted\";s:7:\"example\";s:21:\"http://www.google.com\";s:6:\"format\";s:3:\"uri\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:3:\"url\";i:1;s:7:\"headers\";}s:4:\"type\";s:6:\"object\";}}"
...
