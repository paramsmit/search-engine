---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:2:\"v1\";s:5:\"title\";s:51:\"Draft
  swagger file for Fujitsu K5 IaaS Database API\";s:9:\"x-service\";s:8:\"database\";s:7:\"x-scope\";s:6:\"region\";}"
host: database.uk-1.cloud.global.fujitsu.com
paths:
  /v1.0/{tenantId}/instances:
    post:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples:
            application/json:
              instance:
                status: BUILD
                links:
                - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/instances/44b277eb-39be-4921-be31-3d61b43651d7
                  rel: self
                autoMinorVersionUpgrade: true
                flavor:
                  id: "1"
                  links:
                  - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                      flavors/1
                    rel: self
                id: 44b277eb-39be-4921-be31-3d61b43651d7
                subnetGroupId: subnetGroup1
                port: 26500
                collate: C
                engineVersion: "12.1"
                privateAddress: fujitsu.s5.dbaas.a23w4e5r6tg7yuhjik
                engine: symfoware
                multiAZ: true
                availabilityZone: jp-east-1a
                parameterGroupId: paramid1
                privateIp: 10.125.52.214
                volume:
                  type: M1
                  size: 20
                charcterSet: UTF-8
                autoMaintenance: true
                backupRetentionPeriod: 10
                preferredMaintenanceWindow: Sun:19:00-Sun:20:00
                preferredBackupWindow: 17:00-18:00
                name: json-rack-instance
                publiclyAccessible: true
                created: "2013-03-18T19:09:17"
                securityGroupIds:
                - securityGroupId: secid1
                - securityGroupId: secid2
                preferredRecoveryTime:
                  applyImmediately: true
                  time: ~
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - schema:
          $ref: '#/definitions/postInstances'
        required: false
        name: body
        in: body
      summary: Restore DB instance from DB snapshot
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              instances:
              - status: ACTIVE
                name: test-instance1
                links:
                - href: https://database.{region-name}.tps5.fujitsu.com/v1.0/1234/instances/0986rack_instance
                  rel: self
                volume:
                  type: M1
                  size: 20
                flavor:
                  id: "1"
                  links:
                  - href: http://database.{regionname}.tps5.fujitsu.com/v1.0/1234/flavors/1
                    rel: self
                id: 098653ba-218b-47ce-936a-e0b749101f81
              - status: ACTIVE
                name: json-rack-instance
                links:
                - href: https://database.{regionname}.tps5.fujitsu.com/v1.0/1234/instances/44b277eb-39be-4921-be31-3d61b43651d7
                  rel: self
                volume:
                  type: M1
                  size: 20
                flavor:
                  id: "1"
                  links:
                  - href: https:// database.{regionname}.tps5.fujitsu.com/v1.0/1234/flavors/1
                    rel: self
                id: 44b277eb-39be-4921-be31-3d61b43651d7
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List DB instances
  /v1.0/{tenantId}/instances/{instanceId}:
    put:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples:
            application/json:
              instance:
                status: BUILD
                links:
                - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                    instances/44b277eb-39be-4921-be31-3d61b43651d7
                  rel: self
                autoMinorVersionUpgrade: true
                flavor:
                  id: "1"
                  links:
                  - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                      flavors/1
                    rel: self
                id: 44b277eb-39be-4921-be31-3d61b43651d7
                subnetGroupId: subnetGroup1
                port: 26500
                collate: C
                engineVersion: "12.1"
                privateAddress: fujitsu.s5.dbaas.a23w4e5r6tg7yuhjik
                pendingModifiedValues:
                - masterUserPassword: '***'
                engine: symfoware
                multiAZ: true
                availabilityZone: jp-east-1a
                parameterGroupId: paramid1
                privateIp: 10.125.52.214
                preferredBackupWindow: 17:00-18:00
                charcterSet: UTF8
                autoMaintenance: true
                backupRetentionPeriod: 10
                preferredMaintenanceWindow: Sun:19:00-Sun:20:00
                volume:
                  type: M1
                  size: 20
                multi: true
                name: json_rack_instance
                publiclyAccessible: true
                created: "2013-03-18T19:09:17"
                securityGroupIds:
                - securityGroupId: secid1
                - securityGroupId: secid2
                preferredRecoveryTime:
                  applyImmediately: ~
                  time: 01:00
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      - schema:
          $ref: '#/definitions/put{Instanceid}'
        required: false
        name: body
        in: body
      summary: Modify DB instance
    post:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              instance:
                status: BUILD
                links:
                - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                    instances/44b277eb-39be-4921-be31-3d61b43651d7
                  rel: self
                'readReplicaSrcDBInstanceIdentifier ': qawsertb-39be-492-be31-3d6fewab43d7
                autoMinorVersionUpgrade: true
                flavor:
                  id: "1"
                  links:
                  - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                      flavors/1
                    rel: self
                id: 44b277eb-39be-4921-be31-3d61b43651d7
                subnetGroupId: subnetGroup1
                port: 26500
                collate: C
                engineVersion: "12.1"
                privateAddress: fujitsu.s5.dbaas.a23w4e5r6tg7yuhjik
                engine: symfoware
                multiAZ: true
                availabilityZone: jp-east-1a
                parameterGroupId: paramid1
                privateIp: 10.125.52.214
                preferredBackupWindow: 17:00-18:00
                charcterSet: UTF-8
                backupRetentionPeriod: 10
                preferredMaintenanceWindow: Sun:19:00-Sun:20:00
                volume:
                  type: M1
                  size: 20
                name: json-rack-instance
                publiclyAccessible: true
                created: "2013-03-18T19:09:17"
                securityGroupIds:
                - securityGroupId: secid1
                - securityGroupId: secid2
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      - schema:
          $ref: '#/definitions/post{Instanceid}'
        required: false
        name: body
        in: body
      summary: Create read replica DB instance
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              instance:
                status: BUILD
                securityGroupIds.:
                - securityGroupId: secid1
                - securityGroupId: secid2
                links:
                - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/instances/44b277eb-39be-4921-be31-3d61b43651d7
                  rel: self
                ip: 10.125.52.214
                autoMinorVersionUpgrade: true
                flavor:
                  id: "1"
                  links:
                  - href: http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                      flavors/1
                    rel: self
                id: 44b277eb-39be-4921-be31-3d61b43651d7
                port: 26500
                collate: C
                engineVersion: "12.1"
                engine: symfoware
                multiAZ: true
                availabilityZone: az-1
                parameterGroupId: paramid1
                preferredBackupWindow: 17:00-18:00
                charcterSet: UTF-8
                address: fujitsu.s5.dbaas.a23w4e5r6tg7yuhjik
                backupRetentionPeriod: 10
                preferredMaintenanceWindow: Sun:19:00-Sun:20:00
                volume:
                  type: M1
                  size: 20
                name: json-rack-instance
                publiclyAccessible: true
                created: "2013-03-18T19:09:17"
                'subnetGroupId ': subnetGroup1
                preferredRecoveryTime:
                  applyImmediately: true
                  time: ~
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      summary: Show DB instance details
    delete:
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      summary: Delete DB instance
  /v1.0/{tenantId}/instances/{instanceId}/action:
    post:
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      - schema:
          $ref: '#/definitions/postAction'
        required: false
        name: body
        in: body
      summary: Restart DB instance
  /v1.0/{tenantId}/snapshots:
    post:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              snapshot:
                status: Available
                description: sample snapshot
                created: "2013-03-18T19:09:17"
                instanceId: instance-r67fg9uj0kfp
                Id: snapshot-dfrtgy3h2uj5ik
                name: snapshot1
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - schema:
          $ref: '#/definitions/postSnapshots'
        required: false
        name: body
        in: body
      summary: Create DB snapshot
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              snapshots:
              - instanceId: instance_r67fg9uj0kfp
                snapshotType: automated
                name: snapshot1
                id: snapshot_dfrtgy3h2uj5ik
              - instanceId: instance_r67rftyufrp
                snapshotType: automated
                name: snapshot2
                id: snapshot_dftgyfewaj5ik
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List DB snapshots
  /v1.0/{tenantId}/snapshots/{snapshotId}:
    put:
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: snapshotId
        in: path
      - schema:
          $ref: '#/definitions/put{Snapshotid}'
        required: false
        name: body
        in: body
      summary: Copy DB snapshot
    get:
      responses:
        200:
          description: 200 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: snapshotId
        in: path
      summary: Show DB snapshot details
    delete:
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: snapshotId
        in: path
      summary: Delete DB snapshot
  /v1.0/{tenantId}/logfiles/{instanceId}:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              describeDBLogFilesResult:
                descriveDBLogFileDetails:
                - lastWritten: "1414330786"
                  logFileName: logfile1
                  size: 10000000
                - lastWritten: "1449109892"
                  logFileName: logfile2
                  size: 330000000
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      summary: List DB log files
  /v1.0/{tenantId}/logfiles/{instanceId}/{logFileName}:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              downloadDBLogFilePortion:
                marker: "20"
                additionalDataPending: true
                logFileData: xxxxxx
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: instanceId
        in: path
      - required: true
        type: string
        name: logFileName
        in: path
      summary: Show DB log file details
  /v1.0/{tenantId}/subnetgroups:
    post:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              subnetgroup:
                status: ' Available'
                ' subnetIds ':
                - subnetId: subnetid1
                - subnetId: subnetid2
                id: subnet_edrtfyuhijko01
                description: this is test
                name: subnetGroup1
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - schema:
          $ref: '#/definitions/postSubnetgroups'
        required: false
        name: body
        in: body
      summary: Create DB subnet group
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              ' subnetGroups ':
              - status: Available
                id: subnetGroupid1
                name: subnetGroupid1
              - status: Available
                id: subnetGroupid2
                name: subnetGroupid2
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List DB subnet groups
  /v1.0/{tenantId}/subnetgroups/{subnetGroupId}:
    put:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples:
            application/json:
              subnetgroup:
                status: ' Available'
                'subnetIds ':
                - subnetId: subnetid1
                - subnetId: subnetid2
                id: subnet_edrtfyuhijko01
                'name ': subnetGroup1
                description: this is test
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: subnetGroupId
        in: path
      - schema:
          $ref: '#/definitions/put{Subnetgroupid}'
        required: false
        name: body
        in: body
      summary: Modify DB subnet group
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              subnetgroup:
                status: ' Available'
                'subnetIds ':
                - subnetId: subnetid1
                - subnetId: subnetid2
                id: subnet_edrtfyuhijko01
                'name ': subnetGroup1
                description: this is test
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: subnetGroupId
        in: path
      summary: Show DB subnet group details
    delete:
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: subnetGroupId
        in: path
      summary: Delete DB subnet group
  /v1.0/{tenantId}/parametergroups:
    post:
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              dbParameterGroup:
                id: paramgroup_w34e5r6t7yu89
                appliedInstances: []
                ' parameterGroupFamily': ""
                description: test
                name: paramgroup1
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - schema:
          $ref: '#/definitions/postParametergroups'
        required: false
        name: body
        in: body
      summary: Create DB parameter group
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              parameterGroups:
              - id: paramgroup_w34e5r6t7yu89
                appliedInstances:
                - dbinst_f587389gre
                - dbinst_8489y3qre
                ' parameterGroupFamily': symfoware_12.1
                description: test
                name: paramgroup1
              - id: paramgroup_w34e5r6t7ew89
                appliedInstances:
                - dbinst_fet904utjhf
                - dbinst_p9ufejowre
                ' parameterGroupFamily': symfoware_12.1
                description: test
                name: paramgroup2
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List DB parameter groups
  /v1.0/{tenantId}/parametergroups/{parameterGroupId}:
    put:
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: parameterGroupId
        in: path
      - schema:
          $ref: '#/definitions/put{Parametergroupid}'
        required: false
        name: body
        in: body
      summary: Modify DB parameter group
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              parameterGroup:
                parameters:
                - anllowedValues: 16-1073741823
                  applyMethod: pending-reboot
                  name: shared_buffers
                  denscription: (8kB) Sets the number of shared memory buffers used
                    by the server.
                  dataType: integer
                  value: "65536"
                  source: engine
                  isModifiable: "true"
                  minimumEngineVersion: "12.1"
                  applyType: static
                - applyMethod: pending-reboot
                  name: ' shared_preload_libraries'
                  dataType: string
                  value: ""
                  allowedValues: ""
                  source: system
                  isModifiable: "false"
                  minimumEngineVersion: "12.1"
                  applyType: static
                  description: Lists shared libraries to preload into server.
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: parameterGroupId
        in: path
      summary: Show DB parameter group details
    delete:
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: parameterGroupId
        in: path
      summary: Delete DB parameter group
  /v1.0/{tenantId}/eventnotifications:
    post:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              eventSubscription:
                description: ' this is test '
                created: "2013-03-18T19:09:17"
                ' enabled ': true
                name: ' mysubscription1'
                'eventCategories ':
                - eventCategory: backup
                - eventCategory: creation
                sourceIds:
                - sourceId: dbinst1
                - sourceId: dbinst2
                subsciptionId: suscription1
                sourceType: db-instance
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - schema:
          $ref: '#/definitions/postEventnotifications'
        required: false
        name: body
        in: body
      summary: Create event notification subscription
    get:
      responses:
        200:
          description: 200 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List event notification subscriptions
  /v1.0/{tenantId}/eventnotifications/{subscriptionID}:
    put:
      consumes:
      - application/json
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: subscriptionID
        in: path
      - schema:
          $ref: '#/definitions/put{Subscriptionid}'
        required: false
        name: body
        in: body
      summary: Add or delete monitored event
    get:
      responses:
        200:
          description: 200 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: subscriptionID
        in: path
      summary: Show event notification subscription details
    delete:
      responses:
        202:
          description: 202 response
          examples: []
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: subscriptionID
        in: path
      summary: Delete event notification subscription
  /v1.0/{tenantId}/eventcategories/{sourceType}/:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              eventCategoriesMaps:
              - eventCategories:
                - availability
                - failover
                - recovery
                - low storage
                - creation
                - notification
                - backup
                - configuration change
                - restoration
                - maintenance
                - deletion
                - failure
                sourceType: db-instance
              - eventCategories:
                - deletion
                - restoration
                - notification
                - failure
                - creation
                sourceType: db-snapshot
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: sourceType
        in: path
      summary: List event notification categories
  /v1.0/{tenantId}/events:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              marker: event1192
              events:
              - ' date': "2013-03-18T19:09:17"
                message: Finished DB Instance backup
                eventCategories:
                - backup
                sourceIdentifier: dbinst_678yuhyhih
                sourceType: db-instance
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List event notifications
  /v1.0/{tenantId}/engineversion:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              dBEngineVersions:
              - engine: symfoware
                dBEngineVersionDescription: symfoware v12.1
                dBParameterGroupFamily: symfoware v12.1
                dBEngineDescription: Fujitsu software symfoware
                engineVersion: 12.1.1
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: Show DB engine details
  /v1.0/{tenantId}/flavors:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              flavors:
              - id: "11"
                links:
                - href: ' http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                    flavors/11'
                  rel: SELF
                name: economy
              - id: "12"
                links:
                - href: ' http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                    flavors/12'
                  rel: SELF
                name: standard
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      summary: List flavors
  /v1.0/{tenantId}/flavors/{flavorId}:
    get:
      produces:
      - application/json
      responses:
        200:
          description: 200 response
          examples:
            application/json:
              flavor:
                name: economy
                links:
                - href: ' http://database.{region-name}.tps5.fujitsu.com/v1.0/1234/
                    flavors/11'
                  rel: SELF
                ram: "1700"
                vcpus: "1"
                swap: ~
                disk: "0"
                id: "11"
      parameters:
      - required: true
        type: string
        name: tenantId
        in: path
      - required: true
        type: string
        name: flavorId
        in: path
      summary: Show flavor details
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":12:{s:16:\"post{Instanceid}\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":2:{s:6:\"action\";O:8:\"stdClass\":1:{s:11:\"readreplica\";s:0:\"\";}s:8:\"instance\";O:8:\"stdClass\":11:{s:6:\"volume\";O:8:\"stdClass\":2:{s:4:\"type\";s:2:\"M1\";s:4:\"size\";i:20;}s:16:\"availabilityZone\";s:10:\"jp-east-1a\";s:4:\"name\";s:18:\"json_rack_instance\";s:18:\"publiclyAccessible\";b:1;s:16:\"parameterGroupId\";s:8:\"paramid1\";s:9:\"flavorRef\";s:1:\"1\";s:16:\"securityGroupIds\";a:2:{i:0;O:8:\"stdClass\":1:{s:15:\"securityGroupId\";s:6:\"secid1\";}i:1;O:8:\"stdClass\":1:{s:15:\"securityGroupId\";s:6:\"secid2\";}}s:21:\"preferredBackupWindow\";s:11:\"17:00-18:00\";s:13:\"subnetGroupId\";s:12:\"subnetGroup1\";s:4:\"port\";i:1234;s:26:\"preferredMaintenanceWindow\";s:19:\"Sun:19:00-Sun:20:00\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"action\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"readreplica\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"instance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:21:\"preferredBackupWindow\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"availabilityZone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"publiclyAccessible\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"parameterGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"flavorRef\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"securityGroupIds\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"securityGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}s:6:\"volume\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:13:\"subnetGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"port\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:26:\"preferredMaintenanceWindow\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:19:\"put{Subscriptionid}\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":2:{s:6:\"action\";O:8:\"stdClass\":1:{s:3:\"add\";s:0:\"\";}s:17:\"eventnotification\";O:8:\"stdClass\":1:{s:8:\"sourceId\";s:7:\"dbinst5\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"action\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"add\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:17:\"eventnotification\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"sourceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:10:\"postAction\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":2:{s:8:\"failover\";b:0;s:6:\"reboot\";s:0:\"\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"failover\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"reboot\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"put{Parametergroupid}\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:14:\"parametergroup\";O:8:\"stdClass\":2:{s:18:\"resetAllparameters\";b:0;s:10:\"parameters\";a:2:{i:0;O:8:\"stdClass\":3:{s:11:\"applyMethod\";s:14:\"pending-reboot\";s:5:\"name
  \";s:14:\"shared_buffers\";s:6:\"value \";s:5:\"65536\";}i:1;O:8:\"stdClass\":3:{s:11:\"applyMethod\";s:9:\"immediate\";s:5:\"name
  \";s:8:\"work_mem\";s:6:\"value \";s:4:\"8192\";}}}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"parametergroup\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:18:\"resetAllparameters\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"parameters\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"applyMethod\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"name
  \";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"value \";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}}}}}s:13:\"postSnapshots\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:8:\"snapshot\";O:8:\"stdClass\":2:{s:10:\"instanceId\";s:7:\"dbinst1\";s:4:\"name\";s:23:\"json-rack-instance-bkup\";}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"snapshot\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"instanceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:16:\"postSubnetgroups\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:11:\"subnetgroup\";O:8:\"stdClass\":3:{s:9:\"subnetIds\";a:2:{i:0;O:8:\"stdClass\":1:{s:8:\"subnetId\";s:9:\"subnetid1\";}i:1;O:8:\"stdClass\":1:{s:8:\"subnetId\";s:9:\"subnetid2\";}}s:4:\"name\";s:12:\"subnetGroup1\";s:11:\"description\";s:12:\"this
  is test\";}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"subnetgroup\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"subnetIds\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"subnetId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:13:\"postInstances\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":3:{s:6:\"action\";O:8:\"stdClass\":1:{s:15:\"restoresnapshot\";N;}s:8:\"instance\";O:8:\"stdClass\":14:{s:7:\"multiAZ\";b:1;s:16:\"availabilityZone\";s:10:\"jp-east-1a\";s:4:\"name\";s:18:\"json-rack-instance\";s:18:\"publiclyAccessible\";b:1;s:16:\"parameterGroupId\";s:8:\"paramid1\";s:9:\"flavorRef\";s:1:\"1\";s:4:\"port\";i:1234;s:16:\"securityGroupIds\";a:2:{i:0;O:8:\"stdClass\":1:{s:15:\"securityGroupId\";s:6:\"secid1\";}i:1;O:8:\"stdClass\":1:{s:15:\"securityGroupId\";s:6:\"secid2\";}}s:6:\"volume\";O:8:\"stdClass\":1:{s:4:\"size\";i:100;}s:15:\"autoMaintenance\";b:1;s:13:\"subnetGroupId\";s:12:\"subnetGroup1\";s:21:\"preferredBackupWindow\";s:11:\"17:00-18:00\";s:21:\"preferredRecoveryTime\";O:8:\"stdClass\":1:{s:16:\"applyImmediately\";b:1;}s:26:\"preferredMaintenanceWindow\";s:19:\"Sun:19:00-Sun:20:00\";}s:8:\"snapshot\";O:8:\"stdClass\":1:{s:2:\"id\";s:5:\"snap1\";}}}s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"action\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"restoresnapshot\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"null\";}}}s:8:\"instance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:7:\"multiAZ\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"availabilityZone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"publiclyAccessible\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:26:\"preferredMaintenanceWindow\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"parameterGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"flavorRef\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"securityGroupIds\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"securityGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}s:6:\"volume\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"size\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:15:\"autoMaintenance\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"subnetGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"preferredRecoveryTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"applyImmediately\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:4:\"port\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:21:\"preferredBackupWindow\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"snapshot\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:18:\"put{Subnetgroupid}\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:11:\"subnetgroup\";O:8:\"stdClass\":3:{s:10:\"subnetIds
  \";a:2:{i:0;O:8:\"stdClass\":1:{s:8:\"subnetId\";s:9:\"subnetid1\";}i:1;O:8:\"stdClass\":1:{s:8:\"subnetId\";s:9:\"subnetid2\";}}s:11:\"description\";s:12:\"this
  is test\";s:5:\"name \";s:12:\"subnetGroup1\";}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"subnetgroup\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"subnetIds
  \";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"subnetId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"name
  \";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:15:\"put{Instanceid}\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:8:\"instance\";O:8:\"stdClass\":24:{s:17:\"securityGroupIds.\";a:2:{i:0;O:8:\"stdClass\":1:{s:15:\"securityGroupId\";s:6:\"secid1\";}i:1;O:8:\"stdClass\":1:{s:15:\"securityGroupId\";s:6:\"secid2\";}}s:18:\"masterUserPassword\";s:3:\"***\";s:23:\"autoMinorVersionUpgrade\";b:1;s:13:\"character_set\";s:4:\"utf8\";s:4:\"port\";i:1234;s:7:\"collate\";s:1:\"C\";s:13:\"engineVersion\";s:4:\"12.1\";s:6:\"engine\";s:9:\"symfoware\";s:7:\"multiAZ\";b:1;s:16:\"availabilityZone\";s:10:\"jp-east-1a\";s:5:\"users\";a:1:{i:0;O:8:\"stdClass\":3:{s:8:\"password\";s:12:\"demopassword\";s:4:\"name\";s:8:\"demouser\";s:9:\"databases\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"sampledb\";}}}}s:16:\"parameterGroupId\";s:8:\"paramid1\";s:9:\"flavorRef\";s:1:\"1\";s:21:\"preferredBackupWindow\";s:11:\"17:00-18:00\";s:15:\"autoMaintenance\";b:1;s:21:\"backupRetentionPeriod\";i:10;s:26:\"preferredMaintenanceWindow\";s:19:\"Sun:19:00-Sun:20:00\";s:6:\"volume\";O:8:\"stdClass\":1:{s:4:\"size\";i:2;}s:14:\"subnetGroupId.\";s:12:\"subnetGroup1\";s:5:\"multi\";b:1;s:4:\"name\";s:18:\"json-rack-instance\";s:18:\"publiclyAccessible\";b:1;s:21:\"preferredRecoveryTime\";O:8:\"stdClass\":1:{s:4:\"time\";s:5:\"01:00\";}s:9:\"databases\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"sampledb\";}i:1;O:8:\"stdClass\":1:{s:4:\"name\";s:9:\"nextround\";}}}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"instance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":24:{s:17:\"securityGroupIds.\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"securityGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}s:18:\"masterUserPassword\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"autoMinorVersionUpgrade\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"character_set\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"port\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"collate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"engineVersion\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"engine\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"multiAZ\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"availabilityZone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"users\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"databases\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}}}s:4:\"type\";s:5:\"array\";}s:16:\"parameterGroupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"flavorRef\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"preferredBackupWindow\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"autoMaintenance\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:21:\"backupRetentionPeriod\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:26:\"preferredMaintenanceWindow\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"volume\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"size\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:14:\"subnetGroupId.\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"multi\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"publiclyAccessible\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:21:\"preferredRecoveryTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"databases\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"type\";s:5:\"array\";}}}}}s:22:\"postEventnotifications\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:19:\"postParametergroups\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:14:\"parametergroup\";O:8:\"stdClass\":3:{s:20:\"parameterGroupFamily\";s:15:\"symfoware_v12.1\";s:4:\"name\";s:8:\"dbparam1\";s:11:\"description\";s:12:\"this
  is test\";}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"parametergroup\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:20:\"parameterGroupFamily\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:15:\"put{Snapshotid}\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"application/json\";O:8:\"stdClass\":1:{s:8:\"snapshot\";O:8:\"stdClass\":1:{s:4:\"name\";s:24:\"json-rack-instance-bkup2\";}}}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"snapshot\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}"
...
