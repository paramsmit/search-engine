---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:41:\"This API provides
  a platform for users to\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:13:\"Authors
  Haven\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:25:\"chidioguejiofor@gmail.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:9:\"MIT
  2.0.0\";s:3:\"url\";s:33:\"https://authorhaven.herokuapp.com\";}}"
host: virtserver.swaggerhub.com
basePath: /chidioguejiofor/RviendellAuthorsHaven/1.0.0
paths:
  /auth/linkedin:
    get:
      tags:
      - social login
      - linkedin
      summary: retrieves user information using Linkedin OAuth
      produces:
      - text/html
      parameters: []
      responses:
        200:
          description: redirect to likedin successfully
  /auth/google:
    get:
      tags:
      - social login
      - google
      summary: retrieves user information using Google OAuth
      produces:
      - text/html
      parameters: []
      responses:
        200:
          description: redirect to google successfully
  /auth/facebook:
    get:
      tags:
      - social login
      - facebook
      summary: retrieves user information using Facebook OAuth
      produces:
      - text/html
      parameters: []
      responses:
        200:
          description: redirect to facebook successfully
  /users:
    post:
      tags:
      - developers
      summary: signs up a new user
      description: This signup a  new user and persists the user into the database
      consumes:
      - application/json
      parameters:
      - in: body
        name: user
        required: false
        schema:
          $ref: '#/definitions/user'
      responses:
        200:
          description: user was created successfully
        400:
          description: invalid data.
  /users/login:
    post:
      tags:
      - developers
      summary: signs up a new user
      description: This logs in an existing user and returns a token
      consumes:
      - application/json
      parameters:
      - in: body
        name: user
        required: false
        schema:
          $ref: '#/definitions/user_1'
      responses:
        200:
          description: user was created successfully
        400:
          description: invalid data.
  /users/forgot-password:
    post:
      tags:
      - Authentication
      summary: sends an email containing password reset instructions to the user
      description: the helps a user reset his password once via mail
      consumes:
      - application/json
      parameters:
      - in: body
        name: User
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: if the email was sent successfully
        400:
          description: invalid request
  /users/reset-password:
    put:
      tags:
      - Authentication
      summary: Sends a request to the server to reset user password by the user email
      description: the request changes the user password by  asking him for his former
        password
      parameters:
      - in: body
        name: User
        required: false
        schema:
          $ref: '#/definitions/User_1'
      responses:
        201:
          description: the request was sent successfully
        400:
          description: the email was not found or is invalid
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":4:{s:4:\"User\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":1:{s:5:\"email\";s:5:\"email\";}}s:6:\"user_1\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"user\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"User_1\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:5:\"email\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":1:{s:5:\"email\";s:5:\"email\";}}}"
...
