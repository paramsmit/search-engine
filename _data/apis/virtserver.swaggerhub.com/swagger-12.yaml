---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:38:\"API backend for
  Project Memory Clients\";s:7:\"version\";s:5:\"1.0.5\";s:5:\"title\";s:10:\"Memory
  API\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:24:\"admin@project-memory.org\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: virtserver.swaggerhub.com
basePath: /Project-Memory/MemoryApi/1.0.0
paths:
  /auth/login:
    post:
      tags:
      - anonymous
      summary: attemps a log in with post body
      operationId: auth_Login
      description: Validates the user credentials specified in the post body and generates
        a login session if correct.n
      produces:
      - text/plain
      parameters:
      - in: body
        name: body
        description: Login form data
        required: true
        schema:
          $ref: '#/definitions/LoginModel'
      responses:
        200:
          description: successful login, token returned
          schema:
            type: string
            description: auth token
            example: ax2qwdsqds31352-xaAdwx_Q23d1
        400:
          description: unsuccessful login / bad request
          schema:
            type: string
            description: Error message
            example: Invalid request body.
  /auth/login-provider:
    post:
      tags:
      - anonymous
      summary: attempts a log in with provider details in post body
      operationId: auth_LoginProvider
      description: Uses the provider credentials specified in the post body and generates
        a login session if valid.n
      produces:
      - text/plain
      parameters:
      - in: body
        name: body
        description: Provider login data
        required: true
        schema:
          $ref: '#/definitions/LoginProviderModel'
      responses:
        200:
          description: successful login, token returned
          schema:
            type: string
            description: auth token
            example: axwqewxqw/wsqwx89123-_d123
        401:
          description: requires registration with the API
  /auth/validate:
    post:
      tags:
      - users
      summary: valiates a user token
      operationId: auth_Validate
      description: Validates the authentication token in the header to establish access.
        Used internally and to validate token on client startup.n
      produces:
      - text/plain
      parameters:
      - in: header
        name: X-AuthToken
        description: Auth token to validate
        required: true
        type: string
      responses:
        200:
          description: auth token validated successfully
          schema:
            type: string
            example: axweasdwadqwe131xc123
            description: The username belonging to token owner
        400:
          description: token failed to validate
          schema:
            type: string
            description: Error message
            example: Invalid token.
  /users/register:
    post:
      tags:
      - anonymous
      summary: registers a user with the service
      operationId: users_Register
      description: Validates the input posted and returns an auth token on successful
        registration.n
      produces:
      - text/plain
      parameters:
      - in: body
        name: body
        description: Registration form data
        required: true
        schema:
          $ref: '#/definitions/RegisterModel'
      responses:
        200:
          description: successful registration and automatic login
          schema:
            type: string
            description: auth token
        400:
          description: invalid request / error creating account
          schema:
            type: string
            description: error message
            example: Invalid request body.
        500:
          description: internal server error / exception in request processing
  /users/current-user-data:
    get:
      tags:
      - users
      summary: gets current user data
      operationId: users_GetCurrentUserData
      description: Fetches all user data for attached auth token from database.n
      produces:
      - application/json
      parameters:
      - in: header
        name: X-AuthToken
        type: string
        description: User auth token.
      responses:
        200:
          description: successful retrieval of user
          schema:
            $ref: '#/definitions/User'
        403:
          description: auth token failed to validate
  /lessons/list:
    get:
      tags:
      - users
      summary: gets active user lessons
      operationId: lessons_GetList
      description: Fetches list of user active lessons sorted by language.n
      produces:
      - application/json
      parameters:
      - in: header
        name: X-AuthToken
        type: string
        description: User auth token.
      - in: query
        name: language
        type: string
        description: IETF Tag for requested language.
      - in: query
        name: from
        type: string
        description: id from which to paginate
      responses:
        200:
          description: successful query
          schema:
            $ref: '#/definitions/LessonList'
        403:
          description: auth token failed to validate
  /lessons/languages-list:
    get:
      tags:
      - users
      summary: gets all lessons used by user
      operationId: lessons_GetLanguages
      description: Fetches list of all languages used by user.n
      produces:
      - application/json
      parameters:
      - in: header
        name: X-AuthToken
        type: string
        description: User auth token.
      responses:
        200:
          description: successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
        403:
          description: auth token failed to validate
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":11:{s:10:\"LoginModel\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"identifier\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"LoginProviderModel\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"provider\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"accessToken\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"RegisterModel\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"email\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"email
  address for new user\";s:7:\"example\";s:14:\"test@test.test\";}s:8:\"username\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"username
  for new user login\";s:7:\"example\";s:11:\"username123\";}s:8:\"password\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"password
  for new account\";s:7:\"example\";s:17:\"imasecurepassword\";}s:13:\"passwordAgain\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"password
  validation\";s:7:\"example\";s:17:\"imasecurepassword\";}}}s:4:\"User\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:8:\"required\";a:6:{i:0;s:4:\"Name\";i:1;s:11:\"UserAddress\";i:2;s:9:\"BirthDate\";i:3;s:13:\"EmailVerified\";i:4;s:13:\"PhoneVerified\";i:5;s:9:\"UpdatedAt\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:8:\"Username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/FullName\";}s:11:\"UserAddress\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Address\";}s:9:\"BirthDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"EmailVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"Email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"Gender\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"Locale\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"PhoneVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"PhoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ProfilePicture\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"DisplayName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"UpdatedAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"ZoneInfo\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"FullName\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"FirstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"MiddleName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"LastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/ValueType\";}}}s:9:\"ValueType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;}s:7:\"Address\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"Line1\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Line2\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"Country\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"PostalCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"City\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Locality\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/ValueType\";}}}s:8:\"Language\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"IETFTag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"UnlocalizedName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"UnlocalizedCountryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"NativeName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"NativeCountryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"LanguagePair\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"From\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Language\";}s:2:\"To\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Language\";}}}s:6:\"Lesson\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"Id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"From\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"Reading\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"To\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"Languages\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/LanguagePair\";}}}s:10:\"LessonList\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";b:0;s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Lesson\";}}}}}"
...
