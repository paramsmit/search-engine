---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":8:{s:5:\"title\";s:11:\"watchful.li\";s:7:\"version\";s:5:\"1.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:7:\"hosting\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#1B4E65\";s:3:\"url\";s:105:\"https://api.apis.guru/v2/cache/logo/https_d2071nnd6m4201.cloudfront.net_templates_balloon_images_logo.svg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.2\";}s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:36:\"https://watchful.li/api/v1/api-docs/\";s:7:\"version\";s:3:\"1.2\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:11:\"watchful.li\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:11:\"watchful_li\";s:4:\"type\";s:7:\"openapi\";}}"
host: watchful.li
basePath: /api/v1
paths:
  /audits:
    get:
      description: Returns a list of audits
      operationId: getAudits
      parameters:
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Audit'
        403:
          description: Invalid API Key
      summary: Get a list of audits
      tags:
      - audits
  /audits/metadata:
    get:
      description: Returns a list of fields
      operationId: getFieldsAudits
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of fields
      tags:
      - audits
  /audits/{id}:
    delete:
      description: Delete a specific audit
      operationId: deleteAuditById
      parameters:
      - description: ID of audit that needs to be deleted
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Audit correctly deleted
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Delete a specific audit
      tags:
      - audits
    get:
      description: Returns a audit based on ID
      operationId: getAuditById
      parameters:
      - description: ID of audit that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Audit'
        400:
          description: Invalid ID
        403:
          description: Invalid API Key
      summary: Find audit by ID
      tags:
      - audits
  /extensions:
    get:
      description: Returns a list Extensions
      operationId: getExtensions
      parameters:
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: ext_name
        required: false
        type: string
      - description: List of sites id separated by comma
        in: query
        name: siteids
        required: false
        type: string
      - description: Do a 'LIKE' search, you can also use '%'. technical name of the
          extension com_xxxx
        in: query
        name: ext_prefix
        required: false
        type: string
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: version
        required: false
        type: string
      - description: update available for this extension
        enum:
        - 1
        - 0
        in: query
        name: vUpdate
        required: false
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Extension'
        403:
          description: Invalid API Key
        404:
          description: Invalid
      summary: Get a list Extensions
      tags:
      - extensions
  /extensions/metadata:
    get:
      description: Returns a list of fields
      operationId: getFieldsExtensions
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of fields
      tags:
      - extensions
  /extensions/{id}/ignore:
    post:
      description: Set 'ignore updates' for a given extension / site_id
      operationId: ignoreExtensionUpdate
      parameters:
      - description: ID of the extension
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Extension successfully updated
          schema:
            type: string
        404:
          description: Update not found for the given extension
      summary: Set 'ignore updates' for a given extension / site_id
      tags:
      - extensions
  /extensions/{id}/unignore:
    post:
      description: Remove 'ignore updates' for a given extension
      operationId: unignoreExtensionUpdate
      parameters:
      - description: ID of the extension
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Extension successfully updated
          schema:
            type: string
        404:
          description: Update not found for the given extension
      summary: Remove 'ignore updates' for a given extension
      tags:
      - extensions
  /extensions/{id}/update:
    post:
      description: Update the extension on the remote site
      operationId: updateExtension
      parameters:
      - description: ID of the extension
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Extension successfully updated
          schema:
            type: string
        404:
          description: Update not found for the given extension
      summary: Update the extension on the remote site
      tags:
      - extensions
  /feedbacks:
    get:
      description: Returns a list of feedbacks
      operationId: getFeedbacks
      parameters:
      - description: Fields to return separate by comas (es. name,id)
        in: query
        name: fields
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Feedback'
        403:
          description: Invalid API Key
      summary: Get feedbacks
      tags:
      - feedbacks
    post:
      description: Create a feedback
      operationId: createFeedbacks
      parameters:
      - description: JSON object Feedback
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Feedback'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Audit'
        201:
          description: Saved successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
      summary: Create a feedback
      tags:
      - feedbacks
  /feedbacks/metadata:
    get:
      description: Returns a list of fields
      operationId: getFieldsFeedbacks
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of fields
      tags:
      - feedbacks
  /logs:
    get:
      description: Returns a list of logs
      parameters:
      - description: Type of the log
        enum:
        - ""
        - plugin_sends_error
        - curlerror
        - modified_file
        - word_not_in_homepage
        - file_not_exists
        - update_available
        - new_extension
        - deleted_extension
        - extension_not_saved
        - modified_value_files
        - custom
        in: query
        name: log_type
        type: string
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: log_entry
        required: false
        type: string
      - description: Logs after this date, format YYYY-MM-DD HH:MM:SS
        in: query
        name: from
        required: false
        type: string
      - description: Logs before this date, format YYYY-MM-DD HH:MM:SS
        in: query
        name: to
        required: false
        type: string
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Log'
        403:
          description: Invalid API Key
      summary: Get a list of logs
      tags:
      - logs
      operationId: logs.get
  /logs/export:
    get:
      description: Returns a file contain the list of logs
      operationId: getExportLogs
      parameters:
      - description: Format of exported file (PDF or CSV)
        enum:
        - csv
        - pdf
        in: query
        name: format
        required: true
        type: string
      - description: Site id of the log
        format: int64
        in: query
        name: site
        required: false
        type: integer
      - description: Type of the log
        enum:
        - ""
        - plugin_sends_error
        - curlerror
        - modified_file
        - word_not_in_homepage
        - file_not_exists
        - update_available
        - new_extension
        - deleted_extension
        - extension_not_saved
        - modified_value_files
        - custom
        in: query
        name: filter_type
        type: string
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: search
        required: false
        type: string
      - description: Logs after this date, format YYYY-MM-DD HH:MM:SS
        in: query
        name: startdate
        required: false
        type: string
      - description: Logs before this date, format YYYY-MM-DD HH:MM:SS
        in: query
        name: enddate
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: startid
        required: false
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
        403:
          description: Invalid API Key
      summary: Get a CSV or PDF file contain the list of logs
      tags:
      - logs
  /logs/metadata:
    get:
      description: Returns a list of fields
      operationId: getFieldsLogs
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of fields
      tags:
      - logs
  /logs/types:
    get:
      description: Returns a list of log types
      operationId: getTypesLogs
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of log types
      tags:
      - logs
  /logs/{id}:
    delete:
      description: Delete a specific log
      operationId: deleteLogById
      parameters:
      - description: ID of log that needs to be deleted
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Log correctly deleted
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Delete a specific log
      tags:
      - logs
  /packages:
    post:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          description: No description
      operationId: packages.post
  /reports/sites/{id}:
    get:
      description: Returns a PDF report based on a site ID
      parameters:
      - description: ID that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Start of the report, format YYYY-MM-DD, default today-30day '
        in: query
        name: from
        required: false
        type: string
      - description: End of the report, format YYYY-MM-DD, default today
        in: query
        name: to
        required: false
        type: string
      - description: 'Type of reports separate by comas: Ga,Logs,Uptime'
        in: query
        name: reports
        required: false
        type: string
      - description: Type of the log to show in the report
        enum:
        - ""
        - plugin_sends_error
        - curlerror
        - modified_file
        - word_not_in_homepage
        - file_not_exists
        - update_available
        - new_extension
        - deleted_extension
        - extension_not_saved
        - modified_value_files
        in: query
        name: log_type
        type: string
      - description: Define if you want show previous values in Google Analytics graph
        enum:
        - 0
        - 1
        in: query
        name: compare
        type: integer
      produces:
      - application/pdf
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Reports'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Returns a PDF report for a specific site
      tags:
      - reports
      operationId: reports.sites.id.get
  /reports/tags/{id}:
    get:
      description: Returns a report based on a site ID
      parameters:
      - description: ID that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Start of the report, format YYYY-MM-DD, default today-30day '
        in: query
        name: from
        required: false
        type: string
      - description: End of the report, format YYYY-MM-DD, default today
        in: query
        name: to
        required: false
        type: string
      - description: 'Type of reports separate by comas: Ga,Logs,Uptime'
        in: query
        name: reports
        required: false
        type: string
      - description: Type of the log to show in the report
        enum:
        - ""
        - plugin_sends_error
        - curlerror
        - modified_file
        - word_not_in_homepage
        - file_not_exists
        - update_available
        - new_extension
        - deleted_extension
        - extension_not_saved
        - modified_value_files
        in: query
        name: log_type
        type: string
      - description: Define if you want show previous values in Google Analytics graph
        enum:
        - 0
        - 1
        in: query
        name: compare
        type: integer
      produces:
      - application/pdf
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Reports'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Find sites by ID
      tags:
      - reports
      operationId: reports.tags.id.get
  /sites:
    get:
      description: Returns a list of Sites
      operationId: getSites
      parameters:
      - description: List of sites id separated by comma
        in: query
        name: siteids
        required: false
        type: string
      - description: Site name. Do a 'LIKE' search, you can also use '%'
        in: query
        name: name
        required: false
        type: string
      - description: Access URL. Do a 'LIKE' search, you can also use '%'
        in: query
        name: access_url
        required: false
        type: string
      - description: Joomla version. Do a 'LIKE' search, you can also use '%'
        in: query
        name: j_version
        required: false
        type: string
      - description: Ip address. Do a 'LIKE' search, you can also use '%'
        in: query
        name: ip
        required: false
        type: string
      - description: 'Joomla core update status (1: update required, 0: update not
          required)'
        enum:
        - 1
        - 0
        in: query
        name: jUpdate
        type: integer
      - description: canUpdate
        enum:
        - 1
        - 0
        in: query
        name: canUpdate
        type: integer
      - description: Is published
        enum:
        - 1
        - 0
        in: query
        name: published
        required: false
        type: integer
      - description: Has errors
        in: query
        name: error
        required: false
        type: string
      - in: query
        name: nbUpdates
        required: false
        type: string
      - description: Is online
        enum:
        - 1
        - 0
        in: query
        name: up
        required: false
        type: integer
      - description: Fields to return separated by commas (e.g. name,id)
        in: query
        name: fields
        required: false
        type: string
      - description: Number of objects to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Get a list of Sites
      tags:
      - sites
    post:
      description: Create a site
      operationId: createSite
      parameters:
      - description: JSON object Site
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PostSite'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        201:
          description: Saved successfully
        400:
          description: Invalid data
        403:
          description: Not allowed to add sites
        404:
          description: Not saved
      summary: Create a site
      tags:
      - sites
  /sites/metadata:
    get:
      description: Returns a list of fields
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of fields
      tags:
      - sites
      operationId: sites.metadata.get
  /sites/{id}:
    delete:
      description: Delete a specific Site
      parameters:
      - description: ID of Site that needs to be deleted
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Deleted successfully
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Delete a specific Site
      tags:
      - sites
      operationId: sites.id.delete
    get:
      description: Return a site based on ID
      operationId: getSiteById
      parameters:
      - description: ID that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Find sites by ID
      tags:
      - sites
    put:
      description: Update a site
      parameters:
      - description: ID of the website that needs to be update
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: JSON object Site
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PostSite'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Updated successfully
          schema:
            $ref: '#/definitions/Site'
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Update a site
      tags:
      - sites
      operationId: sites.id.put
  /sites/{id}/audits:
    get:
      description: Return audits for a specific website
      operationId: getSiteAudits
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: ORDER by this field
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Audits'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Return audits for a specific website
      tags:
      - sites
    post:
      description: Create an audit for the site
      operationId: createAudits
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Audit'
        201:
          description: Saved successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
      summary: Create an audit for the site
      tags:
      - sites
  /sites/{id}/backupnow:
    post:
      description: Add the site to the backup queue
      operationId: addSiteToBackupQueue
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Add the site to the backup queue
      tags:
      - sites
  /sites/{id}/backupprofiles:
    get:
      description: Return backup profile
      operationId: getBackupProfiles
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Return backup profile
      tags:
      - sites
  /sites/{id}/backups:
    get:
      description: List of latest backups
      operationId: getListBackups
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: List of latest backups
      tags:
      - sites
  /sites/{id}/backupstart:
    post:
      description: Start a remote backup for the site
      operationId: startSiteBackup
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Start a remote backup for the site
      tags:
      - sites
  /sites/{id}/backupstep:
    post:
      description: Step (continue) a remote backup for the site
      operationId: stepSiteBackup
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Step (continue) a remote backup for the site
      tags:
      - sites
  /sites/{id}/extensions:
    get:
      description: Get extensions for a site
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: ORDER by this field
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Extension'
        403:
          description: Invalid API Key
        404:
          description: Invalid
      summary: Get extensions for a site
      tags:
      - sites
      operationId: sites.id.extensions.get
    post:
      operationId: installExtension
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: URL to install the extension from
        format: url
        in: query
        name: url
        required: true
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Install extension
      tags:
      - sites
  /sites/{id}/logs:
    get:
      description: Return logs for a specific website
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: log_entry
        required: false
        type: string
      - description: Type of the log
        enum:
        - ""
        - plugin_sends_error
        - curlerror
        - modified_file
        - word_not_in_homepage
        - file_not_exists
        - update_available
        - new_extension
        - deleted_extension
        - extension_not_saved
        - modified_value_files
        in: query
        name: log_type
        type: string
      - description: Logs after this date, format YYYY-MM-DD HH:MM:SS
        in: query
        name: from
        required: false
        type: string
      - description: Logs before this date, format YYYY-MM-DD HH:MM:SS
        in: query
        name: to
        required: false
        type: string
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Log'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Return logs for a specific website
      tags:
      - sites
      operationId: sites.id.logs.get
    post:
      description: Create a custom log for a specific website
      operationId: CreateLog
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: JSON object Log (only type custom)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PostLog'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Log'
        201:
          description: Saved successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
      summary: Create a custom log for a specific website
      tags:
      - sites
  /sites/{id}/monitor:
    delete:
      description: Return boolean
      operationId: deleteMonitor
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Monitor'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Delete uptime monitor
      tags:
      - sites
    post:
      description: Return boolean
      operationId: postMonitor
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Monitor'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Post uptime monitor
      tags:
      - sites
  /sites/{id}/scanner:
    get:
      description: Scan the site for malware
      operationId: scanner
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Scan the site for malware
      tags:
      - sites
  /sites/{id}/seo:
    get:
      description: SEO analyze for a page
      operationId: seoAnalyze
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: SEO analyze for a page
      tags:
      - sites
  /sites/{id}/tags:
    get:
      description: Return tags for a specific website
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: name
        required: false
        type: string
      - description: Bootstrap color of the tag
        enum:
        - ""
        - default
        - success
        - warning
        - important
        - info
        - inverse
        in: query
        name: type
        type: string
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: ORDER by this field
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Tag'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Return tags for a specific website
      tags:
      - sites
      operationId: sites.id.tags.get
    post:
      description: Add tags for a specific website
      operationId: postTags
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: JSON object Tag
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Tag'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        201:
          description: Saved successfully
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Add tags for a specific website
      tags:
      - sites
  /sites/{id}/updatejoomla:
    post:
      description: Update Joomla core on the remote site
      operationId: updateJoomla
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Joomla core successfully updated
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID or Joomla Update not found
      summary: Update Joomla core on the remote site
      tags:
      - sites
  /sites/{id}/uptime:
    get:
      description: Return uptime data
      operationId: getUptime
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Uptime'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Return uptime data
      tags:
      - sites
  /sites/{id}/validate:
    get:
      description: validate the site
      operationId: validateSite
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Log'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: validate the site, return the new logs
      tags:
      - sites
  /sites/{id}/validatedebug:
    get:
      operationId: validateDebugSite
      parameters:
      - description: ID of the website
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Log'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: validate the site, return the debug information
      tags:
      - sites
  /ssousers:
    get:
      description: Returns a list of SSO Users
      operationId: getSsoUsers
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/SsoUsers'
        403:
          description: Invalid API Key
      summary: Get a list of SSO Users
      tags:
      - ssousers
    post:
      description: Create a SSO User
      operationId: CreateSsoUsers
      parameters:
      - description: JSON object SsoUsers
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SsoUsers'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/SsoUsers'
        201:
          description: Saved successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
      summary: Create a SSO User
      tags:
      - ssousers
  /ssousers/{id}:
    delete:
      description: Delete a specific SSO User
      operationId: deleteSsoUserById
      parameters:
      - description: ID of SSO User that needs to be deleted
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: SSO User correctly deleted
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Delete a specific SSO User
      tags:
      - ssousers
    get:
      description: Returns a SSO User based on ID
      operationId: getSsoUsersById
      parameters:
      - description: ID of SSO User that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/SsoUsers'
        400:
          description: Invalid ID
        403:
          description: Invalid API Key
      summary: Find SSO User by ID
      tags:
      - ssousers
    put:
      description: Update a SSO User
      operationId: UpdateSsoUsers
      parameters:
      - description: ID of SSO User that needs to be updated
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: JSON object SsoUsers
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SsoUsers'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/SsoUsers'
        201:
          description: Updated successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
      summary: Update a SSO User
      tags:
      - ssousers
  /tags:
    get:
      description: Returns a list of tags
      parameters:
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: name
        required: false
        type: string
      - description: Bootstrap color of the tag
        enum:
        - ""
        - default
        - success
        - warning
        - important
        - info
        - inverse
        in: query
        name: type
        type: string
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Tag'
        403:
          description: Invalid API Key
      summary: Get a list of tags
      tags:
      - tags
      operationId: tags.get
    post:
      description: Create a tag
      operationId: CreateTags
      parameters:
      - description: JSON object Tag
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Tag'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Tag'
        201:
          description: Saved successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
      summary: Create a tag
      tags:
      - tags
  /tags/metadata:
    get:
      description: Returns a list of fields
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            type: string
      summary: Get the list of fields
      tags:
      - tags
      operationId: tags.metadata.get
  /tags/{id}:
    delete:
      description: Delete a specific tag
      parameters:
      - description: ID of tag that needs to be deleted
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Tag correctly deleted
          schema:
            type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Delete a specific tag
      tags:
      - tags
      operationId: tags.id.delete
    get:
      description: Returns a tag based on ID
      operationId: getTagById
      parameters:
      - description: ID of tag that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Tag'
        400:
          description: Invalid ID
        403:
          description: Invalid API Key
      summary: Find tag by ID
      tags:
      - tags
    put:
      description: Update a tag
      operationId: UpdateTag
      parameters:
      - description: ID of tag
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: JSON object of the updated tag
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Tag'
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: Updated successfully
          schema:
            $ref: '#/definitions/Tag'
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Update a tag
      tags:
      - tags
  /tags/{id}/sites:
    get:
      description: Returns a list of sites based with a specific tag id
      operationId: getSitesByTags
      parameters:
      - description: ID of tag that needs to be fetched
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: name
        required: false
        type: string
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: access_url
        required: false
        type: string
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: j_version
        required: false
        type: string
      - description: Do a 'LIKE' search, you can also use '%'
        in: query
        name: ip
        required: false
        type: string
      - description: Joomla core update
        enum:
        - 1
        - 0
        in: query
        name: jUpdate
        type: integer
      - description: is published
        enum:
        - 1
        - 0
        in: query
        name: published
        required: false
        type: integer
      - description: have errors
        in: query
        name: error
        required: false
        type: string
      - in: query
        name: nbUpdates
        required: false
        type: string
      - description: is the website online
        enum:
        - 1
        - 0
        in: query
        name: up
        required: false
        type: integer
      - description: 'Fields to return separate by comas: name,id'
        in: query
        name: fields
        required: false
        type: string
      - description: Number of object to return (max 100, default 25)
        format: int64
        in: query
        minimum: 1
        name: limit
        required: false
        type: integer
      - description: Start of the return (default 0)
        format: int64
        in: query
        minimum: 0
        name: limitstart
        required: false
        type: integer
      - description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      - application/xml
      - text/plain
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/Site'
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
      summary: Find sites by tag ID
      tags:
      - tags
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":14:{s:5:\"Audit\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Unique
  identifier for the audit\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:1:{i:0;s:2:\"id\";}}s:6:\"Audits\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Audit\";}s:4:\"type\";s:5:\"array\";}s:9:\"Extension\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"date\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Date
  of release\";s:4:\"type\";s:6:\"string\";}s:8:\"ext_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"Extension
  name\";s:4:\"type\";s:6:\"string\";}s:8:\"idx_site\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Unique
  identifier for the site\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:10:\"newVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"New
  version\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"Datetime
  of the log\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"Author
  URL\";s:4:\"type\";s:6:\"string\";}s:7:\"vUpdate\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Update
  is available\";s:4:\"type\";s:7:\"integer\";}s:7:\"version\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Extension
  version\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:8:\"idx_site\";i:1;s:4:\"type\";}}s:8:\"Feedback\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Unique
  identifier for the feedback\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:1:{i:0;s:2:\"id\";}}s:3:\"Log\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"Site
  name\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Name of the site / readyonly\";s:4:\"type\";s:6:\"string\";}s:6:\"id_log\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Unique
  identifier for the log\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:8:\"idx_site\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Unique
  identifier for the site\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:8:\"log_date\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"Datetime
  of the log\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:9:\"log_entry\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Log
  information\";s:4:\"type\";s:6:\"string\";}s:9:\"log_level\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"Level
  of log\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:8:\"log_type\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Type
  of log\";s:4:\"type\";s:6:\"string\";}s:6:\"userid\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Unique
  identifier for the user\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:6:{i:0;s:6:\"id_log\";i:1;s:8:\"idx_site\";i:2;s:8:\"log_date\";i:3;s:9:\"log_entry\";i:4;s:9:\"log_level\";i:5;s:6:\"userid\";}}s:7:\"Monitor\";O:8:\"stdClass\":0:{}s:7:\"PostLog\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"log_date\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"Datetime
  of the log\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:9:\"log_entry\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Log
  information\";s:4:\"type\";s:6:\"string\";}s:9:\"log_level\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"Level
  of log\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:2:{i:0;s:9:\"log_entry\";i:1;s:9:\"log_level\";}}s:8:\"PostSite\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":12:{s:10:\"access_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"URL
  of the site\";s:4:\"type\";s:6:\"string\";}s:9:\"admin_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Adminsitration
  URL\";s:4:\"type\";s:6:\"string\";}s:13:\"akeebaProfile\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Akeeba
  Profile\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:14:\"backupSchedule\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Backup
  Schedule\";s:4:\"type\";s:6:\"string\";}s:10:\"dateBackup\";O:8:\"stdClass\":3:{s:11:\"description\";s:11:\"Date
  backup\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Friendly
  name for the site\";s:4:\"type\";s:6:\"string\";}s:5:\"notes\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Personnal
  note for the site\";s:4:\"type\";s:6:\"string\";}s:9:\"published\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Published
  status of site\";s:4:\"type\";s:7:\"boolean\";}s:11:\"secret_word\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Watchful
  secret word\";s:4:\"type\";s:6:\"string\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:11:\"description\";s:107:\"JSON
  encoded array of tags for the site (e.g. [{<q>name</q>:<q>mytag</q>},{<q>name</q>:<q>anothertag</q>}])\";s:6:\"format\";s:4:\"json\";s:4:\"type\";s:6:\"string\";}s:11:\"word_akeeba\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Akeeba
  backup word\";s:4:\"type\";s:6:\"string\";}s:10:\"word_check\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Word
  checked for uptime\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:10:\"access_url\";}}s:7:\"Reports\";O:8:\"stdClass\":0:{}s:4:\"Site\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":24:{s:10:\"access_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"URL
  of the site\";s:4:\"type\";s:6:\"string\";}s:9:\"admin_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Adminsitration
  URL\";s:4:\"type\";s:6:\"string\";}s:13:\"akeebaProfile\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Akeeba
  Profile\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:14:\"backupSchedule\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"Backup
  Schedule\";s:4:\"type\";s:6:\"string\";}s:9:\"canBackup\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Site
  can be backuped\";s:4:\"type\";s:7:\"boolean\";}s:9:\"canUpdate\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Site
  can use remote installer\";s:4:\"type\";s:7:\"boolean\";}s:10:\"dateBackup\";O:8:\"stdClass\":3:{s:11:\"description\";s:11:\"Date
  backup\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:15:\"date_last_check\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"Watchful
  Last check\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:5:\"error\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Error
  status of site\";s:4:\"type\";s:7:\"boolean\";}s:2:\"ip\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"server
  IP\";s:4:\"type\";s:6:\"string\";}s:7:\"jUpdate\";O:8:\"stdClass\":2:{s:11:\"description\";s:1:\"?\";s:4:\"type\";s:7:\"boolean\";}s:9:\"j_version\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Joomla
  site version\";s:4:\"type\";s:6:\"string\";}s:9:\"monitorid\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Id
  of the associated UptimeRobot monitor\";s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Friendly
  name for the site\";s:4:\"type\";s:6:\"string\";}s:9:\"nbUpdates\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"Number
  of updates\";s:6:\"format\";s:11:\"date-format\";s:4:\"type\";s:6:\"string\";}s:13:\"new_j_version\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Joomla
  site version\";s:4:\"type\";s:6:\"string\";}s:5:\"notes\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Personnal
  note for the site\";s:4:\"type\";s:6:\"string\";}s:9:\"published\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Published
  status of site\";s:4:\"type\";s:7:\"boolean\";}s:11:\"secret_word\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Watchful
  secret word\";s:4:\"type\";s:6:\"string\";}s:6:\"siteid\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Unique
  identifier for the site\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"List
  of tags for this site\";s:5:\"items\";O:8:\"stdClass\":0:{}s:4:\"type\";s:5:\"array\";}s:2:\"up\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Site
  status\";s:4:\"type\";s:7:\"boolean\";}s:11:\"word_akeeba\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Akeeba
  backup word\";s:4:\"type\";s:6:\"string\";}s:10:\"word_check\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Word
  checked for uptime\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:6:\"siteid\";}}s:8:\"SsoUsers\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"Email
  of the SSO User\";s:4:\"type\";s:6:\"string\";}s:7:\"groupid\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Security
  Joomla group ID\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Unique
  identifier for the SSO User\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:13:\"lastLoginDate\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Last
  login date on remote site\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:13:\"lastLoginSite\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"Site
  Id of the last remote login\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Account
  display name\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Password
  of the SSO User\";s:4:\"type\";s:6:\"string\";}s:6:\"userid\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"Watchful
  user account\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:8:\"username\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Username
  of the SSO User\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:7:{i:0;s:5:\"email\";i:1;s:7:\"groupid\";i:2;s:2:\"id\";i:3;s:4:\"name\";i:4;s:8:\"password\";i:5;s:6:\"userid\";i:6;s:8:\"username\";}}s:3:\"Tag\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Unique
  identifier for the tag\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Friendly
  name for the tag\";s:4:\"type\";s:6:\"string\";}s:7:\"nbSites\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"Number
  of sites use this tag (required field id)\";s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":4:{s:7:\"default\";s:7:\"default\";s:11:\"description\";s:26:\"Bootstrap
  color of the tag\";s:4:\"enum\";a:6:{i:0;s:7:\"default\";i:1;s:7:\"success\";i:2;s:7:\"warning\";i:3;s:9:\"important\";i:4;s:4:\"info\";i:5;s:7:\"inverse\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}}s:6:\"Uptime\";O:8:\"stdClass\":0:{}s:7:\"Version\";O:8:\"stdClass\":0:{}}"
...
