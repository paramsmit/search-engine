---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:7:\"version\";s:2:\"v3\";s:5:\"title\";s:38:\"Bot
  Connector - Direct Line API - v3.0\";s:11:\"description\";s:23747:\"Direct Line
  3.0\r\n===============\r\n\r\n\r\nThe Direct Line API is a simple REST API for connecting
  directly to a single bot. This API is intended for developers\r\nwriting their own
  client applications, web chat controls, mobile apps, or service-to-service applications
  that will\r\ntalk to their bot.\r\n\r\nWithin the Direct Line API, you will find:\r\n\r\n*
  An **authentication mechanism** using standard secret/token patterns\r\n* The ability
  to **send** messages from your client to your bot via an HTTP POST message\r\n*
  The ability to **receive** messages by **WebSocket** stream, if you choose\r\n*
  The ability to **receive** messages by **polling HTTP GET**, if you choose\r\n*
  A stable **schema**, even if your bot changes its protocol version\r\n\r\nDirect
  Line 1.1 and 3.0 are both available and supported. This document describes Direct
  Line 3.0. For information\r\non Direct Line 1.1, visit the [Direct Line 1.1 reference
  documentation](/en-us/restapi/directline/).\r\n\r\n# Authentication: Secrets and
  Tokens\r\n\r\nDirect Line allows you to authenticate all calls with either a secret
  (retrieved from the Direct Line channel\r\nconfiguration page) or a token (which
  you may get at runtime by converting your secret).\r\n\r\nA Direct Line **secret**
  is a master key that can access any conversation, and create tokens. Secrets do
  not expire.\r\n\r\nA Direct Line **token** is a key for a single conversation. It
  expires but can be refreshed.\r\n\r\nIf you're writing a service-to-service application,
  using the secret may be simplest. If you're writing an application\r\nwhere the
  client runs in a web browser or mobile app, you may want to exchange your secret
  for a token, which only\r\nworks for a single conversation and will expire unless
  refreshed. You choose which security model works best for you.\r\n\r\nYour secret
  or token is communicated in the ```Authorization``` header of every call, with the
  Bearer scheme.\r\nExample below.\r\n\r\n```\r\n-- connect to directline.botframework.com
  --\r\nPOST /v3/directline/conversations/abc123/activities HTTP/1.1\r\nAuthorization:
  Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\n[other
  HTTP headers, omitted]\r\n```\r\n\r\nYou may notice that your Direct Line client
  credentials are different from your bot's credentials. This is\r\nintentional, and
  it allows you to revise your keys independently and lets you share client tokens
  without\r\ndisclosing your bot's password. \r\n\r\n## Exchanging a secret for a
  token\r\n\r\nThis operation is optional. Use this step if you want to prevent clients
  from accessing conversations they aren't\r\nparticipating in.\r\n\r\nTo exchange
  a secret for a token, POST to /v3/directline/tokens/generate with your secret in
  the auth header\r\nand no HTTP body.\r\n\r\n```\r\n-- connect to directline.botframework.com
  --\r\nPOST /v3/directline/tokens/generate HTTP/1.1\r\nAuthorization: Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\n[other
  headers]\r\n\r\n-- response from directline.botframework.com --\r\nHTTP/1.1 200
  OK\r\n[other headers]\r\n\r\n{\r\n  \"conversationId\": \"abc123\",\r\n  \"token\":
  \"RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xn\",\r\n
  \ \"expires_in\": 1800\r\n}\r\n```\r\n\r\nIf successful, the response is a token
  suitable for one conversation. The token expires in the seconds\r\nindicated in
  the ```expires_in``` field (30 minutes in the example above) and must be refreshed
  before then to\r\nremain useful.\r\n\r\nThis call is similar to ```/v3/directline/conversations```.
  The difference is that the call to\r\n```/v3/directline/tokens/generate``` does
  not start the conversation, does not contact the bot, and does not\r\ncreate a streaming
  WebSocket URL.\r\n* Call ```/v3/directline/conversations``` if you will distribute
  the token to client(s) and want them to \r\n  initiate the conversation.\r\n* Call
  ```/v3/directline/conversations``` if you intend to start the conversation immediately.\r\n\r\n\r\n##
  Refreshing a token\r\n\r\nA token may be refreshed an unlimited number of times
  unless it is expired.\r\n\r\nTo refresh a token, POST to /v3/directline/tokens/refresh.
  This method is valid only for unexpired tokens.\r\n\r\n```\r\n-- connect to directline.botframework.com
  --\r\nPOST /v3/directline/tokens/refresh HTTP/1.1\r\nAuthorization: Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xn\r\n[other
  headers]\r\n\r\n-- response from directline.botframework.com --\r\nHTTP/1.1 200
  OK\r\n[other headers]\r\n\r\n{\r\n  \"conversationId\": \"abc123\",\r\n  \"token\":
  \"RCurR_XV9ZA.cwA.BKA.y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xniaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\",\r\n
  \ \"expires_in\": 1800\r\n}\r\n```\r\n\t\r\n\r\n# REST calls for a Direct Line conversation\r\n\r\nDirect
  Line conversations are explicitly opened by clients and may run as long as the bot
  and client participate\r\n(and have valid credentials). While the conversation is
  open, the bot and client may both send messages. More than\r\none client may connect
  to a given conversation and each client may participate on behalf of multiple users.\r\n\r\n##
  Starting a conversation\r\n\r\nClients begin by explicitly starting a conversation.
  If successful, the Direct Line service replies with a\r\nJSON object containing
  a conversation ID, a token, and a WebSocket URL that may be used later.\r\n\r\n```\r\n--
  connect to directline.botframework.com --\r\nPOST /v3/directline/conversations HTTP/1.1\r\nAuthorization:
  Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xn\r\n[other
  headers]\r\n\r\n-- response from directline.botframework.com --\r\nHTTP/1.1 201
  Created\r\n[other headers]\r\n\r\n{\r\n  \"conversationId\": \"abc123\",\r\n  \"token\":
  \"RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xn\",\r\n
  \ \"expires_in\": 1800,\r\n  \"streamUrl\": \"https://directline.botframework.com/v3/directline/conversations/abc123/stream?t=RCurR_XV9ZA.cwA...\"\r\n}\r\n```\r\n\r\nIf
  the conversation was started, an HTTP 201 status code is returned. HTTP 201 is the
  code that clients\r\nwill receive under most circumstances, as the typical use case
  is for a client to start a new conversation.\r\nUnder certain conditions -- specifically,
  when the client has a token scoped to a single conversation AND\r\nwhen that conversation
  was started with a prior call to this URL -- this method will return HTTP 200 to
  signify\r\nthe request was acceptable but that no conversation was created (as it
  already existed).\r\n\r\nYou have 60 seconds to connect to the WebSocket URL. If
  the connection cannot be established during this time,\r\nuse the reconnect method
  below to generate a new stream URL.\r\n\r\nThis call is similar to ```/v3/directline/tokens/generate```.
  The difference is that the call to\r\n```/v3/directline/conversations``` starts
  the conversation, contacts the bot, and creates a streaming WebSocket\r\nURL, none
  of which occur when generating a token.\r\n* Call ```/v3/directline/conversations```
  if you will distribute the token to client(s) and want them to\r\n  initiate the
  conversation.\r\n* Call ```/v3/directline/conversations``` if you intend to start
  the conversation immediately.\r\n\r\n## Reconnecting to a conversation\r\n\r\nIf
  a client is using the WebSocket interface to receive messages but loses its connection,
  it may need to reconnect.\r\nReconnecting requires generating a new WebSocket stream
  URL, and this can be accomplished by sending a GET request\r\nto the ```/v3/directline/conversations/{id}```
  endpoint.\r\n\r\nThe ```watermark``` parameter is optional. If supplied, the conversation
  replays from the watermark,\r\nguaranteeing no messages are lost. If ```watermark```
  is omitted, only messages received after the reconnection\r\ncall (```GET /v3/directline/conversations/abc123```)
  are replayed.\r\n\r\n```\r\n-- connect to directline.botframework.com --\r\nGET
  /v3/directline/conversations/abc123?watermark=0000a-42 HTTP/1.1\r\nAuthorization:
  Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xn\r\n[other
  headers]\r\n\r\n-- response from directline.botframework.com --\r\nHTTP/1.1 200
  OK\r\n[other headers]\r\n\r\n{\r\n  \"conversationId\": \"abc123\",\r\n  \"token\":
  \"RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0y8qbOF5xPGfiCpg4Fv0y8qqbOF5x8qbOF5xn\",\r\n
  \ \"streamUrl\": \"https://directline.botframework.com/v3/directline/conversations/abc123/stream?watermark=000a-4&t=RCurR_XV9ZA.cwA...\"\r\n}\r\n```\r\n\r\nYou
  have 60 seconds to connect to the WebSocket stream URL. If the connection cannot
  be established during this\r\ntime, issue another reconnect request to get an updated
  stream URL.\r\n\r\n## Sending an Activity to the bot\r\n\r\nUsing the Direct Line
  3.0 protocol, clients and bots may exchange many different Bot Framework v3 Activites,\r\nincluding
  Message Activities, Typing Activities, and custom activities that the bot supports.\r\n\r\nTo
  send any one of these activities to the bot,\r\n\r\n1. the client formulates the
  Activity according to the Activity schema (see below)\r\n2. the client issues a
  POST message to ```/v3/directline/conversations/{id}/activities```\r\n3. the service
  returns when the activity was delivered to the bot, with an HTTP status code reflecting
  the\r\n   bot's status code. If the POST was successful, the service returns a JSON
  payload containing the ID of the\r\n   Activity that was sent.\r\n\r\nExample follows.\r\n\r\n```\r\n--
  connect to directline.botframework.com --\r\nPOST /v3/directline/conversations/abc123/activities
  HTTP/1.1\r\nAuthorization: Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\n[other
  headers]\r\n\r\n{\r\n  \"type\": \"message\",\r\n  \"from\": {\r\n    \"id\": \"user1\"\r\n
  \ },\r\n  \"text\": \"hello\"\r\n}\r\n\r\n-- response from directline.botframework.com
  --\r\nHTTP/1.1 200 OK\r\n[other headers]\r\n\r\n{\r\n  \"id\": \"0001\"\r\n}\r\n```\r\n\r\nThe
  client's Activity is available in the message retrieval path (either polling GET
  or WebSocket) and is not\r\nreturned inline.\r\n\r\nThe total time to POST a message
  to a Direct Line conversation is:\r\n\r\n* Transit time to the Direct Line service,\r\n*
  Internal processing time within Direct Line (typically less than 120ms)\r\n* Transit
  time to the bot\r\n* Processing time within the bot\r\n* Transit time for HTTP responses
  to travel back to the client.\r\n\r\nIf the bot generates an error, that error will
  trigger an HTTP 502 error (\"Bad Gateway\") in\r\nthe ```POST /v3/directline/conversations/{id}/activities```
  call.\r\n\r\n### Sending one or more attachments by URL\r\n\r\nClients may optionally
  send attachments, such as images or documents. If the client already has a URL for
  the\r\nattachment, the simplest way to send it is to include the URL in the ```contentUrl```
  field of an Activity\r\nattachment object. This applies to HTTP, HTTPS, and ```data:```
  URIs.\r\n\r\n### Sending a single attachment by upload\r\n\r\nOften, clients have
  an image or document on a device but no URL that can be included in the activity.\r\n\r\nTo
  upload an attachment, POST a single attachment to\r\nthe ```/v3/directline/conversations/{conversationId}/upload```
  endpoint. The ```Content-Type```\r\nand ```Content-Disposition``` headers control
  the attachment's type and filename, respectively.\r\n\r\nA user ID is required.
  Supply the ID of the user sending the attachment as a ```userId``` parameter in
  the URL.\r\n\r\nIf uploading a single attachment, a message activity is sent to
  the bot when the upload completes.\r\n\r\nOn completion, the service returns the
  ID of the activity that was sent.\r\n\r\n```\r\n-- connect to directline.botframework.com
  --\r\nPOST /v3/directline/conversations/abc123/upload?userId=user1 HTTP/1.1\r\nAuthorization:
  Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\nContent-Type:
  image/jpeg\r\nContent-Disposition: name=\"file\"; filename=\"badjokeeel.jpg\"\r\n[other
  headers]\r\n\r\n[JPEG content]\r\n\r\n-- response from directline.botframework.com
  --\r\nHTTP/1.1 200 OK\r\n[other headers]\r\n\r\n{\r\n  \"id\": \"0003\"\r\n}\r\n```\r\n\r\n###
  Sending multiple attachments by upload\r\n\r\nIf uploading multiple attachments,
  use ```multipart/form-data``` as the content type and include each\r\nattachment
  as a separate part. Each attachment's type and filename may be included in the ```Content-Type```\r\nand
  ```Content-Disposition``` headers in each part.\r\n\r\nAn activity may be included
  by adding a part with content type of ```application/vnd.microsoft.activity```.\r\nOther
  parts in the payload are attached to this activity before it is sent. If an Activity
  is not included,\r\nan empty Activity is created as a wrapper for the attachments.\r\n\r\n```\r\n--
  connect to directline.botframework.com --\r\nPOST /v3/directline/conversations/abc123/upload?userId=user1
  HTTP/1.1\r\nAuthorization: Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\nContent-Type:
  multipart/form-data; boundary=----DD4E5147-E865-4652-B662-F223701A8A89\r\n[other
  headers]\r\n\r\n----DD4E5147-E865-4652-B662-F223701A8A89\r\nContent-Type: image/jpeg\r\nContent-Disposition:
  form-data; name=\"file\"; filename=\"badjokeeel.jpg\"\r\n[other headers]\r\n\r\n[JPEG
  content]\r\n\r\n----DD4E5147-E865-4652-B662-F223701A8A89\r\nContent-Type: application/vnd.microsoft.activity\r\n[other
  headers]\r\n\r\n{\r\n  \"type\": \"message\",\r\n  \"from\": {\r\n    \"id\": \"user1\"\r\n
  \ },\r\n  \"text\": \"Hey I just IM'd you\\n\\nand this is crazy\\n\\nbut here's
  my webhook\\n\\nso POST me maybe\"\r\n}\r\n\r\n----DD4E5147-E865-4652-B662-F223701A8A89\r\n\r\n\r\n
  \   \r\n-- response from directline.botframework.com --\r\nHTTP/1.1 200 OK\r\n[other
  headers]\r\n\r\n{\r\n  \"id\": \"0004\"\r\n}\r\n```\r\n\r\n## Receiving Activities
  from the bot\r\n\r\nDirect Line 3.0 clients may choose from two different mechanisms
  for retrieving messages:\r\n\r\n1. A **streaming WebSocket**, which pushes messages
  efficiently to clients.\r\n2. A **polling GET** interface, which is available for
  clients unable to use WebSockets or for clients\r\n   retrieving the conversation
  history.\r\n\r\n**Not all activities are available via the polling GET interface.**
  A table of activity availability follows.\r\n\r\n|Activity type|Availability|\r\n|-------------|--------|\r\n|Message|Polling
  GET and WebSocket|\r\n|Typing|WebSocket only|\r\n|ConversationUpdate|Not sent/received
  via client|\r\n|ContactRelationUpdate|Not supported in Direct Line|\r\n|EndOfConversation|Polling
  GET and WebSocket|\r\n|All other activity types|Polling GET and WebSocket|\r\n\r\n###
  Receiving Activities by WebSocket\r\n\r\nTo connect via WebSocket, a client uses
  the StreamUrl when starting a conversation. The stream URL is\r\npreauthorized and
  does NOT require an Authorization header containing the client's secret or token.\r\n\r\n```\r\n--
  connect to wss://directline.botframework.com --\r\nGET /v3/directline/conversations/abc123/stream?t=RCurR_XV9ZA.cwA...\"
  HTTP/1.1\r\nUpgrade: websocket\r\nConnection: upgrade\r\n[other headers]\r\n\r\n--
  response from directline.botframework.com --\r\nHTTP/1.1 101 Switching Protocols\r\n[other
  headers]\r\n```\r\n\r\nThe Direct Line service sends the following messages:\r\n\r\n*
  An **ActivitySet**, which contains one or more activities and a watermark (described
  below)\r\n* An empty message, which the Direct Line service uses to ensure the connection
  is still valid\r\n* Additional types, to be defined later. These types are identified
  by the properties in the JSON root.\r\n\r\nActivitySets contain messages sent by
  the bot and by all users. Example ActivitySet:\r\n\r\n```\r\n{\r\n  \"activities\":
  [{\r\n    \"type\": \"message\",\r\n    \"channelId\": \"directline\",\r\n    \"conversation\":
  {\r\n      \"id\": \"abc123\"\r\n    },\r\n    \"id\": \"abc123|0000\",\r\n    \"from\":
  {\r\n      \"id\": \"user1\"\r\n    },\r\n    \"text\": \"hello\"\r\n  }],\r\n  \"watermark\":
  \"0000a-42\"\r\n}\r\n```\r\n\r\nClients should keep track of the \"watermark\" value
  from each ActivitySet so they can use it on reconnect.\r\n**Note** that a ```null```
  or missing watermark should be ignored and should not overwrite a prior watermark\r\nin
  the client.\r\n\r\nClients should ignore empty messages.\r\n\r\nClients may send
  their own empty messages to verify connectivity. The Direct Line service will ignore
  these.\r\n\r\nThe service may forcibly close the connection under certain conditions.
  If the client has not received an\r\nEndOfConversation activity, it may reconnect
  by issuing a GET request to the conversation endpoint to get a\r\nnew stream URL
  (see above).\r\n\r\nThe WebSocket stream contains live updates and very recent messages
  (since the call to get the WebSocket call\r\nwas issued) but it does not include
  messages sent prior to the most recent POST\r\nto ```/v3/directline/conversations/{id}```.
  To retrieve messages sent earlier in the conversation, use the\r\nGET mechanism
  below.\r\n\r\n### Receiving Activities by GET\r\n\r\nThe GET mechanism is useful
  for clients who are unable to use the WebSocket, or for clients wishing to retrieve\r\nthe
  conversation history.\r\n\r\nTo retrieve messages, issue a GET call to the conversation
  endpoint. Optionally supply a watermark, indicating\r\nthe most recent message seen.
  The watermark field accompanies all GET/WebSocket messages as a property in the\r\nActivitySet.\r\n\r\n```\r\n--
  connect to directline.botframework.com --\r\nGET /v3/directline/conversations/abc123/activities?watermark=0001a-94
  HTTP/1.1\r\nAuthorization: Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\n[other
  headers]\r\n\r\n-- response from directline.botframework.com --\r\nHTTP/1.1 200
  OK\r\n[other headers]\r\n\r\n{\r\n  \"activities\": [{\r\n    \"type\": \"message\",\r\n
  \   \"channelId\": \"directline\",\r\n    \"conversation\": {\r\n      \"id\": \"abc123\"\r\n
  \   },\r\n    \"id\": \"abc123|0000\",\r\n    \"from\": {\r\n      \"id\": \"user1\"\r\n
  \   },\r\n    \"text\": \"hello\"\r\n  }, {\r\n    \"type\": \"message\",\r\n    \"channelId\":
  \"directline\",\r\n    \"conversation\": {\r\n      \"id\": \"abc123\"\r\n    },\r\n
  \   \"id\": \"abc123|0001\",\r\n    \"from\": {\r\n      \"id\": \"bot1\"\r\n    },\r\n
  \   \"text\": \"Nice to see you, user1!\"\r\n  }],\r\n  \"watermark\": \"0001a-95\"\r\n}\r\n```\r\n\r\nClients
  should page through the available activities by advancing the ```watermark``` value
  until no activities\r\nare returned.\r\n\r\n\r\n### Timing considerations \r\n\r\nMost
  clients wish to retain a complete message history. Even though Direct Line is a
  multi-part protocol with\r\npotential timing gaps, the protocol and service is designed
  to make it easy to build a reliable client.\r\n\r\n1. The ```watermark``` field
  sent in the WebSocket stream and GET response is reliable. You will not miss\r\n
  \  messages as long as you replay the watermark verbatim.\r\n2. When starting a
  conversation and connecting to the WebSocket stream, any Activities sent after the
  POST but\r\n   before the socket is opened are replayed before new messages.\r\n3.
  When refreshing history by GET call while connected to the WebSocket, Activities
  may be duplicated across both\r\n   channels. Keeping a list of all known Activity
  IDs will allow you to reject duplicate messages should they occur.\r\n\r\nClients
  using the polling GET interface should choose a polling interval that matches their
  intended use.\r\n\r\n* Service-to-service applications often use a polling interval
  of 5s or 10s.\r\n* Client-facing applications often use a polling interval of 1s,
  and fire an additional request ~300ms after\r\n  every message the client sends
  to rapidly pick up a bot's response. This 300ms delay should be adjusted\r\n  based
  on the bot's speed and transit time.\r\n\r\n## Ending a conversation\r\n\r\nEither
  a client or a bot may signal the end of a DirectLine conversation. This operation
  halts communication\r\nand prevents the bot and the client from sending messages.
  Messages may still be retrieved via the GET mechanism.\r\nSending this messages
  is as simple as POSTing an EndOfConversation activity.\r\n\r\n```\r\n-- connect
  to directline.botframework.com --\r\nPOST /v3/directline/conversations/abc123/activities
  HTTP/1.1\r\nAuthorization: Bearer RCurR_XV9ZA.cwA.BKA.iaJrC8xpy8qbOF5xnR2vtCX7CZj0LdjAPGfiCpg4Fv0\r\n[other
  headers]\r\n\r\n{\r\n  \"type\": \"endOfConversation\",\r\n  \"from\": {\r\n    \"id\":
  \"user1\"\r\n  }\r\n}\r\n\r\n-- response from directline.botframework.com --\r\nHTTP/1.1
  200 OK\r\n[other headers]\r\n\r\n{\r\n  \"id\": \"0004\"\r\n}\r\n```\r\n\r\n## REST
  API errors\r\n\r\nHTTP calls to the Direct Line service follow standard HTTP error
  conventions:\r\n\r\n* 2xx status codes indicate success. (Direct Line 3.0 uses 200
  and 201.)\r\n* 4xx status codes indicate an error in your request.\r\n  * 401 indicates
  a missing or malformed Authorization header (or URL token, in calls where a token
  parameter\r\n    is allowed).\r\n  * 403 indicates an unauthorized client.\r\n    *
  If calling with a valid but expired token, the ```code``` field is set to ```TokenExpired```.\r\n
  \ * 404 indicates a missing path, site, conversation, etc.\r\n* 5xx status codes
  indicate a service-side error.\r\n  * 500 indicates an error inside the Direct Line
  service.\r\n  * 502 indicates an error was returned by the bot. **This is a common
  error code.**\r\n* 101 is used in the WebSocket connection path, although this is
  likely handled by your WebSocket client.\r\n\r\nWhen an error message is returned,
  error detail may be present in a JSON response. Look for an ```error```\r\nproperty
  with ```code``` and ```message``` fields.\r\n\r\n```\r\n-- connect to directline.botframework.com
  --\r\nPOST /v3/directline/conversations/abc123/activities HTTP/1.1\r\n[detail omitted]\r\n\r\n--
  response from directline.botframework.com --\r\nHTTP/1.1 502 Bad Gateway\r\n[other
  headers]\r\n\r\n{\r\n  \"error\": {\r\n    \"code\": \"BotRejectedActivity\",\r\n
  \   \"message\": \"Failed to send activity: bot returned an error\"\r\n  }\r\n}\r\n```\r\n\r\nThe
  contents of the ```message``` field may change. The HTTP status code and values
  in the ```code```\r\nproperty are stable.\r\n\r\n# Schema\r\n\r\nThe Direct Line
  3.0 schema is identical to the Bot Framework v3 schema.\r\n\r\nWhen a bot sends
  an Activity to a client through Direct Line:\r\n\r\n* attachment cards are preserved,\r\n*
  URLs for uploaded attachments are hidden with a private link, and\r\n* the ```channelData```
  property is preserved without modification.\r\n\r\nWhen a client sends an Activity
  to a bot through Direct Line:\r\n\r\n* the ```type``` property contains the kind
  of activity you are sending (typically ```message```),\r\n* the ```from``` property
  must be populated with a user ID, chosen by your client,\r\n* attachments may contain
  URLs to existing resources or URLs uploaded through the Direct Line attachment\r\n
  \ endpoint, and\r\n* the ```channelData``` property is preserved without modification.\r\n\r\nClients
  and bots may send Activities of any type, including Message Activities, Typing Activities,
  and\r\ncustom Activity types.\r\n\r\nClients may send a single Activity at a time.\r\n\r\n```\r\n{\r\n
  \ \"type\": \"message\",\r\n  \"channelId\": \"directline\",\r\n  \"from\": {\r\n
  \   \"id\": \"user1\"\r\n  },\r\n  \"text\": \"hello\"\r\n}\r\n```\r\n\r\nClients
  receive multiple Activities as part of an ActivitySet. The ActivitySet has an array
  of activities\r\nand a watermark field.\r\n\r\n```\r\n{\r\n  \"activities\": [{\r\n
  \   \"type\": \"message\",\r\n    \"channelId\": \"directline\",\r\n    \"conversation\":
  {\r\n      \"id\": \"abc123\"\r\n    },\r\n    \"id\": \"abc123|0000\",\r\n    \"from\":
  {\r\n      \"id\": \"user1\"\r\n    },\r\n    \"text\": \"hello\"\r\n  }],\r\n  \"watermark\":
  \"0000a-42\"\r\n}\r\n```\r\n\r\n# Libraries for the Direct Line API\r\n\r\nThe Direct
  Line API is designed to be coded directly, but the Bot Framework includes libraries
  and controls that\r\nhelp you to embed Direct-Line-powered bots into your application.\r\n\r\n*
  The [Bot Framework Web Chat control](https://github.com/Microsoft/BotFramework-WebChat)
  is an easy way to embed\r\n  the Direct Line protocol into a webpage.\r\n* [Direct
  Line Nuget package](https://www.nuget.org/packages/Microsoft.Bot.Connector.DirectLine)
  with libraries for\r\n  .Net 4.5, UWP, and .Net Standard.\r\n* [DirectLineJs](https://github.com/Microsoft/BotFramework-DirectLineJs),
  also available on\r\n  [NPM](https://www.npmjs.com/package/botframework-directlinejs)\r\n*
  You may generate your own from the [Direct Line Swagger file](swagger.json)\r\n\r\nOur
  [BotBuilder-Samples GitHub repo](https://github.com/Microsoft/BotBuilder-Samples)
  also contains samples for\r\n  [C#](https://github.com/Microsoft/BotBuilder-Samples/tree/master/CSharp/core-DirectLine)
  and\r\n  [JavaScript](https://github.com/Microsoft/BotBuilder-Samples/tree/master/Node/core-DirectLine).\";s:14:\"termsOfService\";s:81:\"https://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:13:\"Bot
  Framework\";s:3:\"url\";s:24:\"https://botframework.com\";s:5:\"email\";s:26:\"botframework@microsoft.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:21:\"The
  MIT License (MIT)\";s:3:\"url\";s:35:\"https://opensource.org/licenses/MIT\";}}"
host: directline.botframework.com
paths:
  /v3/directline/conversations:
    post:
      tags:
      - Conversations
      summary: Start a new conversation
      operationId: Conversations_StartConversation
      consumes: []
      produces:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      responses:
        200:
          description: The conversation was successfully created, updated, or retrieved.
          schema:
            $ref: '#/definitions/Conversation'
        201:
          description: The conversation was successfully created.
          schema:
            $ref: '#/definitions/Conversation'
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
        409:
          description: The object you are trying to create already exists.
      deprecated: false
  /v3/directline/conversations/{conversationId}:
    get:
      tags:
      - Conversations
      summary: Get information about an existing conversation
      operationId: Conversations_ReconnectToConversation
      consumes: []
      produces:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      parameters:
      - name: conversationId
        in: path
        required: true
        type: string
      - name: watermark
        in: query
        required: false
        type: string
      responses:
        200:
          description: The conversation was successfully created, updated, or retrieved.
          schema:
            $ref: '#/definitions/Conversation'
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
      deprecated: false
  /v3/directline/conversations/{conversationId}/activities:
    get:
      tags:
      - Conversations
      summary: Get activities in this conversation. This method is paged with the
        'watermark' parameter.
      operationId: Conversations_GetActivities
      consumes: []
      produces:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      parameters:
      - name: conversationId
        in: path
        description: Conversation ID
        required: true
        type: string
      - name: watermark
        in: query
        description: (Optional) only returns activities newer than this watermark
        required: false
        type: string
      responses:
        200:
          description: A set of activities and a watermark are returned.
          schema:
            $ref: '#/definitions/ActivitySet'
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
      deprecated: false
    post:
      tags:
      - Conversations
      summary: Send an activity
      operationId: Conversations_PostActivity
      consumes:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - text/json
      - text/html
      parameters:
      - name: conversationId
        in: path
        description: Conversation ID
        required: true
        type: string
      - name: activity
        in: body
        description: Activity to send
        required: true
        schema:
          $ref: '#/definitions/Activity'
      responses:
        200:
          description: The operation succeeded.
          schema:
            $ref: '#/definitions/ResourceResponse'
        204:
          description: The operation succeeded. No content was returned.
        400:
          description: The URL, body, or headers in the request are malformed or invalid.
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
        500:
          description: An internal server error has occurred.
        502:
          description: The bot is unavailable or returned an error.
      deprecated: false
  /v3/directline/conversations/{conversationId}/upload:
    post:
      tags:
      - Conversations
      summary: Upload file(s) and send as attachment(s)
      operationId: Conversations_Upload
      consumes:
      - multipart/form-data
      produces:
      - application/json
      - text/json
      - text/html
      parameters:
      - name: conversationId
        in: path
        required: true
        type: string
      - name: userId
        in: query
        required: false
        type: string
      - name: file
        in: formData
        required: true
        type: file
      responses:
        200:
          description: The operation succeeded.
          schema:
            $ref: '#/definitions/ResourceResponse'
        202:
          description: The request was accepted for processing.
        204:
          description: The operation succeeded. No content was returned.
        400:
          description: The URL, body, or headers in the request are malformed or invalid.
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
        500:
          description: An internal server error has occurred.
        502:
          description: The bot is unavailable or returned an error.
      deprecated: false
  /v3/directline/tokens/refresh:
    post:
      tags:
      - Tokens
      summary: Refresh a token
      operationId: Tokens_RefreshToken
      consumes: []
      produces:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      responses:
        200:
          description: The conversation was successfully created, updated, or retrieved.
          schema:
            $ref: '#/definitions/Conversation'
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
        500:
          description: An internal server error has occurred.
      deprecated: false
  /v3/directline/tokens/generate:
    post:
      tags:
      - Tokens
      summary: Generate a token for a new conversation
      operationId: Tokens_GenerateTokenForNewConversation
      consumes:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - text/json
      - text/html
      - application/xml
      - text/xml
      parameters:
      - name: tokenParameters
        in: body
        required: false
        schema:
          $ref: '#/definitions/TokenParameters'
      responses:
        200:
          description: The conversation was successfully created, updated, or retrieved.
          schema:
            $ref: '#/definitions/Conversation'
        401:
          description: The operation included an invalid or missing Authorization
            header.
        403:
          description: You are forbidden from performing this action because your
            token or secret is invalid.
        404:
          description: The requested resource was not found.
        500:
          description: An internal server error has occurred.
      deprecated: false
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":31:{s:12:\"Conversation\";O:8:\"stdClass\":3:{s:11:\"description\";s:61:\"An
  object representing a conversation or a conversation token\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:14:\"conversationId\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"ID
  for this conversation\";s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Token
  scoped to this conversation\";s:4:\"type\";s:6:\"string\";}s:10:\"expires_in\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:20:\"Expiration
  for token\";s:4:\"type\";s:7:\"integer\";}s:9:\"streamUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"URL
  for this conversation's message stream\";s:4:\"type\";s:6:\"string\";}s:18:\"referenceGrammarId\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"ID
  for the reference grammar for this bot\";s:4:\"type\";s:6:\"string\";}s:4:\"eTag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"ActivitySet\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"A
  collection of activities\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"activities\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"Activities\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Activity\";}}s:9:\"watermark\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Maximum
  watermark of activities within this set\";s:4:\"type\";s:6:\"string\";}}}s:8:\"Activity\";O:8:\"stdClass\":3:{s:11:\"description\";s:78:\"An
  Activity is the basic communication type for the Bot Framework 3.0 protocol\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":30:{s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:112:\"The
  type of the activity [message|contactRelationUpdate|converationUpdate|typing|endOfConversation|event|invoke]\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"ID
  of this activity\";s:4:\"type\";s:6:\"string\";}s:9:\"timestamp\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:47:\"UTC
  Time when message was sent (set by service)\";s:4:\"type\";s:6:\"string\";}s:14:\"localTimestamp\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:87:\"Local
  time when message was sent (set by client, Ex: 2016-09-23T13:07:49.4714686-07:00)\";s:4:\"type\";s:6:\"string\";}s:10:\"serviceUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:74:\"Service
  endpoint where operations concerning the activity may be performed\";s:4:\"type\";s:6:\"string\";}s:9:\"channelId\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"ID
  of the channel where the activity was sent\";s:4:\"type\";s:6:\"string\";}s:4:\"from\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";s:11:\"description\";s:14:\"Sender
  address\";}s:12:\"conversation\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConversationAccount\";s:11:\"description\";s:12:\"Conversation\";}s:9:\"recipient\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";s:11:\"description\";s:62:\"(Outbound
  to bot only) Bot's address that received the message\";}s:10:\"textFormat\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"Format
  of text fields [plain|markdown] Default:markdown\";s:4:\"type\";s:6:\"string\";}s:16:\"attachmentLayout\";O:8:\"stdClass\":2:{s:11:\"description\";s:76:\"Hint
  for how to deal with multiple attachments: [list|carousel] Default:list\";s:4:\"type\";s:6:\"string\";}s:12:\"membersAdded\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"Array
  of address added\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";}}s:14:\"membersRemoved\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Array
  of addresses removed\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";}}s:9:\"topicName\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Conversations
  new topic name\";s:4:\"type\";s:6:\"string\";}s:16:\"historyDisclosed\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"True
  if the previous history of the channel is disclosed\";s:4:\"type\";s:7:\"boolean\";}s:6:\"locale\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"The
  language code of the Text field\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Content
  for the message\";s:4:\"type\";s:6:\"string\";}s:5:\"speak\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"SSML
  Speak for TTS audio response\";s:4:\"type\";s:6:\"string\";}s:9:\"inputHint\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"Indicates
  whether the bot is accepting, expecting, or ignoring input\";s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Text
  to display if the channel cannot render cards\";s:4:\"type\";s:6:\"string\";}s:16:\"suggestedActions\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/SuggestedActions\";s:11:\"description\";s:86:\"SuggestedActions
  are used to provide keyboard/quickreply like behavior in many clients\";}s:11:\"attachments\";O:8:\"stdClass\":3:{s:11:\"description\";s:11:\"Attachments\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Attachment\";}}s:8:\"entities\";O:8:\"stdClass\":3:{s:11:\"description\";s:111:\"Collection
  of Entity objects, each of which contains metadata about this activity. Each Entity
  object is typed.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Entity\";}}s:11:\"channelData\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:24:\"Channel-specific
  payload\";}s:6:\"action\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"ContactAdded/Removed
  action\";s:4:\"type\";s:6:\"string\";}s:9:\"replyToId\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  original ID this message is a response to\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:16:\"Open-ended
  value\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"Name of the
  operation to invoke or the name of the event\";s:4:\"type\";s:6:\"string\";}s:9:\"relatesTo\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ConversationReference\";s:11:\"description\";s:45:\"Reference
  to another conversation or activity\";}s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"Code
  indicating why the conversation has ended\";s:4:\"type\";s:6:\"string\";}}}s:14:\"ChannelAccount\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Channel
  account information needed to route a message\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:95:\"Channel
  id for the user or bot on this channel (Example: joe@smith.com, or @joesmith or
  123456)\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"Display
  friendly name\";s:4:\"type\";s:6:\"string\";}}}s:19:\"ConversationAccount\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"Channel
  account information for a conversation\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"isGroup\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"Is
  this a reference to a group\";s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:95:\"Channel
  id for the user or bot on this channel (Example: joe@smith.com, or @joesmith or
  123456)\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"Display
  friendly name\";s:4:\"type\";s:6:\"string\";}}}s:16:\"SuggestedActions\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"SuggestedActions
  that can be performed\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"to\";O:8:\"stdClass\":3:{s:11:\"description\";s:146:\"Ids
  of the recipients that the actions should be shown to.  These Ids are relative to
  the channelId and a subset of all recipients of the activity\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"actions\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Actions
  that can be shown to the user\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}}}s:10:\"Attachment\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"An
  attachment within an activity\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"contentType\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"mimetype/Contenttype
  for the file\";s:4:\"type\";s:6:\"string\";}s:10:\"contentUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Content
  Url\";s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:16:\"Embedded
  content\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"(OPTIONAL)
  The name of the attachment\";s:4:\"type\";s:6:\"string\";}s:12:\"thumbnailUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"(OPTIONAL)
  Thumbnail associated with attachment\";s:4:\"type\";s:6:\"string\";}}}s:6:\"Entity\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Object
  of schema.org types\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Entity
  Type (typically from schema.org types)\";s:4:\"type\";s:6:\"string\";}}}s:6:\"Object\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:21:\"ConversationReference\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"An
  object relating to a particular point in a conversation\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"activityId\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"(Optional)
  ID of the activity to refer to\";s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";s:11:\"description\";s:50:\"(Optional)
  User participating in this conversation\";}s:3:\"bot\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";s:11:\"description\";s:38:\"Bot
  participating in this conversation\";}s:12:\"conversation\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConversationAccount\";s:11:\"description\";s:22:\"Conversation
  reference\";}s:9:\"channelId\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"Channel
  ID\";s:4:\"type\";s:6:\"string\";}s:10:\"serviceUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"Service
  endpoint where operations concerning the referenced conversation may be performed\";s:4:\"type\";s:6:\"string\";}}}s:10:\"CardAction\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"An
  action on a card\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"Defines
  the type of action implemented by this button.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"Text
  description which appear on the button.\";s:4:\"type\";s:6:\"string\";}s:5:\"image\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"URL
  Picture which will appear on the button, next to text label.\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:86:\"Supplementary
  parameter for action. Content of this property depends on the ActionType\";}}}s:16:\"ResourceResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"A
  response containing a resource ID\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"Id
  of the resource\";s:4:\"type\";s:6:\"string\";}}}s:8:\"HeroCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"A
  Hero card (card with a single, large image)\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the card\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Subtitle
  of the card\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Text
  for the card\";s:4:\"type\";s:6:\"string\";}s:6:\"images\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Array
  of images for the card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CardImage\";}}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Set
  of actions applicable to the current card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}s:3:\"tap\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";s:11:\"description\";s:63:\"This
  action will be activated when user taps on the card itself\";}}}s:9:\"CardImage\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"An
  image on a card\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"URL
  Thumbnail image for major content property.\";s:4:\"type\";s:6:\"string\";}s:3:\"alt\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Image
  description intended for screen readers\";s:4:\"type\";s:6:\"string\";}s:3:\"tap\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";s:11:\"description\";s:94:\"Action
  assigned to specific Attachment.E.g.navigate to specific URL or play/open media
  content\";}}}s:13:\"ErrorResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"An
  HTTP API response\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:19:\"#/definitions/Error\";s:11:\"description\";s:13:\"Error
  message\";}}}s:5:\"Error\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Object
  representing error information\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"Error
  code\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Error
  message\";s:4:\"type\";s:6:\"string\";}}}s:13:\"AnimationCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"An
  animation card (Ex: gif or short video clip)\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the card\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Subtitle
  of the card\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Text
  of the card\";s:4:\"type\";s:6:\"string\";}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ThumbnailUrl\";s:11:\"description\";s:21:\"Thumbnail
  placeholder\";}s:5:\"media\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Array
  of media Url objects\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/MediaUrl\";}}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Set
  of actions applicable to the current card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}s:9:\"shareable\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"Is
  it OK for this content to be shareable with others (default:true)\";s:4:\"type\";s:7:\"boolean\";}s:8:\"autoloop\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"Should
  the client loop playback at end of content (default:true)\";s:4:\"type\";s:7:\"boolean\";}s:9:\"autostart\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"Should
  the client automatically start playback of video in this card (default:true)\";s:4:\"type\";s:7:\"boolean\";}}}s:12:\"ThumbnailUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Object
  describing a media thumbnail\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"url
  pointing to an thumbnail to use for media content\";s:4:\"type\";s:6:\"string\";}s:3:\"alt\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"Alt
  text to display for screen readers on the thumbnail image\";s:4:\"type\";s:6:\"string\";}}}s:8:\"MediaUrl\";O:8:\"stdClass\":3:{s:11:\"description\";s:13:\"MediaUrl
  data\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Url
  for the media\";s:4:\"type\";s:6:\"string\";}s:7:\"profile\";O:8:\"stdClass\":2:{s:11:\"description\";s:94:\"Optional
  profile hint to the client to differentiate multiple MediaUrl objects from each
  other\";s:4:\"type\";s:6:\"string\";}}}s:9:\"AudioCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"A
  audio card\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:6:\"aspect\";O:8:\"stdClass\":2:{s:11:\"description\";s:81:\"Aspect
  ratio of thumbnail/media placeholder, allowed values are \"16x9\" and \"9x16\"\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the card\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Subtitle
  of the card\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Text
  of the card\";s:4:\"type\";s:6:\"string\";}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ThumbnailUrl\";s:11:\"description\";s:21:\"Thumbnail
  placeholder\";}s:5:\"media\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Array
  of media Url objects\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/MediaUrl\";}}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Set
  of actions applicable to the current card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}s:9:\"shareable\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"Is
  it OK for this content to be shareable with others (default:true)\";s:4:\"type\";s:7:\"boolean\";}s:8:\"autoloop\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"Should
  the client loop playback at end of content (default:true)\";s:4:\"type\";s:7:\"boolean\";}s:9:\"autostart\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"Should
  the client automatically start playback of video in this card (default:true)\";s:4:\"type\";s:7:\"boolean\";}}}s:11:\"ReceiptCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"A
  receipt card\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the card\";s:4:\"type\";s:6:\"string\";}s:5:\"items\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"Array
  of Receipt Items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ReceiptItem\";}}s:5:\"facts\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Array
  of Fact Objects   Array of key-value pairs.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Fact\";}}s:3:\"tap\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";s:11:\"description\";s:56:\"This
  action will be activated when user taps on the card\";}s:5:\"total\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"Total
  amount of money paid (or should be paid)\";s:4:\"type\";s:6:\"string\";}s:3:\"tax\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Total
  amount of TAX paid(or should be paid)\";s:4:\"type\";s:6:\"string\";}s:3:\"vat\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Total
  amount of VAT paid(or should be paid)\";s:4:\"type\";s:6:\"string\";}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Set
  of actions applicable to the current card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}}}s:11:\"ReceiptItem\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"An
  item on a receipt card\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the Card\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:80:\"Subtitle
  appears just below Title field, differs from Title in font styling only\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:82:\"Text
  field appears just below subtitle, differs from Subtitle in font styling only\";s:4:\"type\";s:6:\"string\";}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/CardImage\";s:11:\"description\";s:5:\"Image\";}s:5:\"price\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Amount
  with currency\";s:4:\"type\";s:6:\"string\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Number
  of items of given kind\";s:4:\"type\";s:6:\"string\";}s:3:\"tap\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";s:11:\"description\";s:64:\"This
  action will be activated when user taps on the Item bubble.\";}}}s:4:\"Fact\";O:8:\"stdClass\":3:{s:11:\"description\";s:242:\"Set
  of key-value pairs. Advantage of this section is that key and value properties will
  be \r\n            rendered with default style information with some delimiter between
  them. So there is no need for developer to specify style information.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  key for this Fact\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"The
  value for this Fact\";s:4:\"type\";s:6:\"string\";}}}s:10:\"SigninCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"A
  card representing a request to sign in\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Text
  for signin request\";s:4:\"type\";s:6:\"string\";}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Action
  to use to perform signin\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}}}s:13:\"ThumbnailCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:60:\"A
  thumbnail card (card with a single, small thumbnail image)\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the card\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Subtitle
  of the card\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Text
  for the card\";s:4:\"type\";s:6:\"string\";}s:6:\"images\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Array
  of images for the card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CardImage\";}}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Set
  of actions applicable to the current card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}s:3:\"tap\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";s:11:\"description\";s:63:\"This
  action will be activated when user taps on the card itself\";}}}s:9:\"VideoCard\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"A
  video card\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:6:\"aspect\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Aspect
  ratio (16:9)(4:3)\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Title
  of the card\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Subtitle
  of the card\";s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"Text
  of the card\";s:4:\"type\";s:6:\"string\";}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ThumbnailUrl\";s:11:\"description\";s:21:\"Thumbnail
  placeholder\";}s:5:\"media\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"Array
  of media Url objects\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/MediaUrl\";}}s:7:\"buttons\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Set
  of actions applicable to the current card\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/CardAction\";}}s:9:\"shareable\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"Is
  it OK for this content to be shareable with others (default:true)\";s:4:\"type\";s:7:\"boolean\";}s:8:\"autoloop\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"Should
  the client loop playback at end of content (default:true)\";s:4:\"type\";s:7:\"boolean\";}s:9:\"autostart\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"Should
  the client automatically start playback of video in this card (default:true)\";s:4:\"type\";s:7:\"boolean\";}}}s:14:\"GeoCoordinates\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"GeoCoordinates
  (entity type: \"https://schema.org/GeoCoordinates\")\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"elevation\";O:8:\"stdClass\":3:{s:6:\"format\";s:6:\"double\";s:11:\"description\";s:87:\"Elevation
  of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)\";s:4:\"type\";s:6:\"number\";}s:8:\"latitude\";O:8:\"stdClass\":3:{s:6:\"format\";s:6:\"double\";s:11:\"description\";s:86:\"Latitude
  of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)\";s:4:\"type\";s:6:\"number\";}s:9:\"longitude\";O:8:\"stdClass\":3:{s:6:\"format\";s:6:\"double\";s:11:\"description\";s:87:\"Longitude
  of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)\";s:4:\"type\";s:6:\"number\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  type of the thing\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  name of the thing\";s:4:\"type\";s:6:\"string\";}}}s:7:\"Mention\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"Mention
  information (entity type: \"mention\")\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"mentioned\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";s:11:\"description\";s:18:\"The
  mentioned user\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"Sub
  Text which represents the mention (can be null or empty)\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"Entity
  Type (typically from schema.org types)\";s:4:\"type\";s:6:\"string\";}}}s:5:\"Place\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Place
  (entity type: \"https://schema.org/Place\")\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:80:\"Address
  of the place (may be `string` or complex object of type `PostalAddress`)\";}s:3:\"geo\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:91:\"Geo
  coordinates of the place (may be complex object of type `GeoCoordinates` or `GeoShape`)\";}s:6:\"hasMap\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Object\";s:11:\"description\";s:72:\"Map
  to the place (may be `string` (URL) or complex object of type `Map`)\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  type of the thing\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  name of the thing\";s:4:\"type\";s:6:\"string\";}}}s:5:\"Thing\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Thing
  (entity type: \"https://schema.org/Thing\")\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  type of the thing\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  name of the thing\";s:4:\"type\";s:6:\"string\";}}}s:15:\"TokenParameters\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Parameters
  for creating a token\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ChannelAccount\";s:11:\"description\";s:38:\"User
  account to embed within the token\";}s:4:\"eTag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
