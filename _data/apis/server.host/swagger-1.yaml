---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:62:\"Authorization and
  Authentication Control APIs - Role managment\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:25:\"AAC
  API - Role management\";s:14:\"termsOfService\";s:7:\"urn:tos\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:19:\"Smart
  Community Lab\";s:3:\"url\";s:24:\"www.smartcommunitylab.it\";s:5:\"email\";s:25:\"info@smartcommunitylab.it\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:27:\"Apache
  License, Version 2.0\";s:3:\"url\";s:42:\"http://www.apache.org/licenses/LICENSE-2.0\";}}"
host: ${server.host}
basePath: ${server.contextPath}
paths:
  /userroles/client:
    get:
      tags:
      - AAC Roles
      summary: Get roles of a client owner by token
      operationId: getClientRolesUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - application:
        - user.roles.write
        - user.roles.read
        - user.roles.read.all
        - client.roles.read.all
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  /userroles/client/{clientId}:
    get:
      tags:
      - AAC Roles
      summary: Get roles of a client owner
      operationId: getRolesByClientIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - application:
        - user.roles.write
        - user.roles.read
        - user.roles.read.all
        - client.roles.read.all
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  /userroles/me:
    get:
      tags:
      - AAC Roles
      summary: Get roles of a current user
      operationId: getRolesUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - spring_oauth:
        - user.roles.me
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  /userroles/token/{token}:
    get:
      tags:
      - AAC Roles
      summary: Get roles of a client token owner
      operationId: getRolesByTokenUsingGET
      produces:
      - '*/*'
      parameters:
      - name: token
        in: path
        description: token
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - application:
        - user.roles.write
        - user.roles.read
        - user.roles.read.all
        - client.roles.read.all
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  /userroles/user/{userId}:
    get:
      tags:
      - AAC Roles
      summary: Get roles of a specific user in a domain
      operationId: getRolesByUserIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - application:
        - user.roles.write
        - user.roles.read
        - user.roles.read.all
        - client.roles.read.all
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    put:
      tags:
      - AAC Roles
      summary: Add roles to a specific user
      operationId: addRolesUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: integer
        format: int64
      - name: roles
        in: query
        description: roles
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - application:
        - user.roles.write
        - user.roles.read
        - user.roles.read.all
        - client.roles.read.all
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
      - AAC Roles
      summary: Delete roles for a specific user
      operationId: deleteRolesUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: integer
        format: int64
      - name: roles
        in: query
        description: roles
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - application:
        - user.roles.write
        - user.roles.read
        - user.roles.read.all
        - client.roles.read.all
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
definitions: !php/object "O:8:\"stdClass\":1:{s:4:\"Role\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"authority\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"context\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"space\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:4:\"Role\";}}"
...
