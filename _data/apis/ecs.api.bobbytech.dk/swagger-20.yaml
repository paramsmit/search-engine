---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:5:\"title\";s:55:\"Move your app forward
  with the Senodio IoT platform API\";s:11:\"description\";s:471:\"Move your app forward
  with the Senodio API. The security and authorization api is provided by Auth0. For
  more information go to [Auth0 api documentation](https://auth0.com/docs/api). The
  authentication api is proxied through the Senodio server through the /authenticate
  path of the api server. The HTTP inteface to the MQTT message broker is an alternative
  to the raw MQTT api. You can explore the MQTT broker api at [ecs.mqtt.bobbytech.dk](http://ecs.mqtt.bobbytech.dk/)\";s:7:\"version\";s:5:\"1.0.0\";s:14:\"termsOfService\";s:24:\"http://senodio.dk/terms/\";s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"name\";s:14:\"api@senodio.dk\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: ecs.api.bobbytech.dk
basePath: /api
paths:
  /authenticate/oauth/ro:
    post:
      tags:
      - Authentication
      summary: Login to api server
      description: Login to api server
      parameters:
      - in: body
        name: Login
        description: Login information
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: Successful response
  /auth/users:
    get:
      tags:
      - Users
      summary: Get users
      description: Get users
      responses:
        200:
          description: Successful response
    post:
      tags:
      - Users
      summary: Get users
      description: Get users
      responses:
        200:
          description: Successful response
  /auth/users/{user_id}:
    get:
      tags:
      - Users
      summary: Get a user
      description: Get a user
      parameters:
      - in: path
        name: user_id
        description: Id of user that needs to be fetched
        required: true
        type: string
      responses:
        200:
          description: Successful response
  /installations:
    get:
      tags:
      - Installation
      summary: Retrieve all installations
      description: Gets `Installation` objects.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Installation'
    post:
      tags:
      - Installation
      summary: Add an installation
      description: Add `Installation` object.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Installation
        description: Installation
        required: true
        schema:
          $ref: '#/definitions/Installation'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Installation'
  /installations/{installationId}:
    get:
      tags:
      - Installation
      summary: Retrieve an installation
      description: Gets `Installation` objects.
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation that needs to be fetched
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Installation'
    put:
      tags:
      - Installation
      summary: Update an installation
      description: Update `Installation` object.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation that needs to be fetched
        required: true
        type: string
      - in: body
        name: Installation
        description: Installation
        required: true
        schema:
          $ref: '#/definitions/Installation'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Installation'
    delete:
      tags:
      - Installation
      summary: Remove an installation
      description: Remove `Installation` object.
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation that needs to be fetched
        required: true
        type: string
      responses:
        200:
          description: Successful response
  /installations/{installationId}/devices:
    post:
      tags:
      - Device
      summary: Add a device to an installation
      description: Add a `Device` object.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: body
        name: Device
        description: Device object
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
  /installations/{installationId}/devices/{deviceId}:
    get:
      tags:
      - Device
      summary: Retrieve a device
      description: Get `Device` object.
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: ID of device
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
    put:
      tags:
      - Device
      summary: Update a device configuration
      description: Update `Device` object.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: ID of device
        required: true
        type: string
      - in: body
        name: Device
        description: Device object
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
    delete:
      tags:
      - Device
      summary: Remove a device from an installation
      description: Delete `Device` object.
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: ID of device
        required: true
        type: string
      responses:
        200:
          description: Successful response
  /installations/{installationId}/devices/{deviceId}/controls:
    post:
      tags:
      - Control/Sensor
      summary: Add a control/sensor to a device
      description: Add a `Control` object to a 'Device' object.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: ID of device
        required: true
        type: string
      - in: body
        name: Control
        description: Control object
        required: true
        schema:
          $ref: '#/definitions/Control'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Control'
  /installations/{installationId}/devices/{deviceId}/controls/{controlId}:
    get:
      tags:
      - Control/Sensor
      summary: Retrieve a control/sensor
      description: Get `Control` object.
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: ID of device
        required: true
        type: string
      - in: path
        name: controlId
        description: ID of control
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Control'
    put:
      tags:
      - Control/Sensor
      summary: Update a control/sensor configuration
      description: Update `Device` object.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: ID of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: Id of device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of control
        required: true
        type: string
      - in: body
        name: Control
        description: Control object
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Control'
    delete:
      tags:
      - Control/Sensor
      summary: Delete a control/sensor
      description: Delete `Control` object in Device
      produces:
      - application/json
      parameters:
      - in: path
        name: installationId
        description: Id of installation
        required: true
        type: string
      - in: path
        name: deviceId
        description: Id of device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of control
        required: true
        type: string
      responses:
        200:
          description: Successful response
  /agent/{deviceId}:
    delete:
      tags:
      - Device agent
      summary: Deactivate device
      description: Deactive device
      parameters:
      - in: query
        name: installationId
        description: Id of device
        required: true
        type: string
      - in: path
        name: deviceId
        description: Id of device
        required: true
        type: string
      responses:
        200:
          description: Successful response
    post:
      tags:
      - Device agent
      summary: Activate device
      description: Activate device with configuration query parameters.
      produces:
      - application/json
      parameters:
      - in: query
        name: config
        description: Id of device
        required: true
        type: string
      - in: query
        name: installationId
        description: Id of installation
        required: false
        type: string
      - in: query
        name: deviceID
        description: Id of device
        required: false
        type: string
      - in: query
        name: interval
        description: Post interval for sensor data
        required: true
        type: string
      - in: path
        name: deviceId
        description: Id of device
        required: true
        type: string
      responses:
        200:
          description: Successful response
  /datastreams/{deviceId}/{controlId}:
    get:
      tags:
      - Datastream
      summary: Retrieve sensor data collection
      description: Retrieve sensor data collection
      produces:
      - application/json
      parameters:
      - in: query
        name: from
        description: From date timestamp
        required: false
        type: string
        format: date-time
      - in: query
        name: to
        description: To date timestamp
        required: false
        type: string
        format: date-time
      - in: query
        name: limit
        description: Max number of observations
        required: false
        type: integer
      - in: query
        name: interval
        description: Resolution of observations. 1 (seconds), 60 (minutes), 3600 (hours)
        required: false
        type: integer
      - in: query
        name: format
        description: Format of response hash -> hash, timestamp -> [x,y], time ->
          [ms,y]
        required: false
        type: integer
      - in: path
        name: deviceId
        description: Id of device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of sensor
        required: true
        type: string
      responses:
        200:
          description: Successful response
  /broker/{deviceId}/{controlId}:
    post:
      tags:
      - Message broker
      summary: Publish sensor data without retaining
      description: Publish sensor data without retaining
      consumes:
      - application/text
      produces:
      - application/json
      parameters:
      - in: path
        name: deviceId
        description: Id of Device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of Control/Sensor
        required: true
        type: string
      - in: body
        name: message
        description: Message
        required: true
        type: string
      responses:
        200:
          description: Successful response
    get:
      tags:
      - Message broker
      summary: Get latest published sensor data
      description: Get latest published sensor data
      produces:
      - application/json
      parameters:
      - in: path
        name: deviceId
        description: Id of Device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of Control/Sensor
        required: true
        type: string
      responses:
        200:
          description: Successful response
    put:
      tags:
      - Message broker
      summary: Publish and retain sensor value
      description: Publish and retain sensor value
      consumes:
      - application/text
      produces:
      - application/json
      parameters:
      - in: path
        name: deviceId
        description: Id of Device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of Control/Sensor
        required: true
        type: string
      - in: body
        name: message
        description: Message
        required: true
        type: string
      responses:
        200:
          description: Successful response
    delete:
      tags:
      - Message broker
      summary: Reset sensor value
      description: Reset sensor value
      produces:
      - application/json
      parameters:
      - in: path
        name: deviceId
        description: Id of Device
        required: true
        type: string
      - in: path
        name: controlId
        description: Id of Control/Sensor
        required: true
        type: string
      responses:
        200:
          description: Successful response
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":7:{s:12:\"Installation\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"placement\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}s:7:\"devices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Device\";}}}}s:7:\"Contact\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Device\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"placement\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"noOfAlarms\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"interval\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"controls\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Control\";}}}}s:7:\"Control\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":12:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"isState\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"ctrlType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"minValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"maxValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"minCritical\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"maxCritical\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"scale\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"timers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Timer\";}}s:4:\"unit\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}}s:4:\"Unit\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"symbol\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"units\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"precision\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Timer\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"enabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"timestamp\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"duration\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:5:\"Login\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"client_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:32:\"kpWrEQ5gJclwuAljKpHgNcJA3NwNZ0FL\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"connection\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:32:\"Username-Password-Authentication\";}s:10:\"grant_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:8:\"password\";s:7:\"default\";s:8:\"password\";}s:5:\"scope\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:6:\"openid\";}}}}"
...
