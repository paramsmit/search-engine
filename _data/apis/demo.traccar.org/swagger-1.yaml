---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":8:{s:11:\"description\";s:33:\"Open Source GPS
  Tracking Platform\";s:5:\"title\";s:7:\"traccar\";s:7:\"version\";s:4:\"3.17\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:8:\"location\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:110:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_590395195268538368_oScd6DxA_400x400.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:70:\"https://raw.githubusercontent.com/tananaev/traccar/master/swagger.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:11:\"traccar.org\";}"
host: demo.traccar.org
basePath: /api
paths:
  /attributes/computed:
    get:
      description: Without params, it returns a list of Attributes the user has access
        to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/groupId'
      - $ref: '#/parameters/refresh'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Attribute'
            type: array
      summary: Fetch a list of Attributes
    post:
      parameters:
      - $ref: '#/parameters/Attribute'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Attribute'
      summary: Create an Attribute
  /attributes/computed/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete an Attribute
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Attribute'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Attribute'
      summary: Update an Attribute
  /calendars:
    get:
      description: Without params, it returns a list of Calendars the user has access
        to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Calendar'
            type: array
      summary: Fetch a list of Calendars
    post:
      parameters:
      - $ref: '#/parameters/Calendar'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Calendar'
      summary: Create a Calendar
  /calendars/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Calendar
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Calendar'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Calendar'
      summary: Update a Calendar
  /commands:
    get:
      description: Without params, it returns a list of Drivers the user has access
        to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/groupId'
      - $ref: '#/parameters/refresh'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Command'
            type: array
      summary: Fetch a list of Saved Commands
    post:
      parameters:
      - $ref: '#/parameters/Command'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Command'
      summary: Create a Saved Command
  /commands/send:
    get:
      description: Return a list of saved commands linked to Device and its groups,
        filtered by current Device protocol support
      parameters:
      - $ref: '#/parameters/deviceId'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Command'
            type: array
        400:
          description: Could happen when the user doesn't have permission for the
            device
      summary: Fetch a list of Saved Commands supported by Device at the moment
    post:
      description: Dispatch a new command or Saved Command if _body.id_ set
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Command'
      responses:
        200:
          description: Command sent
          schema:
            $ref: '#/definitions/Command'
        202:
          description: Command queued
          schema:
            $ref: '#/definitions/Command'
        400:
          description: Could happen when the user doesn't have permission or an incorrect
            command _type_ for the device
      summary: Dispatch commands to device
  /commands/types:
    get:
      parameters:
      - in: query
        name: deviceId
        type: integer
      - in: query
        name: textChannel
        type: boolean
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/CommandType'
            type: array
        400:
          description: Could happen when trying to fetch from a device the user does
            not have permission
      summary: Fetch a list of available Commands for the Device or all possible Commands
        if Device ommited
  /commands/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Saved Command
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Command'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Command'
      summary: Update a Saved Command
  /devices:
    get:
      description: Without any params, returns a list of the user's devices
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - collectionFormat: multi
        description: To fetch one or more devices. Multiple params can be passed like
          `id=31&id=42`
        in: query
        name: id
        required: false
        type: integer
      - collectionFormat: multi
        description: To fetch one or more devices. Multiple params can be passed like
          `uniqueId=333331&uniqieId=44442`
        in: query
        name: uniqueId
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Device'
            type: array
        400:
          description: No permission
      summary: Fetch a list of Devices
    post:
      parameters:
      - $ref: '#/parameters/Device'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Device'
      summary: Create a Device
  /devices/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Device
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Device'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Device'
      summary: Update a Device
  /devices/{id}/distance:
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeviceTotalDistance'
      responses:
        204:
          description: No Content
      summary: Update the distance counter of the Device
  /drivers:
    get:
      description: Without params, it returns a list of Drivers the user has access
        to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/groupId'
      - $ref: '#/parameters/refresh'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Driver'
            type: array
      summary: Fetch a list of Drivers
    post:
      parameters:
      - $ref: '#/parameters/Driver'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Driver'
      summary: Create a Driver
  /drivers/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Driver
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Driver'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Driver'
      summary: Update a Driver
  /events/{id}:
    get:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Event'
  /geofences:
    get:
      description: Without params, it returns a list of Geofences the user has access
        to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/groupId'
      - $ref: '#/parameters/refresh'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Geofence'
            type: array
      summary: Fetch a list of Geofences
    post:
      parameters:
      - $ref: '#/parameters/Geofence'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Geofence'
      summary: Create a Geofence
  /geofences/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Geofence
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Geofence'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Geofence'
      summary: Update a Geofence
  /groups:
    get:
      description: Without any params, returns a list of the Groups the user belongs
        to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      summary: Fetch a list of Groups
    post:
      parameters:
      - $ref: '#/parameters/Group'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Group'
        400:
          description: No permission
      summary: Create a Group
  /groups/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Group
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Group'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Group'
      summary: Update a Group
  /maintenances:
    get:
      description: Without params, it returns a list of Maintenances the user has
        access to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/groupId'
      - $ref: '#/parameters/refresh'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Maintenance'
            type: array
      summary: Fetch a list of Maintenances
    post:
      parameters:
      - $ref: '#/parameters/Maintenance'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Maintenance'
      summary: Create a Maintenance
  /maintenances/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Maintenance
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Maintenance'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Maintenance'
      summary: Update a Maintenance
  /notifications:
    get:
      description: Without params, it returns a list of Notifications the user has
        access to
      parameters:
      - $ref: '#/parameters/all'
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/deviceId'
      - $ref: '#/parameters/groupId'
      - $ref: '#/parameters/refresh'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Notification'
            type: array
      summary: Fetch a list of Notifications
    post:
      parameters:
      - $ref: '#/parameters/Notification'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notification'
      summary: Create a Notification
  /notifications/test:
    post:
      parameters: []
      responses:
        204:
          description: Successful sending
        400:
          description: Could happen if sending has failed
      summary: Send test notification to current user via Email and SMS
  /notifications/types:
    get:
      parameters: []
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/NotificationType'
            type: array
      summary: Fetch a list of available Notification types
  /notifications/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a Notification
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/Notification'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notification'
      summary: Update a Notification
  /permissions:
    delete:
      parameters:
      - $ref: '#/parameters/Permission'
      responses:
        204:
          description: No Content
      summary: Unlink an Object from another Object
    post:
      parameters:
      - $ref: '#/parameters/Permission'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Permission'
        400:
          description: No permission
      summary: Link an Object to another Object
  /positions:
    get:
      consumes:
      - application/json
      - text/csv
      - application/gpx+xml
      description: Without any params, it returns a list of last known positions for
        all the user's Devices. _from_ and _to_ fields are not required with _id_
      parameters:
      - description: _deviceId_ is optional, but requires the _from_ and _to_ parameters
          when used
        in: query
        name: deviceId
        required: false
        type: integer
      - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
        format: date-time
        in: query
        name: from
        required: false
        type: string
      - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
        format: date-time
        in: query
        name: to
        required: false
        type: string
      - collectionFormat: multi
        description: To fetch one or more positions. Multiple params can be passed
          like `id=31&id=42`
        in: query
        name: id
        required: false
        type: integer
      produces:
      - application/json
      - text/csv
      - application/gpx+xml
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Position'
            type: array
      summary: Fetches a list of Positions
  /reports/events:
    get:
      consumes:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      description: At least one _deviceId_ or one _groupId_ must be passed
      parameters:
      - $ref: '#/parameters/deviceIdArray'
      - $ref: '#/parameters/groupIdArray'
      - description: '% can be used to return events of all types'
        in: query
        items:
          type: string
        name: type
        type: array
      - $ref: '#/parameters/fromTime'
      - $ref: '#/parameters/toTime'
      produces:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
      summary: Fetch a list of Events within the time period for the Devices or Groups
  /reports/route:
    get:
      consumes:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      description: At least one _deviceId_ or one _groupId_ must be passed
      parameters:
      - $ref: '#/parameters/deviceIdArray'
      - $ref: '#/parameters/groupIdArray'
      - $ref: '#/parameters/fromTime'
      - $ref: '#/parameters/toTime'
      produces:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Position'
            type: array
      summary: Fetch a list of Positions within the time period for the Devices or
        Groups
  /reports/stops:
    get:
      consumes:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      description: At least one _deviceId_ or one _groupId_ must be passed
      parameters:
      - $ref: '#/parameters/deviceIdArray'
      - $ref: '#/parameters/groupIdArray'
      - $ref: '#/parameters/fromTime'
      - $ref: '#/parameters/toTime'
      produces:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportStops'
            type: array
      summary: Fetch a list of ReportStops within the time period for the Devices
        or Groups
  /reports/summary:
    get:
      consumes:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      description: At least one _deviceId_ or one _groupId_ must be passed
      parameters:
      - $ref: '#/parameters/deviceIdArray'
      - $ref: '#/parameters/groupIdArray'
      - $ref: '#/parameters/fromTime'
      - $ref: '#/parameters/toTime'
      produces:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportSummary'
            type: array
      summary: Fetch a list of ReportSummary within the time period for the Devices
        or Groups
  /reports/trips:
    get:
      consumes:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      description: At least one _deviceId_ or one _groupId_ must be passed
      parameters:
      - $ref: '#/parameters/deviceIdArray'
      - $ref: '#/parameters/groupIdArray'
      - $ref: '#/parameters/fromTime'
      - $ref: '#/parameters/toTime'
      produces:
      - application/json
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReportTrips'
            type: array
      summary: Fetch a list of ReportTrips within the time period for the Devices
        or Groups
  /server:
    get:
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Server'
      summary: Fetch Server information
    put:
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Server'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Server'
      summary: Update Server information
  /session:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      parameters: []
      responses:
        204:
          description: No Content
      summary: Close the Session
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: query
        name: token
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        404:
          description: Not Found
      summary: Fetch Session information
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - format: password
        in: formData
        name: password
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized
      summary: Create a new Session
  /statistics:
    get:
      parameters:
      - $ref: '#/parameters/fromTime'
      - $ref: '#/parameters/toTime'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Statistics'
            type: array
      summary: Fetch server Statistics
  /users:
    get:
      parameters:
      - description: Can only be used by admin or manager users
        in: query
        name: userId
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
        400:
          description: No Permission
      summary: Fetch a list of Users
    post:
      parameters:
      - $ref: '#/parameters/User'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Create a User
  /users/{id}:
    delete:
      parameters:
      - $ref: '#/parameters/entityId'
      responses:
        204:
          description: No Content
      summary: Delete a User
    put:
      parameters:
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/User'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Update a User
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":21:{s:9:\"Attribute\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"attribute\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"expression\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"String|Number|Boolean\";s:4:\"type\";s:6:\"string\";}}}s:8:\"Calendar\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"atributes\";O:8:\"stdClass\":0:{}s:4:\"data\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"base64
  encoded in iCalendar format\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Command\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"attributes\";O:8:\"stdClass\":0:{}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"CommandType\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Device\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":14:{s:10:\"attributes\";O:8:\"stdClass\":0:{}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"disabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"geofenceIds\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";s:5:\"array\";}s:7:\"groupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"lastUpdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:5:\"model\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"positionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"uniqueId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:19:\"DeviceTotalDistance\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:13:\"totalDistance\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"in
  meters\";s:4:\"type\";s:6:\"number\";}}}s:6:\"Driver\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"atributes\";O:8:\"stdClass\":0:{}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"uniqueId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Event\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:10:\"attributes\";O:8:\"stdClass\":0:{}s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"geofenceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:13:\"maintenanceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"positionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"serverTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Geofence\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"area\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"attributes\";O:8:\"stdClass\":0:{}s:10:\"calendarId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Group\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"attributes\";O:8:\"stdClass\":0:{}s:7:\"groupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"Maintenance\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"atributes\";O:8:\"stdClass\":0:{}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"period\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"start\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Notification\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:6:\"always\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"attributes\";O:8:\"stdClass\":0:{}s:10:\"calendarId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"sms\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"web\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:16:\"NotificationType\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"Permission\";O:8:\"stdClass\":2:{s:11:\"description\";s:152:\"This
  is a permission map that contain two object indexes. It is used to link/unlink objects.
  Order is important. Example: { deviceId:8, geofenceId: 16 }\";s:10:\"properties\";O:8:\"stdClass\":8:{s:11:\"attributeId\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Computed
  Attribute Id, can be second parameter only\";s:4:\"type\";s:7:\"integer\";}s:10:\"calendarId\";O:8:\"stdClass\":2:{s:11:\"description\";s:77:\"Geofence
  Id, can be second parameter only and only in combination with userId\";s:4:\"type\";s:7:\"integer\";}s:8:\"deviceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:75:\"Device
  Id, can be first parameter or second only in combination with userId\";s:4:\"type\";s:7:\"integer\";}s:8:\"driverId\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"Driver
  Id, can be second parameter only\";s:4:\"type\";s:7:\"integer\";}s:10:\"geofenceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Geofence
  Id, can be second parameter only\";s:4:\"type\";s:7:\"integer\";}s:7:\"groupId\";O:8:\"stdClass\":2:{s:11:\"description\";s:74:\"Group
  Id, can be first parameter or second only in combination with userId\";s:4:\"type\";s:7:\"integer\";}s:13:\"managedUserId\";O:8:\"stdClass\":2:{s:11:\"description\";s:73:\"User
  Id, can be second parameter only and only in combination with userId\";s:4:\"type\";s:7:\"integer\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"User
  Id, can be only first parameter\";s:4:\"type\";s:7:\"integer\";}}}s:8:\"Position\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":17:{s:8:\"accuracy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"altitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"attributes\";O:8:\"stdClass\":0:{}s:6:\"course\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"deviceTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"fixTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"latitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"longitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"network\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"outdated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"protocol\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"serverTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:5:\"speed\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"in
  knots\";s:4:\"type\";s:6:\"number\";}s:5:\"valid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:11:\"ReportStops\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"deviceName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"duration\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"endTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:11:\"engineHours\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:3:\"lat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"lon\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"spentFuel\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"in
  liters\";s:4:\"type\";s:6:\"number\";}s:9:\"startTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}}s:13:\"ReportSummary\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:12:\"averageSpeed\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"in
  knots\";s:4:\"type\";s:6:\"number\";}s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"deviceName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"distance\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"in
  meters\";s:4:\"type\";s:6:\"number\";}s:11:\"engineHours\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"maxSpeed\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"in
  knots\";s:4:\"type\";s:6:\"number\";}s:9:\"spentFuel\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"in
  liters\";s:4:\"type\";s:6:\"number\";}}}s:11:\"ReportTrips\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":17:{s:12:\"averageSpeed\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"in
  knots\";s:4:\"type\";s:6:\"number\";}s:8:\"deviceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"deviceName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"distance\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"in
  meters\";s:4:\"type\";s:6:\"number\";}s:10:\"driverName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"driverUniqueId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"duration\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"endAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"endLat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:6:\"endLon\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"endTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:8:\"maxSpeed\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"in
  knots\";s:4:\"type\";s:6:\"number\";}s:9:\"spentFuel\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"in
  liters\";s:4:\"type\";s:6:\"number\";}s:12:\"startAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"startLat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:8:\"startLon\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"startTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}}}s:6:\"Server\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":17:{s:10:\"attributes\";O:8:\"stdClass\":0:{}s:7:\"bingKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"coordinateFormat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"deviceReadonly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"forceSettings\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"latitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:13:\"limitCommands\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"longitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"map\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"mapUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"poiLayer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"readonly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"registration\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"twelveHourFormat\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"zoom\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:10:\"Statistics\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:13:\"activeDevices\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"activeUsers\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"captureTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:16:\"messagesReceived\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:14:\"messagesStored\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"requests\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:4:\"User\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":21:{s:13:\"administrator\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"attributes\";O:8:\"stdClass\":0:{}s:16:\"coordinateFormat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"deviceLimit\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:14:\"deviceReadonly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"disabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"expirationTime\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"in
  IS0 8601 format. eg. `1963-11-22T18:30:00Z`\";s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"latitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:13:\"limitCommands\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"longitude\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"map\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"poiLayer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"readonly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"twelveHourFormat\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"userLimit\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"zoom\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}"
...
