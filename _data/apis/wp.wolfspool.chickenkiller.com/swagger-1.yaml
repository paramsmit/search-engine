---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:7:\"version\";s:3:\"1.0\";s:5:\"title\";s:25:\"ase
  LIQUID DIGITAL design\";}"
host: wp.wolfspool.chickenkiller.com/wpasecms
basePath: /wp-json
paths:
  /wp/v2/posts:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: after
        type: string
        in: query
        description: Limit response to resources published after a given ISO8601 compliant
          date.
        format: date-time
      - name: author
        type: array
        in: query
        description: Limit result set to posts assigned to specific authors.
        items:
          type: string
      - name: author_exclude
        type: array
        in: query
        description: Ensure result set excludes posts assigned to specific authors.
        items:
          type: string
      - name: before
        type: string
        in: query
        description: Limit response to resources published before a given ISO8601
          compliant date.
        format: date-time
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of items.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: desc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by object attribute.
        default: date
        enum:
        - date
        - relevance
        - id
        - include
        - title
        - slug
      - name: slug
        type: string
        in: query
        description: Limit result set to posts with a specific slug.
      - name: status
        type: string
        in: query
        description: Limit result set to posts assigned a specific status; can be
          comma-delimited list of status types.
        default: publish
        enum:
        - publish
        - future
        - draft
        - pending
        - private
        - trash
        - auto-draft
        - inherit
        - any
      - name: filter
        type: string
        in: query
        description: Use WP Query arguments to modify the response; private query
          vars require appropriate authorization.
      - name: categories
        type: array
        in: query
        description: Limit result set to all items that have the specified term assigned
          in the categories taxonomy.
        items:
          type: string
      - name: tags
        type: array
        in: query
        description: Limit result set to all items that have the specified term assigned
          in the tags taxonomy.
        items:
          type: string
      - name: sticky
        type: boolean
        in: query
        description: Limit result set to items that are sticky.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/post'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: excerpt
        type: string
        in: formData
        description: The excerpt for the object.
      - name: featured_media
        type: integer
        in: formData
        description: The id of the featured media for the object.
      - name: comment_status
        type: string
        in: formData
        description: Whether or not comments are open on the object.
        enum:
        - open
        - closed
      - name: ping_status
        type: string
        in: formData
        description: Whether or not the object can be pinged.
        enum:
        - open
        - closed
      - name: format
        type: string
        in: formData
        description: The format for the object.
        enum:
        - standard
        - aside
        - chat
        - gallery
        - link
        - image
        - quote
        - status
        - video
        - audio
      - name: sticky
        type: boolean
        in: formData
        description: Whether or not the object should be treated as sticky.
      - name: password
        type: string
        in: formData
        description: A password to protect access to the content and excerpt.
      - name: categories
        type: array
        in: formData
        description: The terms assigned to the object in the category taxonomy.
        items:
          type: string
      - name: tags
        type: array
        in: formData
        description: The terms assigned to the object in the post_tag taxonomy.
        items:
          type: string
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/post'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/post'
  /wp/v2/posts/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: password
        type: string
        in: query
        description: The password for the post if it is password protected.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/post'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: excerpt
        type: string
        in: formData
        description: The excerpt for the object.
      - name: featured_media
        type: integer
        in: formData
        description: The id of the featured media for the object.
      - name: comment_status
        type: string
        in: formData
        description: Whether or not comments are open on the object.
        enum:
        - open
        - closed
      - name: ping_status
        type: string
        in: formData
        description: Whether or not the object can be pinged.
        enum:
        - open
        - closed
      - name: format
        type: string
        in: formData
        description: The format for the object.
        enum:
        - standard
        - aside
        - chat
        - gallery
        - link
        - image
        - quote
        - status
        - video
        - audio
      - name: sticky
        type: boolean
        in: formData
        description: Whether or not the object should be treated as sticky.
      - name: password
        type: string
        in: formData
        description: A password to protect access to the content and excerpt.
      - name: categories
        type: array
        in: formData
        description: The terms assigned to the object in the category taxonomy.
        items:
          type: string
      - name: tags
        type: array
        in: formData
        description: The terms assigned to the object in the post_tag taxonomy.
        items:
          type: string
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/post'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Whether to bypass trash and force deletion.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/post'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/posts/{parent}/revisions:
    get:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/post-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/posts/{parent}/revisions/{id}:
    get:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/post-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: id
        type: string
        in: path
        required: true
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/post-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/pages:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: after
        type: string
        in: query
        description: Limit response to resources published after a given ISO8601 compliant
          date.
        format: date-time
      - name: author
        type: array
        in: query
        description: Limit result set to posts assigned to specific authors.
        items:
          type: string
      - name: author_exclude
        type: array
        in: query
        description: Ensure result set excludes posts assigned to specific authors.
        items:
          type: string
      - name: before
        type: string
        in: query
        description: Limit response to resources published before a given ISO8601
          compliant date.
        format: date-time
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: menu_order
        type: integer
        in: query
        description: Limit result set to resources with a specific menu_order value.
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of items.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: desc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by object attribute.
        default: date
        enum:
        - date
        - relevance
        - id
        - include
        - title
        - slug
        - menu_order
      - name: parent
        type: array
        in: query
        description: Limit result set to those of particular parent ids.
        items:
          type: string
      - name: parent_exclude
        type: array
        in: query
        description: Limit result set to all items except those of a particular parent
          id.
        items:
          type: string
      - name: slug
        type: string
        in: query
        description: Limit result set to posts with a specific slug.
      - name: status
        type: string
        in: query
        description: Limit result set to posts assigned a specific status; can be
          comma-delimited list of status types.
        default: publish
        enum:
        - publish
        - future
        - draft
        - pending
        - private
        - trash
        - auto-draft
        - inherit
        - any
      - name: filter
        type: string
        in: query
        description: Use WP Query arguments to modify the response; private query
          vars require appropriate authorization.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/page'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: parent
        type: integer
        in: formData
        description: The id for the parent of the object.
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: excerpt
        type: string
        in: formData
        description: The excerpt for the object.
      - name: featured_media
        type: integer
        in: formData
        description: The id of the featured media for the object.
      - name: comment_status
        type: string
        in: formData
        description: Whether or not comments are open on the object.
        enum:
        - open
        - closed
      - name: ping_status
        type: string
        in: formData
        description: Whether or not the object can be pinged.
        enum:
        - open
        - closed
      - name: menu_order
        type: integer
        in: formData
        description: The order of the object in relation to other object of its type.
      - name: template
        type: string
        in: formData
        description: The theme file to use to display the object.
        enum:
        - full-width.php
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/page'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/page'
  /wp/v2/pages/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: password
        type: string
        in: query
        description: The password for the post if it is password protected.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/page'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: parent
        type: integer
        in: formData
        description: The id for the parent of the object.
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: excerpt
        type: string
        in: formData
        description: The excerpt for the object.
      - name: featured_media
        type: integer
        in: formData
        description: The id of the featured media for the object.
      - name: comment_status
        type: string
        in: formData
        description: Whether or not comments are open on the object.
        enum:
        - open
        - closed
      - name: ping_status
        type: string
        in: formData
        description: Whether or not the object can be pinged.
        enum:
        - open
        - closed
      - name: menu_order
        type: integer
        in: formData
        description: The order of the object in relation to other object of its type.
      - name: template
        type: string
        in: formData
        description: The theme file to use to display the object.
        enum:
        - full-width.php
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/page'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Whether to bypass trash and force deletion.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/page'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/pages/{parent}/revisions:
    get:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/page-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/pages/{parent}/revisions/{id}:
    get:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/page-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: id
        type: string
        in: path
        required: true
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/page-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/media:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: after
        type: string
        in: query
        description: Limit response to resources published after a given ISO8601 compliant
          date.
        format: date-time
      - name: author
        type: array
        in: query
        description: Limit result set to posts assigned to specific authors.
        items:
          type: string
      - name: author_exclude
        type: array
        in: query
        description: Ensure result set excludes posts assigned to specific authors.
        items:
          type: string
      - name: before
        type: string
        in: query
        description: Limit response to resources published before a given ISO8601
          compliant date.
        format: date-time
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of items.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: desc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by object attribute.
        default: date
        enum:
        - date
        - relevance
        - id
        - include
        - title
        - slug
      - name: parent
        type: array
        in: query
        description: Limit result set to those of particular parent ids.
        items:
          type: string
      - name: parent_exclude
        type: array
        in: query
        description: Limit result set to all items except those of a particular parent
          id.
        items:
          type: string
      - name: slug
        type: string
        in: query
        description: Limit result set to posts with a specific slug.
      - name: status
        type: string
        in: query
        description: Limit result set to posts assigned a specific status; can be
          comma-delimited list of status types.
        default: inherit
        enum:
        - inherit
        - private
        - trash
      - name: filter
        type: string
        in: query
        description: Use WP Query arguments to modify the response; private query
          vars require appropriate authorization.
      - name: media_type
        type: string
        in: query
        description: Limit result set to attachments of a particular media type.
        enum:
        - image
        - video
        - text
        - application
        - audio
      - name: mime_type
        type: string
        in: query
        description: Limit result set to attachments of a particular mime type.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/attachment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: comment_status
        type: string
        in: formData
        description: Whether or not comments are open on the object.
        enum:
        - open
        - closed
      - name: ping_status
        type: string
        in: formData
        description: Whether or not the object can be pinged.
        enum:
        - open
        - closed
      - name: alt_text
        type: string
        in: formData
        description: Alternative text to display when resource is not displayed.
      - name: caption
        type: string
        in: formData
        description: The caption for the resource.
      - name: description
        type: string
        in: formData
        description: The description for the resource.
      - name: post
        type: integer
        in: formData
        description: The id for the associated post of the resource.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/attachment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/attachment'
  /wp/v2/media/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: password
        type: string
        in: query
        description: The password for the post if it is password protected.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/attachment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: comment_status
        type: string
        in: formData
        description: Whether or not comments are open on the object.
        enum:
        - open
        - closed
      - name: ping_status
        type: string
        in: formData
        description: Whether or not the object can be pinged.
        enum:
        - open
        - closed
      - name: alt_text
        type: string
        in: formData
        description: Alternative text to display when resource is not displayed.
      - name: caption
        type: string
        in: formData
        description: The caption for the resource.
      - name: description
        type: string
        in: formData
        description: The description for the resource.
      - name: post
        type: integer
        in: formData
        description: The id for the associated post of the resource.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/attachment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Whether to bypass trash and force deletion.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/attachment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/sample-user:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: after
        type: string
        in: query
        description: Limit response to resources published after a given ISO8601 compliant
          date.
        format: date-time
      - name: author
        type: array
        in: query
        description: Limit result set to posts assigned to specific authors.
        items:
          type: string
      - name: author_exclude
        type: array
        in: query
        description: Ensure result set excludes posts assigned to specific authors.
        items:
          type: string
      - name: before
        type: string
        in: query
        description: Limit response to resources published before a given ISO8601
          compliant date.
        format: date-time
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of items.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: desc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by object attribute.
        default: date
        enum:
        - date
        - relevance
        - id
        - include
        - title
        - slug
      - name: slug
        type: string
        in: query
        description: Limit result set to posts with a specific slug.
      - name: status
        type: string
        in: query
        description: Limit result set to posts assigned a specific status; can be
          comma-delimited list of status types.
        default: publish
        enum:
        - publish
        - future
        - draft
        - pending
        - private
        - trash
        - auto-draft
        - inherit
        - any
      - name: filter
        type: string
        in: query
        description: Use WP Query arguments to modify the response; private query
          vars require appropriate authorization.
      - name: categories
        type: array
        in: query
        description: Limit result set to all items that have the specified term assigned
          in the categories taxonomy.
        items:
          type: string
      - name: tags
        type: array
        in: query
        description: Limit result set to all items that have the specified term assigned
          in the tags taxonomy.
        items:
          type: string
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/sample-user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: categories
        type: array
        in: formData
        description: The terms assigned to the object in the category taxonomy.
        items:
          type: string
      - name: tags
        type: array
        in: formData
        description: The terms assigned to the object in the post_tag taxonomy.
        items:
          type: string
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user'
  /wp/v2/sample-user/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: password
        type: string
        in: query
        description: The password for the post if it is password protected.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: date
        type: string
        in: formData
        description: The date the object was published, in the site's timezone.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published, as GMT.
        format: date-time
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the object unique to its type.
      - name: status
        type: string
        in: formData
        description: A named status for the object.
        enum:
        - publish
        - future
        - draft
        - pending
        - private
      - name: title
        type: string
        in: formData
        description: The title for the object.
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: author
        type: integer
        in: formData
        description: The id for the author of the object.
      - name: categories
        type: array
        in: formData
        description: The terms assigned to the object in the category taxonomy.
        items:
          type: string
      - name: tags
        type: array
        in: formData
        description: The terms assigned to the object in the post_tag taxonomy.
        items:
          type: string
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Whether to bypass trash and force deletion.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/sample-user/{parent}/revisions:
    get:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/sample-user-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/sample-user/{parent}/revisions/{id}:
    get:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: parent
        type: string
        in: path
        required: true
      - name: id
        type: string
        in: path
        required: true
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/sample-user-revision'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/types:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/type'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/types/{type}:
    get:
      parameters:
      - name: type
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/type'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/statuses:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/status'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/statuses/{status}:
    get:
      parameters:
      - name: status
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/status'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/taxonomies:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: type
        type: string
        in: query
        description: Limit results to resources associated with a specific post type.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/taxonomy'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/taxonomies/{taxonomy}:
    get:
      parameters:
      - name: taxonomy
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/taxonomy'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/categories:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: asc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by resource attribute.
        default: name
        enum:
        - id
        - include
        - name
        - slug
        - term_group
        - description
        - count
      - name: hide_empty
        type: boolean
        in: query
        description: Whether to hide resources not assigned to any posts.
      - name: parent
        type: integer
        in: query
        description: Limit result set to resources assigned to a specific parent.
      - name: post
        type: integer
        in: query
        description: Limit result set to resources assigned to a specific post.
      - name: slug
        type: string
        in: query
        description: Limit result set to resources with a specific slug.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/category'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: description
        type: string
        in: formData
        description: HTML description of the resource.
      - name: name
        type: string
        in: formData
        description: HTML title for the resource.
        required: true
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the resource unique to its type.
      - name: parent
        type: integer
        in: formData
        description: The id for the parent of the resource.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/category'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/category'
  /wp/v2/categories/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/category'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: description
        type: string
        in: formData
        description: HTML description of the resource.
      - name: name
        type: string
        in: formData
        description: HTML title for the resource.
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the resource unique to its type.
      - name: parent
        type: integer
        in: formData
        description: The id for the parent of the resource.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/category'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Required to be true, as resource does not support trashing.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/category'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/tags:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of items.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: asc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by resource attribute.
        default: name
        enum:
        - id
        - include
        - name
        - slug
        - term_group
        - description
        - count
      - name: hide_empty
        type: boolean
        in: query
        description: Whether to hide resources not assigned to any posts.
      - name: post
        type: integer
        in: query
        description: Limit result set to resources assigned to a specific post.
      - name: slug
        type: string
        in: query
        description: Limit result set to resources with a specific slug.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/tag'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: description
        type: string
        in: formData
        description: HTML description of the resource.
      - name: name
        type: string
        in: formData
        description: HTML title for the resource.
        required: true
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the resource unique to its type.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/tag'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/tag'
  /wp/v2/tags/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/tag'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: description
        type: string
        in: formData
        description: HTML description of the resource.
      - name: name
        type: string
        in: formData
        description: HTML title for the resource.
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the resource unique to its type.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/tag'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Required to be true, as resource does not support trashing.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/tag'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/users:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of items.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: asc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by object attribute.
        default: name
        enum:
        - id
        - include
        - name
        - registered_date
        - slug
        - email
        - url
      - name: slug
        type: string
        in: query
        description: Limit result set to resources with a specific slug.
      - name: roles
        type: array
        in: query
        description: Limit result set to resources matching at least one specific
          role provided. Accepts csv list or single role.
        items:
          type: string
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: username
        type: string
        in: formData
        description: Login name for the resource.
        required: true
      - name: name
        type: string
        in: formData
        description: Display name for the resource.
      - name: first_name
        type: string
        in: formData
        description: First name for the resource.
      - name: last_name
        type: string
        in: formData
        description: Last name for the resource.
      - name: email
        type: string
        in: formData
        description: The email address for the resource.
        format: email
        required: true
      - name: url
        type: string
        in: formData
        description: URL of the resource.
        format: uri
      - name: description
        type: string
        in: formData
        description: Description of the resource.
      - name: nickname
        type: string
        in: formData
        description: The nickname for the resource.
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the resource.
      - name: roles
        type: array
        in: formData
        description: Roles assigned to the resource.
        items:
          type: string
      - name: password
        type: string
        in: formData
        description: Password for the resource (never included).
        required: true
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/user'
  /wp/v2/users/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: username
        type: string
        in: formData
        description: Login name for the resource.
      - name: name
        type: string
        in: formData
        description: Display name for the resource.
      - name: first_name
        type: string
        in: formData
        description: First name for the resource.
      - name: last_name
        type: string
        in: formData
        description: Last name for the resource.
      - name: email
        type: string
        in: formData
        description: The email address for the resource.
        format: email
      - name: url
        type: string
        in: formData
        description: URL of the resource.
        format: uri
      - name: description
        type: string
        in: formData
        description: Description of the resource.
      - name: nickname
        type: string
        in: formData
        description: The nickname for the resource.
      - name: slug
        type: string
        in: formData
        description: An alphanumeric identifier for the resource.
      - name: roles
        type: array
        in: formData
        description: Roles assigned to the resource.
        items:
          type: string
      - name: password
        type: string
        in: formData
        description: Password for the resource (never included).
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Required to be true, as resource does not support trashing.
      - name: reassign
        type: string
        in: query
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/user'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /wp/v2/comments:
    get:
      parameters:
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      - name: page
        type: integer
        in: query
        description: Current page of the collection.
        default: 1
        minimum: 1
        format: number
      - name: per_page
        type: integer
        in: query
        description: Maximum number of items to be returned in result set.
        default: 10
        minimum: 1
        format: number
        maximum: 100
      - name: search
        type: string
        in: query
        description: Limit results to those matching a string.
      - name: after
        type: string
        in: query
        description: Limit response to resources published after a given ISO8601 compliant
          date.
        format: date-time
      - name: author
        type: array
        in: query
        description: Limit result set to comments assigned to specific user ids. Requires
          authorization.
        items:
          type: string
      - name: author_exclude
        type: array
        in: query
        description: Ensure result set excludes comments assigned to specific user
          ids. Requires authorization.
        items:
          type: string
      - name: author_email
        type: string
        in: query
        description: Limit result set to that from a specific author email. Requires
          authorization.
        format: email
      - name: before
        type: string
        in: query
        description: Limit response to resources published before a given ISO8601
          compliant date.
        format: date-time
      - name: exclude
        type: array
        in: query
        description: Ensure result set excludes specific ids.
        items:
          type: string
      - name: include
        type: array
        in: query
        description: Limit result set to specific ids.
        items:
          type: string
      - name: karma
        type: integer
        in: query
        description: Limit result set to that of a particular comment karma. Requires
          authorization.
      - name: offset
        type: integer
        in: query
        description: Offset the result set by a specific number of comments.
      - name: order
        type: string
        in: query
        description: Order sort attribute ascending or descending.
        default: desc
        enum:
        - asc
        - desc
      - name: orderby
        type: string
        in: query
        description: Sort collection by object attribute.
        default: date_gmt
        enum:
        - date
        - date_gmt
        - id
        - include
        - post
        - parent
        - type
      - name: parent
        type: array
        in: query
        description: Limit result set to resources of specific parent ids.
        items:
          type: string
      - name: parent_exclude
        type: array
        in: query
        description: Ensure result set excludes specific parent ids.
        items:
          type: string
      - name: post
        type: array
        in: query
        description: Limit result set to resources assigned to specific post ids.
        items:
          type: string
      - name: status
        type: string
        in: query
        description: Limit result set to comments assigned a specific status. Requires
          authorization.
        default: approve
      - name: type
        type: string
        in: query
        description: Limit result set to comments assigned a specific type. Requires
          authorization.
        default: comment
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/comment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: author
        type: integer
        in: formData
        description: The id of the user object, if author was a user.
      - name: author_email
        type: string
        in: formData
        description: Email address for the object author.
        format: email
      - name: author_ip
        type: string
        in: formData
        description: IP address for the object author.
        format: ipv4
        default: 127.0.0.1
      - name: author_name
        type: string
        in: formData
        description: Display name for the object author.
      - name: author_url
        type: string
        in: formData
        description: URL for the object author.
        format: uri
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: date
        type: string
        in: formData
        description: The date the object was published.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published as GMT.
        format: date-time
      - name: karma
        type: integer
        in: formData
        description: Karma for the object.
      - name: parent
        type: integer
        in: formData
        description: The id for the parent of the object.
      - name: post
        type: integer
        in: formData
        description: The id of the associated post object.
      - name: status
        type: string
        in: formData
        description: State of the object.
      - name: type
        type: string
        in: formData
        description: Type of Comment for the object.
        default: comment
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/comment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/comment'
  /wp/v2/comments/{id}:
    get:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: context
        type: string
        in: query
        description: Scope under which the request is made; determines fields present
          in response.
        default: view
        enum:
        - view
        - embed
        - edit
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/comment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    post:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: author
        type: integer
        in: formData
        description: The id of the user object, if author was a user.
      - name: author_email
        type: string
        in: formData
        description: Email address for the object author.
        format: email
      - name: author_ip
        type: string
        in: formData
        description: IP address for the object author.
        format: ipv4
      - name: author_name
        type: string
        in: formData
        description: Display name for the object author.
      - name: author_url
        type: string
        in: formData
        description: URL for the object author.
        format: uri
      - name: content
        type: string
        in: formData
        description: The content for the object.
      - name: date
        type: string
        in: formData
        description: The date the object was published.
        format: date-time
      - name: date_gmt
        type: string
        in: formData
        description: The date the object was published as GMT.
        format: date-time
      - name: karma
        type: integer
        in: formData
        description: Karma for the object.
      - name: parent
        type: integer
        in: formData
        description: The id for the parent of the object.
      - name: post
        type: integer
        in: formData
        description: The id of the associated post object.
      - name: status
        type: string
        in: formData
        description: State of the object.
      - name: type
        type: string
        in: formData
        description: Type of Comment for the object.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/comment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      parameters:
      - name: id
        type: string
        in: path
        required: true
      - name: force
        type: string
        in: query
        description: Whether to bypass trash and force deletion.
      security:
      - cookieAuth: []
      - oauth:
        - basic
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/comment'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":15:{s:5:\"error\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}}s:4:\"post\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":22:{s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  date the object was published, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"URL
  to the object.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  date the object was last modified, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  named status for the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:7:\"publish\";i:1;s:6:\"future\";i:2;s:5:\"draft\";i:3;s:7:\"pending\";i:4;s:7:\"private\";}}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Type
  of Post for the object.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the content is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:7:\"excerpt\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  excerpt for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Excerpt
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  excerpt for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the excerpt is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:14:\"featured_media\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"The
  id of the featured media for the object.\";s:4:\"type\";s:7:\"integer\";}s:14:\"comment_status\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Whether
  or not comments are open on the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"open\";i:1;s:6:\"closed\";}}s:11:\"ping_status\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Whether
  or not the object can be pinged.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"open\";i:1;s:6:\"closed\";}}s:6:\"format\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  format for the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:10:{i:0;s:8:\"standard\";i:1;s:5:\"aside\";i:2;s:4:\"chat\";i:3;s:7:\"gallery\";i:4;s:4:\"link\";i:5;s:5:\"image\";i:6;s:5:\"quote\";i:7;s:6:\"status\";i:8;s:5:\"video\";i:9;s:5:\"audio\";}}s:6:\"sticky\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"Whether
  or not the object should be treated as sticky.\";s:4:\"type\";s:7:\"boolean\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"A
  password to protect access to the content and excerpt.\";s:4:\"type\";s:6:\"string\";}s:10:\"categories\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  terms assigned to the object in the category taxonomy.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"tags\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  terms assigned to the object in the post_tag taxonomy.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:13:\"post-revision\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"The
  date the object was published.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  date the object was last modified.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the parent of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the content is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:7:\"excerpt\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  excerpt for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Excerpt
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  excerpt for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the excerpt is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}}}s:4:\"page\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":20:{s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  date the object was published, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"URL
  to the object.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  date the object was last modified, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  named status for the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:7:\"publish\";i:1;s:6:\"future\";i:2;s:5:\"draft\";i:3;s:7:\"pending\";i:4;s:7:\"private\";}}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Type
  of Post for the object.\";s:4:\"type\";s:6:\"string\";}s:6:\"parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the parent of the object.\";s:4:\"type\";s:7:\"integer\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the content is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:7:\"excerpt\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  excerpt for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Excerpt
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  excerpt for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the excerpt is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:14:\"featured_media\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"The
  id of the featured media for the object.\";s:4:\"type\";s:7:\"integer\";}s:14:\"comment_status\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Whether
  or not comments are open on the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"open\";i:1;s:6:\"closed\";}}s:11:\"ping_status\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Whether
  or not the object can be pinged.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"open\";i:1;s:6:\"closed\";}}s:10:\"menu_order\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"The
  order of the object in relation to other object of its type.\";s:4:\"type\";s:7:\"integer\";}s:8:\"template\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"The
  theme file to use to display the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:1:{i:0;s:14:\"full-width.php\";}}}}s:13:\"page-revision\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"The
  date the object was published.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  date the object was last modified.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the parent of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the content is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:7:\"excerpt\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  excerpt for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Excerpt
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  excerpt for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the excerpt is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}}}s:10:\"attachment\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":22:{s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  date the object was published, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"URL
  to the object.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  date the object was last modified, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  named status for the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:7:\"publish\";i:1;s:6:\"future\";i:2;s:5:\"draft\";i:3;s:7:\"pending\";i:4;s:7:\"private\";}}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Type
  of Post for the object.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:14:\"comment_status\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Whether
  or not comments are open on the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"open\";i:1;s:6:\"closed\";}}s:11:\"ping_status\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Whether
  or not the object can be pinged.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"open\";i:1;s:6:\"closed\";}}s:8:\"alt_text\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"Alternative
  text to display when resource is not displayed.\";s:4:\"type\";s:6:\"string\";}s:7:\"caption\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  caption for the resource.\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  description for the resource.\";s:4:\"type\";s:6:\"string\";}s:10:\"media_type\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"Type
  of resource.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:5:\"image\";i:1;s:4:\"file\";}}s:9:\"mime_type\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"Mime
  type of resource.\";s:4:\"type\";s:6:\"string\";}s:13:\"media_details\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"Details
  about the resource file, specific to its type.\";s:4:\"type\";s:6:\"object\";}s:4:\"post\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"The
  id for the associated post of the resource.\";s:4:\"type\";s:7:\"integer\";}s:10:\"source_url\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"URL
  to the original resource file.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}}}s:11:\"sample-user\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":15:{s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  date the object was published, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"URL
  to the object.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  date the object was last modified, in the site's timezone.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  named status for the object.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:7:\"publish\";i:1;s:6:\"future\";i:2;s:5:\"draft\";i:3;s:7:\"pending\";i:4;s:7:\"private\";}}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Type
  of Post for the object.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the content is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:10:\"categories\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  terms assigned to the object in the category taxonomy.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"tags\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  terms assigned to the object in the post_tag taxonomy.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:20:\"sample-user-revision\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the author of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"The
  date the object was published.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  date the object was published, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"guid\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  globally unique identifier for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"GUID
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"GUID
  for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  date the object was last modified.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"modified_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  date the object was last modified, as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the parent of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"An
  alphanumeric identifier for the object unique to its type.\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The
  title for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Title
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"HTML
  title for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the content is protected with a password.\";s:4:\"type\";s:7:\"boolean\";}}}}}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:12:\"capabilities\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"All
  capabilities used by the resource.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"A
  human-readable description of the resource.\";s:4:\"type\";s:6:\"string\";}s:12:\"hierarchical\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  or not the resource should have children.\";s:4:\"type\";s:7:\"boolean\";}s:6:\"labels\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"Human-readable
  labels for the resource for various contexts.\";s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  title for the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"An
  alphanumeric identifier for the resource.\";s:4:\"type\";s:6:\"string\";}}}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  title for the resource.\";s:4:\"type\";s:6:\"string\";}s:7:\"private\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Whether
  posts with this resource should be private.\";s:4:\"type\";s:7:\"boolean\";}s:9:\"protected\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Whether
  posts with this resource should be protected.\";s:4:\"type\";s:7:\"boolean\";}s:6:\"public\";O:8:\"stdClass\":2:{s:11:\"description\";s:76:\"Whether
  posts of this resource should be shown in the front end of the site.\";s:4:\"type\";s:7:\"boolean\";}s:9:\"queryable\";O:8:\"stdClass\":2:{s:11:\"description\";s:62:\"Whether
  posts with this resource should be publicly-queryable.\";s:4:\"type\";s:7:\"boolean\";}s:12:\"show_in_list\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"Whether
  to include posts in the edit listing for their post type.\";s:4:\"type\";s:7:\"boolean\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"An
  alphanumeric identifier for the resource.\";s:4:\"type\";s:6:\"string\";}}}s:8:\"taxonomy\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:12:\"capabilities\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"All
  capabilities used by the resource.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"A
  human-readable description of the resource.\";s:4:\"type\";s:6:\"string\";}s:12:\"hierarchical\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  or not the resource should have children.\";s:4:\"type\";s:7:\"boolean\";}s:6:\"labels\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"Human-readable
  labels for the resource for various contexts.\";s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  title for the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"An
  alphanumeric identifier for the resource.\";s:4:\"type\";s:6:\"string\";}s:10:\"show_cloud\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Whether
  or not the term cloud should be displayed.\";s:4:\"type\";s:7:\"boolean\";}s:5:\"types\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Types
  associated with resource.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"category\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Unique
  identifier for the resource.\";s:4:\"type\";s:7:\"integer\";}s:5:\"count\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Number
  of published posts for the resource.\";s:4:\"type\";s:7:\"integer\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"HTML
  description of the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"URL
  to the resource.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"HTML
  title for the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"An
  alphanumeric identifier for the resource unique to its type.\";s:4:\"type\";s:6:\"string\";}s:8:\"taxonomy\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Type
  attribution for the resource.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:7:{i:0;s:8:\"category\";i:1;s:8:\"post_tag\";i:2;s:8:\"nav_menu\";i:3;s:13:\"link_category\";i:4;s:11:\"post_format\";i:5;s:7:\"ngg_tag\";i:6;s:16:\"tribe_events_cat\";}}s:6:\"parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:38:\"The
  id for the parent of the resource.\";s:4:\"type\";s:7:\"integer\";}}}s:3:\"tag\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Unique
  identifier for the resource.\";s:4:\"type\";s:7:\"integer\";}s:5:\"count\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Number
  of published posts for the resource.\";s:4:\"type\";s:7:\"integer\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"HTML
  description of the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"URL
  to the resource.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"HTML
  title for the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"An
  alphanumeric identifier for the resource unique to its type.\";s:4:\"type\";s:6:\"string\";}s:8:\"taxonomy\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Type
  attribution for the resource.\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:7:{i:0;s:8:\"category\";i:1;s:8:\"post_tag\";i:2;s:8:\"nav_menu\";i:3;s:13:\"link_category\";i:4;s:11:\"post_format\";i:5;s:7:\"ngg_tag\";i:6;s:16:\"tribe_events_cat\";}}}}s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":17:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Unique
  identifier for the resource.\";s:4:\"type\";s:7:\"integer\";}s:8:\"username\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Login
  name for the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"Display
  name for the resource.\";s:4:\"type\";s:6:\"string\";}s:10:\"first_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"First
  name for the resource.\";s:4:\"type\";s:6:\"string\";}s:9:\"last_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Last
  name for the resource.\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"The
  email address for the resource.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:3:\"url\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"URL
  of the resource.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"Description
  of the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"Author
  URL to the resource.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:8:\"nickname\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  nickname for the resource.\";s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"An
  alphanumeric identifier for the resource.\";s:4:\"type\";s:6:\"string\";}s:15:\"registered_date\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Registration
  date for the resource.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"roles\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Roles
  assigned to the resource.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Password
  for the resource (never included).\";s:4:\"type\";s:6:\"string\";}s:12:\"capabilities\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"All
  capabilities assigned to the resource.\";s:4:\"type\";s:6:\"object\";}s:18:\"extra_capabilities\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"Any
  extra capabilities assigned to the resource.\";s:4:\"type\";s:6:\"object\";}s:11:\"avatar_urls\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Avatar
  URLs for the resource.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"24\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Avatar
  URL with image size of 24 pixels.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:2:\"48\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Avatar
  URL with image size of 48 pixels.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:2:\"96\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Avatar
  URL with image size of 96 pixels.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}}}}}s:7:\"comment\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":17:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier for the object.\";s:4:\"type\";s:7:\"integer\";}s:6:\"author\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"The
  id of the user object, if author was a user.\";s:4:\"type\";s:7:\"integer\";}s:12:\"author_email\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Email
  address for the object author.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:9:\"author_ip\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"IP
  address for the object author.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"ipv4\";}s:11:\"author_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Display
  name for the object author.\";s:4:\"type\";s:6:\"string\";}s:10:\"author_url\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"URL
  for the object author.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:17:\"author_user_agent\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"User
  agent for the object author.\";s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"The
  content for the object.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"raw\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Content
  for the object, as it exists in the database.\";s:4:\"type\";s:6:\"string\";}s:8:\"rendered\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"HTML
  content for the object, transformed for display.\";s:4:\"type\";s:6:\"string\";}}}s:4:\"date\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"The
  date the object was published.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"date_gmt\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"The
  date the object was published as GMT.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"karma\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"Karma
  for the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"link\";O:8:\"stdClass\":3:{s:11:\"description\";s:18:\"URL
  to the object.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:6:\"parent\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  id for the parent of the object.\";s:4:\"type\";s:7:\"integer\";}s:4:\"post\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"The
  id of the associated post object.\";s:4:\"type\";s:7:\"integer\";}s:6:\"status\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"State
  of the object.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Type
  of Comment for the object.\";s:4:\"type\";s:6:\"string\";s:7:\"default\";s:7:\"comment\";}s:18:\"author_avatar_urls\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Avatar
  URLs for the object author.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"24\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Avatar
  URL with image size of 24 pixels.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:2:\"48\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Avatar
  URL with image size of 48 pixels.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:2:\"96\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Avatar
  URL with image size of 96 pixels.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}}}}}}"
...
