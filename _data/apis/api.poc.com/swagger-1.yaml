---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"This is the api
  POC\";s:7:\"version\";s:5:\"0.1.0\";s:5:\"title\";s:10:\"Go POC API\";}"
host: api.poc.com
basePath: /poc
paths:
  /*:
    options:
      operationId: optionsAllow
      security: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
  /signin:
    post:
      tags:
      - user
      summary: login based on email+password
      operationId: generateToken
      security: []
      parameters:
      - in: body
        name: credentials
        description: User email and password to login
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      responses:
        200:
          description: login
          schema:
            properties:
              access_token:
                type: string
                format: string
        default:
          description: error
          schema:
            $ref: '#/definitions/GeneralError'
  /signup:
    post:
      tags:
      - user
      summary: Register a user
      description: Register a user on plataform
      operationId: createUser
      security: []
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: User data to register
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid parameters supplied
          schema:
            $ref: '#/definitions/GeneralError'
  /me:
    get:
      tags:
      - user
      summary: Get a user data
      description: Get a User registry and preferences
      operationId: getPreferences
      security:
      - Token: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid id supplied
          schema:
            $ref: '#/definitions/GeneralError'
        404:
          description: Partner not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /otp/status:
    get:
      tags:
      - otp
      summary: Generate users's OTP status
      description: Generate uses's OTP status
      operationId: otpStatus
      security:
      - Token: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            type: boolean
        default:
          description: error
          schema:
            $ref: '#/definitions/GeneralError'
  /otp/code:
    get:
      tags:
      - otp
      summary: Generate users's OTP code
      description: Generate users's OTP code
      operationId: generateOtpCode
      security:
      - Token: []
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            type: string
        default:
          description: error
          schema:
            $ref: '#/definitions/GeneralError'
  /otp/image:
    get:
      tags:
      - otp
      summary: Generate users's OTP image
      description: Generate user's OTP image, based on backend code
      operationId: generateOtpImage
      security:
      - Token: []
      produces:
      - application/octet-stream
      responses:
        200:
          description: Successful operation
          schema:
            type: file
        default:
          description: error
          schema:
            $ref: '#/definitions/GeneralError'
  /otp/confirm:
    post:
      tags:
      - otp
      summary: Confirm OTP code
      description: Confirm OTP code
      operationId: confirmOtpKey
      security:
      - Token: []
      parameters:
      - in: body
        name: passcode
        description: Passcode key
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
        default:
          description: error
          schema:
            $ref: '#/definitions/GeneralError'
  /products:
    get:
      tags:
      - products
      summary: Get all products
      description: Get all products by
      operationId: getProducts
      security: []
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        400:
          description: Invalid id supplied
          schema:
            $ref: '#/definitions/GeneralError'
        404:
          description: Partner not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /product:
    post:
      tags:
      - products
      summary: Create new fee entry
      description: Create new product entry
      operationId: CreateProduct
      security:
      - Token: []
      parameters:
      - in: body
        name: product
        description: New product
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Product'
        default:
          description: error
          schema:
            $ref: '#/definitions/GeneralError'
produces:
- application/json
- application/octet-stream
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":5:{s:12:\"GeneralError\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:3:\"int\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"NotFoundError\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:7:\"message\";i:1;s:4:\"code\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:3:\"int\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"User\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:5:\"email\";i:2;s:8:\"language\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"language\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:2:\"EN\";i:1;s:2:\"PT\";i:2;s:2:\"ES\";}}}}s:11:\"Credentials\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:8:\"password\";}}}s:7:\"Product\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:5:\"title\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:3:\"car\";i:1;s:4:\"moto\";i:2;s:8:\"airplane\";i:3;s:4:\"navy\";}}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}}"
...
