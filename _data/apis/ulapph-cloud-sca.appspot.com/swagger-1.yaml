---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:119:\"This is API server
  for the Shopping Cart.  You can find out more at [http://www.shopping.com](http://www.shopping.com).\";s:7:\"version\";s:5:\"0.0.1\";s:5:\"title\";s:22:\"SHOPPING
  CART REST API\";s:14:\"termsOfService\";s:30:\"http://www.shopping.com/terms/\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:25:\"api-team@www.shopping.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: ulapph-cloud-sca.appspot.com
basePath: /
paths:
  /products:
    post:
      tags:
      - products
      summary: addProducts() - Adds new product to the catalog
      description: This adds a new product item on the catalog
      operationId: addProducts
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The product object to be added to catalog
        required: true
        schema:
          $ref: '#/definitions/Products'
      responses:
        201:
          description: Product item added to catalog
        400:
          description: Bad Request
      deprecated: false
    get:
      tags:
      - products
      summary: getProducts() - Get list of products from catalog
      description: This gets all available products from catalog
      operationId: getProducts
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The product object to be retrieved
        required: true
        schema:
          $ref: '#/definitions/Products'
      responses:
        200:
          description: Products found from catalog
          schema:
            $ref: '#/definitions/Products'
        400:
          description: Bad Request
      deprecated: false
    delete:
      tags:
      - products
      summary: deleteProducts() - Delete product(s) from catalog
      description: This deletes product(s) from catalog
      operationId: deleteProducts
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The product object to be deleted
        required: true
        schema:
          $ref: '#/definitions/Products'
      responses:
        200:
          description: Products deleted from catalog
          schema:
            $ref: '#/definitions/Products'
        400:
          description: Bad Request
      deprecated: false
  /cart:
    post:
      tags:
      - cart
      summary: addItemToCart() - Adds new item to the cart
      description: This adds a new item to the cart
      operationId: addItemToCart
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The item(s) to be added to the cart
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        200:
          description: Item added to cart
          schema:
            $ref: '#/definitions/Products'
        400:
          description: Bad Request
      deprecated: false
    get:
      tags:
      - cart
      summary: getItemsFromCart() - Get list of items currently in cart
      description: This gets all available items in cart
      operationId: getItemsFromCart
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The product object to be added
        required: true
        schema:
          $ref: '#/definitions/Products'
      responses:
        200:
          description: Cart items found
          schema:
            $ref: '#/definitions/Cart'
        400:
          description: Bad Request
      deprecated: false
    delete:
      tags:
      - cart
      summary: deleteItemsFromCart() - Delete item(s) currently in cart
      description: This delete item(s) in cart
      operationId: deleteItemsFromCart
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The item(s) to be deleted from cart
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        200:
          description: Cart items deleted
          schema:
            $ref: '#/definitions/Cart'
        400:
          description: Bad Request
      deprecated: false
  /rules:
    post:
      tags:
      - rules
      summary: addRules() - Adds new rule to the catalog
      description: This adds a new rule item on the catalog
      operationId: addRules
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The rule object to be added to catalog
        required: true
        schema:
          $ref: '#/definitions/Rules'
      responses:
        201:
          description: Product item added to catalog
        400:
          description: Bad Request
      deprecated: false
    get:
      tags:
      - rules
      summary: getRules() - Get list of rules from catalog
      description: This gets all available rules from catalog
      operationId: getRules
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The rule object to be retrieved
        required: true
        schema:
          $ref: '#/definitions/Rules'
      responses:
        200:
          description: Rules found from catalog
          schema:
            $ref: '#/definitions/Rules'
        400:
          description: Bad Request
      deprecated: false
    delete:
      tags:
      - rules
      summary: deleteRules() - Delete rule(s) from catalog
      description: This deletes rule(s) from catalog
      operationId: deleteRules
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: The rule object to be deleted
        required: true
        schema:
          $ref: '#/definitions/Rules'
      responses:
        200:
          description: Rules deleted from catalog
          schema:
            $ref: '#/definitions/Rules'
        400:
          description: Bad Request
      deprecated: false
  /process:
    get:
      tags:
      - totals
      summary: computeCartTotal() - Compute total of all items in cart
      description: This computes total amount of all items in cart
      operationId: computeCartTotal
      produces:
      - application/xml
      - application/json
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: query
        name: promo_code
        description: The optional promo code to be considered in computing totals
        type: string
      responses:
        200:
          description: Cart processed successfully
          schema:
            $ref: '#/definitions/CartProc'
        400:
          description: Bad Request
      deprecated: false
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":3:{s:8:\"Products\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"price\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:7:\"float64\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"Products\";}}s:4:\"Cart\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"price\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:7:\"float64\";}s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"Cart\";}}s:8:\"CartProc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"total\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:7:\"float64\";}s:5:\"rules\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"current\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:6:\"schema\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Cart\";}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"CartProc\";}}}"
...
