---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:11:\"description\";s:20:\"A basic products
  API\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:12:\"myRetail API\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: myretailapi.herokuapp.com/api
basePath: /v1
paths:
  /products:
    get:
      summary: List all products
      description: Array of product objects that contain current pricing information
      operationId: listProducts
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Product'
  /products/{product_id}:
    get:
      summary: Get product by product_id
      description: Returns a single product with current pricing info
      operationId: getProductById
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: TCIN product_id of product to return
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid product_id supplied
        404:
          description: Product not found
    put:
      summary: Update product pricing info
      description: Updates the current pricing info for a specified product
      operationId: updateProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Product object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        400:
          description: Invalid product_id supplied
        404:
          description: Product not found
        405:
          description: Validation exception
  /scrape/movies/:
    get:
      summary: Scrape movie data from a Target.com
      description: Enter a Target movie PDP to scrape data from and store in the database
      operationId: scrapeProducts
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        description: 'The page query param should be a URL for a movie PDP on Target.com.
          For example: https://www.target.com/p/empire-of-the-sun-dvd-video/-/A-11700719'
        required: true
        type: string
      responses:
        200:
          description: successful operation
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":1:{s:7:\"Product\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:10:\"product_id\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"product_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:39:\"The
  Big Lebowski (Blu-ray) (Widescreen)\";}s:13:\"current_price\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"currency_code\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"USD\";}s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"type\";s:10:\"Decimal128\";s:7:\"example\";s:4:\"9.22\";}}}}}}"
...
