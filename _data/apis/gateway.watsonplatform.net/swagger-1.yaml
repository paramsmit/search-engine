---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"3.3.4\";s:5:\"title\";s:13:\"Tone
  Analyzer\";s:11:\"description\";s:2244:\"### Service Overview\nThe IBM Watson&trade;
  Tone Analyzer service uses linguistic analysis to detect emotional, social, and
  language tones in written text. The service can analyze tone at both the document
  and sentence levels. You can use the service to understand how your written communications
  are perceived and then to improve the tone of your communications. Businesses can
  use the service to learn the tone of their customers' communications and to respond
  to each customer appropriately, or to understand and improve their customer conversations.\n###
  API Usage\nThe following information provides details about using the service to
  analyze tone:\n* **The tone method:** The service offers `GET` and `POST /v3/tone`
  methods that use the general purpose endpoint to analyze the tone of input content.
  The methods accept a maximum of 128 KB of content in JSON, plain text, or HTML format.\n*
  **The tone_chat method:** The service offers a `POST /v3/tone_chat` method that
  uses the customer engagement endpoint to analyze the tone of customer service and
  customer support conversations. The method accepts a maximum of 128 KB of content
  in JSON format.\n* **Authentication:** You authenticate to the service by using
  your service credentials. You can use your credentials to authenticate via a proxy
  server that resides in Bluemix, or you can use your credentials to obtain a token
  and contact the service directly. See [Service credentials for Watson services](https://console.bluemix.net/docs/services/watson/getting-started-credentials.html)
  and [Tokens for authentication](https://console.bluemix.net/docs/services/watson/getting-started-tokens.html).\n*
  **Request Logging:** By default, all Watson services log requests and their results.
  Data is collected only to improve the Watson services. If you do not want to share
  your data, set the header parameter `X-Watson-Learning-Opt-Out` to `true` for each
  request. Data is collected for any request that omits this header. See [Controlling
  request logging for Watson services](https://console.bluemix.net/docs/services/watson/getting-started-logging.html).
  \n\nFor more information about the service, see [About Tone Analyzer](https://console.bluemix.net/docs/services/tone-analyzer/index.html).\";s:19:\"x-vcap-service-name\";s:13:\"tone_analyzer\";}"
host: gateway.watsonplatform.net
basePath: /tone-analyzer/api
paths:
  /v3/tone:
    get:
      operationId: GetTone
      summary: Analyze general purpose tone
      description: 'Uses the general purpose endpoint to analyze the tone of your
        input content. The service can analyze the input for several tones: emotion,
        language, and social. It derives various characteristics for each tone that
        it analyzes. The method always analyzes the tone of the full document; by
        default, it also analyzes the tone of each individual sentence of the input.
        You can submit a maximum of 128 KB of content in plain text format. nnPer
        the HTTP specification, the default encoding for plain text is ISO-8859-1
        (effectively, the ASCII character set). Include the `charset` parameter to
        indicate the character encoding of the input text; for example: `Content-Type:
        text/plain;charset=utf-8`. nnUse the `GET` request method to analyze smaller
        quantities of plain text content. Use the `POST` request method to analyze
        larger amounts of content in any of the available formats.'
      tags:
      - tone
      consumes:
      - text/plain
      produces:
      - application/json
      parameters:
      - name: text
        in: query
        required: true
        type: string
        description: Plain text input that contains the content to be analyzed. You
          must URL-encode the input. Submit a maximum of 128 KB of content. Sentences
          with fewer than three words cannot be analyzed.
      - name: tones
        in: query
        required: false
        type: array
        items:
          type: string
          enum:
          - emotion
          - language
          - social
        x-item-name: tone
        description: 'A comma-separated list of tones for which the service is to
          return its analysis of the input; the indicated tones apply both to the
          full document and to individual sentences of the document. You can specify
          one or more of the following values: `emotion`, `language`, and `social`.
          Omit the parameter to request results for all three tones.'
      - name: sentences
        in: query
        required: false
        type: boolean
        default: true
        description: Indicates whether the service is to return an analysis of each
          individual sentence in addition to its analysis of the full document. If
          `true` (the default), the service returns results for each sentence. The
          service returns results only for the first 100 sentences of the input.
      - name: version
        in: query
        description: The requested version of the response format as a date in the
          form `YYYY-MM-DD`; for example, specify `2016-05-19` for May 19, 2016. The
          parameter allows the service to update its interface and response format
          for new versions without breaking existing clients. nnThe date that you
          specify does not need to match a version of the service exactly; the service
          replies with the response format whose version is no later than the date
          you provide. If you specify a date that is earlier than the initial release
          of version 3, the service returns the response format for that version.
          If you specify a date that is in the future or otherwise later than the
          most recent version, the service returns the response format for the latest
          version.
        required: true
        type: string
      responses:
        200:
          schema:
            $ref: '#/definitions/ToneAnalysis'
          description: '**OK**. The request succeeded.'
        400:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Bad Request**. A required input parameter is null or a specified
            input parameter or header value is invalid or not supported.'
        401:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Unauthorized**. Access is denied due to invalid service
            credentials.'
        404:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Not Found**. A requested item or parameter does not exist.'
        429:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Too Many Requests**. Your organization ID submitted more
            than 1200 requests per minute, so the service is throttling your calls.'
        500:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Internal Server Error**. The service encountered an internal
            error.'
      x-sdk-exclude: true
    post:
      operationId: tone
      summary: Analyze general purpose tone
      description: 'Uses the general purpose endpoint to analyze the tone of your
        input content. The service can analyze the input for several tones: emotion,
        language, and social. It derives various characteristics for each tone that
        it analyzes. The method always analyzes the tone of the full document; by
        default, it also analyzes the tone of each individual sentence of the input.
        You can submit a maximum of 128 KB of content in JSON, plain text, or HTML
        format. nnPer the JSON specification, the default character encoding for JSON
        content is effectively always UTF-8; per the HTTP specification, the default
        encoding for plain text and HTML is ISO-8859-1 (effectively, the ASCII character
        set). When specifying a content type of plain text or HTML, include the `charset`
        parameter to indicate the character encoding of the input text; for example:
        `Content-Type: text/plain;charset=utf-8`. For `text/html`, the service removes
        HTML tags and analyzes only the textual content. nnUse the `POST` request
        method to analyze larger amounts of content in any of the available formats.
        Use the `GET` request method to analyze smaller quantities of plain text content.'
      tags:
      - tone
      consumes:
      - application/json
      - text/plain
      - text/html
      produces:
      - application/json
      parameters:
      - name: tone_input
        in: body
        required: true
        description: JSON, plain text, or HTML input that contains the content to
          be analyzed. For JSON input, provide an object of type `ToneInput`. Submit
          a maximum of 128 KB of content. Sentences with fewer than three words cannot
          be analyzed.
        schema:
          $ref: '#/definitions/ToneInput'
      - name: tones
        in: query
        required: false
        type: array
        items:
          type: string
          enum:
          - emotion
          - language
          - social
        x-item-name: tone
        description: 'A comma-separated list of tones for which the service is to
          return its analysis of the input; the indicated tones apply both to the
          full document and to individual sentences of the document. You can specify
          one or more of the following values: `emotion`, `language`, and `social`.
          Omit the parameter to request results for all three tones.'
      - name: sentences
        in: query
        required: false
        type: boolean
        default: true
        description: Indicates whether the service is to return an analysis of each
          individual sentence in addition to its analysis of the full document. If
          `true` (the default), the service returns results for each sentence. The
          service returns results only for the first 100 sentences of the input.
      - name: version
        in: query
        description: The requested version of the response format as a date in the
          form `YYYY-MM-DD`; for example, specify `2016-05-19` for May 19, 2016. The
          parameter allows the service to update its interface and response format
          for new versions without breaking existing clients. nnThe date that you
          specify does not need to match a version of the service exactly; the service
          replies with the response format whose version is no later than the date
          you provide. If you specify a date that is earlier than the initial release
          of version 3, the service returns the response format for that version.
          If you specify a date that is in the future or otherwise later than the
          most recent version, the service returns the response format for the latest
          version.
        required: true
        type: string
      responses:
        200:
          schema:
            $ref: '#/definitions/ToneAnalysis'
          description: '**OK**. The request succeeded.'
        400:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Bad Request**. A required input parameter is null or a specified
            input parameter or header value is invalid or not supported.'
        401:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Unauthorized**. Access is denied due to invalid service
            credentials.'
        404:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Not Found**. A requested item or parameter does not exist.'
        429:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Too Many Requests**. Your organization ID submitted more
            than 1200 requests per minute, so the service is throttling your calls.'
        500:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Internal Server Error**. The service encountered an internal
            error.'
  /v3/tone_chat:
    post:
      operationId: toneChat
      summary: Analyze customer engagement tone
      description: 'Uses the customer engagement endpoint to analyze the tone of customer
        service and customer support conversations. For each utterance of a conversation,
        the method reports the most prevalent subset of the following seven tones:
        sad, frustrated, satisfied, excited, polite, impolite, and sympathetic. You
        can submit a maximum of 128 KB of JSON input. Per the JSON specification,
        the default character encoding for JSON content is effectively always UTF-8.'
      tags:
      - tone
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: utterances
        in: body
        required: true
        description: A JSON object that contains the content to be analyzed.
        schema:
          $ref: '#/definitions/ToneChatInput'
      - name: version
        in: query
        description: The requested version of the response format as a date in the
          form `YYYY-MM-DD`; for example, specify `2016-05-19` for May 19, 2016. The
          parameter allows the service to update its interface and response format
          for new versions without breaking existing clients. nnThe date that you
          specify does not need to match a version of the service exactly; the service
          replies with the response format whose version is no later than the date
          you provide. If you specify a date that is earlier than the initial release
          of version 3, the service returns the response format for that version.
          If you specify a date that is in the future or otherwise later than the
          most recent version, the service returns the response format for the latest
          version.
        required: true
        type: string
      responses:
        200:
          schema:
            $ref: '#/definitions/UtteranceAnalyses'
          description: '**OK**. The request succeeded.'
        400:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Bad Request**. A required input parameter is null or a specified
            input parameter or header value is invalid or not supported.'
        401:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Unauthorized**. Access is denied due to invalid service
            credentials.'
        404:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Not Found**. A requested item or parameter does not exist.'
        429:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Too Many Requests**. Your organization ID submitted more
            than 1200 requests per minute, so the service is throttling your calls.'
        500:
          schema:
            $ref: '#/definitions/ErrorModel'
          description: '**Internal Server Error**. The service encountered an internal
            error.'
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":12:{s:9:\"ToneInput\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:4:\"text\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:107:\"The
  input content that the service is to analyze. Sentences with fewer than three words
  cannot be analyzed.\";}}}s:13:\"ToneChatInput\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"utterances\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"utterances\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Utterance\";}s:11:\"description\";s:95:\"An
  array of `Utterance` objects that provides the input content that the service is
  to analyze.\";}}}s:9:\"Utterance\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"text\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:124:\"An
  utterance contributed by a user in the conversation that is to be analyzed. The
  utterance can contain multiple sentences.\";}s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"A
  string that identifies the user who contributed the utterance specified by the `text`
  parameter.\";}}s:14:\"x-java-builder\";b:1;}s:12:\"ToneAnalysis\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:13:\"document_tone\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"document_tone\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:30:\"#/definitions/DocumentAnalysis\";s:11:\"description\";s:106:\"An
  object of type `DocumentAnalysis` that provides the results for the full document
  of the input content.\";}s:14:\"sentences_tone\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/SentenceAnalysis\";}s:11:\"description\";s:274:\"An
  array of `SentenceAnalysis` objects that provides the results for the individual
  sentences of the input content. The service returns results only for the first 100
  sentences of the input. The field is omitted if the `sentences` parameter of the
  request is set to `false`.\";}}}s:16:\"DocumentAnalysis\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:15:\"tone_categories\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"tone_categories\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ToneCategory\";}s:11:\"description\";s:225:\"An
  array of `ToneCategory` objects that provides the results of the tone analysis for
  the full document of the input content. The service returns results only for the
  tones specified with the `tones` parameter of the request.\";}}}s:16:\"SentenceAnalysis\";O:8:\"stdClass\":2:{s:8:\"required\";a:5:{i:0;s:11:\"sentence_id\";i:1;s:4:\"text\";i:2;s:10:\"input_from\";i:3;s:8:\"input_to\";i:4;s:15:\"tone_categories\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"sentence_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:148:\"The
  unique identifier of a sentence of the input content. The first sentence has ID
  0, and the ID of each subsequent sentence is incremented by one.\";}s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"The
  text of the input sentence.\";}s:10:\"input_from\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:79:\"The
  offset of the first character of the sentence in the overall input content.\";}s:8:\"input_to\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:78:\"The
  offset of the last character of the sentence in the overall input content.\";}s:15:\"tone_categories\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ToneCategory\";}s:11:\"description\";s:199:\"An
  array of `ToneCategory` objects that provides the results for the tone analysis
  of the sentence. The service returns results only for the tones specified with the
  `tones` parameter of the request.\";}}}s:12:\"ToneCategory\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:5:\"tones\";i:1;s:11:\"category_id\";i:2;s:13:\"category_name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"tones\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/ToneScore\";}s:11:\"description\";s:88:\"An
  array of `ToneScore` objects that provides the results for the tones of the category.\";}s:11:\"category_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:184:\"The
  unique, non-localized identifier of the category for the results. The service can
  return results for the following category IDs: `emotion_tone`, `language_tone`,
  and `social_tone`.\";}s:13:\"category_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:49:\"The
  user-visible, localized name of the category.\";}}}s:9:\"ToneScore\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:5:\"score\";i:1;s:7:\"tone_id\";i:2;s:9:\"tone_name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"score\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:11:\"description\";s:218:\"The
  score for the tone in the range of 0 to 1. A score less than 0.5 indicates that
  the tone is unlikely to be perceived in the content; a score greater than 0.75 indicates
  a high likelihood that the tone is perceived.\";}s:7:\"tone_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:533:\"The
  unique, non-localized identifier of the tone for the results. The service can return
  results for the following tone IDs of the different categories:\n* For the `emotion`
  category: `anger`, `disgust`, `fear`, `joy`, and `sadness`\n* For the `language`
  category: `analytical`, `confident`, and `tentative`\n* For the `social` category:
  `openness_big5`, `conscientiousness_big5`, `extraversion_big5`, `agreeableness_big5`,
  and `emotional_range_big5` \n\nThe service returns scores for all tones of a category,
  regardless of their values.\";}s:9:\"tone_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  user-visible, localized name of the tone.\";}}}s:17:\"UtteranceAnalyses\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:15:\"utterances_tone\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"utterances_tone\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/UtteranceAnalysis\";}s:11:\"description\";s:98:\"An
  array of `UtteranceAnalysis` objects that provides the results for each utterance
  of the input.\";}}}s:17:\"UtteranceAnalysis\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:12:\"utterance_id\";i:1;s:14:\"utterance_text\";i:2;s:5:\"tones\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"utterance_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:132:\"The
  unique identifier of the utterance. The first utterance has ID 0, and the ID of
  each subsequent utterance is incremented by one.\";}s:14:\"utterance_text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  text of the utterance.\";}s:5:\"tones\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ToneChatScore\";}s:11:\"description\";s:242:\"An
  array of `ToneChatScore` objects that provides results for the most prevalent tones
  of the utterance. The array includes results for any tone whose score is at least
  0.5. The array is empty if no tone has a score that meets this threshold.\";}}}s:13:\"ToneChatScore\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:5:\"score\";i:1;s:7:\"tone_id\";i:2;s:9:\"tone_name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"score\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:11:\"description\";s:147:\"The
  score for the tone in the range of 0.5 to 1. A score greater than 0.75 indicates
  a high likelihood that the tone is perceived in the utterance.\";}s:7:\"tone_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:299:\"The
  unique, non-localized identifier of the tone for the results. The service can return
  results for the following tone IDs: `sad`, `frustrated`, `satisfied`, `excited`,
  `polite`, `impolite`, and `sympathetic`. The service returns results only for tones
  whose scores meet a minimum threshold of 0.5.\";}s:9:\"tone_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  user-visible, localized name of the tone.\";}}}s:10:\"ErrorModel\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:4:\"code\";i:1;s:5:\"error\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:21:\"The
  HTTP status code.\";}s:8:\"sub_code\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"A
  service-specific error code.\";}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"A
  description of the error.\";}s:4:\"help\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:81:\"A
  URL to documentation explaining the cause and possibly solutions for the error.\";}}}}"
...
