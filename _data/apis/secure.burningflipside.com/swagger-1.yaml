---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:3:\"1.0\";s:5:\"title\";s:34:\"Burning
  Flipside Ticket System API\";s:11:\"description\";s:58:\"This is the api to access
  ticket data for Burning Flipside\";s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:15:\"Technology
  Team\";s:5:\"email\";s:30:\"technology@burningflipside.com\";}}"
host: secure.burningflipside.com
basePath: /tickets/api/v1
paths:
  /contraints:
    get:
      summary: An object containing user defined Ticket System Variables
      operationId: show_constraints
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Contraints'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /donation_types:
    get:
      summary: Return an array of DonationType
      operationId: show_donation_types
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/DonationType'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new DonationType
      operationId: createDonationType
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/DonationType'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: donationType
        in: body
        required: true
        schema:
          $ref: '#/definitions/DonationType'
  /donation_types/{id}:
    delete:
      summary: delete a DonationType
      operationId: deleteDonationType
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Unknown'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: id
        in: path
        required: true
  /ticket_types:
    get:
      summary: List of TicketType
      operationId: showTicketTypes
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/TicketType'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new TicketType
      operationId: createTicketType
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/TicketType'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: ticketType
        in: body
        required: true
        schema:
          $ref: '#/definitions/TicketType'
    delete:
      summary: delete a TicketType
      operationId: deleteTicketType
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Unknown'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: id
        in: path
        required: true
  /lists:
    get:
      summary: List of Email Lists
      operationId: show_lists
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/EmailList'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /window:
    get:
      summary: Get Ticketing Window
      operationId: show_window
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/TickingWindow'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /statuses:
    get:
      summary: List of Email Lists
      operationId: list_statuses
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/RequestStatus'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters: ~
  /vars:
    get:
      summary: List of Vars
      operationId: get_vars
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /var/{name}:
    get:
      summary: Get a Var by name
      operationId: get_var
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: name
        in: path
        required: true
    patch:
      summary: List of Vars
      operationId: set_var
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: name
        in: path
        required: true
      - name: value
        in: body
        required: true
    post:
      summary: Create a Var by name
      operationId: create_var
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: name
        in: path
        required: true
      - name: value
        in: body
        required: true
    delete:
      summary: Delete a Var by name
      operationId: del_var
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: name
        in: path
        required: true
  /long_text:
    get:
      summary: Get all LongText
      operationId: getAllLongText
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /long_text/{name}:
    get:
      summary: Get LongText by name
      operationId: getLongText
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: name
        in: path
        required: true
    patch:
      summary: Update LongText by name
      operationId: setLongText
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NameValue'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: name
        in: path
        required: true
      - name: value
        in: body
        required: true
  /users:
    get:
      summary: Get Ticket System Authorized users
      operationId: getTicketUsers
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Unknown'
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /years:
    get:
      summary: Get Array of years
      operationId: getYears
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              type: int32
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /Actions/generatePreview/{:class}:
    get:
      summary: Get previewPDF
      operationId: previewPDF
      responses:
        200:
          description: success
          schema:
            type: string
        500:
          description: error
          schema:
            $ref: '#/definitions/Error'
      parameters:
      - name: class
        in: path
        required: true
      - name: body
        in: body
        required: true
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":9:{s:7:\"Unknown\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"RequestStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"NameValue\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"date\";}}}s:13:\"TickingWindow\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:18:\"request_start_date\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"date\";}s:17:\"request_stop_date\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"date\";}s:15:\"mail_start_date\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"date\";}s:9:\"test_mode\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"year\";O:8:\"stdClass\":1:{s:4:\"type\";s:3:\"int\";}s:7:\"current\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"date\";}}}s:9:\"EmailList\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"short_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:50;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:6:\"format\";s:7:\"tinyint\";s:9:\"maxLength\";i:1;}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;}s:17:\"request_condition\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;}}}s:12:\"DonationType\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"entityName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:50;}s:10:\"thirdParty\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:6:\"format\";s:7:\"tinyint\";s:9:\"maxLength\";i:1;}s:3:\"url\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;}}}s:10:\"Contraints\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:23:\"max_tickets_per_request\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:12:\"ticket_types\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/TicketType\";}}}}s:10:\"TicketType\";O:8:\"stdClass\":2:{s:8:\"required\";a:5:{i:0;s:8:\"typeCode\";i:1;s:11:\"description\";i:2;s:4:\"cost\";i:3;s:15:\"max_per_request\";i:4;s:8:\"is_minor\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"typeCode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"char\";s:9:\"maxLength\";i:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:7:\"varchar\";s:9:\"maxLength\";i:45;}s:4:\"cost\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:15:\"max_per_request\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:3:\"int\";s:9:\"maxLength\";i:10;}s:8:\"is_minor\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:6:\"format\";s:7:\"tinyint\";s:9:\"maxLength\";i:1;}}}s:5:\"Error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"fields\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
