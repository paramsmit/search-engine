---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":15:{s:7:\"contact\";O:8:\"stdClass\":4:{s:5:\"email\";s:23:\"mike.ralphson@gmail.com\";s:4:\"name\";s:13:\"Mike
  Ralphson\";s:3:\"url\";s:38:\"https://github.com/mermade/aws2openapi\";s:9:\"x-twitter\";s:12:\"PermittedSoc\";}s:11:\"description\";s:1167:\"<fullname>Amazon
  DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service
  that provides fast and predictable performance with seamless scalability. DynamoDB
  lets you offload the administrative burdens of operating and scaling a distributed
  database, so that you don't have to worry about hardware provisioning, setup and
  configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB,
  you can create database tables that can store and retrieve any amount of data, and
  serve any level of request traffic. You can scale up or scale down your tables'
  throughput capacity without downtime or performance degradation, and use the AWS
  Management Console to monitor resource utilization and performance metrics.</p>
  <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient
  number of servers to handle your throughput and storage requirements, while maintaining
  consistent and fast performance. All of your data is stored on solid state disks
  (SSDs) and automatically replicated across multiple Availability Zones in an AWS
  region, providing built-in high availability and data durability. </p>\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:18:\"Apache
  2.0 License\";s:3:\"url\";s:31:\"http://www.apache.org/licenses/\";}s:14:\"termsOfService\";s:37:\"https://aws.amazon.com/service-terms/\";s:5:\"title\";s:15:\"Amazon
  DynamoDB\";s:7:\"version\";s:10:\"2012-08-10\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:79:\"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\";}s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#FFFFFF\";s:3:\"url\";s:81:\"https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:11:\"contentType\";s:16:\"application/json\";s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:38:\"https://github.com/mermade/aws2openapi\";s:7:\"version\";s:5:\"1.0.0\";}s:3:\"url\";s:92:\"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dynamodb-2012-08-10.normal.json\";s:17:\"x-apisguru-direct\";b:1;}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:13:\"amazonaws.com\";s:9:\"x-release\";s:2:\"v4\";s:13:\"x-serviceName\";s:8:\"dynamodb\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:18:\"amazonaws_dynamodb\";s:4:\"type\";s:7:\"openapi\";}}"
host: dynamodb.amazonaws.com
basePath: /
paths: ~
produces:
- application/json
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":263:{s:15:\"AttributeAction\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:3:\"ADD\";i:1;s:3:\"PUT\";i:2;s:6:\"DELETE\";}s:4:\"type\";s:6:\"string\";}s:19:\"AttributeDefinition\";O:8:\"stdClass\":4:{s:11:\"description\";s:80:\"Represents
  an attribute for describing the key schema for the table and indexes.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"AttributeName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/KeySchemaAttributeName\";s:11:\"description\";s:25:\"A
  name for the attribute.\";}s:13:\"AttributeType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ScalarAttributeType\";s:11:\"description\";s:261:\"<p>The
  data type for the attribute, where:</p> <ul> <li> <p> <code>S</code> - the attribute
  is of type String</p> </li> <li> <p> <code>N</code> - the attribute is of type Number</p>
  </li> <li> <p> <code>B</code> - the attribute is of type Binary</p> </li> </ul>\";}}s:8:\"required\";a:2:{i:0;s:13:\"AttributeName\";i:1;s:13:\"AttributeType\";}s:4:\"type\";s:6:\"object\";}s:20:\"AttributeDefinitions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/AttributeDefinition\";}s:4:\"type\";s:5:\"array\";}s:12:\"AttributeMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:13:\"AttributeName\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:65535;s:4:\"type\";s:6:\"string\";}s:17:\"AttributeNameList\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:16:\"AttributeUpdates\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/AttributeValueUpdate\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:14:\"AttributeValue\";O:8:\"stdClass\":3:{s:11:\"description\";s:395:\"<p>Represents
  the data for an attribute.</p> <p>Each attribute value is described as a name-value
  pair. The name is the data type, and the value is the data itself.</p> <p>For more
  information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\">Data
  Types</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";s:10:\"properties\";O:8:\"stdClass\":10:{s:1:\"B\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/BinaryAttributeValue\";s:11:\"description\";s:114:\"<p>An
  attribute of type Binary. For example:</p> <p> <code>\"B\": \"dGhpcyB0ZXh0IGlzIGJhc2U2NC1lbmNvZGVk\"</code>
  </p>\";}s:4:\"BOOL\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/BooleanAttributeValue\";s:11:\"description\";s:84:\"<p>An
  attribute of type Boolean. For example:</p> <p> <code>\"BOOL\": true</code> </p>\";}s:2:\"BS\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/BinarySetAttributeValue\";s:11:\"description\";s:117:\"<p>An
  attribute of type Binary Set. For example:</p> <p> <code>\"BS\": [\"U3Vubnk=\",
  \"UmFpbnk=\", \"U25vd3k=\"]</code> </p>\";}s:1:\"L\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/ListAttributeValue\";s:11:\"description\";s:104:\"<p>An
  attribute of type List. For example:</p> <p> <code>\"L\": [\"Cookies\", \"Coffee\",
  3.14159]</code> </p>\";}s:1:\"M\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/MapAttributeValue\";s:11:\"description\";s:115:\"<p>An
  attribute of type Map. For example:</p> <p> <code>\"M\": {\"Name\": {\"S\": \"Joe\"},
  \"Age\": {\"N\": \"35\"}}</code> </p>\";}s:1:\"N\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/NumberAttributeValue\";s:11:\"description\";s:294:\"<p>An
  attribute of type Number. For example:</p> <p> <code>\"N\": \"123.45\"</code> </p>
  <p>Numbers are sent across the network to DynamoDB as strings, to maximize compatibility
  across languages and libraries. However, DynamoDB treats them as number type attributes
  for mathematical operations.</p>\";}s:2:\"NS\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/NumberSetAttributeValue\";s:11:\"description\";s:321:\"<p>An
  attribute of type Number Set. For example:</p> <p> <code>\"NS\": [\"42.2\", \"-19\",
  \"7.5\", \"3.14\"]</code> </p> <p>Numbers are sent across the network to DynamoDB
  as strings, to maximize compatibility across languages and libraries. However, DynamoDB
  treats them as number type attributes for mathematical operations.</p>\";}s:4:\"NULL\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/NullAttributeValue\";s:11:\"description\";s:81:\"<p>An
  attribute of type Null. For example:</p> <p> <code>\"NULL\": true</code> </p>\";}s:1:\"S\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/StringAttributeValue\";s:11:\"description\";s:83:\"<p>An
  attribute of type String. For example:</p> <p> <code>\"S\": \"Hello\"</code> </p>\";}s:2:\"SS\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/StringSetAttributeValue\";s:11:\"description\";s:110:\"<p>An
  attribute of type String Set. For example:</p> <p> <code>\"SS\": [\"Giraffe\", \"Hippo\"
  ,\"Zebra\"]</code> </p>\";}}s:4:\"type\";s:6:\"object\";}s:18:\"AttributeValueList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}s:4:\"type\";s:5:\"array\";}s:20:\"AttributeValueUpdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:617:\"<p>For
  the <code>UpdateItem</code> operation, represents the attributes to be modified,
  the action to perform on each, and the new value for each.</p> <note> <p>You cannot
  use <code>UpdateItem</code> to update any primary key attributes. Instead, you will
  need to delete the item, and then use <code>PutItem</code> to create a new item
  with new attributes.</p> </note> <p>Attribute values cannot be null; string and
  binary type attributes must have lengths greater than zero; and set type attributes
  must not be empty. Requests with empty values will be rejected with a <code>ValidationException</code>
  exception.</p>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"Action\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/AttributeAction\";s:11:\"description\";s:3833:\"<p>Specifies
  how to perform the update. Valid values are <code>PUT</code> (default), <code>DELETE</code>,
  and <code>ADD</code>. The behavior depends on whether the specified primary key
  already exists in the table.</p> <p> <b>If an item with the specified <i>Key</i>
  is found in the table:</b> </p> <ul> <li> <p> <code>PUT</code> - Adds the specified
  attribute to the item. If the attribute already exists, it is replaced by the new
  value. </p> </li> <li> <p> <code>DELETE</code> - If no value is specified, the attribute
  and its value are removed from the item. The data type of the specified value must
  match the existing value's data type.</p> <p>If a <i>set</i> of values is specified,
  then those values are subtracted from the old set. For example, if the attribute
  value was the set <code>[a,b,c]</code> and the <code>DELETE</code> action specified
  <code>[a,c]</code>, then the final attribute value would be <code>[b]</code>. Specifying
  an empty set is an error.</p> </li> <li> <p> <code>ADD</code> - If the attribute
  does not already exist, then the attribute and its values are added to the item.
  If the attribute does exist, then the behavior of <code>ADD</code> depends on the
  data type of the attribute:</p> <ul> <li> <p>If the existing attribute is a number,
  and if <code>Value</code> is also a number, then the <code>Value</code> is mathematically
  added to the existing attribute. If <code>Value</code> is a negative number, then
  it is subtracted from the existing attribute.</p> <note> <p> If you use <code>ADD</code>
  to increment or decrement a number value for an item that doesn't exist before the
  update, DynamoDB uses 0 as the initial value.</p> <p>In addition, if you use <code>ADD</code>
  to update an existing item, and intend to increment or decrement an attribute value
  which does not yet exist, DynamoDB uses <code>0</code> as the initial value. For
  example, suppose that the item you want to update does not yet have an attribute
  named <i>itemcount</i>, but you decide to <code>ADD</code> the number <code>3</code>
  to this attribute anyway, even though it currently does not exist. DynamoDB will
  create the <i>itemcount</i> attribute, set its initial value to <code>0</code>,
  and finally add <code>3</code> to it. The result will be a new <i>itemcount</i>
  attribute in the item, with a value of <code>3</code>.</p> </note> </li> <li> <p>If
  the existing data type is a set, and if the <code>Value</code> is also a set, then
  the <code>Value</code> is added to the existing set. (This is a <i>set</i> operation,
  not mathematical addition.) For example, if the attribute value was the set <code>[1,2]</code>,
  and the <code>ADD</code> action specified <code>[3]</code>, then the final attribute
  value would be <code>[1,2,3]</code>. An error occurs if an Add action is specified
  for a set attribute and the attribute type specified does not match the existing
  set type. </p> <p>Both sets must have the same primitive data type. For example,
  if the existing data type is a set of strings, the <code>Value</code> must also
  be a set of strings. The same holds true for number sets and binary sets.</p> </li>
  </ul> <p>This action is only valid for an existing attribute whose data type is
  number or is a set. Do not use <code>ADD</code> for any other data types.</p> </li>
  </ul> <p> <b>If no item with the specified <i>Key</i> is found:</b> </p> <ul> <li>
  <p> <code>PUT</code> - DynamoDB creates a new item with the specified primary key,
  and then adds the attribute. </p> </li> <li> <p> <code>DELETE</code> - Nothing happens;
  there is no attribute to delete.</p> </li> <li> <p> <code>ADD</code> - DynamoDB
  creates an item with the supplied primary key and number (or set of numbers) for
  the attribute value. The only data types allowed are number and number set; no other
  data types can be specified.</p> </li> </ul>\";}s:5:\"Value\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";s:11:\"description\";s:396:\"<p>Represents
  the data for an attribute.</p> <p>Each attribute value is described as a name-value
  pair. The name is the data type, and the value is the data itself.</p> <p>For more
  information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\">Data
  Types</a> in the <i>Amazon DynamoDB Developer Guide</i>. </p>\";}}s:4:\"type\";s:6:\"object\";}s:11:\"Backfilling\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"BackupArn\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:1024;s:9:\"minLength\";i:37;s:4:\"type\";s:6:\"string\";}s:22:\"BackupCreationDateTime\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:17:\"BackupDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:61:\"Contains
  the description of the backup created for the table.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"BackupDetails\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BackupDetails\";s:11:\"description\";s:58:\"Contains
  the details of the backup created for the table. \";}s:18:\"SourceTableDetails\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/SourceTableDetails\";s:11:\"description\";s:63:\"Contains
  the details of the table when the backup was created. \";}s:25:\"SourceTableFeatureDetails\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/SourceTableFeatureDetails\";s:11:\"description\";s:125:\"Contains
  the details of the features enabled on the table when the backup was created. For
  example, LSIs, GSIs, streams, TTL.\";}}s:4:\"type\";s:6:\"object\";}s:13:\"BackupDetails\";O:8:\"stdClass\":4:{s:11:\"description\";s:57:\"Contains
  the details of the backup created for the table.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"BackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:31:\"ARN
  associated with the backup.\";}s:22:\"BackupCreationDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BackupCreationDateTime\";s:11:\"description\";s:78:\"Time
  at which the backup was created. This is the request time of the backup. \";}s:10:\"BackupName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/BackupName\";s:11:\"description\";s:29:\"Name
  of the requested backup.\";}s:15:\"BackupSizeBytes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/BackupSizeBytes\";s:11:\"description\";s:28:\"Size
  of the backup in bytes.\";}s:12:\"BackupStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/BackupStatus\";s:11:\"description\";s:73:\"Backup
  can be in one of the following states: CREATING, ACTIVE, DELETED. \";}}s:8:\"required\";a:4:{i:0;s:9:\"BackupArn\";i:1;s:10:\"BackupName\";i:2;s:12:\"BackupStatus\";i:3;s:22:\"BackupCreationDateTime\";}s:4:\"type\";s:6:\"object\";}s:20:\"BackupInUseException\";O:8:\"stdClass\":3:{s:11:\"description\";s:150:\"There
  is another ongoing conflicting backup control plane operation on the table. The
  backups is either being created, deleted or restored to a table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:10:\"BackupName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:255;s:9:\"minLength\";i:3;s:7:\"pattern\";s:15:\"[a-zA-Z0-9_.-]+\";s:4:\"type\";s:6:\"string\";}s:23:\"BackupNotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"Backup
  not found for the given BackupARN. \";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:15:\"BackupSizeBytes\";O:8:\"stdClass\":2:{s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:12:\"BackupStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:8:\"CREATING\";i:1;s:7:\"DELETED\";i:2;s:9:\"AVAILABLE\";}s:4:\"type\";s:6:\"string\";}s:15:\"BackupSummaries\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/BackupSummary\";}s:4:\"type\";s:5:\"array\";}s:13:\"BackupSummary\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"Contains
  details for the backup.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"BackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:31:\"ARN
  associated with the backup.\";}s:22:\"BackupCreationDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/BackupCreationDateTime\";s:11:\"description\";s:37:\"Time
  at which the backup was created.\";}s:10:\"BackupName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/BackupName\";s:11:\"description\";s:29:\"Name
  of the specified backup.\";}s:15:\"BackupSizeBytes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/BackupSizeBytes\";s:11:\"description\";s:28:\"Size
  of the backup in bytes.\";}s:12:\"BackupStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/BackupStatus\";s:11:\"description\";s:72:\"Backup
  can be in one of the following states: CREATING, ACTIVE, DELETED.\";}s:8:\"TableArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/TableArn\";s:11:\"description\";s:30:\"ARN
  associated with the table.\";}s:7:\"TableId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/TableId\";s:11:\"description\";s:32:\"Unique
  identifier for the table.\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:18:\"Name
  of the table.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"BackupsInputLimit\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:100;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:17:\"BatchGetItemInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:62:\"Represents
  the input of a <code>BatchGetItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:12:\"RequestItems\";O:8:\"stdClass\":1:{s:5:\"Music\";O:8:\"stdClass\":2:{s:4:\"Keys\";a:3:{i:0;O:8:\"stdClass\":2:{s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No
  One You Know\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:13:\"Call Me Today\";}}i:1;O:8:\"stdClass\":2:{s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Acme
  Band\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Happy Day\";}}i:2;O:8:\"stdClass\":2:{s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No
  One You Know\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:19:\"Scared of
  My Shadow\";}}}s:20:\"ProjectionExpression\";s:10:\"AlbumTitle\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"RequestItems\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/BatchGetRequestMap\";s:11:\"description\";s:3660:\"<p>A
  map of one or more table names and, for each table, a map that describes one or
  more items to retrieve from that table. Each table name can be used only once per
  <code>BatchGetItem</code> request.</p> <p>Each element in the map of items to retrieve
  consists of the following:</p> <ul> <li> <p> <code>ConsistentRead</code> - If <code>true</code>,
  a strongly consistent read is used; if <code>false</code> (the default), an eventually
  consistent read is used.</p> </li> <li> <p> <code>ExpressionAttributeNames</code>
  - One or more substitution tokens for attribute names in the <code>ProjectionExpression</code>
  parameter. The following are some use cases for using <code>ExpressionAttributeNames</code>:</p>
  <ul> <li> <p>To access an attribute whose name conflicts with a DynamoDB reserved
  word.</p> </li> <li> <p>To create a placeholder for repeating occurrences of an
  attribute name in an expression.</p> </li> <li> <p>To prevent special characters
  in an attribute name from being misinterpreted in an expression.</p> </li> </ul>
  <p>Use the <b>#</b> character in an expression to dereference an attribute name.
  For example, consider the following attribute name:</p> <ul> <li> <p> <code>Percentile</code>
  </p> </li> </ul> <p>The name of this attribute conflicts with a reserved word, so
  it cannot be used directly in an expression. (For the complete list of reserved
  words, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> </li> <li>
  <p> <code>Keys</code> - An array of primary key attribute values that define specific
  items in the table. For each primary key, you must provide <i>all</i> of the key
  attributes. For example, with a simple primary key, you only need to provide the
  partition key value. For a composite key, you must provide <i>both</i> the partition
  key value and the sort key value.</p> </li> <li> <p> <code>ProjectionExpression</code>
  - A string that identifies one or more attributes to retrieve from the table. These
  attributes can include scalars, sets, or elements of a JSON document. The attributes
  in the expression must be separated by commas.</p> <p>If no attribute names are
  specified, then all attributes will be returned. If any of the requested attributes
  are not found, they will not appear in the result.</p> <p>For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> </li> <li>
  <p> <code>AttributesToGet</code> - This is a legacy parameter. Use <code>ProjectionExpression</code>
  instead. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\">AttributesToGet</a>
  in the <i>Amazon DynamoDB Developer Guide</i>. </p> </li> </ul>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}}s:8:\"required\";a:1:{i:0;s:12:\"RequestItems\";}s:4:\"type\";s:6:\"object\";}s:18:\"BatchGetItemOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:63:\"Represents
  the output of a <code>BatchGetItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:9:\"Responses\";O:8:\"stdClass\":1:{s:5:\"Music\";a:3:{i:0;O:8:\"stdClass\":1:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"Somewhat
  Famous\";}}i:1;O:8:\"stdClass\":1:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:14:\"Blue
  Sky Blues\";}}i:2;O:8:\"stdClass\":1:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:16:\"Louder
  Than Ever\";}}}}}s:10:\"properties\";O:8:\"stdClass\":3:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/ConsumedCapacityMultiple\";s:11:\"description\";s:323:\"<p>The
  read capacity units consumed by the entire <code>BatchGetItem</code> operation.</p>
  <p>Each element consists of:</p> <ul> <li> <p> <code>TableName</code> - The table
  that consumed the provisioned throughput.</p> </li> <li> <p> <code>CapacityUnits</code>
  - The total number of capacity units consumed.</p> </li> </ul>\";}s:9:\"Responses\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/BatchGetResponseMap\";s:11:\"description\";s:187:\"A
  map of table name to a list of items. Each object in <code>Responses</code> consists
  of a table name, along with a map of attribute data consisting of the data type
  and attribute value.\";}s:15:\"UnprocessedKeys\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/BatchGetRequestMap\";s:11:\"description\";s:1086:\"<p>A
  map of tables and their respective keys that were not processed with the current
  response. The <code>UnprocessedKeys</code> value is in the same form as <code>RequestItems</code>,
  so the value can be provided directly to a subsequent <code>BatchGetItem</code>
  operation. For more information, see <code>RequestItems</code> in the Request Parameters
  section.</p> <p>Each element consists of:</p> <ul> <li> <p> <code>Keys</code> -
  An array of primary key attribute values that define specific items in the table.</p>
  </li> <li> <p> <code>ProjectionExpression</code> - One or more attributes to be
  retrieved from the table or index. By default, all attributes are returned. If a
  requested attribute is not found, it does not appear in the result.</p> </li> <li>
  <p> <code>ConsistentRead</code> - The consistency of a read operation. If set to
  <code>true</code>, then a strongly consistent read is used; otherwise, an eventually
  consistent read is used.</p> </li> </ul> <p>If there are no unprocessed keys remaining,
  the response contains an empty <code>UnprocessedKeys</code> map.</p>\";}}s:4:\"type\";s:6:\"object\";}s:18:\"BatchGetRequestMap\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/KeysAndAttributes\";}}s:4:\"type\";s:6:\"object\";}s:8:\"maxItems\";i:100;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:19:\"BatchGetResponseMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/ItemList\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:19:\"BatchWriteItemInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:64:\"Represents
  the input of a <code>BatchWriteItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:12:\"RequestItems\";O:8:\"stdClass\":1:{s:5:\"Music\";a:3:{i:0;O:8:\"stdClass\":1:{s:10:\"PutRequest\";O:8:\"stdClass\":1:{s:4:\"Item\";O:8:\"stdClass\":3:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"Somewhat
  Famous\";}s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No One You Know\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:13:\"Call
  Me Today\";}}}}i:1;O:8:\"stdClass\":1:{s:10:\"PutRequest\";O:8:\"stdClass\":1:{s:4:\"Item\";O:8:\"stdClass\":3:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:16:\"Songs
  About Life\";}s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Acme Band\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Happy
  Day\";}}}}i:2;O:8:\"stdClass\":1:{s:10:\"PutRequest\";O:8:\"stdClass\":1:{s:4:\"Item\";O:8:\"stdClass\":3:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:14:\"Blue
  Sky Blues\";}s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No One You Know\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:19:\"Scared
  of My Shadow\";}}}}}}}s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"RequestItems\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/BatchWriteItemRequestMap\";s:11:\"description\";s:1645:\"<p>A
  map of one or more table names and, for each table, a list of operations to be performed
  (<code>DeleteRequest</code> or <code>PutRequest</code>). Each element in the map
  consists of the following:</p> <ul> <li> <p> <code>DeleteRequest</code> - Perform
  a <code>DeleteItem</code> operation on the specified item. The item to be deleted
  is identified by a <code>Key</code> subelement:</p> <ul> <li> <p> <code>Key</code>
  - A map of primary key attribute values that uniquely identify the item. Each entry
  in this map consists of an attribute name and an attribute value. For each primary
  key, you must provide <i>all</i> of the key attributes. For example, with a simple
  primary key, you only need to provide a value for the partition key. For a composite
  primary key, you must provide values for <i>both</i> the partition key and the sort
  key.</p> </li> </ul> </li> <li> <p> <code>PutRequest</code> - Perform a <code>PutItem</code>
  operation on the specified item. The item to be put is identified by an <code>Item</code>
  subelement:</p> <ul> <li> <p> <code>Item</code> - A map of attributes and their
  values. Each entry in this map consists of an attribute name and an attribute value.
  Attribute values must not be null; string and binary type attributes must have lengths
  greater than zero; and set type attributes must not be empty. Requests that contain
  empty values will be rejected with a <code>ValidationException</code> exception.</p>
  <p>If you specify any attributes that are part of an index key, then the data types
  for those attributes must match those of the schema in the table's attribute definition.</p>
  </li> </ul> </li> </ul>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:27:\"ReturnItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ReturnItemCollectionMetrics\";s:11:\"description\";s:291:\"Determines
  whether item collection metrics are returned. If set to <code>SIZE</code>, the response
  includes statistics about item collections, if any, that were modified during the
  operation are returned in the response. If set to <code>NONE</code> (the default),
  no statistics are returned.\";}}s:8:\"required\";a:1:{i:0;s:12:\"RequestItems\";}s:4:\"type\";s:6:\"object\";}s:20:\"BatchWriteItemOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:65:\"Represents
  the output of a <code>BatchWriteItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/ConsumedCapacityMultiple\";s:11:\"description\";s:320:\"<p>The
  capacity units consumed by the entire <code>BatchWriteItem</code> operation.</p>
  <p>Each element consists of:</p> <ul> <li> <p> <code>TableName</code> - The table
  that consumed the provisioned throughput.</p> </li> <li> <p> <code>CapacityUnits</code>
  - The total number of capacity units consumed.</p> </li> </ul>\";}s:21:\"ItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:43:\"#/definitions/ItemCollectionMetricsPerTable\";s:11:\"description\";s:1021:\"<p>A
  list of tables that were processed by <code>BatchWriteItem</code> and, for each
  table, information about any item collections that were affected by individual <code>DeleteItem</code>
  or <code>PutItem</code> operations.</p> <p>Each entry consists of the following
  subelements:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition key
  value of the item collection. This is the same as the partition key value of the
  item.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate of item
  collection size, expressed in GB. This is a two-element array containing a lower
  bound and an upper bound for the estimate. The estimate includes the size of all
  the items in the table, plus the size of all attributes projected into all of the
  local secondary indexes on the table. Use this estimate to measure whether a local
  secondary index is approaching its size limit.</p> <p>The estimate is subject to
  change over time; therefore, do not rely on the precision or accuracy of the estimate.</p>
  </li> </ul>\";}s:16:\"UnprocessedItems\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/BatchWriteItemRequestMap\";s:11:\"description\";s:1817:\"<p>A
  map of tables and requests against those tables that were not processed. The <code>UnprocessedItems</code>
  value is in the same form as <code>RequestItems</code>, so you can provide this
  value directly to a subsequent <code>BatchGetItem</code> operation. For more information,
  see <code>RequestItems</code> in the Request Parameters section.</p> <p>Each <code>UnprocessedItems</code>
  entry consists of a table name and, for that table, a list of operations to perform
  (<code>DeleteRequest</code> or <code>PutRequest</code>).</p> <ul> <li> <p> <code>DeleteRequest</code>
  - Perform a <code>DeleteItem</code> operation on the specified item. The item to
  be deleted is identified by a <code>Key</code> subelement:</p> <ul> <li> <p> <code>Key</code>
  - A map of primary key attribute values that uniquely identify the item. Each entry
  in this map consists of an attribute name and an attribute value.</p> </li> </ul>
  </li> <li> <p> <code>PutRequest</code> - Perform a <code>PutItem</code> operation
  on the specified item. The item to be put is identified by an <code>Item</code>
  subelement:</p> <ul> <li> <p> <code>Item</code> - A map of attributes and their
  values. Each entry in this map consists of an attribute name and an attribute value.
  Attribute values must not be null; string and binary type attributes must have lengths
  greater than zero; and set type attributes must not be empty. Requests that contain
  empty values will be rejected with a <code>ValidationException</code> exception.</p>
  <p>If you specify any attributes that are part of an index key, then the data types
  for those attributes must match those of the schema in the table's attribute definition.</p>
  </li> </ul> </li> </ul> <p>If there are no unprocessed items remaining, the response
  contains an empty <code>UnprocessedItems</code> map.</p>\";}}s:4:\"type\";s:6:\"object\";}s:24:\"BatchWriteItemRequestMap\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/WriteRequests\";}}s:4:\"type\";s:6:\"object\";}s:8:\"maxItems\";i:25;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:20:\"BinaryAttributeValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"BinarySetAttributeValue\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/BinaryAttributeValue\";}s:4:\"type\";s:5:\"array\";}s:21:\"BooleanAttributeValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"BooleanObject\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"Capacity\";O:8:\"stdClass\":3:{s:11:\"description\";s:89:\"Represents
  the amount of provisioned throughput capacity consumed on a table or an index.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:13:\"CapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ConsumedCapacityUnits\";s:11:\"description\";s:67:\"The
  total number of capacity units consumed on a table or an index.\";}}s:4:\"type\";s:6:\"object\";}s:18:\"ComparisonOperator\";O:8:\"stdClass\":2:{s:4:\"enum\";a:13:{i:0;s:2:\"EQ\";i:1;s:2:\"NE\";i:2;s:2:\"IN\";i:3;s:2:\"LE\";i:4;s:2:\"LT\";i:5;s:2:\"GE\";i:6;s:2:\"GT\";i:7;s:7:\"BETWEEN\";i:8;s:8:\"NOT_NULL\";i:9;s:4:\"NULL\";i:10;s:8:\"CONTAINS\";i:11;s:12:\"NOT_CONTAINS\";i:12;s:11:\"BEGINS_WITH\";}s:4:\"type\";s:6:\"string\";}s:9:\"Condition\";O:8:\"stdClass\":4:{s:11:\"description\";s:767:\"<p>Represents
  the selection criteria for a <code>Query</code> or <code>Scan</code> operation:</p>
  <ul> <li> <p>For a <code>Query</code> operation, <code>Condition</code> is used
  for specifying the <code>KeyConditions</code> to use when querying a table or an
  index. For <code>KeyConditions</code>, only the following comparison operators are
  supported:</p> <p> <code>EQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN</code> </p>
  <p> <code>Condition</code> is also used in a <code>QueryFilter</code>, which evaluates
  the query results and returns only the desired values.</p> </li> <li> <p>For a <code>Scan</code>
  operation, <code>Condition</code> is used in a <code>ScanFilter</code>, which evaluates
  the scan results and returns only the desired values.</p> </li> </ul>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:18:\"AttributeValueList\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/AttributeValueList\";s:11:\"description\";s:718:\"<p>One
  or more values to evaluate against the supplied attribute. The number of values
  in the list depends on the <code>ComparisonOperator</code> being used.</p> <p>For
  type Number, value comparisons are numeric.</p> <p>String value comparisons for
  greater than, equals, or less than are based on ASCII character code values. For
  example, <code>a</code> is greater than <code>A</code>, and <code>a</code> is greater
  than <code>B</code>. For a list of code values, see <a href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.</p>
  <p>For Binary, DynamoDB treats each byte of the binary data as unsigned when it
  compares binary values.</p>\";}s:18:\"ComparisonOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/ComparisonOperator\";s:11:\"description\";s:8162:\"<p>A
  comparator for evaluating attributes. For example, equals, greater than, less than,
  etc.</p> <p>The following comparison operators are available:</p> <p> <code>EQ |
  NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
  | IN | BETWEEN</code> </p> <p>The following are descriptions of each comparison
  operator.</p> <ul> <li> <p> <code>EQ</code> : Equal. <code>EQ</code> is supported
  for all data types, including lists and maps.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  Binary, String Set, Number Set, or Binary Set. If an item contains an <code>AttributeValue</code>
  element of a different type than the one provided in the request, the value does
  not match. For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not equal <code>{\"NS\":[\"6\", \"2\", \"1\"]}</code>.</p>
  <p/> </li> <li> <p> <code>NE</code> : Not equal. <code>NE</code> is supported for
  all data types, including lists and maps.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> of type String, Number, Binary,
  String Set, Number Set, or Binary Set. If an item contains an <code>AttributeValue</code>
  of a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not equal <code>{\"NS\":[\"6\", \"2\", \"1\"]}</code>.</p>
  <p/> </li> <li> <p> <code>LE</code> : Less than or equal. </p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  or Binary (not a set type). If an item contains an <code>AttributeValue</code> element
  of a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code>.</p> <p/> </li> <li> <p> <code>LT</code> : Less than. </p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> of type String, Number, or Binary
  (not a set type). If an item contains an <code>AttributeValue</code> element of
  a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code>.</p> <p/> </li> <li> <p> <code>GE</code> : Greater than or equal.
  </p> <p> <code>AttributeValueList</code> can contain only one <code>AttributeValue</code>
  element of type String, Number, or Binary (not a set type). If an item contains
  an <code>AttributeValue</code> element of a different type than the one provided
  in the request, the value does not match. For example, <code>{\"S\":\"6\"}</code>
  does not equal <code>{\"N\":\"6\"}</code>. Also, <code>{\"N\":\"6\"}</code> does
  not compare to <code>{\"NS\":[\"6\", \"2\", \"1\"]}</code>.</p> <p/> </li> <li>
  <p> <code>GT</code> : Greater than. </p> <p> <code>AttributeValueList</code> can
  contain only one <code>AttributeValue</code> element of type String, Number, or
  Binary (not a set type). If an item contains an <code>AttributeValue</code> element
  of a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code>.</p> <p/> </li> <li> <p> <code>NOT_NULL</code> : The attribute exists.
  <code>NOT_NULL</code> is supported for all data types, including lists and maps.</p>
  <note> <p>This operator tests for the existence of an attribute, not its data type.
  If the data type of attribute \"<code>a</code>\" is null, and you evaluate it using
  <code>NOT_NULL</code>, the result is a Boolean <code>true</code>. This result is
  because the attribute \"<code>a</code>\" exists; its data type is not relevant to
  the <code>NOT_NULL</code> comparison operator.</p> </note> </li> <li> <p> <code>NULL</code>
  : The attribute does not exist. <code>NULL</code> is supported for all data types,
  including lists and maps.</p> <note> <p>This operator tests for the nonexistence
  of an attribute, not its data type. If the data type of attribute \"<code>a</code>\"
  is null, and you evaluate it using <code>NULL</code>, the result is a Boolean <code>false</code>.
  This is because the attribute \"<code>a</code>\" exists; its data type is not relevant
  to the <code>NULL</code> comparison operator.</p> </note> </li> <li> <p> <code>CONTAINS</code>
  : Checks for a subsequence, or value in a set.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  or Binary (not a set type). If the target attribute of the comparison is of type
  String, then the operator checks for a substring match. If the target attribute
  of the comparison is of type Binary, then the operator looks for a subsequence of
  the target that matches the input. If the target attribute of the comparison is
  a set (\"<code>SS</code>\", \"<code>NS</code>\", or \"<code>BS</code>\"), then the
  operator evaluates to true if it finds an exact match with any member of the set.</p>
  <p>CONTAINS is supported for lists: When evaluating \"<code>a CONTAINS b</code>\",
  \"<code>a</code>\" can be a list; however, \"<code>b</code>\" cannot be a set, a
  map, or a list.</p> </li> <li> <p> <code>NOT_CONTAINS</code> : Checks for absence
  of a subsequence, or absence of a value in a set.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  or Binary (not a set type). If the target attribute of the comparison is a String,
  then the operator checks for the absence of a substring match. If the target attribute
  of the comparison is Binary, then the operator checks for the absence of a subsequence
  of the target that matches the input. If the target attribute of the comparison
  is a set (\"<code>SS</code>\", \"<code>NS</code>\", or \"<code>BS</code>\"), then
  the operator evaluates to true if it <i>does not</i> find an exact match with any
  member of the set.</p> <p>NOT_CONTAINS is supported for lists: When evaluating \"<code>a
  NOT CONTAINS b</code>\", \"<code>a</code>\" can be a list; however, \"<code>b</code>\"
  cannot be a set, a map, or a list.</p> </li> <li> <p> <code>BEGINS_WITH</code> :
  Checks for a prefix. </p> <p> <code>AttributeValueList</code> can contain only one
  <code>AttributeValue</code> of type String or Binary (not a Number or a set type).
  The target attribute of the comparison must be of type String or Binary (not a Number
  or a set type).</p> <p/> </li> <li> <p> <code>IN</code> : Checks for matching elements
  in a list.</p> <p> <code>AttributeValueList</code> can contain one or more <code>AttributeValue</code>
  elements of type String, Number, or Binary. These attributes are compared against
  an existing attribute of an item. If any elements of the input are equal to the
  item attribute, the expression evaluates to true.</p> </li> <li> <p> <code>BETWEEN</code>
  : Greater than or equal to the first value, and less than or equal to the second
  value. </p> <p> <code>AttributeValueList</code> must contain two <code>AttributeValue</code>
  elements of the same type, either String, Number, or Binary (not a set type). A
  target attribute matches if the target value is greater than, or equal to, the first
  element and less than, or equal to, the second element. If an item contains an <code>AttributeValue</code>
  element of a different type than the one provided in the request, the value does
  not match. For example, <code>{\"S\":\"6\"}</code> does not compare to <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code> </p> </li> </ul> <p>For usage examples of <code>AttributeValueList</code>
  and <code>ComparisonOperator</code>, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.html\">Legacy
  Conditional Parameters</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:8:\"required\";a:1:{i:0;s:18:\"ComparisonOperator\";}s:4:\"type\";s:6:\"object\";}s:19:\"ConditionExpression\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:31:\"ConditionalCheckFailedException\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"A
  condition specified in the operation could not be evaluated.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:31:\"The
  conditional request failed.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"ConditionalOperator\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:3:\"AND\";i:1;s:2:\"OR\";}s:4:\"type\";s:6:\"string\";}s:14:\"ConsistentRead\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"ConsumedCapacity\";O:8:\"stdClass\":3:{s:11:\"description\";s:475:\"The
  capacity units consumed by an operation. The data returned includes the total provisioned
  throughput consumed, along with statistics for the table and any indexes involved
  in the operation. <code>ConsumedCapacity</code> is only returned if the request
  asked for it. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:13:\"CapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ConsumedCapacityUnits\";s:11:\"description\";s:61:\"The
  total number of capacity units consumed by the operation.\";}s:22:\"GlobalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/SecondaryIndexesCapacityMap\";s:11:\"description\";s:81:\"The
  amount of throughput consumed on each global index affected by the operation.\";}s:21:\"LocalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/SecondaryIndexesCapacityMap\";s:11:\"description\";s:80:\"The
  amount of throughput consumed on each local index affected by the operation.\";}s:5:\"Table\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/Capacity\";s:11:\"description\";s:73:\"The
  amount of throughput consumed on the table affected by the operation.\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:57:\"The
  name of the table that was affected by the operation.\";}}s:4:\"type\";s:6:\"object\";}s:24:\"ConsumedCapacityMultiple\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";}s:4:\"type\";s:5:\"array\";}s:21:\"ConsumedCapacityUnits\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:28:\"ContinuousBackupsDescription\";O:8:\"stdClass\":4:{s:11:\"description\";s:83:\"Represents
  the continuous backups and point in time recovery settings on the table.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:23:\"ContinuousBackupsStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/ContinuousBackupsStatus\";s:11:\"description\";s:92:\"
  <code>ContinuousBackupsStatus</code> can be one of the following states : ENABLED,
  DISABLED\";}s:30:\"PointInTimeRecoveryDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:44:\"#/definitions/PointInTimeRecoveryDescription\";s:11:\"description\";s:76:\"The
  description of the point in time recovery settings applied to the table.\";}}s:8:\"required\";a:1:{i:0;s:23:\"ContinuousBackupsStatus\";}s:4:\"type\";s:6:\"object\";}s:23:\"ContinuousBackupsStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:7:\"ENABLED\";i:1;s:8:\"DISABLED\";}s:4:\"type\";s:6:\"string\";}s:37:\"ContinuousBackupsUnavailableException\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Backups
  have not yet been enabled for this table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:17:\"CreateBackupInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"BackupName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/BackupName\";s:11:\"description\";s:30:\"Specified
  name for the backup.\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  name of the table.\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:10:\"BackupName\";}s:4:\"type\";s:6:\"object\";}s:18:\"CreateBackupOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:13:\"BackupDetails\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BackupDetails\";s:11:\"description\";s:57:\"Contains
  the details of the backup created for the table.\";}}s:4:\"type\";s:6:\"object\";}s:32:\"CreateGlobalSecondaryIndexAction\";O:8:\"stdClass\":4:{s:11:\"description\";s:73:\"Represents
  a new global secondary index to be added to an existing table.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:53:\"The
  name of the global secondary index to be created.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:46:\"The
  key schema for the global secondary index.\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:192:\"Represents
  attributes that are copied (projected) from the table into an index. These are in
  addition to the primary key attributes and index key attributes, which are automatically
  projected.\";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:313:\"<p>Represents
  the provisioned throughput settings for the specified global secondary index.</p>
  <p>For current minimum and maximum provisioned throughput values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:8:\"required\";a:4:{i:0;s:9:\"IndexName\";i:1;s:9:\"KeySchema\";i:2;s:10:\"Projection\";i:3;s:21:\"ProvisionedThroughput\";}s:4:\"type\";s:6:\"object\";}s:22:\"CreateGlobalTableInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  global table name.\";}s:16:\"ReplicationGroup\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ReplicaList\";s:11:\"description\";s:55:\"The
  regions where the global table needs to be created.\";}}s:8:\"required\";a:2:{i:0;s:15:\"GlobalTableName\";i:1;s:16:\"ReplicationGroup\";}s:4:\"type\";s:6:\"object\";}s:23:\"CreateGlobalTableOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:22:\"GlobalTableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/GlobalTableDescription\";s:11:\"description\";s:41:\"Contains
  the details of the global table.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"CreateReplicaAction\";O:8:\"stdClass\":4:{s:11:\"description\";s:33:\"Represents
  a replica to be added.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:38:\"The
  region of the replica to be added.\";}}s:8:\"required\";a:1:{i:0;s:10:\"RegionName\";}s:4:\"type\";s:6:\"object\";}s:16:\"CreateTableInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:61:\"Represents
  the input of a <code>CreateTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":4:{s:20:\"AttributeDefinitions\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:13:\"AttributeType\";s:1:\"S\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:13:\"AttributeType\";s:1:\"S\";}}s:9:\"KeySchema\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:7:\"KeyType\";s:4:\"HASH\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:7:\"KeyType\";s:5:\"RANGE\";}}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:17:\"ReadCapacityUnits\";i:5;s:18:\"WriteCapacityUnits\";i:5;}s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:20:\"AttributeDefinitions\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/AttributeDefinitions\";s:11:\"description\";s:78:\"An
  array of attributes that describe the key schema for the table and indexes.\";}s:22:\"GlobalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/GlobalSecondaryIndexList\";s:11:\"description\";s:1729:\"<p>One
  or more global secondary indexes (the maximum is five) to be created on the table.
  Each global secondary index in the array includes the following:</p> <ul> <li> <p>
  <code>IndexName</code> - The name of the global secondary index. Must be unique
  only for this table.</p> <p/> </li> <li> <p> <code>KeySchema</code> - Specifies
  the key schema for the global secondary index.</p> </li> <li> <p> <code>Projection</code>
  - Specifies attributes that are copied (projected) from the table into the index.
  These are in addition to the primary key attributes and index key attributes, which
  are automatically projected. Each attribute specification is composed of:</p> <ul>
  <li> <p> <code>ProjectionType</code> - One of the following:</p> <ul> <li> <p> <code>KEYS_ONLY</code>
  - Only the index and primary keys are projected into the index.</p> </li> <li> <p>
  <code>INCLUDE</code> - Only the specified table attributes are projected into the
  index. The list of projected attributes are in <code>NonKeyAttributes</code>.</p>
  </li> <li> <p> <code>ALL</code> - All of the table attributes are projected into
  the index.</p> </li> </ul> </li> <li> <p> <code>NonKeyAttributes</code> - A list
  of one or more non-key attribute names that are projected into the secondary index.
  The total count of attributes provided in <code>NonKeyAttributes</code>, summed
  across all of the secondary indexes, must not exceed 20. If you project the same
  attribute into two different indexes, this counts as two distinct attributes when
  determining the total.</p> </li> </ul> </li> <li> <p> <code>ProvisionedThroughput</code>
  - The provisioned throughput settings for the global secondary index, consisting
  of read and write capacity units.</p> </li> </ul>\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:1886:\"<p>Specifies
  the attributes that make up the primary key for a table or an index. The attributes
  in <code>KeySchema</code> must also be defined in the <code>AttributeDefinitions</code>
  array. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html\">Data
  Model</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>Each <code>KeySchemaElement</code>
  in the array is composed of:</p> <ul> <li> <p> <code>AttributeName</code> - The
  name of this key attribute.</p> </li> <li> <p> <code>KeyType</code> - The role that
  the key attribute will assume:</p> <ul> <li> <p> <code>HASH</code> - partition key</p>
  </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> </li> </ul> <note>
  <p>The partition key of an item is also known as its <i>hash attribute</i>. The
  term \"hash attribute\" derives from DynamoDB' usage of an internal hash function
  to evenly distribute data items across partitions, based on their partition key
  values.</p> <p>The sort key of an item is also known as its <i>range attribute</i>.
  The term \"range attribute\" derives from the way DynamoDB stores items with the
  same partition key physically close together, in sorted order by the sort key value.</p>
  </note> <p>For a simple primary key (partition key), you must provide exactly one
  element with a <code>KeyType</code> of <code>HASH</code>.</p> <p>For a composite
  primary key (partition key and sort key), you must provide exactly two elements,
  in this order: The first element must have a <code>KeyType</code> of <code>HASH</code>,
  and the second element must have a <code>KeyType</code> of <code>RANGE</code>.</p>
  <p>For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key\">Specifying
  the Primary Key</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:21:\"LocalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/LocalSecondaryIndexList\";s:11:\"description\";s:1802:\"<p>One
  or more local secondary indexes (the maximum is five) to be created on the table.
  Each index is scoped to a given partition key value. There is a 10 GB size limit
  per partition key value; otherwise, the size of a local secondary index is unconstrained.</p>
  <p>Each local secondary index in the array includes the following:</p> <ul> <li>
  <p> <code>IndexName</code> - The name of the local secondary index. Must be unique
  only for this table.</p> <p/> </li> <li> <p> <code>KeySchema</code> - Specifies
  the key schema for the local secondary index. The key schema must begin with the
  same partition key as the table.</p> </li> <li> <p> <code>Projection</code> - Specifies
  attributes that are copied (projected) from the table into the index. These are
  in addition to the primary key attributes and index key attributes, which are automatically
  projected. Each attribute specification is composed of:</p> <ul> <li> <p> <code>ProjectionType</code>
  - One of the following:</p> <ul> <li> <p> <code>KEYS_ONLY</code> - Only the index
  and primary keys are projected into the index.</p> </li> <li> <p> <code>INCLUDE</code>
  - Only the specified table attributes are projected into the index. The list of
  projected attributes are in <code>NonKeyAttributes</code>.</p> </li> <li> <p> <code>ALL</code>
  - All of the table attributes are projected into the index.</p> </li> </ul> </li>
  <li> <p> <code>NonKeyAttributes</code> - A list of one or more non-key attribute
  names that are projected into the secondary index. The total count of attributes
  provided in <code>NonKeyAttributes</code>, summed across all of the secondary indexes,
  must not exceed 20. If you project the same attribute into two different indexes,
  this counts as two distinct attributes when determining the total.</p> </li> </ul>
  </li> </ul>\";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:378:\"<p>Represents
  the provisioned throughput settings for a specified table or index. The settings
  can be modified using the <code>UpdateTable</code> operation.</p> <p>For current
  minimum and maximum provisioned throughput values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:16:\"SSESpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/SSESpecification\";s:11:\"description\";s:62:\"Represents
  the settings used to enable server-side encryption.\";}s:19:\"StreamSpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/StreamSpecification\";s:11:\"description\";s:945:\"<p>The
  settings for DynamoDB Streams on the table. These settings consist of:</p> <ul>
  <li> <p> <code>StreamEnabled</code> - Indicates whether Streams is to be enabled
  (true) or disabled (false).</p> </li> <li> <p> <code>StreamViewType</code> - When
  an item in the table is modified, <code>StreamViewType</code> determines what information
  is written to the table's stream. Valid values for <code>StreamViewType</code> are:</p>
  <ul> <li> <p> <code>KEYS_ONLY</code> - Only the key attributes of the modified item
  are written to the stream.</p> </li> <li> <p> <code>NEW_IMAGE</code> - The entire
  item, as it appears after it was modified, is written to the stream.</p> </li> <li>
  <p> <code>OLD_IMAGE</code> - The entire item, as it appeared before it was modified,
  is written to the stream.</p> </li> <li> <p> <code>NEW_AND_OLD_IMAGES</code> - Both
  the new and the old item images of the item are written to the stream.</p> </li>
  </ul> </li> </ul>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:32:\"The
  name of the table to create.\";}}s:8:\"required\";a:4:{i:0;s:20:\"AttributeDefinitions\";i:1;s:9:\"TableName\";i:2;s:9:\"KeySchema\";i:3;s:21:\"ProvisionedThroughput\";}s:4:\"type\";s:6:\"object\";}s:17:\"CreateTableOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Represents
  the output of a <code>CreateTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":8:{s:20:\"AttributeDefinitions\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:13:\"AttributeType\";s:1:\"S\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:13:\"AttributeType\";s:1:\"S\";}}s:16:\"CreationDateTime\";s:14:\"1421866952.062\";s:9:\"ItemCount\";i:0;s:9:\"KeySchema\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:7:\"KeyType\";s:4:\"HASH\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:7:\"KeyType\";s:5:\"RANGE\";}}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:17:\"ReadCapacityUnits\";i:5;s:18:\"WriteCapacityUnits\";i:5;}s:9:\"TableName\";s:5:\"Music\";s:14:\"TableSizeBytes\";i:0;s:11:\"TableStatus\";s:8:\"CREATING\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TableDescription\";s:11:\"description\";s:39:\"Represents
  the properties of the table.\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Date\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:17:\"DeleteBackupInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"BackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:35:\"The
  ARN associated with the backup.\";}}s:8:\"required\";a:1:{i:0;s:9:\"BackupArn\";}s:4:\"type\";s:6:\"object\";}s:18:\"DeleteBackupOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"BackupDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/BackupDescription\";s:11:\"description\";s:61:\"Contains
  the description of the backup created for the table.\";}}s:4:\"type\";s:6:\"object\";}s:32:\"DeleteGlobalSecondaryIndexAction\";O:8:\"stdClass\":4:{s:11:\"description\";s:73:\"Represents
  a global secondary index to be deleted from an existing table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:53:\"The
  name of the global secondary index to be deleted.\";}}s:8:\"required\";a:1:{i:0;s:9:\"IndexName\";}s:4:\"type\";s:6:\"object\";}s:15:\"DeleteItemInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:60:\"Represents
  the input of a <code>DeleteItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":2:{s:3:\"Key\";O:8:\"stdClass\":2:{s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No
  One You Know\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:19:\"Scared of
  My Shadow\";}}s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:19:\"ConditionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionExpression\";s:11:\"description\";s:773:\"<p>A
  condition that must be satisfied in order for a conditional <code>DeleteItem</code>
  to succeed.</p> <p>An expression can contain any of the following:</p> <ul> <li>
  <p>Functions: <code>attribute_exists | attribute_not_exists | attribute_type | contains
  | begins_with | size</code> </p> <p>These function names are case-sensitive.</p>
  </li> <li> <p>Comparison operators: <code>= | &lt;&gt; | &lt; | &gt; | &lt;= | &gt;=
  | BETWEEN | IN </code> </p> </li> <li> <p> Logical operators: <code>AND | OR | NOT</code>
  </p> </li> </ul> <p>For more information on condition expressions, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:19:\"ConditionalOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionalOperator\";s:11:\"description\";s:297:\"This
  is a legacy parameter. Use <code>ConditionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\">ConditionalOperator</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:8:\"Expected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ExpectedAttributeMap\";s:11:\"description\";s:275:\"This
  is a legacy parameter. Use <code>ConditionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.Expected.html\">Expected</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ExpressionAttributeValueMap\";s:11:\"description\";s:935:\"<p>One
  or more values that can be substituted in an expression.</p> <p>Use the <b>:</b>
  (colon) character in an expression to dereference an attribute value. For example,
  suppose that you wanted to check whether the value of the <i>ProductStatus</i> attribute
  was one of the following: </p> <p> <code>Available | Backordered | Discontinued</code>
  </p> <p>You would first need to specify <code>ExpressionAttributeValues</code> as
  follows:</p> <p> <code>{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"},
  \":disc\":{\"S\":\"Discontinued\"} }</code> </p> <p>You could then use these values
  in an expression, such as this:</p> <p> <code>ProductStatus IN (:avail, :back, :disc)</code>
  </p> <p>For more information on expression attribute values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:3:\"Key\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:385:\"<p>A
  map of attribute names to <code>AttributeValue</code> objects, representing the
  primary key of the item to delete.</p> <p>For the primary key, you must provide
  all of the attributes. For example, with a simple primary key, you only need to
  provide a value for the partition key. For a composite primary key, you must provide
  values for both the partition key and the sort key.</p>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:27:\"ReturnItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ReturnItemCollectionMetrics\";s:11:\"description\";s:291:\"Determines
  whether item collection metrics are returned. If set to <code>SIZE</code>, the response
  includes statistics about item collections, if any, that were modified during the
  operation are returned in the response. If set to <code>NONE</code> (the default),
  no statistics are returned.\";}s:12:\"ReturnValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ReturnValue\";s:11:\"description\";s:693:\"<p>Use
  <code>ReturnValues</code> if you want to get the item attributes as they appeared
  before they were deleted. For <code>DeleteItem</code>, the valid values are:</p>
  <ul> <li> <p> <code>NONE</code> - If <code>ReturnValues</code> is not specified,
  or if its value is <code>NONE</code>, then nothing is returned. (This setting is
  the default for <code>ReturnValues</code>.)</p> </li> <li> <p> <code>ALL_OLD</code>
  - The content of the old item is returned.</p> </li> </ul> <note> <p>The <code>ReturnValues</code>
  parameter is used by several DynamoDB operations; however, <code>DeleteItem</code>
  does not recognize any values other than <code>NONE</code> or <code>ALL_OLD</code>.</p>
  </note>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:52:\"The
  name of the table from which to delete the item.\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:3:\"Key\";}s:4:\"type\";s:6:\"object\";}s:16:\"DeleteItemOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"Represents
  the output of a <code>DeleteItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:13:\"CapacityUnits\";i:1;s:9:\"TableName\";s:5:\"Music\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"Attributes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/AttributeMap\";s:11:\"description\";s:268:\"A
  map of attribute names to <code>AttributeValue</code> objects, representing the
  item as it appeared before the <code>DeleteItem</code> operation. This map appears
  in the response only if <code>ReturnValues</code> was specified as <code>ALL_OLD</code>
  in the request.\";}s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";s:11:\"description\";s:539:\"The
  capacity units consumed by the <code>DeleteItem</code> operation. The data returned
  includes the total provisioned throughput consumed, along with statistics for the
  table and any indexes involved in the operation. <code>ConsumedCapacity</code> is
  only returned if the <code>ReturnConsumedCapacity</code> parameter was specified.
  For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:21:\"ItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ItemCollectionMetrics\";s:11:\"description\";s:1158:\"<p>Information
  about item collections, if any, that were affected by the <code>DeleteItem</code>
  operation. <code>ItemCollectionMetrics</code> is only returned if the <code>ReturnItemCollectionMetrics</code>
  parameter was specified. If the table does not have any local secondary indexes,
  this information is not returned in the response.</p> <p>Each <code>ItemCollectionMetrics</code>
  element consists of:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition
  key value of the item collection. This is the same as the partition key value of
  the item itself.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate
  of item collection size, in gigabytes. This value is a two-element array containing
  a lower bound and an upper bound for the estimate. The estimate includes the size
  of all the items in the table, plus the size of all attributes projected into all
  of the local secondary indexes on that table. Use this estimate to measure whether
  a local secondary index is approaching its size limit.</p> <p>The estimate is subject
  to change over time; therefore, do not rely on the precision or accuracy of the
  estimate.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:19:\"DeleteReplicaAction\";O:8:\"stdClass\":4:{s:11:\"description\";s:35:\"Represents
  a replica to be removed.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:40:\"The
  region of the replica to be removed.\";}}s:8:\"required\";a:1:{i:0;s:10:\"RegionName\";}s:4:\"type\";s:6:\"object\";}s:13:\"DeleteRequest\";O:8:\"stdClass\":4:{s:11:\"description\";s:79:\"Represents
  a request to perform a <code>DeleteItem</code> operation on an item.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"Key\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:222:\"A
  map of attribute name to attribute values, representing the primary key of the item
  to delete. All of the table's primary key attributes must be specified, and their
  data types must match those of the table's key schema.\";}}s:8:\"required\";a:1:{i:0;s:3:\"Key\";}s:4:\"type\";s:6:\"object\";}s:16:\"DeleteTableInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:61:\"Represents
  the input of a <code>DeleteTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:32:\"The
  name of the table to delete.\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:17:\"DeleteTableOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Represents
  the output of a <code>DeleteTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":5:{s:9:\"ItemCount\";i:0;s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":3:{s:22:\"NumberOfDecreasesToday\";i:1;s:17:\"ReadCapacityUnits\";i:5;s:18:\"WriteCapacityUnits\";i:5;}s:9:\"TableName\";s:5:\"Music\";s:14:\"TableSizeBytes\";i:0;s:11:\"TableStatus\";s:8:\"DELETING\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TableDescription\";s:11:\"description\";s:37:\"Represents
  the properties of a table.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"DescribeBackupInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"BackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:35:\"The
  ARN associated with the backup.\";}}s:8:\"required\";a:1:{i:0;s:9:\"BackupArn\";}s:4:\"type\";s:6:\"object\";}s:20:\"DescribeBackupOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"BackupDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/BackupDescription\";s:11:\"description\";s:61:\"Contains
  the description of the backup created for the table.\";}}s:4:\"type\";s:6:\"object\";}s:30:\"DescribeContinuousBackupsInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:115:\"Name
  of the table for which the customer wants to check the continuous backups and point
  in time recovery settings.\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:31:\"DescribeContinuousBackupsOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:28:\"ContinuousBackupsDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:42:\"#/definitions/ContinuousBackupsDescription\";s:11:\"description\";s:92:\"
  <code>ContinuousBackupsDescription</code> can be one of the following : ENABLED,
  DISABLED. \";}}s:4:\"type\";s:6:\"object\";}s:24:\"DescribeGlobalTableInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:29:\"The
  name of the global table.\";}}s:8:\"required\";a:1:{i:0;s:15:\"GlobalTableName\";}s:4:\"type\";s:6:\"object\";}s:25:\"DescribeGlobalTableOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:22:\"GlobalTableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/GlobalTableDescription\";s:11:\"description\";s:41:\"Contains
  the details of the global table.\";}}s:4:\"type\";s:6:\"object\";}s:32:\"DescribeGlobalTableSettingsInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:41:\"The
  name of the global table to describe.\";}}s:8:\"required\";a:1:{i:0;s:15:\"GlobalTableName\";}s:4:\"type\";s:6:\"object\";}s:33:\"DescribeGlobalTableSettingsOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:29:\"The
  name of the global table.\";}s:15:\"ReplicaSettings\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:44:\"#/definitions/ReplicaSettingsDescriptionList\";s:11:\"description\";s:50:\"The
  region specific settings for the global table.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"DescribeLimitsInput\";O:8:\"stdClass\":4:{s:11:\"description\";s:80:\"Represents
  the input of a <code>DescribeLimits</code> operation. Has no content.\";s:7:\"example\";O:8:\"stdClass\":0:{}s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:20:\"DescribeLimitsOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:65:\"Represents
  the output of a <code>DescribeLimits</code> operation.\";s:7:\"example\";O:8:\"stdClass\":4:{s:27:\"AccountMaxReadCapacityUnits\";i:20000;s:28:\"AccountMaxWriteCapacityUnits\";i:20000;s:25:\"TableMaxReadCapacityUnits\";i:10000;s:26:\"TableMaxWriteCapacityUnits\";i:10000;}s:10:\"properties\";O:8:\"stdClass\":4:{s:27:\"AccountMaxReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:121:\"The
  maximum total read capacity units that your account allows you to provision across
  all of your tables in this region.\";}s:28:\"AccountMaxWriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:122:\"The
  maximum total write capacity units that your account allows you to provision across
  all of your tables in this region.\";}s:25:\"TableMaxReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:214:\"The
  maximum read capacity units that your account allows you to provision for a new
  table that you are creating in this region, including the read capacity units provisioned
  for its global secondary indexes (GSIs).\";}s:26:\"TableMaxWriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:216:\"The
  maximum write capacity units that your account allows you to provision for a new
  table that you are creating in this region, including the write capacity units provisioned
  for its global secondary indexes (GSIs).\";}}s:4:\"type\";s:6:\"object\";}s:18:\"DescribeTableInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:63:\"Represents
  the input of a <code>DescribeTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:34:\"The
  name of the table to describe.\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:19:\"DescribeTableOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:64:\"Represents
  the output of a <code>DescribeTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:5:\"Table\";O:8:\"stdClass\":8:{s:20:\"AttributeDefinitions\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:13:\"AttributeType\";s:1:\"S\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:13:\"AttributeType\";s:1:\"S\";}}s:16:\"CreationDateTime\";s:14:\"1421866952.062\";s:9:\"ItemCount\";i:0;s:9:\"KeySchema\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:7:\"KeyType\";s:4:\"HASH\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:7:\"KeyType\";s:5:\"RANGE\";}}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":3:{s:22:\"NumberOfDecreasesToday\";i:1;s:17:\"ReadCapacityUnits\";i:5;s:18:\"WriteCapacityUnits\";i:5;}s:9:\"TableName\";s:5:\"Music\";s:14:\"TableSizeBytes\";i:0;s:11:\"TableStatus\";s:6:\"ACTIVE\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"Table\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TableDescription\";s:11:\"description\";s:28:\"The
  properties of the table.\";}}s:4:\"type\";s:6:\"object\";}s:23:\"DescribeTimeToLiveInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:38:\"The
  name of the table to be described.\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:24:\"DescribeTimeToLiveOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:21:\"TimeToLiveDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/TimeToLiveDescription\";s:11:\"description\";s:4:\"<p/>\";}}s:4:\"type\";s:6:\"object\";}s:12:\"ErrorMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"ExpectedAttributeMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ExpectedAttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:22:\"ExpectedAttributeValue\";O:8:\"stdClass\":3:{s:11:\"description\";s:1373:\"<p>Represents
  a condition to be compared with an attribute value. This condition can be used with
  <code>DeleteItem</code>, <code>PutItem</code> or <code>UpdateItem</code> operations;
  if the comparison evaluates to true, the operation succeeds; if not, the operation
  fails. You can use <code>ExpectedAttributeValue</code> in one of two different ways:</p>
  <ul> <li> <p>Use <code>AttributeValueList</code> to specify one or more values to
  compare against an attribute. Use <code>ComparisonOperator</code> to specify how
  you want to perform the comparison. If the comparison evaluates to true, then the
  conditional operation succeeds.</p> </li> <li> <p>Use <code>Value</code> to specify
  a value that DynamoDB will compare against an attribute. If the values match, then
  <code>ExpectedAttributeValue</code> evaluates to true and the conditional operation
  succeeds. Optionally, you can also set <code>Exists</code> to false, indicating
  that you <i>do not</i> expect to find the attribute value in the table. In this
  case, the conditional operation succeeds only if the comparison evaluates to false.</p>
  </li> </ul> <p> <code>Value</code> and <code>Exists</code> are incompatible with
  <code>AttributeValueList</code> and <code>ComparisonOperator</code>. Note that if
  you use both sets of parameters at once, DynamoDB will return a <code>ValidationException</code>
  exception.</p>\";s:10:\"properties\";O:8:\"stdClass\":4:{s:18:\"AttributeValueList\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/AttributeValueList\";s:11:\"description\";s:937:\"<p>One
  or more values to evaluate against the supplied attribute. The number of values
  in the list depends on the <code>ComparisonOperator</code> being used.</p> <p>For
  type Number, value comparisons are numeric.</p> <p>String value comparisons for
  greater than, equals, or less than are based on ASCII character code values. For
  example, <code>a</code> is greater than <code>A</code>, and <code>a</code> is greater
  than <code>B</code>. For a list of code values, see <a href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.</p>
  <p>For Binary, DynamoDB treats each byte of the binary data as unsigned when it
  compares binary values.</p> <p>For information on specifying data types in JSON,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html\">JSON
  Data Format</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:18:\"ComparisonOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/ComparisonOperator\";s:11:\"description\";s:7911:\"<p>A
  comparator for evaluating attributes in the <code>AttributeValueList</code>. For
  example, equals, greater than, less than, etc.</p> <p>The following comparison operators
  are available:</p> <p> <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS
  | NOT_CONTAINS | BEGINS_WITH | IN | BETWEEN</code> </p> <p>The following are descriptions
  of each comparison operator.</p> <ul> <li> <p> <code>EQ</code> : Equal. <code>EQ</code>
  is supported for all data types, including lists and maps.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  Binary, String Set, Number Set, or Binary Set. If an item contains an <code>AttributeValue</code>
  element of a different type than the one provided in the request, the value does
  not match. For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not equal <code>{\"NS\":[\"6\", \"2\", \"1\"]}</code>.</p>
  <p/> </li> <li> <p> <code>NE</code> : Not equal. <code>NE</code> is supported for
  all data types, including lists and maps.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> of type String, Number, Binary,
  String Set, Number Set, or Binary Set. If an item contains an <code>AttributeValue</code>
  of a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not equal <code>{\"NS\":[\"6\", \"2\", \"1\"]}</code>.</p>
  <p/> </li> <li> <p> <code>LE</code> : Less than or equal. </p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  or Binary (not a set type). If an item contains an <code>AttributeValue</code> element
  of a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code>.</p> <p/> </li> <li> <p> <code>LT</code> : Less than. </p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> of type String, Number, or Binary
  (not a set type). If an item contains an <code>AttributeValue</code> element of
  a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code>.</p> <p/> </li> <li> <p> <code>GE</code> : Greater than or equal.
  </p> <p> <code>AttributeValueList</code> can contain only one <code>AttributeValue</code>
  element of type String, Number, or Binary (not a set type). If an item contains
  an <code>AttributeValue</code> element of a different type than the one provided
  in the request, the value does not match. For example, <code>{\"S\":\"6\"}</code>
  does not equal <code>{\"N\":\"6\"}</code>. Also, <code>{\"N\":\"6\"}</code> does
  not compare to <code>{\"NS\":[\"6\", \"2\", \"1\"]}</code>.</p> <p/> </li> <li>
  <p> <code>GT</code> : Greater than. </p> <p> <code>AttributeValueList</code> can
  contain only one <code>AttributeValue</code> element of type String, Number, or
  Binary (not a set type). If an item contains an <code>AttributeValue</code> element
  of a different type than the one provided in the request, the value does not match.
  For example, <code>{\"S\":\"6\"}</code> does not equal <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code>.</p> <p/> </li> <li> <p> <code>NOT_NULL</code> : The attribute exists.
  <code>NOT_NULL</code> is supported for all data types, including lists and maps.</p>
  <note> <p>This operator tests for the existence of an attribute, not its data type.
  If the data type of attribute \"<code>a</code>\" is null, and you evaluate it using
  <code>NOT_NULL</code>, the result is a Boolean <code>true</code>. This result is
  because the attribute \"<code>a</code>\" exists; its data type is not relevant to
  the <code>NOT_NULL</code> comparison operator.</p> </note> </li> <li> <p> <code>NULL</code>
  : The attribute does not exist. <code>NULL</code> is supported for all data types,
  including lists and maps.</p> <note> <p>This operator tests for the nonexistence
  of an attribute, not its data type. If the data type of attribute \"<code>a</code>\"
  is null, and you evaluate it using <code>NULL</code>, the result is a Boolean <code>false</code>.
  This is because the attribute \"<code>a</code>\" exists; its data type is not relevant
  to the <code>NULL</code> comparison operator.</p> </note> </li> <li> <p> <code>CONTAINS</code>
  : Checks for a subsequence, or value in a set.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  or Binary (not a set type). If the target attribute of the comparison is of type
  String, then the operator checks for a substring match. If the target attribute
  of the comparison is of type Binary, then the operator looks for a subsequence of
  the target that matches the input. If the target attribute of the comparison is
  a set (\"<code>SS</code>\", \"<code>NS</code>\", or \"<code>BS</code>\"), then the
  operator evaluates to true if it finds an exact match with any member of the set.</p>
  <p>CONTAINS is supported for lists: When evaluating \"<code>a CONTAINS b</code>\",
  \"<code>a</code>\" can be a list; however, \"<code>b</code>\" cannot be a set, a
  map, or a list.</p> </li> <li> <p> <code>NOT_CONTAINS</code> : Checks for absence
  of a subsequence, or absence of a value in a set.</p> <p> <code>AttributeValueList</code>
  can contain only one <code>AttributeValue</code> element of type String, Number,
  or Binary (not a set type). If the target attribute of the comparison is a String,
  then the operator checks for the absence of a substring match. If the target attribute
  of the comparison is Binary, then the operator checks for the absence of a subsequence
  of the target that matches the input. If the target attribute of the comparison
  is a set (\"<code>SS</code>\", \"<code>NS</code>\", or \"<code>BS</code>\"), then
  the operator evaluates to true if it <i>does not</i> find an exact match with any
  member of the set.</p> <p>NOT_CONTAINS is supported for lists: When evaluating \"<code>a
  NOT CONTAINS b</code>\", \"<code>a</code>\" can be a list; however, \"<code>b</code>\"
  cannot be a set, a map, or a list.</p> </li> <li> <p> <code>BEGINS_WITH</code> :
  Checks for a prefix. </p> <p> <code>AttributeValueList</code> can contain only one
  <code>AttributeValue</code> of type String or Binary (not a Number or a set type).
  The target attribute of the comparison must be of type String or Binary (not a Number
  or a set type).</p> <p/> </li> <li> <p> <code>IN</code> : Checks for matching elements
  in a list.</p> <p> <code>AttributeValueList</code> can contain one or more <code>AttributeValue</code>
  elements of type String, Number, or Binary. These attributes are compared against
  an existing attribute of an item. If any elements of the input are equal to the
  item attribute, the expression evaluates to true.</p> </li> <li> <p> <code>BETWEEN</code>
  : Greater than or equal to the first value, and less than or equal to the second
  value. </p> <p> <code>AttributeValueList</code> must contain two <code>AttributeValue</code>
  elements of the same type, either String, Number, or Binary (not a set type). A
  target attribute matches if the target value is greater than, or equal to, the first
  element and less than, or equal to, the second element. If an item contains an <code>AttributeValue</code>
  element of a different type than the one provided in the request, the value does
  not match. For example, <code>{\"S\":\"6\"}</code> does not compare to <code>{\"N\":\"6\"}</code>.
  Also, <code>{\"N\":\"6\"}</code> does not compare to <code>{\"NS\":[\"6\", \"2\",
  \"1\"]}</code> </p> </li> </ul>\";}s:6:\"Exists\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BooleanObject\";s:11:\"description\";s:1440:\"<p>Causes
  DynamoDB to evaluate the value before attempting a conditional operation:</p> <ul>
  <li> <p>If <code>Exists</code> is <code>true</code>, DynamoDB will check to see
  if that attribute value already exists in the table. If it is found, then the operation
  succeeds. If it is not found, the operation fails with a <code>ConditionalCheckFailedException</code>.</p>
  </li> <li> <p>If <code>Exists</code> is <code>false</code>, DynamoDB assumes that
  the attribute value does not exist in the table. If in fact the value does not exist,
  then the assumption is valid and the operation succeeds. If the value is found,
  despite the assumption that it does not exist, the operation fails with a <code>ConditionalCheckFailedException</code>.</p>
  </li> </ul> <p>The default setting for <code>Exists</code> is <code>true</code>.
  If you supply a <code>Value</code> all by itself, DynamoDB assumes the attribute
  exists: You don't have to set <code>Exists</code> to <code>true</code>, because
  it is implied.</p> <p>DynamoDB returns a <code>ValidationException</code> if:</p>
  <ul> <li> <p> <code>Exists</code> is <code>true</code> but there is no <code>Value</code>
  to check. (You expect a value to exist, but don't specify what that value is.)</p>
  </li> <li> <p> <code>Exists</code> is <code>false</code> but you also provide a
  <code>Value</code>. (You cannot expect an attribute to have a value, while also
  expecting it not to exist.)</p> </li> </ul>\";}s:5:\"Value\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";s:11:\"description\";s:405:\"<p>Represents
  the data for the expected attribute.</p> <p>Each attribute value is described as
  a name-value pair. The name is the data type, and the value is the data itself.</p>
  <p>For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\">Data
  Types</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:4:\"type\";s:6:\"object\";}s:26:\"ExpressionAttributeNameMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/ExpressionAttributeNameVariable\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:31:\"ExpressionAttributeNameVariable\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:27:\"ExpressionAttributeValueMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/ExpressionAttributeValueVariable\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:32:\"ExpressionAttributeValueVariable\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"FilterConditionMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Condition\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:12:\"GetItemInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:57:\"Represents
  the input of a <code>GetItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":2:{s:3:\"Key\";O:8:\"stdClass\":2:{s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Acme
  Band\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Happy Day\";}}s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:15:\"AttributesToGet\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/AttributeNameList\";s:11:\"description\";s:290:\"This
  is a legacy parameter. Use <code>ProjectionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\">AttributesToGet</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:14:\"ConsistentRead\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ConsistentRead\";s:11:\"description\";s:177:\"Determines
  the read consistency model: If set to <code>true</code>, then the operation uses
  strongly consistent reads; otherwise, the operation uses eventually consistent reads.\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:3:\"Key\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:387:\"<p>A
  map of attribute names to <code>AttributeValue</code> objects, representing the
  primary key of the item to retrieve.</p> <p>For the primary key, you must provide
  all of the attributes. For example, with a simple primary key, you only need to
  provide a value for the partition key. For a composite primary key, you must provide
  values for both the partition key and the sort key.</p>\";}s:20:\"ProjectionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ProjectionExpression\";s:11:\"description\";s:613:\"<p>A
  string that identifies one or more attributes to retrieve from the table. These
  attributes can include scalars, sets, or elements of a JSON document. The attributes
  in the expression must be separated by commas.</p> <p>If no attribute names are
  specified, then all attributes will be returned. If any of the requested attributes
  are not found, they will not appear in the result.</p> <p>For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:52:\"The
  name of the table containing the requested item.\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:3:\"Key\";}s:4:\"type\";s:6:\"object\";}s:13:\"GetItemOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:58:\"Represents
  the output of a <code>GetItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:4:\"Item\";O:8:\"stdClass\":3:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:16:\"Songs
  About Life\";}s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Acme Band\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Happy
  Day\";}}}s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";s:11:\"description\";s:536:\"The
  capacity units consumed by the <code>GetItem</code> operation. The data returned
  includes the total provisioned throughput consumed, along with statistics for the
  table and any indexes involved in the operation. <code>ConsumedCapacity</code> is
  only returned if the <code>ReturnConsumedCapacity</code> parameter was specified.
  For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:4:\"Item\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/AttributeMap\";s:11:\"description\";s:115:\"A
  map of attribute names to <code>AttributeValue</code> objects, as specified by <code>ProjectionExpression</code>.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"GlobalSecondaryIndex\";O:8:\"stdClass\":4:{s:11:\"description\";s:54:\"Represents
  the properties of a global secondary index.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:102:\"The
  name of the global secondary index. The name must be unique among all other indexes
  on this table.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:750:\"<p>The
  complete key schema for a global secondary index, which consists of one or more
  pairs of attribute names and key types:</p> <ul> <li> <p> <code>HASH</code> - partition
  key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note> <p>The
  partition key of an item is also known as its <i>hash attribute</i>. The term \"hash
  attribute\" derives from DynamoDB' usage of an internal hash function to evenly
  distribute data items across partitions, based on their partition key values.</p>
  <p>The sort key of an item is also known as its <i>range attribute</i>. The term
  \"range attribute\" derives from the way DynamoDB stores items with the same partition
  key physically close together, in sorted order by the sort key value.</p> </note>\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:211:\"Represents
  attributes that are copied (projected) from the table into the global secondary
  index. These are in addition to the primary key attributes and index key attributes,
  which are automatically projected. \";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:313:\"<p>Represents
  the provisioned throughput settings for the specified global secondary index.</p>
  <p>For current minimum and maximum provisioned throughput values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:8:\"required\";a:4:{i:0;s:9:\"IndexName\";i:1;s:9:\"KeySchema\";i:2;s:10:\"Projection\";i:3;s:21:\"ProvisionedThroughput\";}s:4:\"type\";s:6:\"object\";}s:31:\"GlobalSecondaryIndexDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"Represents
  the properties of a global secondary index.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:11:\"Backfilling\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Backfilling\";s:11:\"description\";s:642:\"<p>Indicates
  whether the index is currently backfilling. <i>Backfilling</i> is the process of
  reading items from the table and determining whether they can be added to the index.
  (Not all items will qualify: For example, a partition key cannot have any duplicate
  values.) If an item can be added to the index, DynamoDB will do so. After all items
  have been processed, the backfilling operation is complete and <code>Backfilling</code>
  is false.</p> <note> <p>For indexes that were created during a <code>CreateTable</code>
  operation, the <code>Backfilling</code> attribute does not appear in the <code>DescribeTable</code>
  output.</p> </note>\";}s:8:\"IndexArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:66:\"The
  Amazon Resource Name (ARN) that uniquely identifies the index.\";}s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:39:\"The
  name of the global secondary index.\";}s:14:\"IndexSizeBytes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:160:\"The
  total size of the specified index, in bytes. DynamoDB updates this value approximately
  every six hours. Recent changes might not be reflected in this value.\";}s:11:\"IndexStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/IndexStatus\";s:11:\"description\";s:348:\"<p>The
  current state of the global secondary index:</p> <ul> <li> <p> <code>CREATING</code>
  - The index is being created.</p> </li> <li> <p> <code>UPDATING</code> - The index
  is being updated.</p> </li> <li> <p> <code>DELETING</code> - The index is being
  deleted.</p> </li> <li> <p> <code>ACTIVE</code> - The index is ready for use.</p>
  </li> </ul>\";}s:9:\"ItemCount\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:155:\"The
  number of items in the specified index. DynamoDB updates this value approximately
  every six hours. Recent changes might not be reflected in this value.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:750:\"<p>The
  complete key schema for a global secondary index, which consists of one or more
  pairs of attribute names and key types:</p> <ul> <li> <p> <code>HASH</code> - partition
  key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note> <p>The
  partition key of an item is also known as its <i>hash attribute</i>. The term \"hash
  attribute\" derives from DynamoDB' usage of an internal hash function to evenly
  distribute data items across partitions, based on their partition key values.</p>
  <p>The sort key of an item is also known as its <i>range attribute</i>. The term
  \"range attribute\" derives from the way DynamoDB stores items with the same partition
  key physically close together, in sorted order by the sort key value.</p> </note>\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:211:\"Represents
  attributes that are copied (projected) from the table into the global secondary
  index. These are in addition to the primary key attributes and index key attributes,
  which are automatically projected. \";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:46:\"#/definitions/ProvisionedThroughputDescription\";s:11:\"description\";s:313:\"<p>Represents
  the provisioned throughput settings for the specified global secondary index.</p>
  <p>For current minimum and maximum provisioned throughput values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:4:\"type\";s:6:\"object\";}s:35:\"GlobalSecondaryIndexDescriptionList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/GlobalSecondaryIndexDescription\";}s:4:\"type\";s:5:\"array\";}s:24:\"GlobalSecondaryIndexInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:96:\"Represents
  the properties of a global secondary index for the table when the backup was created.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:39:\"The
  name of the global secondary index.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:750:\"<p>The
  complete key schema for a global secondary index, which consists of one or more
  pairs of attribute names and key types:</p> <ul> <li> <p> <code>HASH</code> - partition
  key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note> <p>The
  partition key of an item is also known as its <i>hash attribute</i>. The term \"hash
  attribute\" derives from DynamoDB' usage of an internal hash function to evenly
  distribute data items across partitions, based on their partition key values.</p>
  <p>The sort key of an item is also known as its <i>range attribute</i>. The term
  \"range attribute\" derives from the way DynamoDB stores items with the same partition
  key physically close together, in sorted order by the sort key value.</p> </note>\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:211:\"Represents
  attributes that are copied (projected) from the table into the global secondary
  index. These are in addition to the primary key attributes and index key attributes,
  which are automatically projected. \";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:89:\"Represents
  the provisioned throughput settings for the specified global secondary index. \";}}s:4:\"type\";s:6:\"object\";}s:24:\"GlobalSecondaryIndexList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/GlobalSecondaryIndex\";}s:4:\"type\";s:5:\"array\";}s:26:\"GlobalSecondaryIndexUpdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:318:\"<p>Represents
  one of the following:</p> <ul> <li> <p>A new global secondary index to be added
  to an existing table.</p> </li> <li> <p>New provisioned throughput parameters for
  an existing global secondary index.</p> </li> <li> <p>An existing global secondary
  index to be removed from an existing table.</p> </li> </ul>\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"Create\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:46:\"#/definitions/CreateGlobalSecondaryIndexAction\";s:11:\"description\";s:345:\"<p>The
  parameters required for creating a global secondary index on an existing table:</p>
  <ul> <li> <p> <code>IndexName </code> </p> </li> <li> <p> <code>KeySchema </code>
  </p> </li> <li> <p> <code>AttributeDefinitions </code> </p> </li> <li> <p> <code>Projection
  </code> </p> </li> <li> <p> <code>ProvisionedThroughput </code> </p> </li> </ul>\";}s:6:\"Delete\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:46:\"#/definitions/DeleteGlobalSecondaryIndexAction\";s:11:\"description\";s:61:\"The
  name of an existing global secondary index to be removed.\";}s:6:\"Update\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:46:\"#/definitions/UpdateGlobalSecondaryIndexAction\";s:11:\"description\";s:123:\"The
  name of an existing global secondary index, along with new provisioned throughput
  settings to be applied to that index.\";}}s:4:\"type\";s:6:\"object\";}s:30:\"GlobalSecondaryIndexUpdateList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/GlobalSecondaryIndexUpdate\";}s:4:\"type\";s:5:\"array\";}s:22:\"GlobalSecondaryIndexes\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/GlobalSecondaryIndexInfo\";}s:4:\"type\";s:5:\"array\";}s:11:\"GlobalTable\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"Represents
  the properties of a global table.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  global table name.\";}s:16:\"ReplicationGroup\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ReplicaList\";s:11:\"description\";s:48:\"The
  regions where the global table has replicas.\";}}s:4:\"type\";s:6:\"object\";}s:33:\"GlobalTableAlreadyExistsException\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  specified global table already exists.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:20:\"GlobalTableArnString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"GlobalTableDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Contains
  details about the global table.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:16:\"CreationDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:38:\"The
  creation time of the global table.\";}s:14:\"GlobalTableArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/GlobalTableArnString\";s:11:\"description\";s:42:\"The
  unique identifier of the global table.\";}s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  global table name.\";}s:17:\"GlobalTableStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/GlobalTableStatus\";s:11:\"description\";s:366:\"<p>The
  current state of the global table:</p> <ul> <li> <p> <code>CREATING</code> - The
  global table is being created.</p> </li> <li> <p> <code>UPDATING</code> - The global
  table is being updated.</p> </li> <li> <p> <code>DELETING</code> - The global table
  is being deleted.</p> </li> <li> <p> <code>ACTIVE</code> - The global table is ready
  for use.</p> </li> </ul>\";}s:16:\"ReplicationGroup\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/ReplicaDescriptionList\";s:11:\"description\";s:48:\"The
  regions where the global table has replicas.\";}}s:4:\"type\";s:6:\"object\";}s:45:\"GlobalTableGlobalSecondaryIndexSettingsUpdate\";O:8:\"stdClass\":4:{s:11:\"description\";s:93:\"Represents
  the settings of a global secondary index for a global table that will be modified.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:102:\"The
  name of the global secondary index. The name must be unique among all other indexes
  on this table.\";}s:29:\"ProvisionedWriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:109:\"The
  maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException.</code>
  \";}}s:8:\"required\";a:1:{i:0;s:9:\"IndexName\";}s:4:\"type\";s:6:\"object\";}s:49:\"GlobalTableGlobalSecondaryIndexSettingsUpdateList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:59:\"#/definitions/GlobalTableGlobalSecondaryIndexSettingsUpdate\";}s:8:\"maxItems\";i:20;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:15:\"GlobalTableList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/GlobalTable\";}s:4:\"type\";s:5:\"array\";}s:28:\"GlobalTableNotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  specified global table does not exist.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:17:\"GlobalTableStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"CREATING\";i:1;s:6:\"ACTIVE\";i:2;s:8:\"DELETING\";i:3;s:8:\"UPDATING\";}s:4:\"type\";s:6:\"string\";}s:9:\"IndexName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:255;s:9:\"minLength\";i:3;s:7:\"pattern\";s:15:\"[a-zA-Z0-9_.-]+\";s:4:\"type\";s:6:\"string\";}s:22:\"IndexNotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"The
  operation tried to access a nonexistent index.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:11:\"IndexStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"CREATING\";i:1;s:8:\"UPDATING\";i:2;s:8:\"DELETING\";i:3;s:6:\"ACTIVE\";}s:4:\"type\";s:6:\"string\";}s:7:\"Integer\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:19:\"InternalServerError\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"An
  error occurred on the server side.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:71:\"The
  server encountered an internal error trying to fulfill the request.\";}}s:4:\"type\";s:6:\"object\";}s:27:\"InvalidRestoreTimeException\";O:8:\"stdClass\":3:{s:11:\"description\";s:127:\"An
  invalid restore time was specified. RestoreDateTime must be between EarliestRestorableDateTime
  and LatestRestorableDateTime.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:29:\"ItemCollectionKeyAttributeMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:21:\"ItemCollectionMetrics\";O:8:\"stdClass\":3:{s:11:\"description\";s:267:\"Information
  about item collections, if any, that were affected by the operation. <code>ItemCollectionMetrics</code>
  is only returned if the request asked for it. If the table does not have any local
  secondary indexes, this information is not returned in the response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:17:\"ItemCollectionKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:43:\"#/definitions/ItemCollectionKeyAttributeMap\";s:11:\"description\";s:110:\"The
  partition key value of the item collection. This value is the same as the partition
  key value of the item.\";}s:19:\"SizeEstimateRangeGB\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:45:\"#/definitions/ItemCollectionSizeEstimateRange\";s:11:\"description\";s:525:\"<p>An
  estimate of item collection size, in gigabytes. This value is a two-element array
  containing a lower bound and an upper bound for the estimate. The estimate includes
  the size of all the items in the table, plus the size of all attributes projected
  into all of the local secondary indexes on that table. Use this estimate to measure
  whether a local secondary index is approaching its size limit.</p> <p>The estimate
  is subject to change over time; therefore, do not rely on the precision or accuracy
  of the estimate.</p>\";}}s:4:\"type\";s:6:\"object\";}s:29:\"ItemCollectionMetricsMultiple\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ItemCollectionMetrics\";}s:4:\"type\";s:5:\"array\";}s:29:\"ItemCollectionMetricsPerTable\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:43:\"#/definitions/ItemCollectionMetricsMultiple\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:31:\"ItemCollectionSizeEstimateBound\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:31:\"ItemCollectionSizeEstimateRange\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/ItemCollectionSizeEstimateBound\";}s:4:\"type\";s:5:\"array\";}s:40:\"ItemCollectionSizeLimitExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:122:\"An
  item collection is too large. This exception is only returned for tables that have
  one or more local secondary indexes.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:84:\"The
  total size of an item collection has exceeded the maximum limit of 10 gigabytes.\";}}s:4:\"type\";s:6:\"object\";}s:9:\"ItemCount\";O:8:\"stdClass\":2:{s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:8:\"ItemList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/AttributeMap\";}s:4:\"type\";s:5:\"array\";}s:3:\"Key\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:13:\"KeyConditions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Condition\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:13:\"KeyExpression\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"KeyList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Key\";}s:8:\"maxItems\";i:100;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:9:\"KeySchema\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/KeySchemaElement\";}s:8:\"maxItems\";i:2;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:22:\"KeySchemaAttributeName\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:16:\"KeySchemaElement\";O:8:\"stdClass\":4:{s:11:\"description\";s:750:\"<p>Represents
  <i>a single element</i> of a key schema. A key schema specifies the attributes that
  make up the primary key of a table, or the key attributes of an index.</p> <p>A
  <code>KeySchemaElement</code> represents exactly one attribute of the primary key.
  For example, a simple primary key would be represented by one <code>KeySchemaElement</code>
  (for the partition key). A composite primary key would require one <code>KeySchemaElement</code>
  for the partition key, and another <code>KeySchemaElement</code> for the sort key.</p>
  <p>A <code>KeySchemaElement</code> must be a scalar, top-level attribute (not a
  nested attribute). The data type must be one of String, Number, or Binary. The attribute
  cannot be nested within a List or a Map.</p>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"AttributeName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/KeySchemaAttributeName\";s:11:\"description\";s:28:\"The
  name of a key attribute.\";}s:7:\"KeyType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/KeyType\";s:11:\"description\";s:672:\"<p>The
  role that this key attribute will assume:</p> <ul> <li> <p> <code>HASH</code> -
  partition key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note>
  <p>The partition key of an item is also known as its <i>hash attribute</i>. The
  term \"hash attribute\" derives from DynamoDB' usage of an internal hash function
  to evenly distribute data items across partitions, based on their partition key
  values.</p> <p>The sort key of an item is also known as its <i>range attribute</i>.
  The term \"range attribute\" derives from the way DynamoDB stores items with the
  same partition key physically close together, in sorted order by the sort key value.</p>
  </note>\";}}s:8:\"required\";a:2:{i:0;s:13:\"AttributeName\";i:1;s:7:\"KeyType\";}s:4:\"type\";s:6:\"object\";}s:7:\"KeyType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:4:\"HASH\";i:1;s:5:\"RANGE\";}s:4:\"type\";s:6:\"string\";}s:17:\"KeysAndAttributes\";O:8:\"stdClass\":4:{s:11:\"description\";s:359:\"<p>Represents
  a set of primary keys and, for each key, the attributes to retrieve from the table.</p>
  <p>For each primary key, you must provide <i>all</i> of the key attributes. For
  example, with a simple primary key, you only need to provide the partition key.
  For a composite primary key, you must provide <i>both</i> the partition key and
  the sort key.</p>\";s:10:\"properties\";O:8:\"stdClass\":5:{s:15:\"AttributesToGet\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/AttributeNameList\";s:11:\"description\";s:288:\"This
  is a legacy parameter. Use <code>ProjectionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.html\">Legacy
  Conditional Parameters</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:14:\"ConsistentRead\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ConsistentRead\";s:11:\"description\";s:156:\"The
  consistency of a read operation. If set to <code>true</code>, then a strongly consistent
  read is used; otherwise, an eventually consistent read is used.\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:4:\"Keys\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/KeyList\";s:11:\"description\";s:100:\"The
  primary key attribute values that define the items and the attributes associated
  with the items.\";}s:20:\"ProjectionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ProjectionExpression\";s:11:\"description\";s:636:\"<p>A
  string that identifies one or more attributes to retrieve from the table. These
  attributes can include scalars, sets, or elements of a JSON document. The attributes
  in the <code>ProjectionExpression</code> must be separated by commas.</p> <p>If
  no attribute names are specified, then all attributes will be returned. If any of
  the requested attributes are not found, they will not appear in the result.</p>
  <p>For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:8:\"required\";a:1:{i:0;s:4:\"Keys\";}s:4:\"type\";s:6:\"object\";}s:22:\"LimitExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:725:\"<p>Up
  to 50 <code>CreateBackup</code> operations are allowed per second, per account.
  There is no limit to the number of daily on-demand backups that can be taken. </p>
  <p>Up to 10 simultaneous table operations are allowed per account. These operations
  include <code>CreateTable</code>, <code>UpdateTable</code>, <code>DeleteTable</code>,<code>UpdateTimeToLive</code>,
  <code>RestoreTableFromBackup</code>, and <code>RestoreTableToPointInTime</code>.
  </p> <p>For tables with secondary indexes, only one of those tables can be in the
  <code>CREATING</code> state at any point in time. Do not attempt to create more
  than one such table simultaneously.</p> <p>The total limit of tables in the <code>ACTIVE</code>
  state is 250.</p>\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:43:\"Too
  many operations for a given subscriber.\";}}s:4:\"type\";s:6:\"object\";}s:18:\"ListAttributeValue\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}s:4:\"type\";s:5:\"array\";}s:16:\"ListBackupsInput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:23:\"ExclusiveStartBackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:80:\"
  <code>LastEvaluatedBackupARN</code> returned by the previous ListBackups call. \";}s:5:\"Limit\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/BackupsInputLimit\";s:11:\"description\";s:44:\"Maximum
  number of backups to return at once.\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:62:\"The
  backups from the table specified by TableName are listed. \";}s:19:\"TimeRangeLowerBound\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/TimeRangeLowerBound\";s:11:\"description\";s:95:\"Only
  backups created after this time are listed. <code>TimeRangeLowerBound</code> is
  inclusive.\";}s:19:\"TimeRangeUpperBound\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/TimeRangeUpperBound\";s:11:\"description\";s:97:\"Only
  backups created before this time are listed. <code>TimeRangeUpperBound</code> is
  exclusive. \";}}s:4:\"type\";s:6:\"object\";}s:17:\"ListBackupsOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"BackupSummaries\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/BackupSummaries\";s:11:\"description\";s:43:\"List
  of <code>BackupSummary</code> objects.\";}s:22:\"LastEvaluatedBackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:25:\"Last
  evaluated BackupARN.\";}}s:4:\"type\";s:6:\"object\";}s:21:\"ListGlobalTablesInput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:29:\"ExclusiveStartGlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:62:\"The
  first global table name that this operation will evaluate.\";}s:5:\"Limit\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/PositiveIntegerObject\";s:11:\"description\";s:44:\"The
  maximum number of table names to return.\";}s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:45:\"Lists
  the global tables in a specific region.\";}}s:4:\"type\";s:6:\"object\";}s:22:\"ListGlobalTablesOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"GlobalTables\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/GlobalTableList\";s:11:\"description\";s:27:\"List
  of global table names.\";}s:28:\"LastEvaluatedGlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:33:\"Last
  evaluated global table name.\";}}s:4:\"type\";s:6:\"object\";}s:15:\"ListTablesInput\";O:8:\"stdClass\":4:{s:11:\"description\";s:60:\"Represents
  the input of a <code>ListTables</code> operation.\";s:7:\"example\";O:8:\"stdClass\":0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:23:\"ExclusiveStartTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:201:\"The
  first table name that this operation will evaluate. Use the value that was returned
  for <code>LastEvaluatedTableName</code> in a previous operation, so that you can
  obtain the next page of results.\";}s:5:\"Limit\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ListTablesInputLimit\";s:11:\"description\";s:96:\"A
  maximum number of table names to return. If this parameter is not specified, the
  limit is 100.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"ListTablesInputLimit\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:100;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:16:\"ListTablesOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"Represents
  the output of a <code>ListTables</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:10:\"TableNames\";a:4:{i:0;s:5:\"Forum\";i:1;s:14:\"ProductCatalog\";i:2;s:5:\"Reply\";i:3;s:6:\"Thread\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:22:\"LastEvaluatedTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:370:\"<p>The
  name of the last table in the current page of results. Use this value as the <code>ExclusiveStartTableName</code>
  in a new request to obtain the next page of results, until all the table names are
  returned.</p> <p>If you do not receive a <code>LastEvaluatedTableName</code> value
  in the response, this means that there are no more table names to be retrieved.</p>\";}s:10:\"TableNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/TableNameList\";s:11:\"description\";s:366:\"<p>The
  names of the tables associated with the current account at the current endpoint.
  The maximum size of this array is 100.</p> <p>If <code>LastEvaluatedTableName</code>
  also appears in the output, you can use this value as the <code>ExclusiveStartTableName</code>
  parameter in a subsequent <code>ListTables</code> request and obtain the next page
  of results.</p>\";}}s:4:\"type\";s:6:\"object\";}s:23:\"ListTagsOfResourceInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"NextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/NextTokenString\";s:11:\"description\";s:182:\"An
  optional string that, if supplied, must be copied from the output of a previous
  call to ListTagOfResource. When provided in this manner, this API fetches the next
  page of results.\";}s:11:\"ResourceArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ResourceArnString\";s:11:\"description\";s:97:\"The
  Amazon DynamoDB resource with tags to be listed. This value is an Amazon Resource
  Name (ARN).\";}}s:8:\"required\";a:1:{i:0;s:11:\"ResourceArn\";}s:4:\"type\";s:6:\"object\";}s:24:\"ListTagsOfResourceOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"NextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/NextTokenString\";s:11:\"description\";s:155:\"If
  this value is returned, there are additional results to be displayed. To retrieve
  them, call ListTagsOfResource again, with NextToken set to this value.\";}s:4:\"Tags\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/TagList\";s:11:\"description\";s:64:\"The
  tags currently associated with the Amazon DynamoDB resource.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"LocalSecondaryIndex\";O:8:\"stdClass\":4:{s:11:\"description\";s:53:\"Represents
  the properties of a local secondary index.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:101:\"The
  name of the local secondary index. The name must be unique among all other indexes
  on this table.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:747:\"<p>The
  complete key schema for the local secondary index, consisting of one or more pairs
  of attribute names and key types:</p> <ul> <li> <p> <code>HASH</code> - partition
  key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note> <p>The
  partition key of an item is also known as its <i>hash attribute</i>. The term \"hash
  attribute\" derives from DynamoDB' usage of an internal hash function to evenly
  distribute data items across partitions, based on their partition key values.</p>
  <p>The sort key of an item is also known as its <i>range attribute</i>. The term
  \"range attribute\" derives from the way DynamoDB stores items with the same partition
  key physically close together, in sorted order by the sort key value.</p> </note>\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:210:\"Represents
  attributes that are copied (projected) from the table into the local secondary index.
  These are in addition to the primary key attributes and index key attributes, which
  are automatically projected. \";}}s:8:\"required\";a:3:{i:0;s:9:\"IndexName\";i:1;s:9:\"KeySchema\";i:2;s:10:\"Projection\";}s:4:\"type\";s:6:\"object\";}s:30:\"LocalSecondaryIndexDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Represents
  the properties of a local secondary index.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"IndexArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:66:\"The
  Amazon Resource Name (ARN) that uniquely identifies the index.\";}s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:49:\"Represents
  the name of the local secondary index.\";}s:14:\"IndexSizeBytes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:160:\"The
  total size of the specified index, in bytes. DynamoDB updates this value approximately
  every six hours. Recent changes might not be reflected in this value.\";}s:9:\"ItemCount\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:155:\"The
  number of items in the specified index. DynamoDB updates this value approximately
  every six hours. Recent changes might not be reflected in this value.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:747:\"<p>The
  complete key schema for the local secondary index, consisting of one or more pairs
  of attribute names and key types:</p> <ul> <li> <p> <code>HASH</code> - partition
  key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note> <p>The
  partition key of an item is also known as its <i>hash attribute</i>. The term \"hash
  attribute\" derives from DynamoDB' usage of an internal hash function to evenly
  distribute data items across partitions, based on their partition key values.</p>
  <p>The sort key of an item is also known as its <i>range attribute</i>. The term
  \"range attribute\" derives from the way DynamoDB stores items with the same partition
  key physically close together, in sorted order by the sort key value.</p> </note>\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:211:\"Represents
  attributes that are copied (projected) from the table into the global secondary
  index. These are in addition to the primary key attributes and index key attributes,
  which are automatically projected. \";}}s:4:\"type\";s:6:\"object\";}s:34:\"LocalSecondaryIndexDescriptionList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:44:\"#/definitions/LocalSecondaryIndexDescription\";}s:4:\"type\";s:5:\"array\";}s:23:\"LocalSecondaryIndexInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:95:\"Represents
  the properties of a local secondary index for the table when the backup was created.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:49:\"Represents
  the name of the local secondary index.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:749:\"<p>The
  complete key schema for a local secondary index, which consists of one or more pairs
  of attribute names and key types:</p> <ul> <li> <p> <code>HASH</code> - partition
  key</p> </li> <li> <p> <code>RANGE</code> - sort key</p> </li> </ul> <note> <p>The
  partition key of an item is also known as its <i>hash attribute</i>. The term \"hash
  attribute\" derives from DynamoDB' usage of an internal hash function to evenly
  distribute data items across partitions, based on their partition key values.</p>
  <p>The sort key of an item is also known as its <i>range attribute</i>. The term
  \"range attribute\" derives from the way DynamoDB stores items with the same partition
  key physically close together, in sorted order by the sort key value.</p> </note>\";}s:10:\"Projection\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/Projection\";s:11:\"description\";s:211:\"Represents
  attributes that are copied (projected) from the table into the global secondary
  index. These are in addition to the primary key attributes and index key attributes,
  which are automatically projected. \";}}s:4:\"type\";s:6:\"object\";}s:23:\"LocalSecondaryIndexList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/LocalSecondaryIndex\";}s:4:\"type\";s:5:\"array\";}s:21:\"LocalSecondaryIndexes\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/LocalSecondaryIndexInfo\";}s:4:\"type\";s:5:\"array\";}s:4:\"Long\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:17:\"MapAttributeValue\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:15:\"NextTokenString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"NonKeyAttributeName\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:23:\"NonKeyAttributeNameList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/NonKeyAttributeName\";}s:8:\"maxItems\";i:20;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:18:\"NullAttributeValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:20:\"NumberAttributeValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"NumberSetAttributeValue\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/NumberAttributeValue\";}s:4:\"type\";s:5:\"array\";}s:30:\"PointInTimeRecoveryDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:67:\"The
  description of the point in time settings applied to the table.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:26:\"EarliestRestorableDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:144:\"Specifies
  the earliest point in time you can restore your table to. It You can restore your
  table to any point in time during the last 35 days. \";}s:24:\"LatestRestorableDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:87:\"
  <code>LatestRestorableDateTime</code> is typically 5 minutes before the current
  time. \";}s:25:\"PointInTimeRecoveryStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/PointInTimeRecoveryStatus\";s:11:\"description\";s:302:\"<p>The
  current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLING</code>
  - Point in time recovery is being enabled.</p> </li> <li> <p> <code>ENABLED</code>
  - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> -
  Point in time recovery is disabled.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:32:\"PointInTimeRecoverySpecification\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Represents
  the settings used to enable point in time recovery.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:26:\"PointInTimeRecoveryEnabled\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BooleanObject\";s:11:\"description\";s:92:\"Indicates
  whether point in time recovery is enabled (true) or disabled (false) on the table.\";}}s:8:\"required\";a:1:{i:0;s:26:\"PointInTimeRecoveryEnabled\";}s:4:\"type\";s:6:\"object\";}s:25:\"PointInTimeRecoveryStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:7:\"ENABLED\";i:1;s:8:\"DISABLED\";}s:4:\"type\";s:6:\"string\";}s:39:\"PointInTimeRecoveryUnavailableException\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"Point
  in time recovery has not yet been enabled for this source table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:21:\"PositiveIntegerObject\";O:8:\"stdClass\":2:{s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:18:\"PositiveLongObject\";O:8:\"stdClass\":2:{s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:10:\"Projection\";O:8:\"stdClass\":3:{s:11:\"description\";s:192:\"Represents
  attributes that are copied (projected) from the table into an index. These are in
  addition to the primary key attributes and index key attributes, which are automatically
  projected.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"NonKeyAttributes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/NonKeyAttributeNameList\";s:11:\"description\";s:369:\"<p>Represents
  the non-key attribute names which will be projected into the index.</p> <p>For local
  secondary indexes, the total count of <code>NonKeyAttributes</code> summed across
  all of the local secondary indexes, must not exceed 20. If you project the same
  attribute into two different indexes, this counts as two distinct attributes when
  determining the total.</p>\";}s:14:\"ProjectionType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ProjectionType\";s:11:\"description\";s:455:\"<p>The
  set of attributes that are projected into the index:</p> <ul> <li> <p> <code>KEYS_ONLY</code>
  - Only the index and primary keys are projected into the index.</p> </li> <li> <p>
  <code>INCLUDE</code> - Only the specified table attributes are projected into the
  index. The list of projected attributes are in <code>NonKeyAttributes</code>.</p>
  </li> <li> <p> <code>ALL</code> - All of the table attributes are projected into
  the index.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:20:\"ProjectionExpression\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"ProjectionType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:3:\"ALL\";i:1;s:9:\"KEYS_ONLY\";i:2;s:7:\"INCLUDE\";}s:4:\"type\";s:6:\"string\";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":4:{s:11:\"description\";s:378:\"<p>Represents
  the provisioned throughput settings for a specified table or index. The settings
  can be modified using the <code>UpdateTable</code> operation.</p> <p>For current
  minimum and maximum provisioned throughput values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:17:\"ReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:362:\"The
  maximum number of strongly consistent reads consumed per second before DynamoDB
  returns a <code>ThrottlingException</code>. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\">Specifying
  Read and Write Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:18:\"WriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:343:\"The
  maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.
  For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\">Specifying
  Read and Write Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}}s:8:\"required\";a:2:{i:0;s:17:\"ReadCapacityUnits\";i:1;s:18:\"WriteCapacityUnits\";}s:4:\"type\";s:6:\"object\";}s:32:\"ProvisionedThroughputDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:153:\"Represents
  the provisioned throughput settings for the table, consisting of read and write
  capacity units, along with data about increases and decreases.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:20:\"LastDecreaseDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:77:\"The
  date and time of the last provisioned throughput decrease for this table.\";}s:20:\"LastIncreaseDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:77:\"The
  date and time of the last provisioned throughput increase for this table.\";}s:22:\"NumberOfDecreasesToday\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:297:\"The
  number of provisioned throughput decreases for this table during this UTC calendar
  day. For current maximums on provisioned throughput decreases, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:17:\"ReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:346:\"The
  maximum number of strongly consistent reads consumed per second before DynamoDB
  returns a <code>ThrottlingException</code>. Eventually consistent reads require
  less effort than strongly consistent reads, so a setting of 50 <code>ReadCapacityUnits</code>
  per second provides 100 eventually consistent <code>ReadCapacityUnits</code> per
  second.\";}s:18:\"WriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:108:\"The
  maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.\";}}s:4:\"type\";s:6:\"object\";}s:38:\"ProvisionedThroughputExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:513:\"Your
  request rate is too high. The AWS SDKs for DynamoDB automatically retry requests
  that receive this exception. Your request is eventually successful, unless your
  retry queue is too large to finish. Reduce the frequency of requests and use exponential
  backoff. For more information, go to <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Programming.Errors.html#Programming.Errors.RetryAndBackoff\">Error
  Retries and Exponential Backoff</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:57:\"You
  exceeded your maximum allowed provisioned throughput.\";}}s:4:\"type\";s:6:\"object\";}s:12:\"PutItemInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:57:\"Represents
  the input of a <code>PutItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"Item\";O:8:\"stdClass\":3:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"Somewhat
  Famous\";}s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No One You Know\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:13:\"Call
  Me Today\";}}s:22:\"ReturnConsumedCapacity\";s:5:\"TOTAL\";s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:19:\"ConditionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionExpression\";s:11:\"description\";s:780:\"<p>A
  condition that must be satisfied in order for a conditional <code>PutItem</code>
  operation to succeed.</p> <p>An expression can contain any of the following:</p>
  <ul> <li> <p>Functions: <code>attribute_exists | attribute_not_exists | attribute_type
  | contains | begins_with | size</code> </p> <p>These function names are case-sensitive.</p>
  </li> <li> <p>Comparison operators: <code>= | &lt;&gt; | &lt; | &gt; | &lt;= | &gt;=
  | BETWEEN | IN </code> </p> </li> <li> <p> Logical operators: <code>AND | OR | NOT</code>
  </p> </li> </ul> <p>For more information on condition expressions, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:19:\"ConditionalOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionalOperator\";s:11:\"description\";s:297:\"This
  is a legacy parameter. Use <code>ConditionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\">ConditionalOperator</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:8:\"Expected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ExpectedAttributeMap\";s:11:\"description\";s:275:\"This
  is a legacy parameter. Use <code>ConditionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.Expected.html\">Expected</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ExpressionAttributeValueMap\";s:11:\"description\";s:935:\"<p>One
  or more values that can be substituted in an expression.</p> <p>Use the <b>:</b>
  (colon) character in an expression to dereference an attribute value. For example,
  suppose that you wanted to check whether the value of the <i>ProductStatus</i> attribute
  was one of the following: </p> <p> <code>Available | Backordered | Discontinued</code>
  </p> <p>You would first need to specify <code>ExpressionAttributeValues</code> as
  follows:</p> <p> <code>{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"},
  \":disc\":{\"S\":\"Discontinued\"} }</code> </p> <p>You could then use these values
  in an expression, such as this:</p> <p> <code>ProductStatus IN (:avail, :back, :disc)</code>
  </p> <p>For more information on expression attribute values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:4:\"Item\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/PutItemInputAttributeMap\";s:11:\"description\";s:945:\"<p>A
  map of attribute name/value pairs, one for each attribute. Only the primary key
  attributes are required; you can optionally provide other attribute name-value pairs
  for the item.</p> <p>You must provide all of the attributes for the primary key.
  For example, with a simple primary key, you only need to provide a value for the
  partition key. For a composite primary key, you must provide both values for both
  the partition key and the sort key.</p> <p>If you specify any attributes that are
  part of an index key, then the data types for those attributes must match those
  of the schema in the table's attribute definition.</p> <p>For more information about
  primary keys, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey\">Primary
  Key</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>Each element in the
  <code>Item</code> map is an <code>AttributeValue</code> object.</p>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:27:\"ReturnItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ReturnItemCollectionMetrics\";s:11:\"description\";s:291:\"Determines
  whether item collection metrics are returned. If set to <code>SIZE</code>, the response
  includes statistics about item collections, if any, that were modified during the
  operation are returned in the response. If set to <code>NONE</code> (the default),
  no statistics are returned.\";}s:12:\"ReturnValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ReturnValue\";s:11:\"description\";s:794:\"<p>Use
  <code>ReturnValues</code> if you want to get the item attributes as they appeared
  before they were updated with the <code>PutItem</code> request. For <code>PutItem</code>,
  the valid values are:</p> <ul> <li> <p> <code>NONE</code> - If <code>ReturnValues</code>
  is not specified, or if its value is <code>NONE</code>, then nothing is returned.
  (This setting is the default for <code>ReturnValues</code>.)</p> </li> <li> <p>
  <code>ALL_OLD</code> - If <code>PutItem</code> overwrote an attribute name-value
  pair, then the content of the old item is returned.</p> </li> </ul> <note> <p>The
  <code>ReturnValues</code> parameter is used by several DynamoDB operations; however,
  <code>PutItem</code> does not recognize any values other than <code>NONE</code>
  or <code>ALL_OLD</code>.</p> </note>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:42:\"The
  name of the table to contain the item.\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:4:\"Item\";}s:4:\"type\";s:6:\"object\";}s:24:\"PutItemInputAttributeMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/AttributeName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributeValue\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:13:\"PutItemOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:58:\"Represents
  the output of a <code>PutItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:13:\"CapacityUnits\";i:1;s:9:\"TableName\";s:5:\"Music\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"Attributes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/AttributeMap\";s:11:\"description\";s:238:\"The
  attribute values as they appeared before the <code>PutItem</code> operation, but
  only if <code>ReturnValues</code> is specified as <code>ALL_OLD</code> in the request.
  Each element consists of an attribute name and an attribute value.\";}s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";s:11:\"description\";s:536:\"The
  capacity units consumed by the <code>PutItem</code> operation. The data returned
  includes the total provisioned throughput consumed, along with statistics for the
  table and any indexes involved in the operation. <code>ConsumedCapacity</code> is
  only returned if the <code>ReturnConsumedCapacity</code> parameter was specified.
  For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:21:\"ItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ItemCollectionMetrics\";s:11:\"description\";s:1155:\"<p>Information
  about item collections, if any, that were affected by the <code>PutItem</code> operation.
  <code>ItemCollectionMetrics</code> is only returned if the <code>ReturnItemCollectionMetrics</code>
  parameter was specified. If the table does not have any local secondary indexes,
  this information is not returned in the response.</p> <p>Each <code>ItemCollectionMetrics</code>
  element consists of:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition
  key value of the item collection. This is the same as the partition key value of
  the item itself.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate
  of item collection size, in gigabytes. This value is a two-element array containing
  a lower bound and an upper bound for the estimate. The estimate includes the size
  of all the items in the table, plus the size of all attributes projected into all
  of the local secondary indexes on that table. Use this estimate to measure whether
  a local secondary index is approaching its size limit.</p> <p>The estimate is subject
  to change over time; therefore, do not rely on the precision or accuracy of the
  estimate.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:10:\"PutRequest\";O:8:\"stdClass\":4:{s:11:\"description\";s:76:\"Represents
  a request to perform a <code>PutItem</code> operation on an item.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"Item\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/PutItemInputAttributeMap\";s:11:\"description\";s:391:\"A
  map of attribute name to attribute values, representing the primary key of an item
  to be processed by <code>PutItem</code>. All of the table's primary key attributes
  must be specified, and their data types must match those of the table's key schema.
  If any attributes are present in the item which are part of an index key schema
  for the table, their types must match the index key schema.\";}}s:8:\"required\";a:1:{i:0;s:4:\"Item\";}s:4:\"type\";s:6:\"object\";}s:10:\"QueryInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:55:\"Represents
  the input of a <code>Query</code> operation.\";s:7:\"example\";O:8:\"stdClass\":4:{s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":1:{s:3:\":v1\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No
  One You Know\";}}s:22:\"KeyConditionExpression\";s:12:\"Artist = :v1\";s:20:\"ProjectionExpression\";s:9:\"SongTitle\";s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":17:{s:15:\"AttributesToGet\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/AttributeNameList\";s:11:\"description\";s:290:\"This
  is a legacy parameter. Use <code>ProjectionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\">AttributesToGet</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:19:\"ConditionalOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionalOperator\";s:11:\"description\";s:294:\"This
  is a legacy parameter. Use <code>FilterExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\">ConditionalOperator</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:14:\"ConsistentRead\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ConsistentRead\";s:11:\"description\";s:414:\"<p>Determines
  the read consistency model: If set to <code>true</code>, then the operation uses
  strongly consistent reads; otherwise, the operation uses eventually consistent reads.</p>
  <p>Strongly consistent reads are not supported on global secondary indexes. If you
  query a global secondary index with <code>ConsistentRead</code> set to <code>true</code>,
  you will receive a <code>ValidationException</code>.</p>\";}s:17:\"ExclusiveStartKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:289:\"<p>The
  primary key of the first item that this operation will evaluate. Use the value that
  was returned for <code>LastEvaluatedKey</code> in the previous operation.</p> <p>The
  data type for <code>ExclusiveStartKey</code> must be String, Number or Binary. No
  set data types are allowed.</p>\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ExpressionAttributeValueMap\";s:11:\"description\";s:935:\"<p>One
  or more values that can be substituted in an expression.</p> <p>Use the <b>:</b>
  (colon) character in an expression to dereference an attribute value. For example,
  suppose that you wanted to check whether the value of the <i>ProductStatus</i> attribute
  was one of the following: </p> <p> <code>Available | Backordered | Discontinued</code>
  </p> <p>You would first need to specify <code>ExpressionAttributeValues</code> as
  follows:</p> <p> <code>{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"},
  \":disc\":{\"S\":\"Discontinued\"} }</code> </p> <p>You could then use these values
  in an expression, such as this:</p> <p> <code>ProductStatus IN (:avail, :back, :disc)</code>
  </p> <p>For more information on expression attribute values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:16:\"FilterExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionExpression\";s:11:\"description\";s:772:\"<p>A
  string that contains conditions that DynamoDB applies after the <code>Query</code>
  operation, but before the data is returned to you. Items that do not satisfy the
  <code>FilterExpression</code> criteria are not returned.</p> <p>A <code>FilterExpression</code>
  does not allow key attributes. You cannot define a filter expression based on a
  partition key or a sort key.</p> <note> <p>A <code>FilterExpression</code> is applied
  after the items have already been read; the process of filtering does not consume
  any additional read capacity units.</p> </note> <p>For more information, see <a
  href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#FilteringResults\">Filter
  Expressions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:220:\"The
  name of an index to query. This index can be any local secondary index or global
  secondary index on the table. Note that if you use the <code>IndexName</code> parameter,
  you must also provide <code>TableName.</code> \";}s:22:\"KeyConditionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/KeyExpression\";s:11:\"description\";s:3901:\"<p>The
  condition that specifies the key value(s) for items to be retrieved by the <code>Query</code>
  action.</p> <p>The condition must perform an equality test on a single partition
  key value.</p> <p>The condition can optionally perform one of several comparison
  tests on a single sort key value. This allows <code>Query</code> to retrieve one
  item with a given partition key value and sort key value, or several items that
  have the same partition key value but different sort key values.</p> <p>The partition
  key equality test is required, and must be specified in the following format:</p>
  <p> <code>partitionKeyName</code> <i>=</i> <code>:partitionkeyval</code> </p> <p>If
  you also want to provide a condition for the sort key, it must be combined using
  <code>AND</code> with the condition for the sort key. Following is an example, using
  the <b>=</b> comparison operator for the sort key:</p> <p> <code>partitionKeyName</code>
  <code>=</code> <code>:partitionkeyval</code> <code>AND</code> <code>sortKeyName</code>
  <code>=</code> <code>:sortkeyval</code> </p> <p>Valid comparisons for the sort key
  condition are as follows:</p> <ul> <li> <p> <code>sortKeyName</code> <code>=</code>
  <code>:sortkeyval</code> - true if the sort key value is equal to <code>:sortkeyval</code>.</p>
  </li> <li> <p> <code>sortKeyName</code> <code>&lt;</code> <code>:sortkeyval</code>
  - true if the sort key value is less than <code>:sortkeyval</code>.</p> </li> <li>
  <p> <code>sortKeyName</code> <code>&lt;=</code> <code>:sortkeyval</code> - true
  if the sort key value is less than or equal to <code>:sortkeyval</code>.</p> </li>
  <li> <p> <code>sortKeyName</code> <code>&gt;</code> <code>:sortkeyval</code> - true
  if the sort key value is greater than <code>:sortkeyval</code>.</p> </li> <li> <p>
  <code>sortKeyName</code> <code>&gt;= </code> <code>:sortkeyval</code> - true if
  the sort key value is greater than or equal to <code>:sortkeyval</code>.</p> </li>
  <li> <p> <code>sortKeyName</code> <code>BETWEEN</code> <code>:sortkeyval1</code>
  <code>AND</code> <code>:sortkeyval2</code> - true if the sort key value is greater
  than or equal to <code>:sortkeyval1</code>, and less than or equal to <code>:sortkeyval2</code>.</p>
  </li> <li> <p> <code>begins_with (</code> <code>sortKeyName</code>, <code>:sortkeyval</code>
  <code>)</code> - true if the sort key value begins with a particular operand. (You
  cannot use this function with a sort key that is of type Number.) Note that the
  function name <code>begins_with</code> is case-sensitive.</p> </li> </ul> <p>Use
  the <code>ExpressionAttributeValues</code> parameter to replace tokens such as <code>:partitionval</code>
  and <code>:sortval</code> with actual values at runtime.</p> <p>You can optionally
  use the <code>ExpressionAttributeNames</code> parameter to replace the names of
  the partition key and sort key with placeholder tokens. This option might be necessary
  if an attribute name conflicts with a DynamoDB reserved word. For example, the following
  <code>KeyConditionExpression</code> parameter causes an error because <i>Size</i>
  is a reserved word:</p> <ul> <li> <p> <code>Size = :myval</code> </p> </li> </ul>
  <p>To work around this, define a placeholder (such a <code>#S</code>) to represent
  the attribute name <i>Size</i>. <code>KeyConditionExpression</code> then is as follows:</p>
  <ul> <li> <p> <code>#S = :myval</code> </p> </li> </ul> <p>For a list of reserved
  words, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>For more information
  on <code>ExpressionAttributeNames</code> and <code>ExpressionAttributeValues</code>,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ExpressionPlaceholders.html\">Using
  Placeholders for Attribute Names and Values</a> in the <i>Amazon DynamoDB Developer
  Guide</i>.</p>\";}s:13:\"KeyConditions\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/KeyConditions\";s:11:\"description\";s:288:\"This
  is a legacy parameter. Use <code>KeyConditionExpression</code> instead. For more
  information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.KeyConditions.html\">KeyConditions</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:5:\"Limit\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/PositiveIntegerObject\";s:11:\"description\";s:818:\"The
  maximum number of items to evaluate (not necessarily the number of matching items).
  If DynamoDB processes the number of items up to the limit while processing the results,
  it stops the operation and returns the matching values up to that point, and a key
  in <code>LastEvaluatedKey</code> to apply in a subsequent operation, so that you
  can pick up where you left off. Also, if the processed data set size exceeds 1 MB
  before DynamoDB reaches this limit, it stops the operation and returns the matching
  values up to the limit, and a key in <code>LastEvaluatedKey</code> to apply in a
  subsequent operation to continue the operation. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html\">Query
  and Scan</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:20:\"ProjectionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ProjectionExpression\";s:11:\"description\";s:613:\"<p>A
  string that identifies one or more attributes to retrieve from the table. These
  attributes can include scalars, sets, or elements of a JSON document. The attributes
  in the expression must be separated by commas.</p> <p>If no attribute names are
  specified, then all attributes will be returned. If any of the requested attributes
  are not found, they will not appear in the result.</p> <p>For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:11:\"QueryFilter\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/FilterConditionMap\";s:11:\"description\";s:278:\"This
  is a legacy parameter. Use <code>FilterExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.QueryFilter.html\">QueryFilter</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:16:\"ScanIndexForward\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BooleanObject\";s:11:\"description\";s:846:\"<p>Specifies
  the order for index traversal: If <code>true</code> (default), the traversal is
  performed in ascending order; if <code>false</code>, the traversal is performed
  in descending order. </p> <p>Items with the same partition key value are stored
  in sorted order by sort key. If the sort key data type is Number, the results are
  stored in numeric order. For type String, the results are stored in order of UTF-8
  bytes. For type Binary, DynamoDB treats each byte of the binary data as unsigned.</p>
  <p>If <code>ScanIndexForward</code> is <code>true</code>, DynamoDB returns the results
  in the order in which they are stored (by sort key value). This is the default behavior.
  If <code>ScanIndexForward</code> is <code>false</code>, DynamoDB reads the results
  in reverse order by sort key value, and then returns the results to the client.</p>\";}s:6:\"Select\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Select\";s:11:\"description\";s:2658:\"<p>The
  attributes to be returned in the result. You can retrieve all item attributes, specific
  item attributes, the count of matching items, or in the case of an index, some or
  all of the attributes projected into the index.</p> <ul> <li> <p> <code>ALL_ATTRIBUTES</code>
  - Returns all of the item attributes from the specified table or index. If you query
  a local secondary index, then for each matching item in the index DynamoDB will
  fetch the entire item from the parent table. If the index is configured to project
  all item attributes, then all of the data can be obtained from the local secondary
  index, and no fetching is required.</p> </li> <li> <p> <code>ALL_PROJECTED_ATTRIBUTES</code>
  - Allowed only when querying an index. Retrieves all attributes that have been projected
  into the index. If the index is configured to project all attributes, this return
  value is equivalent to specifying <code>ALL_ATTRIBUTES</code>.</p> </li> <li> <p>
  <code>COUNT</code> - Returns the number of matching items, rather than the matching
  items themselves.</p> </li> <li> <p> <code>SPECIFIC_ATTRIBUTES</code> - Returns
  only the attributes listed in <code>AttributesToGet</code>. This return value is
  equivalent to specifying <code>AttributesToGet</code> without specifying any value
  for <code>Select</code>.</p> <p>If you query or scan a local secondary index and
  request only attributes that are projected into that index, the operation will read
  only the index and not the table. If any of the requested attributes are not projected
  into the local secondary index, DynamoDB will fetch each of these attributes from
  the parent table. This extra fetching incurs additional throughput cost and latency.</p>
  <p>If you query or scan a global secondary index, you can only request attributes
  that are projected into the index. Global secondary index queries cannot fetch attributes
  from the parent table.</p> </li> </ul> <p>If neither <code>Select</code> nor <code>AttributesToGet</code>
  are specified, DynamoDB defaults to <code>ALL_ATTRIBUTES</code> when accessing a
  table, and <code>ALL_PROJECTED_ATTRIBUTES</code> when accessing an index. You cannot
  use both <code>Select</code> and <code>AttributesToGet</code> together in a single
  request, unless the value for <code>Select</code> is <code>SPECIFIC_ATTRIBUTES</code>.
  (This usage is equivalent to specifying <code>AttributesToGet</code> without any
  value for <code>Select</code>.)</p> <note> <p>If you use the <code>ProjectionExpression</code>
  parameter, then the value for <code>Select</code> can only be <code>SPECIFIC_ATTRIBUTES</code>.
  Any other value for <code>Select</code> will return an error.</p> </note>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:53:\"The
  name of the table containing the requested items.\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:11:\"QueryOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:56:\"Represents
  the output of a <code>Query</code> operation.\";s:7:\"example\";O:8:\"stdClass\":4:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":0:{}s:5:\"Count\";i:2;s:5:\"Items\";a:1:{i:0;O:8:\"stdClass\":1:{s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:13:\"Call
  Me Today\";}}}s:12:\"ScannedCount\";i:2;}s:10:\"properties\";O:8:\"stdClass\":5:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";s:11:\"description\";s:533:\"The
  capacity units consumed by the <code>Query</code> operation. The data returned includes
  the total provisioned throughput consumed, along with statistics for the table and
  any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned
  if the <code>ReturnConsumedCapacity</code> parameter was specified For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:5:\"Count\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Integer\";s:11:\"description\";s:403:\"<p>The
  number of items in the response.</p> <p>If you used a <code>QueryFilter</code> in
  the request, then <code>Count</code> is the number of items returned after the filter
  was applied, and <code>ScannedCount</code> is the number of matching items before
  the filter was applied.</p> <p>If you did not use a filter in the request, then
  <code>Count</code> and <code>ScannedCount</code> are the same.</p>\";}s:5:\"Items\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/ItemList\";s:11:\"description\";s:149:\"An
  array of item attributes that match the query criteria. Each element in this array
  consists of an attribute name and the value for that attribute.\";}s:16:\"LastEvaluatedKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:570:\"<p>The
  primary key of the item where the operation stopped, inclusive of the previous result
  set. Use this value to start a new operation, excluding this value in the new request.</p>
  <p>If <code>LastEvaluatedKey</code> is empty, then the \"last page\" of results
  has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedKey</code>
  is not empty, it does not necessarily mean that there is more data in the result
  set. The only way to know when you have reached the end of the result set is when
  <code>LastEvaluatedKey</code> is empty.</p>\";}s:12:\"ScannedCount\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Integer\";s:11:\"description\";s:538:\"<p>The
  number of items evaluated, before any <code>QueryFilter</code> is applied. A high
  <code>ScannedCount</code> value with few, or no, <code>Count</code> results indicates
  an inefficient <code>Query</code> operation. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count\">Count
  and ScannedCount</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>If you
  did not use a filter in the request, then <code>ScannedCount</code> is the same
  as <code>Count</code>.</p>\";}}s:4:\"type\";s:6:\"object\";}s:10:\"RegionName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"Replica\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"Represents
  the properties of a replica.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:49:\"The
  region where the replica needs to be created.\";}}s:4:\"type\";s:6:\"object\";}s:29:\"ReplicaAlreadyExistsException\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"The
  specified replica is already part of the global table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:18:\"ReplicaDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Contains
  the details of the replica.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:23:\"The
  name of the region.\";}}s:4:\"type\";s:6:\"object\";}s:22:\"ReplicaDescriptionList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ReplicaDescription\";}s:4:\"type\";s:5:\"array\";}s:46:\"ReplicaGlobalSecondaryIndexSettingsDescription\";O:8:\"stdClass\":4:{s:11:\"description\";s:54:\"Represents
  the properties of a global secondary index.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:102:\"The
  name of the global secondary index. The name must be unique among all other indexes
  on this table.\";}s:11:\"IndexStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/IndexStatus\";s:11:\"description\";s:418:\"<p>
  The current status of the global secondary index:</p> <ul> <li> <p> <code>CREATING</code>
  - The global secondary index is being created.</p> </li> <li> <p> <code>UPDATING</code>
  - The global secondary index is being updated.</p> </li> <li> <p> <code>DELETING</code>
  - The global secondary index is being deleted.</p> </li> <li> <p> <code>ACTIVE</code>
  - The global secondary index is ready for use.</p> </li> </ul>\";}s:28:\"ProvisionedReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:127:\"The
  maximum number of strongly consistent reads consumed per second before DynamoDB
  returns a <code>ThrottlingException</code>.\";}s:29:\"ProvisionedWriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:108:\"The
  maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.\";}}s:8:\"required\";a:1:{i:0;s:9:\"IndexName\";}s:4:\"type\";s:6:\"object\";}s:50:\"ReplicaGlobalSecondaryIndexSettingsDescriptionList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:60:\"#/definitions/ReplicaGlobalSecondaryIndexSettingsDescription\";}s:4:\"type\";s:5:\"array\";}s:41:\"ReplicaGlobalSecondaryIndexSettingsUpdate\";O:8:\"stdClass\":4:{s:11:\"description\";s:93:\"Represents
  the settings of a global secondary index for a global table that will be modified.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:102:\"The
  name of the global secondary index. The name must be unique among all other indexes
  on this table.\";}s:28:\"ProvisionedReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:127:\"The
  maximum number of strongly consistent reads consumed per second before DynamoDB
  returns a <code>ThrottlingException</code>.\";}}s:8:\"required\";a:1:{i:0;s:9:\"IndexName\";}s:4:\"type\";s:6:\"object\";}s:45:\"ReplicaGlobalSecondaryIndexSettingsUpdateList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:55:\"#/definitions/ReplicaGlobalSecondaryIndexSettingsUpdate\";}s:8:\"maxItems\";i:20;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:11:\"ReplicaList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Replica\";}s:4:\"type\";s:5:\"array\";}s:24:\"ReplicaNotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:60:\"The
  specified replica is no longer part of the global table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:26:\"ReplicaSettingsDescription\";O:8:\"stdClass\":4:{s:11:\"description\";s:39:\"Represents
  the properties of a replica.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:31:\"The
  region name of the replica.\";}s:35:\"ReplicaGlobalSecondaryIndexSettings\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:64:\"#/definitions/ReplicaGlobalSecondaryIndexSettingsDescriptionList\";s:11:\"description\";s:61:\"Replica
  global secondary index settings for the global table.\";}s:35:\"ReplicaProvisionedReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:363:\"The
  maximum number of strongly consistent reads consumed per second before DynamoDB
  returns a <code>ThrottlingException</code>. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\">Specifying
  Read and Write Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>. \";}s:36:\"ReplicaProvisionedWriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:343:\"The
  maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.
  For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\">Specifying
  Read and Write Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:13:\"ReplicaStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ReplicaStatus\";s:11:\"description\";s:336:\"<p>The
  current state of the region:</p> <ul> <li> <p> <code>CREATING</code> - The region
  is being created.</p> </li> <li> <p> <code>UPDATING</code> - The region is being
  updated.</p> </li> <li> <p> <code>DELETING</code> - The region is being deleted.</p>
  </li> <li> <p> <code>ACTIVE</code> - The region is ready for use.</p> </li> </ul>\";}}s:8:\"required\";a:1:{i:0;s:10:\"RegionName\";}s:4:\"type\";s:6:\"object\";}s:30:\"ReplicaSettingsDescriptionList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/ReplicaSettingsDescription\";}s:4:\"type\";s:5:\"array\";}s:21:\"ReplicaSettingsUpdate\";O:8:\"stdClass\":4:{s:11:\"description\";s:77:\"Represents
  the settings for a global table in a region that will be modified.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"RegionName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/RegionName\";s:11:\"description\";s:38:\"The
  region of the replica to be added.\";}s:41:\"ReplicaGlobalSecondaryIndexSettingsUpdate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:59:\"#/definitions/ReplicaGlobalSecondaryIndexSettingsUpdateList\";s:11:\"description\";s:93:\"Represents
  the settings of a global secondary index for a global table that will be modified.\";}s:35:\"ReplicaProvisionedReadCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:363:\"The
  maximum number of strongly consistent reads consumed per second before DynamoDB
  returns a <code>ThrottlingException</code>. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\">Specifying
  Read and Write Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>. \";}}s:8:\"required\";a:1:{i:0;s:10:\"RegionName\";}s:4:\"type\";s:6:\"object\";}s:25:\"ReplicaSettingsUpdateList\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ReplicaSettingsUpdate\";}s:8:\"maxItems\";i:50;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}s:13:\"ReplicaStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"CREATING\";i:1;s:8:\"UPDATING\";i:2;s:8:\"DELETING\";i:3;s:6:\"ACTIVE\";}s:4:\"type\";s:6:\"string\";}s:13:\"ReplicaUpdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:264:\"<p>Represents
  one of the following:</p> <ul> <li> <p>A new replica to be added to an existing
  global table.</p> </li> <li> <p>New parameters for an existing replica.</p> </li>
  <li> <p>An existing replica to be removed from an existing global table.</p> </li>
  </ul>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"Create\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/CreateReplicaAction\";s:11:\"description\";s:75:\"The
  parameters required for creating a replica on an existing global table.\";}s:6:\"Delete\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/DeleteReplicaAction\";s:11:\"description\";s:47:\"The
  name of the existing replica to be removed.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"ReplicaUpdateList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ReplicaUpdate\";}s:4:\"type\";s:5:\"array\";}s:17:\"ResourceArnString\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:1283;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:22:\"ResourceInUseException\";O:8:\"stdClass\":3:{s:11:\"description\";s:188:\"The
  operation conflicts with the resource's availability. For example, you attempted
  to recreate an existing table, or tried to delete a table currently in the <code>CREATING</code>
  state.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:62:\"The
  resource which is being attempted to be changed is in use.\";}}s:4:\"type\";s:6:\"object\";}s:25:\"ResourceNotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:154:\"The
  operation tried to access a nonexistent table or index. The resource might not be
  specified correctly, or its status might not be <code>ACTIVE</code>.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";s:11:\"description\";s:53:\"The
  resource which is being requested does not exist.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"RestoreInProgress\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"RestoreSummary\";O:8:\"stdClass\":4:{s:11:\"description\";s:33:\"Contains
  details for the restore.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:15:\"RestoreDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:36:\"Point
  in time or source backup time.\";}s:17:\"RestoreInProgress\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/RestoreInProgress\";s:11:\"description\";s:45:\"Indicates
  if a restore is in progress or not.\";}s:15:\"SourceBackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:52:\"ARN
  of the backup from which the table was restored.\";}s:14:\"SourceTableArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/TableArn\";s:11:\"description\";s:61:\"ARN
  of the source table of the backup that is being restored.\";}}s:8:\"required\";a:2:{i:0;s:15:\"RestoreDateTime\";i:1;s:17:\"RestoreInProgress\";}s:4:\"type\";s:6:\"object\";}s:27:\"RestoreTableFromBackupInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"BackupArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/BackupArn\";s:11:\"description\";s:35:\"The
  ARN associated with the backup.\";}s:15:\"TargetTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:63:\"The
  name of the new table to which the backup must be restored.\";}}s:8:\"required\";a:2:{i:0;s:15:\"TargetTableName\";i:1;s:9:\"BackupArn\";}s:4:\"type\";s:6:\"object\";}s:28:\"RestoreTableFromBackupOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TableDescription\";s:11:\"description\";s:61:\"The
  description of the table created from an existing backup.\";}}s:4:\"type\";s:6:\"object\";}s:30:\"RestoreTableToPointInTimeInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:15:\"RestoreDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:41:\"Time
  in the past to restore the table to.\";}s:15:\"SourceTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:48:\"Name
  of the source table that is being restored.\";}s:15:\"TargetTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:58:\"The
  name of the new table to which it must be restored to.\";}s:23:\"UseLatestRestorableTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/BooleanObject\";s:11:\"description\";s:133:\"Restore
  the table to the latest possible time. <code>LatestRestorableDateTime</code> is
  typically 5 minutes before the current time. \";}}s:8:\"required\";a:2:{i:0;s:15:\"SourceTableName\";i:1;s:15:\"TargetTableName\";}s:4:\"type\";s:6:\"object\";}s:31:\"RestoreTableToPointInTimeOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TableDescription\";s:11:\"description\";s:37:\"Represents
  the properties of a table.\";}}s:4:\"type\";s:6:\"object\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":3:{s:11:\"description\";s:837:\"<p>Determines
  the level of detail about provisioned throughput consumption that is returned in
  the response:</p> <ul> <li> <p> <code>INDEXES</code> - The response includes the
  aggregate <code>ConsumedCapacity</code> for the operation, together with <code>ConsumedCapacity</code>
  for each table and secondary index that was accessed.</p> <p>Note that some operations,
  such as <code>GetItem</code> and <code>BatchGetItem</code>, do not access any indexes
  at all. In these cases, specifying <code>INDEXES</code> will only return <code>ConsumedCapacity</code>
  information for table(s).</p> </li> <li> <p> <code>TOTAL</code> - The response includes
  only the aggregate <code>ConsumedCapacity</code> for the operation.</p> </li> <li>
  <p> <code>NONE</code> - No <code>ConsumedCapacity</code> details are included in
  the response.</p> </li> </ul>\";s:4:\"enum\";a:3:{i:0;s:7:\"INDEXES\";i:1;s:5:\"TOTAL\";i:2;s:4:\"NONE\";}s:4:\"type\";s:6:\"string\";}s:27:\"ReturnItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:4:\"SIZE\";i:1;s:4:\"NONE\";}s:4:\"type\";s:6:\"string\";}s:11:\"ReturnValue\";O:8:\"stdClass\":2:{s:4:\"enum\";a:5:{i:0;s:4:\"NONE\";i:1;s:7:\"ALL_OLD\";i:2;s:11:\"UPDATED_OLD\";i:3;s:7:\"ALL_NEW\";i:4;s:11:\"UPDATED_NEW\";}s:4:\"type\";s:6:\"string\";}s:14:\"SSEDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:76:\"The
  description of the server-side encryption status on the specified table.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"Status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/SSEStatus\";s:11:\"description\";s:388:\"<p>The
  current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code>
  - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code>
  - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> -
  Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code>
  - Server-side encryption is disabled.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:10:\"SSEEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"SSESpecification\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Represents
  the settings used to enable server-side encryption.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"Enabled\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/SSEEnabled\";s:11:\"description\";s:92:\"Indicates
  whether server-side encryption is enabled (true) or disabled (false) on the table.\";}}s:8:\"required\";a:1:{i:0;s:7:\"Enabled\";}s:4:\"type\";s:6:\"object\";}s:9:\"SSEStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"ENABLING\";i:1;s:7:\"ENABLED\";i:2;s:9:\"DISABLING\";i:3;s:8:\"DISABLED\";}s:4:\"type\";s:6:\"string\";}s:19:\"ScalarAttributeType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:1:\"S\";i:1;s:1:\"N\";i:2;s:1:\"B\";}s:4:\"type\";s:6:\"string\";}s:9:\"ScanInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:54:\"Represents
  the input of a <code>Scan</code> operation.\";s:7:\"example\";O:8:\"stdClass\":5:{s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:2:\"AT\";s:10:\"AlbumTitle\";s:2:\"ST\";s:9:\"SongTitle\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":1:{s:2:\":a\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"No
  One You Know\";}}s:16:\"FilterExpression\";s:11:\"Artist = :a\";s:20:\"ProjectionExpression\";s:8:\"#ST,
  #AT\";s:9:\"TableName\";s:5:\"Music\";}s:10:\"properties\";O:8:\"stdClass\":16:{s:15:\"AttributesToGet\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/AttributeNameList\";s:11:\"description\";s:290:\"This
  is a legacy parameter. Use <code>ProjectionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\">AttributesToGet</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:19:\"ConditionalOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionalOperator\";s:11:\"description\";s:294:\"This
  is a legacy parameter. Use <code>FilterExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\">ConditionalOperator</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:14:\"ConsistentRead\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/ConsistentRead\";s:11:\"description\";s:858:\"<p>A
  Boolean value that determines the read consistency model during the scan:</p> <ul>
  <li> <p>If <code>ConsistentRead</code> is <code>false</code>, then the data returned
  from <code>Scan</code> might not contain the results from other recently completed
  write operations (PutItem, UpdateItem or DeleteItem).</p> </li> <li> <p>If <code>ConsistentRead</code>
  is <code>true</code>, then all of the write operations that completed before the
  <code>Scan</code> began are guaranteed to be contained in the <code>Scan</code>
  response.</p> </li> </ul> <p>The default setting for <code>ConsistentRead</code>
  is <code>false</code>.</p> <p>The <code>ConsistentRead</code> parameter is not supported
  on global secondary indexes. If you scan a global secondary index with <code>ConsistentRead</code>
  set to true, you will receive a <code>ValidationException</code>.</p>\";}s:17:\"ExclusiveStartKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:519:\"<p>The
  primary key of the first item that this operation will evaluate. Use the value that
  was returned for <code>LastEvaluatedKey</code> in the previous operation.</p> <p>The
  data type for <code>ExclusiveStartKey</code> must be String, Number or Binary. No
  set data types are allowed.</p> <p>In a parallel scan, a <code>Scan</code> request
  that includes <code>ExclusiveStartKey</code> must specify the same segment whose
  previous <code>Scan</code> returned the corresponding value of <code>LastEvaluatedKey</code>.</p>\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ExpressionAttributeValueMap\";s:11:\"description\";s:935:\"<p>One
  or more values that can be substituted in an expression.</p> <p>Use the <b>:</b>
  (colon) character in an expression to dereference an attribute value. For example,
  suppose that you wanted to check whether the value of the <i>ProductStatus</i> attribute
  was one of the following: </p> <p> <code>Available | Backordered | Discontinued</code>
  </p> <p>You would first need to specify <code>ExpressionAttributeValues</code> as
  follows:</p> <p> <code>{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"},
  \":disc\":{\"S\":\"Discontinued\"} }</code> </p> <p>You could then use these values
  in an expression, such as this:</p> <p> <code>ProductStatus IN (:avail, :back, :disc)</code>
  </p> <p>For more information on expression attribute values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:16:\"FilterExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionExpression\";s:11:\"description\";s:623:\"<p>A
  string that contains conditions that DynamoDB applies after the <code>Scan</code>
  operation, but before the data is returned to you. Items that do not satisfy the
  <code>FilterExpression</code> criteria are not returned.</p> <note> <p>A <code>FilterExpression</code>
  is applied after the items have already been read; the process of filtering does
  not consume any additional read capacity units.</p> </note> <p>For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#FilteringResults\">Filter
  Expressions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:214:\"The
  name of a secondary index to scan. This index can be any local secondary index or
  global secondary index. Note that if you use the <code>IndexName</code> parameter,
  you must also provide <code>TableName</code>.\";}s:5:\"Limit\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/PositiveIntegerObject\";s:11:\"description\";s:818:\"The
  maximum number of items to evaluate (not necessarily the number of matching items).
  If DynamoDB processes the number of items up to the limit while processing the results,
  it stops the operation and returns the matching values up to that point, and a key
  in <code>LastEvaluatedKey</code> to apply in a subsequent operation, so that you
  can pick up where you left off. Also, if the processed data set size exceeds 1 MB
  before DynamoDB reaches this limit, it stops the operation and returns the matching
  values up to the limit, and a key in <code>LastEvaluatedKey</code> to apply in a
  subsequent operation to continue the operation. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html\">Query
  and Scan</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:20:\"ProjectionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ProjectionExpression\";s:11:\"description\";s:632:\"<p>A
  string that identifies one or more attributes to retrieve from the specified table
  or index. These attributes can include scalars, sets, or elements of a JSON document.
  The attributes in the expression must be separated by commas.</p> <p>If no attribute
  names are specified, then all attributes will be returned. If any of the requested
  attributes are not found, they will not appear in the result.</p> <p>For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:10:\"ScanFilter\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/FilterConditionMap\";s:11:\"description\";s:276:\"This
  is a legacy parameter. Use <code>FilterExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ScanFilter.html\">ScanFilter</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:7:\"Segment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ScanSegment\";s:11:\"description\";s:861:\"<p>For
  a parallel <code>Scan</code> request, <code>Segment</code> identifies an individual
  segment to be scanned by an application worker.</p> <p>Segment IDs are zero-based,
  so the first segment is always 0. For example, if you want to use four application
  threads to scan a table or an index, then the first thread specifies a <code>Segment</code>
  value of 0, the second thread specifies 1, and so on.</p> <p>The value of <code>LastEvaluatedKey</code>
  returned from a parallel <code>Scan</code> request must be used as <code>ExclusiveStartKey</code>
  with the same segment ID in a subsequent <code>Scan</code> operation.</p> <p>The
  value for <code>Segment</code> must be greater than or equal to 0, and less than
  the value provided for <code>TotalSegments</code>.</p> <p>If you provide <code>Segment</code>,
  you must also provide <code>TotalSegments</code>.</p>\";}s:6:\"Select\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Select\";s:11:\"description\";s:2658:\"<p>The
  attributes to be returned in the result. You can retrieve all item attributes, specific
  item attributes, the count of matching items, or in the case of an index, some or
  all of the attributes projected into the index.</p> <ul> <li> <p> <code>ALL_ATTRIBUTES</code>
  - Returns all of the item attributes from the specified table or index. If you query
  a local secondary index, then for each matching item in the index DynamoDB will
  fetch the entire item from the parent table. If the index is configured to project
  all item attributes, then all of the data can be obtained from the local secondary
  index, and no fetching is required.</p> </li> <li> <p> <code>ALL_PROJECTED_ATTRIBUTES</code>
  - Allowed only when querying an index. Retrieves all attributes that have been projected
  into the index. If the index is configured to project all attributes, this return
  value is equivalent to specifying <code>ALL_ATTRIBUTES</code>.</p> </li> <li> <p>
  <code>COUNT</code> - Returns the number of matching items, rather than the matching
  items themselves.</p> </li> <li> <p> <code>SPECIFIC_ATTRIBUTES</code> - Returns
  only the attributes listed in <code>AttributesToGet</code>. This return value is
  equivalent to specifying <code>AttributesToGet</code> without specifying any value
  for <code>Select</code>.</p> <p>If you query or scan a local secondary index and
  request only attributes that are projected into that index, the operation will read
  only the index and not the table. If any of the requested attributes are not projected
  into the local secondary index, DynamoDB will fetch each of these attributes from
  the parent table. This extra fetching incurs additional throughput cost and latency.</p>
  <p>If you query or scan a global secondary index, you can only request attributes
  that are projected into the index. Global secondary index queries cannot fetch attributes
  from the parent table.</p> </li> </ul> <p>If neither <code>Select</code> nor <code>AttributesToGet</code>
  are specified, DynamoDB defaults to <code>ALL_ATTRIBUTES</code> when accessing a
  table, and <code>ALL_PROJECTED_ATTRIBUTES</code> when accessing an index. You cannot
  use both <code>Select</code> and <code>AttributesToGet</code> together in a single
  request, unless the value for <code>Select</code> is <code>SPECIFIC_ATTRIBUTES</code>.
  (This usage is equivalent to specifying <code>AttributesToGet</code> without any
  value for <code>Select</code>.)</p> <note> <p>If you use the <code>ProjectionExpression</code>
  parameter, then the value for <code>Select</code> can only be <code>SPECIFIC_ATTRIBUTES</code>.
  Any other value for <code>Select</code> will return an error.</p> </note>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:147:\"The
  name of the table containing the requested items; or, if you provide <code>IndexName</code>,
  the name of the table to which that index belongs.\";}s:13:\"TotalSegments\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ScanTotalSegments\";s:11:\"description\";s:778:\"<p>For
  a parallel <code>Scan</code> request, <code>TotalSegments</code> represents the
  total number of segments into which the <code>Scan</code> operation will be divided.
  The value of <code>TotalSegments</code> corresponds to the number of application
  workers that will perform the parallel scan. For example, if you want to use four
  application threads to scan a table or an index, specify a <code>TotalSegments</code>
  value of 4.</p> <p>The value for <code>TotalSegments</code> must be greater than
  or equal to 1, and less than or equal to 1000000. If you specify a <code>TotalSegments</code>
  value of 1, the <code>Scan</code> operation will be sequential rather than parallel.</p>
  <p>If you specify <code>TotalSegments</code>, you must also specify <code>Segment</code>.</p>\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:10:\"ScanOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:55:\"Represents
  the output of a <code>Scan</code> operation.\";s:7:\"example\";O:8:\"stdClass\":4:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":0:{}s:5:\"Count\";i:2;s:5:\"Items\";a:2:{i:0;O:8:\"stdClass\":2:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:15:\"Somewhat
  Famous\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:13:\"Call Me Today\";}}i:1;O:8:\"stdClass\":2:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:14:\"Blue
  Sky Blues\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:19:\"Scared of My
  Shadow\";}}}s:12:\"ScannedCount\";i:3;}s:10:\"properties\";O:8:\"stdClass\":5:{s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";s:11:\"description\";s:533:\"The
  capacity units consumed by the <code>Scan</code> operation. The data returned includes
  the total provisioned throughput consumed, along with statistics for the table and
  any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned
  if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:5:\"Count\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Integer\";s:11:\"description\";s:397:\"<p>The
  number of items in the response.</p> <p>If you set <code>ScanFilter</code> in the
  request, then <code>Count</code> is the number of items returned after the filter
  was applied, and <code>ScannedCount</code> is the number of matching items before
  the filter was applied.</p> <p>If you did not use a filter in the request, then
  <code>Count</code> is the same as <code>ScannedCount</code>.</p>\";}s:5:\"Items\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/ItemList\";s:11:\"description\";s:148:\"An
  array of item attributes that match the scan criteria. Each element in this array
  consists of an attribute name and the value for that attribute.\";}s:16:\"LastEvaluatedKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:570:\"<p>The
  primary key of the item where the operation stopped, inclusive of the previous result
  set. Use this value to start a new operation, excluding this value in the new request.</p>
  <p>If <code>LastEvaluatedKey</code> is empty, then the \"last page\" of results
  has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedKey</code>
  is not empty, it does not necessarily mean that there is more data in the result
  set. The only way to know when you have reached the end of the result set is when
  <code>LastEvaluatedKey</code> is empty.</p>\";}s:12:\"ScannedCount\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Integer\";s:11:\"description\";s:536:\"<p>The
  number of items evaluated, before any <code>ScanFilter</code> is applied. A high
  <code>ScannedCount</code> value with few, or no, <code>Count</code> results indicates
  an inefficient <code>Scan</code> operation. For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count\">Count
  and ScannedCount</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>If you
  did not use a filter in the request, then <code>ScannedCount</code> is the same
  as <code>Count</code>.</p>\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ScanSegment\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:999999;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:17:\"ScanTotalSegments\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:1000000;s:7:\"minimum\";i:1;s:4:\"type\";s:7:\"integer\";}s:27:\"SecondaryIndexesCapacityMap\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Capacity\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:6:\"Select\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:14:\"ALL_ATTRIBUTES\";i:1;s:24:\"ALL_PROJECTED_ATTRIBUTES\";i:2;s:19:\"SPECIFIC_ATTRIBUTES\";i:3;s:5:\"COUNT\";}s:4:\"type\";s:6:\"string\";}s:18:\"SourceTableDetails\";O:8:\"stdClass\":4:{s:11:\"description\";s:63:\"Contains
  the details of the table when the backup was created. \";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"ItemCount\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/ItemCount\";s:11:\"description\";s:72:\"Number
  of items in the table. Please note this is an approximate value. \";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:21:\"Schema
  of the table. \";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:66:\"Read
  IOPs and Write IOPS on the table when the backup was created.\";}s:8:\"TableArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/TableArn\";s:11:\"description\";s:47:\"ARN
  of the table for which backup was created. \";}s:21:\"TableCreationDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/TableCreationDateTime\";s:11:\"description\";s:40:\"Time
  when the source table was created. \";}s:7:\"TableId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/TableId\";s:11:\"description\";s:66:\"Unique
  identifier for the table for which the backup was created. \";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:56:\"The
  name of the table for which the backup was created. \";}s:14:\"TableSizeBytes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:69:\"Size
  of the table in bytes. Please note this is an approximate value.\";}}s:8:\"required\";a:5:{i:0;s:9:\"TableName\";i:1;s:7:\"TableId\";i:2;s:9:\"KeySchema\";i:3;s:21:\"TableCreationDateTime\";i:4;s:21:\"ProvisionedThroughput\";}s:4:\"type\";s:6:\"object\";}s:25:\"SourceTableFeatureDetails\";O:8:\"stdClass\":3:{s:11:\"description\";s:126:\"Contains
  the details of the features enabled on the table when the backup was created. For
  example, LSIs, GSIs, streams, TTL. \";s:10:\"properties\";O:8:\"stdClass\":5:{s:22:\"GlobalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/GlobalSecondaryIndexes\";s:11:\"description\";s:197:\"Represents
  the GSI properties for the table when the backup was created. It includes the IndexName,
  KeySchema, Projection and ProvisionedThroughput for the GSIs on the table at the
  time of backup. \";}s:21:\"LocalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/LocalSecondaryIndexes\";s:11:\"description\";s:174:\"Represents
  the LSI properties for the table when the backup was created. It includes the IndexName,
  KeySchema and Projection for the LSIs on the table at the time of backup. \";}s:14:\"SSEDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/SSEDescription\";s:11:\"description\";s:94:\"The
  description of the server-side encryption status on the table when the backup was
  created.\";}s:17:\"StreamDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/StreamSpecification\";s:11:\"description\";s:57:\"Stream
  settings on the table when the backup was created.\";}s:21:\"TimeToLiveDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/TimeToLiveDescription\";s:11:\"description\";s:63:\"Time
  to Live settings on the table when the backup was created.\";}}s:4:\"type\";s:6:\"object\";}s:9:\"StreamArn\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:1024;s:9:\"minLength\";i:37;s:4:\"type\";s:6:\"string\";}s:13:\"StreamEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:19:\"StreamSpecification\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"Represents
  the DynamoDB Streams configuration for a table in DynamoDB.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"StreamEnabled\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/StreamEnabled\";s:11:\"description\";s:86:\"Indicates
  whether DynamoDB Streams is enabled (true) or disabled (false) on the table.\";}s:14:\"StreamViewType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/StreamViewType\";s:11:\"description\";s:699:\"<p>
  When an item in the table is modified, <code>StreamViewType</code> determines what
  information is written to the stream for this table. Valid values for <code>StreamViewType</code>
  are:</p> <ul> <li> <p> <code>KEYS_ONLY</code> - Only the key attributes of the modified
  item are written to the stream.</p> </li> <li> <p> <code>NEW_IMAGE</code> - The
  entire item, as it appears after it was modified, is written to the stream.</p>
  </li> <li> <p> <code>OLD_IMAGE</code> - The entire item, as it appeared before it
  was modified, is written to the stream.</p> </li> <li> <p> <code>NEW_AND_OLD_IMAGES</code>
  - Both the new and the old item images of the item are written to the stream.</p>
  </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:14:\"StreamViewType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:9:\"NEW_IMAGE\";i:1;s:9:\"OLD_IMAGE\";i:2;s:18:\"NEW_AND_OLD_IMAGES\";i:3;s:9:\"KEYS_ONLY\";}s:4:\"type\";s:6:\"string\";}s:6:\"String\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"StringAttributeValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"StringSetAttributeValue\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/StringAttributeValue\";}s:4:\"type\";s:5:\"array\";}s:27:\"TableAlreadyExistsException\";O:8:\"stdClass\":3:{s:11:\"description\";s:55:\"A
  target table with the specified name already exists. \";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:8:\"TableArn\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"TableCreationDateTime\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:16:\"TableDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Represents
  the properties of a table.\";s:10:\"properties\";O:8:\"stdClass\":17:{s:20:\"AttributeDefinitions\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/AttributeDefinitions\";s:11:\"description\";s:390:\"<p>An
  array of <code>AttributeDefinition</code> objects. Each of these objects describes
  one attribute in the table and index key schema.</p> <p>Each <code>AttributeDefinition</code>
  object in this array is composed of:</p> <ul> <li> <p> <code>AttributeName</code>
  - The name of the attribute.</p> </li> <li> <p> <code>AttributeType</code> - The
  data type for the attribute.</p> </li> </ul>\";}s:16:\"CreationDateTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Date\";s:11:\"description\";s:117:\"The
  date and time when the table was created, in <a href=\"http://www.epochconverter.com/\">UNIX
  epoch time</a> format.\";}s:22:\"GlobalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:49:\"#/definitions/GlobalSecondaryIndexDescriptionList\";s:11:\"description\";s:3163:\"<p>The
  global secondary indexes, if any, on the table. Each index is scoped to a given
  partition key value. Each element is composed of:</p> <ul> <li> <p> <code>Backfilling</code>
  - If true, then the index is currently in the backfilling phase. Backfilling occurs
  only when a new global secondary index is added to the table; it is the process
  by which DynamoDB populates the new index with data from the table. (This attribute
  does not appear for indexes that were created during a <code>CreateTable</code>
  operation.)</p> </li> <li> <p> <code>IndexName</code> - The name of the global secondary
  index.</p> </li> <li> <p> <code>IndexSizeBytes</code> - The total size of the global
  secondary index, in bytes. DynamoDB updates this value approximately every six hours.
  Recent changes might not be reflected in this value. </p> </li> <li> <p> <code>IndexStatus</code>
  - The current status of the global secondary index:</p> <ul> <li> <p> <code>CREATING</code>
  - The index is being created.</p> </li> <li> <p> <code>UPDATING</code> - The index
  is being updated.</p> </li> <li> <p> <code>DELETING</code> - The index is being
  deleted.</p> </li> <li> <p> <code>ACTIVE</code> - The index is ready for use.</p>
  </li> </ul> </li> <li> <p> <code>ItemCount</code> - The number of items in the global
  secondary index. DynamoDB updates this value approximately every six hours. Recent
  changes might not be reflected in this value. </p> </li> <li> <p> <code>KeySchema</code>
  - Specifies the complete index key schema. The attribute names in the key schema
  must be between 1 and 255 characters (inclusive). The key schema must begin with
  the same partition key as the table.</p> </li> <li> <p> <code>Projection</code>
  - Specifies attributes that are copied (projected) from the table into the index.
  These are in addition to the primary key attributes and index key attributes, which
  are automatically projected. Each attribute specification is composed of:</p> <ul>
  <li> <p> <code>ProjectionType</code> - One of the following:</p> <ul> <li> <p> <code>KEYS_ONLY</code>
  - Only the index and primary keys are projected into the index.</p> </li> <li> <p>
  <code>INCLUDE</code> - Only the specified table attributes are projected into the
  index. The list of projected attributes are in <code>NonKeyAttributes</code>.</p>
  </li> <li> <p> <code>ALL</code> - All of the table attributes are projected into
  the index.</p> </li> </ul> </li> <li> <p> <code>NonKeyAttributes</code> - A list
  of one or more non-key attribute names that are projected into the secondary index.
  The total count of attributes provided in <code>NonKeyAttributes</code>, summed
  across all of the secondary indexes, must not exceed 20. If you project the same
  attribute into two different indexes, this counts as two distinct attributes when
  determining the total.</p> </li> </ul> </li> <li> <p> <code>ProvisionedThroughput</code>
  - The provisioned throughput settings for the global secondary index, consisting
  of read and write capacity units, along with data about increases and decreases.
  </p> </li> </ul> <p>If the table is in the <code>DELETING</code> state, no information
  about indexes will be returned.</p>\";}s:9:\"ItemCount\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:155:\"The
  number of items in the specified table. DynamoDB updates this value approximately
  every six hours. Recent changes might not be reflected in this value.\";}s:9:\"KeySchema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/KeySchema\";s:11:\"description\";s:1094:\"<p>The
  primary key structure for the table. Each <code>KeySchemaElement</code> consists
  of:</p> <ul> <li> <p> <code>AttributeName</code> - The name of the attribute.</p>
  </li> <li> <p> <code>KeyType</code> - The role of the attribute:</p> <ul> <li> <p>
  <code>HASH</code> - partition key</p> </li> <li> <p> <code>RANGE</code> - sort key</p>
  </li> </ul> <note> <p>The partition key of an item is also known as its <i>hash
  attribute</i>. The term \"hash attribute\" derives from DynamoDB' usage of an internal
  hash function to evenly distribute data items across partitions, based on their
  partition key values.</p> <p>The sort key of an item is also known as its <i>range
  attribute</i>. The term \"range attribute\" derives from the way DynamoDB stores
  items with the same partition key physically close together, in sorted order by
  the sort key value.</p> </note> </li> </ul> <p>For more information about primary
  keys, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey\">Primary
  Key</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:15:\"LatestStreamArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/StreamArn\";s:11:\"description\";s:89:\"The
  Amazon Resource Name (ARN) that uniquely identifies the latest stream for this table.\";}s:17:\"LatestStreamLabel\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:451:\"<p>A
  timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <code>LatestStreamLabel</code>
  is not a unique identifier for the stream, because it is possible that a stream
  from another table might have the same timestamp. However, the combination of the
  following three elements is guaranteed to be unique:</p> <ul> <li> <p>the AWS customer
  ID.</p> </li> <li> <p>the table name.</p> </li> <li> <p>the <code>StreamLabel</code>.</p>
  </li> </ul>\";}s:21:\"LocalSecondaryIndexes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:48:\"#/definitions/LocalSecondaryIndexDescriptionList\";s:11:\"description\";s:2338:\"<p>Represents
  one or more local secondary indexes on the table. Each index is scoped to a given
  partition key value. Tables with one or more local secondary indexes are subject
  to an item collection size limit, where the amount of data within a given item collection
  cannot exceed 10 GB. Each element is composed of:</p> <ul> <li> <p> <code>IndexName</code>
  - The name of the local secondary index.</p> </li> <li> <p> <code>KeySchema</code>
  - Specifies the complete index key schema. The attribute names in the key schema
  must be between 1 and 255 characters (inclusive). The key schema must begin with
  the same partition key as the table.</p> </li> <li> <p> <code>Projection</code>
  - Specifies attributes that are copied (projected) from the table into the index.
  These are in addition to the primary key attributes and index key attributes, which
  are automatically projected. Each attribute specification is composed of:</p> <ul>
  <li> <p> <code>ProjectionType</code> - One of the following:</p> <ul> <li> <p> <code>KEYS_ONLY</code>
  - Only the index and primary keys are projected into the index.</p> </li> <li> <p>
  <code>INCLUDE</code> - Only the specified table attributes are projected into the
  index. The list of projected attributes are in <code>NonKeyAttributes</code>.</p>
  </li> <li> <p> <code>ALL</code> - All of the table attributes are projected into
  the index.</p> </li> </ul> </li> <li> <p> <code>NonKeyAttributes</code> - A list
  of one or more non-key attribute names that are projected into the secondary index.
  The total count of attributes provided in <code>NonKeyAttributes</code>, summed
  across all of the secondary indexes, must not exceed 20. If you project the same
  attribute into two different indexes, this counts as two distinct attributes when
  determining the total.</p> </li> </ul> </li> <li> <p> <code>IndexSizeBytes</code>
  - Represents the total size of the index, in bytes. DynamoDB updates this value
  approximately every six hours. Recent changes might not be reflected in this value.</p>
  </li> <li> <p> <code>ItemCount</code> - Represents the number of items in the index.
  DynamoDB updates this value approximately every six hours. Recent changes might
  not be reflected in this value.</p> </li> </ul> <p>If the table is in the <code>DELETING</code>
  state, no information about indexes will be returned.</p>\";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:46:\"#/definitions/ProvisionedThroughputDescription\";s:11:\"description\";s:142:\"The
  provisioned throughput settings for the table, consisting of read and write capacity
  units, along with data about increases and decreases.\";}s:14:\"RestoreSummary\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/RestoreSummary\";s:11:\"description\";s:33:\"Contains
  details for the restore.\";}s:14:\"SSEDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/SSEDescription\";s:11:\"description\";s:76:\"The
  description of the server-side encryption status on the specified table.\";}s:19:\"StreamSpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/StreamSpecification\";s:11:\"description\";s:57:\"The
  current DynamoDB Streams configuration for the table.\";}s:8:\"TableArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:66:\"The
  Amazon Resource Name (ARN) that uniquely identifies the table.\";}s:7:\"TableId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/TableId\";s:11:\"description\";s:66:\"Unique
  identifier for the table for which the backup was created. \";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  name of the table.\";}s:14:\"TableSizeBytes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:160:\"The
  total size of the specified table, in bytes. DynamoDB updates this value approximately
  every six hours. Recent changes might not be reflected in this value.\";}s:11:\"TableStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/TableStatus\";s:11:\"description\";s:331:\"<p>The
  current state of the table:</p> <ul> <li> <p> <code>CREATING</code> - The table
  is being created.</p> </li> <li> <p> <code>UPDATING</code> - The table is being
  updated.</p> </li> <li> <p> <code>DELETING</code> - The table is being deleted.</p>
  </li> <li> <p> <code>ACTIVE</code> - The table is ready for use.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:7:\"TableId\";O:8:\"stdClass\":2:{s:7:\"pattern\";s:60:\"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\";s:4:\"type\";s:6:\"string\";}s:19:\"TableInUseException\";O:8:\"stdClass\":3:{s:11:\"description\";s:75:\"A
  target table with the specified name is either being created or deleted. \";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:9:\"TableName\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:255;s:9:\"minLength\";i:3;s:7:\"pattern\";s:15:\"[a-zA-Z0-9_.-]+\";s:4:\"type\";s:6:\"string\";}s:13:\"TableNameList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";}s:4:\"type\";s:5:\"array\";}s:22:\"TableNotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:109:\"A
  source table with the name <code>TableName</code> does not currently exist within
  the subscriber's account.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:11:\"TableStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"CREATING\";i:1;s:8:\"UPDATING\";i:2;s:8:\"DELETING\";i:3;s:6:\"ACTIVE\";}s:4:\"type\";s:6:\"string\";}s:3:\"Tag\";O:8:\"stdClass\":4:{s:11:\"description\";s:627:\"<p>Describes
  a tag. A tag is a key-value pair. You can add up to 50 tags to a single DynamoDB
  table. </p> <p> AWS-assigned tag names and values are automatically assigned the
  aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards
  the tag limit of 50. User-assigned tag names have the prefix user: in the Cost Allocation
  Report. You cannot backdate the application of a tag. </p> <p>For an overview on
  tagging DynamoDB resources, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html\">Tagging
  for DynamoDB</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"Key\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/TagKeyString\";s:11:\"description\";s:218:\"The
  key of the tag.Tag keys are case sensitive. Each DynamoDB table can only have up
  to one tag with the same key. If you try to add an existing tag (same key), the
  existing tag value will be updated to the new value. \";}s:5:\"Value\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/TagValueString\";s:11:\"description\";s:68:\"The
  value of the tag. Tag values are case-sensitive and can be null.\";}}s:8:\"required\";a:2:{i:0;s:3:\"Key\";i:1;s:5:\"Value\";}s:4:\"type\";s:6:\"object\";}s:10:\"TagKeyList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/TagKeyString\";}s:4:\"type\";s:5:\"array\";}s:12:\"TagKeyString\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:128;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:7:\"TagList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}s:4:\"type\";s:5:\"array\";}s:16:\"TagResourceInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"ResourceArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ResourceArnString\";s:11:\"description\";s:115:\"Identifies
  the Amazon DynamoDB resource to which tags should be added. This value is an Amazon
  Resource Name (ARN).\";}s:4:\"Tags\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/TagList\";s:11:\"description\";s:56:\"The
  tags to be assigned to the Amazon DynamoDB resource.\";}}s:8:\"required\";a:2:{i:0;s:11:\"ResourceArn\";i:1;s:4:\"Tags\";}s:4:\"type\";s:6:\"object\";}s:14:\"TagValueString\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:256;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";}s:19:\"TimeRangeLowerBound\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:19:\"TimeRangeUpperBound\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:23:\"TimeToLiveAttributeName\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:21:\"TimeToLiveDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:73:\"The
  description of the Time to Live (TTL) status on the specified table. \";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"AttributeName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/TimeToLiveAttributeName\";s:11:\"description\";s:63:\"
  The name of the Time to Live attribute for items in the table.\";}s:16:\"TimeToLiveStatus\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TimeToLiveStatus\";s:11:\"description\";s:39:\"
  The Time to Live status for the table.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"TimeToLiveEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:23:\"TimeToLiveSpecification\";O:8:\"stdClass\":4:{s:11:\"description\";s:87:\"Represents
  the settings used to enable or disable Time to Live for the specified table.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"AttributeName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/TimeToLiveAttributeName\";s:11:\"description\";s:96:\"The
  name of the Time to Live attribute used to store the expiration time for items in
  the table.\";}s:7:\"Enabled\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/TimeToLiveEnabled\";s:11:\"description\";s:88:\"Indicates
  whether Time To Live is to be enabled (true) or disabled (false) on the table.\";}}s:8:\"required\";a:2:{i:0;s:7:\"Enabled\";i:1;s:13:\"AttributeName\";}s:4:\"type\";s:6:\"object\";}s:16:\"TimeToLiveStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:8:\"ENABLING\";i:1;s:9:\"DISABLING\";i:2;s:7:\"ENABLED\";i:3;s:8:\"DISABLED\";}s:4:\"type\";s:6:\"string\";}s:18:\"UntagResourceInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"ResourceArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ResourceArnString\";s:11:\"description\";s:105:\"The
  Amazon DyanamoDB resource the tags will be removed from. This value is an Amazon
  Resource Name (ARN).\";}s:7:\"TagKeys\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/TagKeyList\";s:11:\"description\";s:136:\"A
  list of tag keys. Existing tags of the resource whose keys are members of this list
  will be removed from the Amazon DynamoDB resource.\";}}s:8:\"required\";a:2:{i:0;s:11:\"ResourceArn\";i:1;s:7:\"TagKeys\";}s:4:\"type\";s:6:\"object\";}s:28:\"UpdateContinuousBackupsInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:32:\"PointInTimeRecoverySpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:46:\"#/definitions/PointInTimeRecoverySpecification\";s:11:\"description\";s:62:\"Represents
  the settings used to enable point in time recovery.\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  name of the table.\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:32:\"PointInTimeRecoverySpecification\";}s:4:\"type\";s:6:\"object\";}s:29:\"UpdateContinuousBackupsOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:28:\"ContinuousBackupsDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:42:\"#/definitions/ContinuousBackupsDescription\";s:11:\"description\";s:83:\"Represents
  the continuous backups and point in time recovery settings on the table.\";}}s:4:\"type\";s:6:\"object\";}s:16:\"UpdateExpression\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:32:\"UpdateGlobalSecondaryIndexAction\";O:8:\"stdClass\":4:{s:11:\"description\";s:93:\"Represents
  the new provisioned throughput settings to be applied to a global secondary index.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"IndexName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/IndexName\";s:11:\"description\";s:53:\"The
  name of the global secondary index to be updated.\";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:313:\"<p>Represents
  the provisioned throughput settings for the specified global secondary index.</p>
  <p>For current minimum and maximum provisioned throughput values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\">Limits</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:8:\"required\";a:2:{i:0;s:9:\"IndexName\";i:1;s:21:\"ProvisionedThroughput\";}s:4:\"type\";s:6:\"object\";}s:22:\"UpdateGlobalTableInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:22:\"The
  global table name.\";}s:14:\"ReplicaUpdates\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/ReplicaUpdateList\";s:11:\"description\";s:72:\"A
  list of regions that should be added or removed from the global table.\";}}s:8:\"required\";a:2:{i:0;s:15:\"GlobalTableName\";i:1;s:14:\"ReplicaUpdates\";}s:4:\"type\";s:6:\"object\";}s:23:\"UpdateGlobalTableOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:22:\"GlobalTableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/GlobalTableDescription\";s:11:\"description\";s:41:\"Contains
  the details of the global table.\";}}s:4:\"type\";s:6:\"object\";}s:30:\"UpdateGlobalTableSettingsInput\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:45:\"GlobalTableGlobalSecondaryIndexSettingsUpdate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:63:\"#/definitions/GlobalTableGlobalSecondaryIndexSettingsUpdateList\";s:11:\"description\";s:93:\"Represents
  the settings of a global secondary index for a global table that will be modified.\";}s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:28:\"The
  name of the global table\";}s:40:\"GlobalTableProvisionedWriteCapacityUnits\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/PositiveLongObject\";s:11:\"description\";s:109:\"The
  maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException.</code>
  \";}s:21:\"ReplicaSettingsUpdate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:39:\"#/definitions/ReplicaSettingsUpdateList\";s:11:\"description\";s:77:\"Represents
  the settings for a global table in a region that will be modified.\";}}s:8:\"required\";a:1:{i:0;s:15:\"GlobalTableName\";}s:4:\"type\";s:6:\"object\";}s:31:\"UpdateGlobalTableSettingsOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"GlobalTableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:29:\"The
  name of the global table.\";}s:15:\"ReplicaSettings\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:44:\"#/definitions/ReplicaSettingsDescriptionList\";s:11:\"description\";s:50:\"The
  region specific settings for the global table.\";}}s:4:\"type\";s:6:\"object\";}s:15:\"UpdateItemInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:61:\"Represents
  the input of an <code>UpdateItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":6:{s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:3:\"#AT\";s:10:\"AlbumTitle\";s:2:\"#Y\";s:4:\"Year\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":2:{s:2:\":t\";O:8:\"stdClass\":1:{s:1:\"S\";s:16:\"Louder
  Than Ever\";}s:2:\":y\";O:8:\"stdClass\":1:{s:1:\"N\";s:4:\"2015\";}}s:3:\"Key\";O:8:\"stdClass\":2:{s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Acme
  Band\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Happy Day\";}}s:12:\"ReturnValues\";s:7:\"ALL_NEW\";s:9:\"TableName\";s:5:\"Music\";s:16:\"UpdateExpression\";s:21:\"SET
  #Y = :y, #AT = :t\";}s:10:\"properties\";O:8:\"stdClass\":12:{s:16:\"AttributeUpdates\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/AttributeUpdates\";s:11:\"description\";s:288:\"This
  is a legacy parameter. Use <code>UpdateExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributeUpdates.html\">AttributeUpdates</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:19:\"ConditionExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionExpression\";s:11:\"description\";s:756:\"<p>A
  condition that must be satisfied in order for a conditional update to succeed.</p>
  <p>An expression can contain any of the following:</p> <ul> <li> <p>Functions: <code>attribute_exists
  | attribute_not_exists | attribute_type | contains | begins_with | size</code> </p>
  <p>These function names are case-sensitive.</p> </li> <li> <p>Comparison operators:
  <code>= | &lt;&gt; | &lt; | &gt; | &lt;= | &gt;= | BETWEEN | IN </code> </p> </li>
  <li> <p> Logical operators: <code>AND | OR | NOT</code> </p> </li> </ul> <p>For
  more information on condition expressions, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:19:\"ConditionalOperator\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/ConditionalOperator\";s:11:\"description\";s:297:\"This
  is a legacy parameter. Use <code>ConditionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\">ConditionalOperator</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:8:\"Expected\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/ExpectedAttributeMap\";s:11:\"description\";s:275:\"This
  is a legacy parameter. Use <code>ConditionExpression</code> instead. For more information,
  see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.Expected.html\">Expected</a>
  in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:24:\"ExpressionAttributeNames\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:40:\"#/definitions/ExpressionAttributeNameMap\";s:11:\"description\";s:1709:\"<p>One
  or more substitution tokens for attribute names in an expression. The following
  are some use cases for using <code>ExpressionAttributeNames</code>:</p> <ul> <li>
  <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
  </li> <li> <p>To create a placeholder for repeating occurrences of an attribute
  name in an expression.</p> </li> <li> <p>To prevent special characters in an attribute
  name from being misinterpreted in an expression.</p> </li> </ul> <p>Use the <b>#</b>
  character in an expression to dereference an attribute name. For example, consider
  the following attribute name:</p> <ul> <li> <p> <code>Percentile</code> </p> </li>
  </ul> <p>The name of this attribute conflicts with a reserved word, so it cannot
  be used directly in an expression. (For the complete list of reserved words, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\">Reserved
  Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you
  could specify the following for <code>ExpressionAttributeNames</code>:</p> <ul>
  <li> <p> <code>{\"#P\":\"Percentile\"}</code> </p> </li> </ul> <p>You could then
  use this substitution in an expression, as in this example:</p> <ul> <li> <p> <code>#P
  = :val</code> </p> </li> </ul> <note> <p>Tokens that begin with the <b>:</b> character
  are <i>expression attribute values</i>, which are placeholders for the actual value
  at runtime.</p> </note> <p>For more information on expression attribute names, see
  <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\">Accessing
  Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:25:\"ExpressionAttributeValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ExpressionAttributeValueMap\";s:11:\"description\";s:935:\"<p>One
  or more values that can be substituted in an expression.</p> <p>Use the <b>:</b>
  (colon) character in an expression to dereference an attribute value. For example,
  suppose that you wanted to check whether the value of the <i>ProductStatus</i> attribute
  was one of the following: </p> <p> <code>Available | Backordered | Discontinued</code>
  </p> <p>You would first need to specify <code>ExpressionAttributeValues</code> as
  follows:</p> <p> <code>{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"},
  \":disc\":{\"S\":\"Discontinued\"} }</code> </p> <p>You could then use these values
  in an expression, such as this:</p> <p> <code>ProductStatus IN (:avail, :back, :disc)</code>
  </p> <p>For more information on expression attribute values, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\">Specifying
  Conditions</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}s:3:\"Key\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:17:\"#/definitions/Key\";s:11:\"description\";s:386:\"<p>The
  primary key of the item to be updated. Each element consists of an attribute name
  and a value for that attribute.</p> <p>For the primary key, you must provide all
  of the attributes. For example, with a simple primary key, you only need to provide
  a value for the partition key. For a composite primary key, you must provide values
  for both the partition key and the sort key.</p>\";}s:22:\"ReturnConsumedCapacity\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ReturnConsumedCapacity\";}s:27:\"ReturnItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:41:\"#/definitions/ReturnItemCollectionMetrics\";s:11:\"description\";s:291:\"Determines
  whether item collection metrics are returned. If set to <code>SIZE</code>, the response
  includes statistics about item collections, if any, that were modified during the
  operation are returned in the response. If set to <code>NONE</code> (the default),
  no statistics are returned.\";}s:12:\"ReturnValues\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ReturnValue\";s:11:\"description\";s:1178:\"<p>Use
  <code>ReturnValues</code> if you want to get the item attributes as they appear
  before or after they are updated. For <code>UpdateItem</code>, the valid values
  are:</p> <ul> <li> <p> <code>NONE</code> - If <code>ReturnValues</code> is not specified,
  or if its value is <code>NONE</code>, then nothing is returned. (This setting is
  the default for <code>ReturnValues</code>.)</p> </li> <li> <p> <code>ALL_OLD</code>
  - Returns all of the attributes of the item, as they appeared before the UpdateItem
  operation.</p> </li> <li> <p> <code>UPDATED_OLD</code> - Returns only the updated
  attributes, as they appeared before the UpdateItem operation.</p> </li> <li> <p>
  <code>ALL_NEW</code> - Returns all of the attributes of the item, as they appear
  after the UpdateItem operation.</p> </li> <li> <p> <code>UPDATED_NEW</code> - Returns
  only the updated attributes, as they appear after the UpdateItem operation.</p>
  </li> </ul> <p>There is no additional cost associated with requesting a return value
  aside from the small network and processing overhead of receiving a larger response.
  No read capacity units are consumed.</p> <p>The values returned are strongly consistent.</p>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:52:\"The
  name of the table containing the item to update.\";}s:16:\"UpdateExpression\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/UpdateExpression\";s:11:\"description\";s:4426:\"<p>An
  expression that defines one or more attributes to be updated, the action to be performed
  on them, and new value(s) for them.</p> <p>The following action values are available
  for <code>UpdateExpression</code>.</p> <ul> <li> <p> <code>SET</code> - Adds one
  or more attributes and values to an item. If any of these attribute already exist,
  they are replaced by the new values. You can also use <code>SET</code> to add or
  subtract from an attribute that is of type Number. For example: <code>SET myNum
  = myNum + :val</code> </p> <p> <code>SET</code> supports the following functions:</p>
  <ul> <li> <p> <code>if_not_exists (path, operand)</code> - if the item does not
  contain an attribute at the specified path, then <code>if_not_exists</code> evaluates
  to operand; otherwise, it evaluates to path. You can use this function to avoid
  overwriting an attribute that may already be present in the item.</p> </li> <li>
  <p> <code>list_append (operand, operand)</code> - evaluates to a list with a new
  element added to it. You can append the new element to the start or the end of the
  list by reversing the order of the operands.</p> </li> </ul> <p>These function names
  are case-sensitive.</p> </li> <li> <p> <code>REMOVE</code> - Removes one or more
  attributes from an item.</p> </li> <li> <p> <code>ADD</code> - Adds the specified
  value to the item, if the attribute does not already exist. If the attribute does
  exist, then the behavior of <code>ADD</code> depends on the data type of the attribute:</p>
  <ul> <li> <p>If the existing attribute is a number, and if <code>Value</code> is
  also a number, then <code>Value</code> is mathematically added to the existing attribute.
  If <code>Value</code> is a negative number, then it is subtracted from the existing
  attribute.</p> <note> <p>If you use <code>ADD</code> to increment or decrement a
  number value for an item that doesn't exist before the update, DynamoDB uses <code>0</code>
  as the initial value.</p> <p>Similarly, if you use <code>ADD</code> for an existing
  item to increment or decrement an attribute value that doesn't exist before the
  update, DynamoDB uses <code>0</code> as the initial value. For example, suppose
  that the item you want to update doesn't have an attribute named <i>itemcount</i>,
  but you decide to <code>ADD</code> the number <code>3</code> to this attribute anyway.
  DynamoDB will create the <i>itemcount</i> attribute, set its initial value to <code>0</code>,
  and finally add <code>3</code> to it. The result will be a new <i>itemcount</i>
  attribute in the item, with a value of <code>3</code>.</p> </note> </li> <li> <p>If
  the existing data type is a set and if <code>Value</code> is also a set, then <code>Value</code>
  is added to the existing set. For example, if the attribute value is the set <code>[1,2]</code>,
  and the <code>ADD</code> action specified <code>[3]</code>, then the final attribute
  value is <code>[1,2,3]</code>. An error occurs if an <code>ADD</code> action is
  specified for a set attribute and the attribute type specified does not match the
  existing set type. </p> <p>Both sets must have the same primitive data type. For
  example, if the existing data type is a set of strings, the <code>Value</code> must
  also be a set of strings.</p> </li> </ul> <important> <p>The <code>ADD</code> action
  only supports Number and set data types. In addition, <code>ADD</code> can only
  be used on top-level attributes, not nested attributes.</p> </important> </li> <li>
  <p> <code>DELETE</code> - Deletes an element from a set.</p> <p>If a set of values
  is specified, then those values are subtracted from the old set. For example, if
  the attribute value was the set <code>[a,b,c]</code> and the <code>DELETE</code>
  action specifies <code>[a,c]</code>, then the final attribute value is <code>[b]</code>.
  Specifying an empty set is an error.</p> <important> <p>The <code>DELETE</code>
  action only supports set data types. In addition, <code>DELETE</code> can only be
  used on top-level attributes, not nested attributes.</p> </important> </li> </ul>
  <p>You can have many actions in a single expression, such as the following: <code>SET
  a=:value1, b=:value2 DELETE :value3, :value4, :value5</code> </p> <p>For more information
  on update expressions, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html\">Modifying
  Items and Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:3:\"Key\";}s:4:\"type\";s:6:\"object\";}s:16:\"UpdateItemOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:62:\"Represents
  the output of an <code>UpdateItem</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:10:\"Attributes\";O:8:\"stdClass\":4:{s:10:\"AlbumTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:16:\"Louder
  Than Ever\";}s:6:\"Artist\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Acme Band\";}s:9:\"SongTitle\";O:8:\"stdClass\":1:{s:1:\"S\";s:9:\"Happy
  Day\";}s:4:\"Year\";O:8:\"stdClass\":1:{s:1:\"N\";s:4:\"2015\";}}}s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"Attributes\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/AttributeMap\";s:11:\"description\";s:355:\"<p>A
  map of attribute values as they appear before or after the <code>UpdateItem</code>
  operation, as determined by the <code>ReturnValues</code> parameter.</p> <p>The
  <code>Attributes</code> map is only present if <code>ReturnValues</code> was specified
  as something other than <code>NONE</code> in the request. Each element represents
  one attribute.</p>\";}s:16:\"ConsumedCapacity\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/ConsumedCapacity\";s:11:\"description\";s:539:\"The
  capacity units consumed by the <code>UpdateItem</code> operation. The data returned
  includes the total provisioned throughput consumed, along with statistics for the
  table and any indexes involved in the operation. <code>ConsumedCapacity</code> is
  only returned if the <code>ReturnConsumedCapacity</code> parameter was specified.
  For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned
  Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.\";}s:21:\"ItemCollectionMetrics\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ItemCollectionMetrics\";s:11:\"description\";s:1158:\"<p>Information
  about item collections, if any, that were affected by the <code>UpdateItem</code>
  operation. <code>ItemCollectionMetrics</code> is only returned if the <code>ReturnItemCollectionMetrics</code>
  parameter was specified. If the table does not have any local secondary indexes,
  this information is not returned in the response.</p> <p>Each <code>ItemCollectionMetrics</code>
  element consists of:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition
  key value of the item collection. This is the same as the partition key value of
  the item itself.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate
  of item collection size, in gigabytes. This value is a two-element array containing
  a lower bound and an upper bound for the estimate. The estimate includes the size
  of all the items in the table, plus the size of all attributes projected into all
  of the local secondary indexes on that table. Use this estimate to measure whether
  a local secondary index is approaching its size limit.</p> <p>The estimate is subject
  to change over time; therefore, do not rely on the precision or accuracy of the
  estimate.</p> </li> </ul>\";}}s:4:\"type\";s:6:\"object\";}s:16:\"UpdateTableInput\";O:8:\"stdClass\":5:{s:11:\"description\";s:62:\"Represents
  the input of an <code>UpdateTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":2:{s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:17:\"ReadCapacityUnits\";i:10;s:18:\"WriteCapacityUnits\";i:10;}s:9:\"TableName\";s:15:\"MusicCollection\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:20:\"AttributeDefinitions\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/AttributeDefinitions\";s:11:\"description\";s:223:\"An
  array of attributes that describe the key schema for the table and indexes. If you
  are adding a new global secondary index to the table, <code>AttributeDefinitions</code>
  must include the key element(s) of the new index.\";}s:27:\"GlobalSecondaryIndexUpdates\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:44:\"#/definitions/GlobalSecondaryIndexUpdateList\";s:11:\"description\";s:650:\"<p>An
  array of one or more global secondary indexes for the table. For each index in the
  array, you can request one action:</p> <ul> <li> <p> <code>Create</code> - add a
  new global secondary index to the table.</p> </li> <li> <p> <code>Update</code>
  - modify the provisioned throughput settings of an existing global secondary index.</p>
  </li> <li> <p> <code>Delete</code> - remove a global secondary index from the table.</p>
  </li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.OnlineOps.html\">Managing
  Global Secondary Indexes</a> in the <i>Amazon DynamoDB Developer Guide</i>. </p>\";}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:35:\"#/definitions/ProvisionedThroughput\";s:11:\"description\";s:73:\"The
  new provisioned throughput settings for the specified table or index.\";}s:19:\"StreamSpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/StreamSpecification\";s:11:\"description\";s:295:\"<p>Represents
  the DynamoDB Streams configuration for the table.</p> <note> <p>You will receive
  a <code>ResourceInUseException</code> if you attempt to enable a stream on a table
  that already has a stream, or if you attempt to disable a stream on a table which
  does not have a stream.</p> </note>\";}s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:36:\"The
  name of the table to be updated.\";}}s:8:\"required\";a:1:{i:0;s:9:\"TableName\";}s:4:\"type\";s:6:\"object\";}s:17:\"UpdateTableOutput\";O:8:\"stdClass\":4:{s:11:\"description\";s:63:\"Represents
  the output of an <code>UpdateTable</code> operation.\";s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":8:{s:20:\"AttributeDefinitions\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:13:\"AttributeType\";s:1:\"S\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:13:\"AttributeType\";s:1:\"S\";}}s:16:\"CreationDateTime\";s:14:\"1421866952.062\";s:9:\"ItemCount\";i:0;s:9:\"KeySchema\";a:2:{i:0;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:6:\"Artist\";s:7:\"KeyType\";s:4:\"HASH\";}i:1;O:8:\"stdClass\":2:{s:13:\"AttributeName\";s:9:\"SongTitle\";s:7:\"KeyType\";s:5:\"RANGE\";}}s:21:\"ProvisionedThroughput\";O:8:\"stdClass\":4:{s:20:\"LastIncreaseDateTime\";s:14:\"1421874759.194\";s:22:\"NumberOfDecreasesToday\";i:1;s:17:\"ReadCapacityUnits\";i:1;s:18:\"WriteCapacityUnits\";i:1;}s:9:\"TableName\";s:15:\"MusicCollection\";s:14:\"TableSizeBytes\";i:0;s:11:\"TableStatus\";s:8:\"UPDATING\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"TableDescription\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/TableDescription\";s:11:\"description\";s:39:\"Represents
  the properties of the table.\";}}s:4:\"type\";s:6:\"object\";}s:21:\"UpdateTimeToLiveInput\";O:8:\"stdClass\":4:{s:11:\"description\";s:67:\"Represents
  the input of an <code>UpdateTimeToLive</code> operation.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"TableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/TableName\";s:11:\"description\";s:39:\"The
  name of the table to be configured.\";}s:23:\"TimeToLiveSpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/TimeToLiveSpecification\";s:11:\"description\";s:87:\"Represents
  the settings used to enable or disable Time to Live for the specified table.\";}}s:8:\"required\";a:2:{i:0;s:9:\"TableName\";i:1;s:23:\"TimeToLiveSpecification\";}s:4:\"type\";s:6:\"object\";}s:22:\"UpdateTimeToLiveOutput\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:23:\"TimeToLiveSpecification\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/TimeToLiveSpecification\";s:11:\"description\";s:68:\"Represents
  the output of an <code>UpdateTimeToLive</code> operation.\";}}s:4:\"type\";s:6:\"object\";}s:12:\"WriteRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:312:\"Represents
  an operation to perform - either <code>DeleteItem</code> or <code>PutItem</code>.
  You can only request one of these operations, not both, in a single <code>WriteRequest</code>.
  If you do need to perform both of these operations, you will need to provide two
  separate <code>WriteRequest</code> objects.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"DeleteRequest\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/DeleteRequest\";s:11:\"description\";s:57:\"A
  request to perform a <code>DeleteItem</code> operation.\";}s:10:\"PutRequest\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/PutRequest\";s:11:\"description\";s:54:\"A
  request to perform a <code>PutItem</code> operation.\";}}s:4:\"type\";s:6:\"object\";}s:13:\"WriteRequests\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/WriteRequest\";}s:8:\"maxItems\";i:25;s:8:\"minItems\";i:1;s:4:\"type\";s:5:\"array\";}}"
...
