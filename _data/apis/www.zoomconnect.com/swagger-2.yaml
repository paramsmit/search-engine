---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":10:{s:11:\"description\";s:28:\"The world's greatest
  SMS API\";s:5:\"title\";s:12:\"Zoom Connect\";s:7:\"version\";s:1:\"1\";s:21:\"x-apisguru-categories\";a:2:{i:0;s:9:\"messaging\";i:1;s:9:\"marketing\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:72:\"https://api.apis.guru/v2/cache/logo/http_zoomconnect.com_assets_logo.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.2\";}s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:41:\"https://www.zoomconnect.com/zoom/api-docs\";s:7:\"version\";s:3:\"1.2\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:15:\"zoomconnect.com\";s:6:\"x-tags\";a:2:{i:0;s:3:\"SMS\";i:1;s:8:\"bulk
  SMS\";}s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:11:\"zoomconnect\";s:4:\"type\";s:7:\"openapi\";}}"
host: www.zoomconnect.com
basePath: /app/api/rest/v1
paths:
  /account/balance:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns your account's credit balance
      operationId: getBalance
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/WebServiceAccount'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: balance
      tags:
      - account
  /account/transfer:
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: 'Transfers credits between two users in the same team. The <i>account
        email address</i> fields as well as the <i>number of credits to transfer</i>
        are required. '
      operationId: transfer
      parameters:
      - description: request
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceTransferCreditsRequest'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceUser'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: transfer
      tags:
      - account
  /account/user:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Find a user for a particular email address
      operationId: search
      parameters:
      - description: search by email address
        in: query
        name: searchEmail
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceUsers'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: search
      tags:
      - account
    put:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Creates a new sub-account in your team. The following fields are
        required <i>firstname, lastname, email address, contact number</i> and <i>password.</i>
      parameters:
      - description: request
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceUser'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceUser'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: create
      tags:
      - account
      operationId: account.user.put
  /account/user/{userId}:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Gets a user from a given user id
      operationId: getUser
      parameters:
      - description: userId
        format: int64
        in: path
        name: userId
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceUser'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: getUser
      tags:
      - account
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Updates a sub-account in your team. The following fields can be
        updated <i>firstname, lastname, contact number</i> and <i>password.</i>
      parameters:
      - description: userId
        format: int64
        in: path
        name: userId
        required: true
        type: integer
      - description: request
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceUser'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceUser'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: update
      tags:
      - account
      operationId: account.user.userId.post
  /contacts/all:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns all contacts
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceContacts'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: all
      tags:
      - contacts
      operationId: contacts.all.get
  /contacts/create:
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Creates a  contact
      parameters:
      - description: webServiceContact
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceContact'
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/WebServiceContact'
        201:
          description: Created
          schema:
            $ref: '#/definitions/WebServiceContact'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: create
      tags:
      - contacts
      operationId: contacts.create.post
  /contacts/{contactId}:
    delete:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Deletes a  contact
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      summary: delete
      tags:
      - contacts
      operationId: contacts.contactId.delete
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns details for a single contact
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceContact'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: get
      tags:
      - contacts
      operationId: contacts.contactId.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Updates a  contact
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      - description: webServiceContact
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceContact'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceContact'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: update
      tags:
      - contacts
      operationId: contacts.contactId.post
  /contacts/{contactId}/addFromGroup/{groupId}:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Remove a contact from a group
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: removeFromGroup
      tags:
      - contacts
      operationId: contacts.contactId.addFromGroup.groupId.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Remove a contact from a group
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: removeFromGroup
      tags:
      - contacts
      operationId: contacts.contactId.addFromGroup.groupId.post
  /contacts/{contactId}/addToGroup/{groupId}:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Add a contact to a group
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: addToGroup
      tags:
      - contacts
      operationId: contacts.contactId.addToGroup.groupId.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Add a contact to a group
      parameters:
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: addToGroup
      tags:
      - contacts
      operationId: contacts.contactId.addToGroup.groupId.post
  /context/lookup:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns context information for a single provided
      parameters:
      - description: number
        in: body
        name: body
        required: false
        schema:
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/WebServiceNumberContextLookupResponse'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: lookup
      tags:
      - context
      operationId: context.lookup.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns context information for a single provided
      parameters:
      - description: number
        in: body
        name: body
        required: false
        schema:
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/WebServiceNumberContextLookupResponse'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: lookup
      tags:
      - context
      operationId: context.lookup.post
  /groups/all:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns all groups
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceGroups'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: all
      tags:
      - groups
      operationId: groups.all.get
  /groups/create:
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Create a  group
      parameters:
      - description: webServiceGroup
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceGroup'
      responses:
        200:
          description: No response was specified
          schema:
            $ref: '#/definitions/WebServiceGroup'
        201:
          description: Created
          schema:
            $ref: '#/definitions/WebServiceGroup'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: create
      tags:
      - groups
      operationId: groups.create.post
  /groups/{groupId}:
    delete:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Deletes a  group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      summary: delete
      tags:
      - groups
      operationId: groups.groupId.delete
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns details for a single group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceGroup'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: get
      tags:
      - groups
      operationId: groups.groupId.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Update a  group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      - description: webServiceGroup
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceGroup'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceGroup'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: update
      tags:
      - groups
      operationId: groups.groupId.post
  /groups/{groupId}/addContact/{contactId}:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Add a contact to a group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: addContact
      tags:
      - groups
      operationId: groups.groupId.addContact.contactId.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Add a contact to a group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: addContact
      tags:
      - groups
      operationId: groups.groupId.addContact.contactId.post
  /groups/{groupId}/removeContact/{contactId}:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Remove a contact from a group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: removeContact
      tags:
      - groups
      operationId: groups.groupId.removeContact.contactId.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Remove a contact from a group
      parameters:
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      - description: contactId
        in: path
        name: contactId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: removeContact
      tags:
      - groups
      operationId: groups.groupId.removeContact.contactId.post
  /messages/all:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns all messages
      parameters:
      - default: 100
        description: number of elements to return at a time
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - default: 1
        description: page number
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - description: filter by message type
        enum:
        - OUTBOUND
        - INBOUND
        in: query
        name: type
        required: false
        type: string
      - description: filter by message status
        enum:
        - SCHEDULED
        - UNKNOWN
        - SENT
        - FAILED
        - FAILED_REFUNDED
        - FAILED_OPTOUT
        - DELIVERED
        in: query
        name: status
        required: false
        type: string
      - description: 'date format: yyyyMMdd'
        format: date-time
        in: query
        name: fromDateTimeSent
        required: false
        type: string
      - description: 'date format: yyyyMMdd'
        format: date-time
        in: query
        name: toDateTimeSent
        required: false
        type: string
      - description: 'date format: yyyyMMdd'
        format: date-time
        in: query
        name: fromDateTimeReceived
        required: false
        type: string
      - description: 'date format: yyyyMMdd'
        format: date-time
        in: query
        name: toDateTimeReceived
        required: false
        type: string
      - description: phone number the message was sent from
        in: query
        name: fromNumber
        required: false
        type: string
      - description: phone number the message was sent to
        in: query
        name: toNumber
        required: false
        type: string
      - description: search matching message text
        in: query
        name: message
        required: false
        type: string
      - description: search by campaign
        in: query
        name: campaign
        required: false
        type: string
      - description: search by data field
        in: query
        name: dataField
        required: false
        type: string
      - description: return only deleted / not deleted messages
        in: query
        name: deleted
        required: false
        type: boolean
      - description: return only read / unread messages (inbox messages only)
        in: query
        name: read
        required: false
        type: boolean
      - description: return only inbox messages which are a reply to the message with
          the given message id
        in: query
        name: repliesToMessageId
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceMessages'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: all
      tags:
      - messages
      operationId: messages.all.get
  /messages/{messageId}:
    delete:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Deletes a  message
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      summary: delete
      tags:
      - messages
      operationId: messages.messageId.delete
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns details for a single message
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceMessage'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: get
      tags:
      - messages
      operationId: messages.messageId.get
  /messages/{messageId}/markRead:
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Marks a  message as read
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceMessage'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: markRead
      tags:
      - messages
      operationId: messages.messageId.markRead.post
    put:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Marks a  message as read
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceMessage'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: markRead
      tags:
      - messages
      operationId: messages.messageId.markRead.put
  /messages/{messageId}/markUnread:
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Marks a  message as unread
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceMessage'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: markUnread
      tags:
      - messages
      operationId: messages.messageId.markUnread.post
    put:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Marks a  message as unread
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceMessage'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: markUnread
      tags:
      - messages
      operationId: messages.messageId.markUnread.put
  /sms/send:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns an example of the data to POST to send a single message.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceSendSmsRequest'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send
      tags:
      - sms
      operationId: sms.send.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Sends a single message. The <i>recipientNumber</i> and <i>message</i>
        fields are required. All other fields are optional.
      parameters:
      - description: request
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceSendSmsRequest'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceSendSmsResponse'
        201:
          description: Created
        400:
          description: Validation error</br></br>Code and message:<ul><li>2 - Invalid
            mobile number</li><li>3 - Message cannot be empty</li></ul>
          schema:
            $ref: '#/definitions/RestErrorDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send
      tags:
      - sms
      operationId: sms.send.post
  /sms/send-bulk:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns an example of the data to POST to send multiple messages
        in one transaction.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceSendSmsRequests'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send-bulk
      tags:
      - sms
      operationId: sms.send_bulk.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Send multiple messages in one transaction.
      parameters:
      - description: requests
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceSendSmsRequests'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceSendSmsResponses'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send-bulk
      tags:
      - sms
      operationId: sms.send_bulk.post
  /sms/send-url-parameters:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Send a single message using URL parameters.The <i>recipientNumber</i>
        and <i>message</i> parameters are required. All other parameters are optional.
      parameters:
      - description: the phone number of the recipient to send to
        in: query
        name: recipientNumber
        required: true
        type: string
      - description: the message to send
        in: query
        name: message
        required: true
        type: string
      - description: 'date format: yyyyMMddHHmm'
        format: date-time
        in: query
        name: dateToSend
        required: false
        type: string
      - description: optional campaign name
        in: query
        name: campaign
        required: false
        type: string
      - description: optional extra data
        in: query
        name: dataField
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send-url-parameters
      tags:
      - sms
      operationId: sms.send_url_parameters.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Send a single message using URL parameters.The <i>recipientNumber</i>
        and <i>message</i> parameters are required. All other parameters are optional.
      parameters:
      - description: the phone number of the recipient to send to
        in: query
        name: recipientNumber
        required: true
        type: string
      - description: the message to send
        in: query
        name: message
        required: true
        type: string
      - description: 'date format: yyyyMMddHHmm'
        format: date-time
        in: query
        name: dateToSend
        required: false
        type: string
      - description: optional campaign name
        in: query
        name: campaign
        required: false
        type: string
      - description: optional extra data
        in: query
        name: dataField
        required: false
        type: string
      responses:
        200:
          description: Description was not specified
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send-url-parameters
      tags:
      - sms
      operationId: sms.send_url_parameters.post
  /sms/send-url/{token}:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: 'Send a single message using your unique URL without having to
        authenticate using your email address or REST API token. The token required
        is the URL Sending token available on the developer setting page. The <i>recipientNumber</i>
        and <i>message</i> parameters are required. All other parameters are optional.
        Not that the token required here is '
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      - description: the phone number of the recipient to send to
        in: query
        name: recipientNumber
        required: true
        type: string
      - description: the message to send
        in: query
        name: message
        required: true
        type: string
      - description: 'date format: yyyyMMddHHmm'
        format: date-time
        in: query
        name: dateToSend
        required: false
        type: string
      - description: optional campaign name
        in: query
        name: campaign
        required: false
        type: string
      - description: optional extra data
        in: query
        name: dataField
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send-url
      tags:
      - sms
      operationId: sms.send_url.token.get
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: 'Send a single message using your unique URL without having to
        authenticate using your email address or REST API token. The token required
        is the URL Sending token available on the developer setting page. The <i>recipientNumber</i>
        and <i>message</i> parameters are required. All other parameters are optional.
        Not that the token required here is '
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      - description: the phone number of the recipient to send to
        in: query
        name: recipientNumber
        required: true
        type: string
      - description: the message to send
        in: query
        name: message
        required: true
        type: string
      - description: 'date format: yyyyMMddHHmm'
        format: date-time
        in: query
        name: dateToSend
        required: false
        type: string
      - description: optional campaign name
        in: query
        name: campaign
        required: false
        type: string
      - description: optional extra data
        in: query
        name: dataField
        required: false
        type: string
      responses:
        200:
          description: Description was not specified
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: send-url
      tags:
      - sms
      operationId: sms.send_url.token.post
  /templates/all:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns all templates
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceTemplates'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: all
      tags:
      - templates
      operationId: templates.all.get
  /templates/{templateId}:
    delete:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Deletes a  template
      parameters:
      - description: templateId
        format: int64
        in: path
        name: templateId
        required: true
        type: integer
      responses:
        200:
          description: Description was not specified
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      summary: delete
      tags:
      - templates
      operationId: templates.templateId.delete
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns details for a single template
      parameters:
      - description: templateId
        format: int64
        in: path
        name: templateId
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceTemplate'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: get
      tags:
      - templates
      operationId: templates.templateId.get
  /voice/all:
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns all voice messages
      parameters:
      - default: 100
        description: number of elements to return at a time
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - default: 1
        description: page number
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - description: filter by message status
        enum:
        - SCHEDULED
        - UNKNOWN
        - SENT
        - FAILED
        - FAILED_REFUNDED
        - FAILED_OPTOUT
        - DELIVERED
        in: query
        name: status
        required: false
        type: string
      - description: 'date format: yyyyMMdd'
        format: date-time
        in: query
        name: fromDateTimeSent
        required: false
        type: string
      - description: 'date format: yyyyMMdd'
        format: date-time
        in: query
        name: toDateTimeSent
        required: false
        type: string
      - description: phone number the message was sent to
        in: query
        name: toNumber
        required: false
        type: string
      - description: search matching message text
        in: query
        name: message
        required: false
        type: string
      - description: search by campaign
        in: query
        name: campaign
        required: false
        type: string
      - description: search by data field
        in: query
        name: dataField
        required: false
        type: string
      - description: return only deleted / not deleted messages
        in: query
        name: deleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceVoiceMessages'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: all
      tags:
      - voice
      operationId: voice.all.get
  /voice/single-audio:
    post:
      consumes:
      - multipart/form-data
      deprecated: false
      description: Send a single audio voice message to one recipient. Note, Content-Type
        header must be set to multipart/form-data for this request.
      operationId: voice.single_audio.post
      parameters:
      - description: audio file to play, supports MP3 or WAV format
        in: formData
        name: file
        required: true
        type: file
      - description: the phone number of the recipient to send to
        in: query
        name: recipientNumber
        required: true
        type: string
      - description: optional campaign name
        in: query
        name: campaign
        required: false
        type: string
      - description: optional extra data
        in: query
        name: dataField
        required: false
        type: string
      - description: optional number of times to retry unanswered call
        format: int32
        in: query
        name: retryCount
        required: false
        type: integer
      - description: optional minimum interval in minutes between retry attempts
        format: int32
        in: query
        name: retryMinimumInterval
        required: false
        type: integer
      - description: optional maximum interval in minutes between retry attempts
        format: int32
        in: query
        name: retryMaximumInterval
        required: false
        type: integer
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceSendVoiceMessageResponse'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: single-audio
      tags:
      - voice
  /voice/single-text:
    post:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Send a single text voice message to one recipient
      operationId: voice.single_text.post
      parameters:
      - description: request
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WebServiceVoiceMessageSendSingleTextRequest'
      responses:
        200:
          description: Description was not specified
          schema:
            $ref: '#/definitions/WebServiceSendVoiceMessageResponse'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: single-text
      tags:
      - voice
  /voice/{messageId}:
    delete:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Deletes a  message
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: Description was not specified
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      summary: delete
      tags:
      - voice
      operationId: voice.messageId.delete
    get:
      consumes:
      - application/json
      - application/xml
      deprecated: false
      description: Returns details for a single message
      parameters:
      - description: messageId
        in: path
        name: messageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WebServiceVoiceMessage'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      summary: get
      tags:
      - voice
      operationId: voice.messageId.get
produces:
- application/json
- application/xml
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":27:{s:4:\"Link\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"rel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"templated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:12:\"RestErrorDTO\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"RestErrorDTO\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"code\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:16:\"developerMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"moreInfoUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"Void\";O:8:\"stdClass\":0:{}s:17:\"WebServiceAccount\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"WebServiceAccount\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"creditBalance\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}}}s:17:\"WebServiceContact\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"WebServiceContact\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"contactId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"contactNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"WebServiceContactLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"WebServiceContactLink\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"contactId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}}}s:18:\"WebServiceContacts\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"WebServiceContacts\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:18:\"webServiceContacts\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/WebServiceContact\";}s:4:\"type\";s:5:\"array\";}}}s:15:\"WebServiceGroup\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"WebServiceGroup\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"groupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"WebServiceGroups\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"WebServiceGroups\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:16:\"webServiceGroups\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/WebServiceGroup\";}s:4:\"type\";s:5:\"array\";}}}s:17:\"WebServiceMessage\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"WebServiceMessage\";s:10:\"properties\";O:8:\"stdClass\":18:{s:8:\"campaign\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/WebServiceContactLink\";}s:10:\"creditCost\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:16:\"dateTimeReceived\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:17:\"dateTimeScheduled\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:12:\"dateTimeSent\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"fromNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"messageId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"messageStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"messageType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"numberOfMessages\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"read\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"repliedToMessage\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/WebServiceMessageLink\";}s:8:\"toNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"userDataField\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"WebServiceMessageLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"WebServiceMessageLink\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:9:\"messageId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"WebServiceMessages\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"WebServiceMessages\";s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"elements\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:4:\"page\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"totalElements\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:10:\"totalPages\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:18:\"webServiceMessages\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/WebServiceMessage\";}s:4:\"type\";s:5:\"array\";}}}s:36:\"WebServiceNumberContextLookupRequest\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"WebServiceNumberContextLookupRequest\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:7:\"numbers\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}}s:37:\"WebServiceNumberContextLookupResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"WebServiceNumberContextLookupResponse\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"numberValid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:24:\"WebServiceSendSmsRequest\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"WebServiceSendSmsRequest\";s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"campaign\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"dataField\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"dateToSend\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"recipientNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:25:\"WebServiceSendSmsRequests\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"WebServiceSendSmsRequests\";s:10:\"properties\";O:8:\"stdClass\":3:{s:17:\"defaultDateToSend\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:17:\"messagesPerMinute\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:15:\"sendSmsRequests\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/WebServiceSendSmsRequest\";}s:4:\"type\";s:5:\"array\";}}}s:25:\"WebServiceSendSmsResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"WebServiceSendSmsResponse\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"error\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"messageId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:26:\"WebServiceSendSmsResponses\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"WebServiceSendSmsResponses\";s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"sendSmsResponses\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:39:\"#/definitions/WebServiceSendSmsResponse\";}s:4:\"type\";s:5:\"array\";}}}s:34:\"WebServiceSendVoiceMessageResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"WebServiceSendVoiceMessageResponse\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"error\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"voiceMessageId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"WebServiceTemplate\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"WebServiceTemplate\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"data\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"templateId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}}s:19:\"WebServiceTemplates\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"WebServiceTemplates\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:19:\"webServiceTemplates\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/WebServiceTemplate\";}s:4:\"type\";s:5:\"array\";}}}s:32:\"WebServiceTransferCreditsRequest\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"WebServiceTransferCreditsRequest\";s:10:\"properties\";O:8:\"stdClass\":3:{s:25:\"numberOfCreditsToTransfer\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:24:\"transferFromEmailAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"transferToEmailAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"WebServiceUser\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"WebServiceUser\";s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"company\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"contactNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"creditBalance\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:12:\"emailAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}}}s:15:\"WebServiceUsers\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"WebServiceUsers\";s:10:\"properties\";O:8:\"stdClass\":1:{s:18:\"webServiceUserList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/WebServiceUser\";}s:4:\"type\";s:5:\"array\";}}}s:22:\"WebServiceVoiceMessage\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"WebServiceVoiceMessage\";s:10:\"properties\";O:8:\"stdClass\":11:{s:12:\"audioFileUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"campaign\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"dateTimeSent\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"language\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"messageStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"toNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"userDataField\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"voiceMessageId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:43:\"WebServiceVoiceMessageSendSingleTextRequest\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"WebServiceVoiceMessageSendSingleTextRequest\";s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"campaign\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"dataField\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"language\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"recipientNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"retryCount\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:20:\"retryMaximumInterval\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:20:\"retryMinimumInterval\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}}s:23:\"WebServiceVoiceMessages\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"WebServiceVoiceMessages\";s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"elements\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}s:4:\"type\";s:5:\"array\";}s:8:\"messages\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/WebServiceVoiceMessage\";}s:4:\"type\";s:5:\"array\";}s:4:\"page\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"totalElements\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:10:\"totalPages\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}}}"
...
