---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:1517:\"[![Swagger Validity]https://img.shields.io/swagger/valid/2.0/http/api.swindle.net/cordova/v6/contacts/openapi.json.svg)](http://online.swagger.io/validator/debug?url=http://api.swindle.net/cordova/v6/contacts/openapi.json)\n\nThe
  `Contact` object represents a user's contact information that the [`cordova-plugin-contacts`](https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-contacts/index.html)
  can use to _create_, _store_, or _remove_ from a mobile device's contacts database.\n\n**:rotating_light:
  \  IMPORTANT Privacy Considerations**\n> Collection and use of contact data raises
  important privacy issues. Your app's privacy policy should declare how it uses contact
  data and whether it is shared with any other parties. Contact information is considered
  sensitive because it reveals the people with whom a person communicates. Therefore,
  in addition to the app's privacy policy, you should strongly consider providing
  a just-in-time notice before the app accesses or uses contact data, if the device
  operating system doesn't do so already. That notice should provide the same information
  noted above, as well as obtaining the user's permission (e.g., by presenting choices
  for \"I agree\" and \"I decline\"). Note that some app marketplaces may require
  the app to provide a just-in-time notice and obtain the user's permission before
  accessing contact data. A clear and easy-to-understand user experience surrounding
  the use of contact data helps avoid user confusion and perceived misuse of contact
  data.\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:16:\"Cordova Contacts\";s:14:\"termsOfService\";s:91:\"https://github.com/gregswindle/cordova-contacts-swagger-api/blob/master/TERMS_OF_SERVICE.md\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:23:\"oneapi-team@verizon.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: api.swindle.net
basePath: /cordova/v6/contacts
paths:
  /me:
    get:
      tags:
      - contacts
      summary: Retrieve one's own Contact information.
      description: Returns one's own Contact information.
      produces:
      - application/json
      - application/xml
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Contact'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - api_key: []
  /{id}:
    get:
      tags:
      - contacts
      summary: Retrieve an active Verizon employee's Contact information.
      description: Retrieve an active Verizon employee's Contact information by a
        (registered) identifier.
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: id
        description: A registered identifier value for an active Verizon employee.
        required: true
        type: string
      - in: query
        name: type
        type: string
        description: The specific kind of identifier provided. If omitted, `type`
          defaults to `eid` (Enterprise ID). Otherwise you can specify `emplid` (Employee
          ID) or `vzid` (Verizon ID).
        required: false
        default: eid
        enum:
        - eid
        - emplid
        - vzid
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Contact'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - api_key: []
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":6:{s:12:\"ContactField\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:4:\"pref\";i:1;s:4:\"type\";i:2;s:5:\"value\";}s:11:\"description\";s:780:\"The
  `ContactField` object is a reusable component that represents contact fields generically.
  Each `ContactField` object contains a `value`, `type`, and `pref` property. A Contact
  object stores several properties in `ContactField[]` arrays, such as phone numbers
  and email addresses. In most instances, there are no pre-determined values for a
  ContactField object's type attribute. For example, a phone number can specify type
  values of home, work, mobile, iPhone, or any other value that is supported by a
  particular device platform's contact database. However, for the Contact photos field,
  the type field indicates the format of the returned image: url when the value attribute
  contains a URL to the photo image, or base64 when the value contains a base64-encoded
  image string.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"value\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:64:\"The
  value of the field, such as a phone number or email address.\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:65:\"A
  string that indicates what type of field this is, e.g., \"work\".\";}s:4:\"pref\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";s:5:\"false\";s:11:\"description\";s:69:\"Set
  to true if this ContactField contains the user's preferred value.\";}}}s:11:\"ContactName\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:72:\"Contains
  different kinds of information about a `Contact` object's name.\";s:7:\"default\";s:4:\"null\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"formatted\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:33:\"The
  complete name of the contact.\";}s:10:\"familyName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:32:\"The
  contact's last name/surname.\";}s:9:\"givenName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:34:\"The
  contact's first name/forename.\";}s:10:\"middleName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:29:\"The
  contact's middle name(s).\";}s:15:\"honorificPrefix\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:40:\"The
  contact's prefix (e.g., Ms. or Dr.).\";}s:15:\"honorificSuffix\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:41:\"The
  contact's suffix (e.g., Esq. or III).\";}}}s:14:\"ContactAddress\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:165:\"The
  `ContactAddress` object stores the properties of a single address of a contact.
  A Contact object may include more than one address in a `ContactAddress[]` array.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"pref\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";s:5:\"false\";s:11:\"description\";s:75:\"Set
  to `true` if this `ContactAddress` contains the user's preferred value.\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:61:\"A
  string indicating what type of field this is, e.g., \"work\".\";}s:9:\"formatted\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:39:\"The
  full address formatted for display.\";}s:13:\"streetAddress\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:24:\"The
  full street address.\";}s:8:\"locality\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:21:\"The
  city or locality.\";}s:6:\"region\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:20:\"The
  state or region.\";}s:10:\"postalCode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:23:\"The
  zip or postal code.\";}s:7:\"country\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:17:\"The
  country name.\";}}}s:19:\"ContactOrganization\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:157:\"The
  `ContactOrganization` object stores a contact's organization properties. A `Contact`
  object stores one or more `ContactOrganization` objects in an array.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"pref\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";s:5:\"false\";s:11:\"description\";s:80:\"Set
  to `true` if this `ContactOrganization` contains the user's preferred value.\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:65:\"A
  string that indicates what type of field this is, e.g., \"work\".\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:29:\"The
  name of the organization.\";}s:10:\"department\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:38:\"The
  department the contract works for.\";}s:5:\"title\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:40:\"The
  contact's title at the organization.\";}}}s:7:\"Contact\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:182:\"The
  Contact object represents a user's contact in a form that cordova-plugin-contacts
  can immediately use to create, store, or remove from a mobile device's native contacts
  database.\";s:10:\"properties\";O:8:\"stdClass\":14:{s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:207:\"A
  globally unique identifier set by a mobile device. \u26A0\uFE0F Do not use id to
  store user-defined values. The id property should never by used to store a value,
  as each mobile device overwrites it with a UUID.\";}s:9:\"addresses\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ContactAddress\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:36:\"An
  array of the contact's addresses.\";}s:8:\"birthday\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:83:\"The
  Contact's birth month/date. \u26A0\uFE0F  `birthday` does not include the birth
  year.\";}s:10:\"categories\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ContactField\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:226:\"An
  `array` of all the user-defined categories associated with the contact. The Verizon
  implementation displays the Verizon Enterprise ID of the:     Contact itself; Contact's
  direct reports (if any); and Contact's supervisor. \";}s:11:\"displayName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:62:\"The
  name of this `Contact`, suitable for display to end users.\";}s:6:\"emails\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ContactField\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:42:\"An
  array of the contact's email addresses.\";}s:3:\"ims\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ContactField\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:59:\"An
  `array` of the contact's Instant Message (IM) addresses.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/ContactName\";s:11:\"description\";s:54:\"An
  object containing all components of a persons name.\";}s:8:\"nickname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:59:\"A
  casual or preferred name by which to address the contact.\";}s:4:\"note\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:4:\"null\";s:11:\"description\";s:29:\"A
  note/bio about the contact.\";}s:13:\"organizations\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/ContactOrganization\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:40:\"An
  array of the contact's organizations.\";}s:12:\"phoneNumbers\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ContactField\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:0:\"\";}s:6:\"photos\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ContactField\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:40:\"An
  array of the contact's phone numbers.\";}s:4:\"urls\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ContactField\";}s:7:\"default\";s:2:\"[]\";s:11:\"description\";s:50:\"An
  array of web pages associated with the contact.\";}}}s:13:\"ErrorResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:39:\"Apigee's
  default error response object.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"fault\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"detail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"errorcode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"faultstring\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}"
...
