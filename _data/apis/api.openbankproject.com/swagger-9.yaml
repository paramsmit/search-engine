---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:5:\"title\";s:37:\"OpenBankProject-Counterparty-Metadata\";s:11:\"description\";s:107:\"An
  Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2018. Licensed under the AGPL
  and commercial licences.\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:31:\"TESOBE
  Ltd. / Open Bank Project\";s:3:\"url\";s:27:\"https://openbankproject.com\";s:5:\"email\";s:18:\"contact@tesobe.com\";}s:7:\"version\";s:6:\"v3_1_0\";}"
host: api.openbankproject.com
basePath: /obp-counterparty-metadata
paths:
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata:
    get:
      tags:
      - Counterparty-Metadata
      summary: Get Other Account Metadata.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Get metadata of one other account. Returns only the metadata
        about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one
        transaction with ACCOUNT_ID at BANK_ID.</p><p>Authentication via OAuth is
        required if the view is not public.</p>
      operationId: vv1_2_1-getOtherAccountMetadata
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/OtherAccountMetadataJSON'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete Counterparty Corporate Location.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Delete corporate location of other bank account. Delete the
        geolocation of the counterparty's registered address</p>
      operationId: vv1_2_1-deleteCounterpartyCorporateLocation
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add Corporate Location to Counterparty
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Add the geolocation of the counterparty's registered address</p>
      operationId: vv1_2_1-addCounterpartyCorporateLocation
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/CorporateLocationJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update Counterparty Corporate Location
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Update the geolocation of the counterparty's registered address</p>
      operationId: vv1_2_1-updateCounterpartyCorporateLocation
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/CorporateLocationJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete Counterparty Image URL
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Delete image url of other bank account.</p>
      operationId: vv1_2_1-deleteCounterpartyImageUrl
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add image url to other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Add a url that points to the logo of the counterparty</p>
      operationId: vv1_2_1-addCounterpartyImageUrl
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/ImageUrlJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update Counterparty Image Url
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Update the url that points to the logo of the counterparty</p>
      operationId: vv1_2_1-updateCounterpartyImageUrl
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/ImageUrlJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete more info of other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: ""
      operationId: vv1_2_1-deleteCounterpartyMoreInfo
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add Counterparty More Info
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Add a description of the counter party from the perpestive of
        the account e.g. My dentist.</p>
      operationId: vv1_2_1-addCounterpartyMoreInfo
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/MoreInfoJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update Counterparty More Info
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Update the more info description of the counter party from the
        perpestive of the account e.g. My dentist.</p>
      operationId: vv1_2_1-updateCounterpartyMoreInfo
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/MoreInfoJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete Counterparty Open Corporates URL
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Delete open corporate url of other bank account.</p>
      operationId: vv1_2_1-deleteCounterpartyOpenCorporatesUrl
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add Open Corporates URL to Counterparty
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Add open corporates url to other bank account.</p>
      operationId: vv1_2_1-addCounterpartyOpenCorporatesUrl
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/OpenCorporateUrlJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update Open Corporates Url of Counterparty
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Update open corporate url of other bank account.</p>
      operationId: vv1_2_1-updateCounterpartyOpenCorporatesUrl
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/OpenCorporateUrlJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete Counterparty Physical Location.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Delete physical location of other bank account.</p>
      operationId: vv1_2_1-deleteCounterpartyPhysicalLocation
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add physical location to other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Add geocoordinates of the counterparty's main location</p>
      operationId: vv1_2_1-addCounterpartyPhysicalLocation
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/PhysicalLocationJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update Counterparty Physical Location
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Update geocoordinates of the counterparty's main location</p>
      operationId: vv1_2_1-updateCounterpartyPhysicalLocation
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/PhysicalLocationJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete url of other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: ""
      operationId: vv1_2_1-deleteCounterpartyUrl
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add url to other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>A url which represents the counterparty (home page url etc.)</p>
      operationId: vv1_2_1-addCounterpartyUrl
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/UrlJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update url of other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>A url which represents the counterparty (home page url etc.)</p>
      operationId: vv1_2_1-updateCounterpartyUrl
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/UrlJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete Counterparty Private Alias
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication
        is Optional Authentication is required if the view is not public.</p>
      operationId: vv1_2_1-deleteCounterpartyPrivateAlias
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    get:
      tags:
      - Counterparty-Metadata
      summary: Get Other Account Private Alias
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication
        is Optional Authentication is required if the view is not public.</p>
      operationId: vv1_2_1-getOtherAccountPrivateAlias
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AliasJSON'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
      - Counterparty-Metadata
      summary: Create Other Account Private Alias
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication
        is Optional Authentication is required if the view is not public.</p>
      operationId: vv1_2_1-addOtherAccountPrivateAlias
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/AliasJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update Counterparty Private Alias
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Updates the private alias of the counterparty (AKA other account)
        OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required
        if the view is not public.</p>
      operationId: vv1_2_1-updateCounterpartyPrivateAlias
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/AliasJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v1.2.1/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias:
    delete:
      tags:
      - Counterparty-Metadata
      summary: Delete Counterparty Public Alias
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication
        is Optional Authentication is required if the view is not public.</p>
      operationId: vv1_2_1-deleteCounterpartyPublicAlias
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        204:
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    get:
      tags:
      - Counterparty-Metadata
      summary: Get public alias of other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Returns the public alias of the other account OTHER_ACCOUNT_ID.
        Authentication is Optional Authentication is Mandatory if the view is not
        public.</p>
      operationId: vv1_2_1-getCounterpartyPublicAlias
      parameters:
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AliasJSON'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    post:
      tags:
      - Counterparty-Metadata
      summary: Add public alias to other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: '<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication
        is Optional Authentication is required if the view is not public.</p><p>Note:
        Public aliases are automatically generated for new ''other accounts / counterparties'',
        so this call should only be used if the public alias was deleted.</p><p>The
        VIEW_ID parameter should be a view the caller is permitted to access to and
        that has permission to create public aliases.</p>'
      operationId: vv1_2_1-addCounterpartyPublicAlias
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/AliasJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        201:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    put:
      tags:
      - Counterparty-Metadata
      summary: Update public alias of other bank account.
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Updates the public alias of the other account / counterparty
        OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required
        if the view is not public.</p>
      operationId: vv1_2_1-updateCounterpartyPublicAlias
      parameters:
      - in: body
        name: body
        description: BANK_BODY
        required: true
        schema:
          $ref: '#/definitions/AliasJSON'
      - in: path
        name: OTHER_ACCOUNT_ID
        description: The other account id
        required: true
        type: string
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  /obp/v2.2.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/COUNTERPARTY_ID:
    get:
      tags:
      - Counterparty-Metadata
      summary: Get Counterparty by Counterparty Id.(Explicit).
      security:
      - directLogin: []
        gatewayLogin: []
      description: <p>Information returned about the Counterparty specified by COUNTERPARTY_ID:</p><p>Authentication
        is Mandatory</p>
      operationId: vv2_2_0-getExplictCounterpartyById
      parameters:
      - in: path
        name: VIEW_ID
        description: The view id
        required: true
        type: string
      - in: path
        name: ACCOUNT_ID
        description: The account id
        required: true
        type: string
      - in: path
        name: BANK_ID
        description: The bank id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CounterpartyWithMetadataJson'
        400:
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":19:{s:24:\"OtherAccountMetadataJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:8:{i:0;s:12:\"public_alias\";i:1;s:13:\"private_alias\";i:2;s:9:\"more_info\";i:3;s:3:\"URL\";i:4;s:9:\"image_URL\";i:5;s:19:\"open_corporates_URL\";i:6;s:18:\"corporate_location\";i:7;s:17:\"physical_location\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:12:\"public_alias\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"NONE\";}s:9:\"image_URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"www.openbankproject.com\";}s:17:\"physical_location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/LocationJSONV121\";}s:13:\"private_alias\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"NONE\";}s:3:\"URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"www.openbankproject.com\";}s:9:\"more_info\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"www.openbankproject.com\";}s:18:\"corporate_location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/LocationJSONV121\";}s:19:\"open_corporates_URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"www.openbankproject.com\";}}}s:16:\"LocationJSONV121\";O:8:\"stdClass\":2:{s:8:\"required\";a:4:{i:0;s:8:\"latitude\";i:1;s:9:\"longitude\";i:2;s:4:\"date\";i:3;s:4:\"user\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/UserJSONV121\";}s:4:\"date\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:7:\"example\";s:28:\"Tue
  Sep 19 00:00:00 UTC 2017\";}s:9:\"longitude\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:7:\"example\";s:5:\"1.231\";}s:8:\"latitude\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:7:\"example\";s:5:\"1.231\";}}}s:12:\"UserJSONV121\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:8:\"provider\";i:2;s:12:\"display_name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"display_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"OBP\";}s:8:\"provider\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"OBP\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:36:\"5995d6a2-01b3-423c-a173-5481df49bdaf\";}}}s:20:\"ErrorUserNotLoggedIn\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:58:\"OBP-20001:
  User not logged in. Authentication is required!\";}}}s:14:\"EmptyClassJson\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"jsonString\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"jsonString\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"{}\";}}}s:21:\"CorporateLocationJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:18:\"corporate_location\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:18:\"corporate_location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/LocationPlainJSON\";}}}s:17:\"LocationPlainJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:8:\"latitude\";i:1;s:9:\"longitude\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"longitude\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:7:\"example\";s:5:\"1.535\";}s:8:\"latitude\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:7:\"example\";s:5:\"1.532\";}}}s:14:\"SuccessMessage\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:7:\"success\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"success\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"Success\";}}}s:17:\"ErrorUnknownError\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:25:\"OBP-50000:
  Unknown Error.\";}}}s:12:\"ImageUrlJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:9:\"image_URL\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"image_URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"String\";}}}s:24:\"ErrorBankAccountNotFound\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:91:\"OBP-30018:
  Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID.
  \";}}}s:12:\"MoreInfoJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:9:\"more_info\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"more_info\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"String\";}}}s:20:\"OpenCorporateUrlJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:19:\"open_corporates_URL\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:19:\"open_corporates_URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"String\";}}}s:20:\"PhysicalLocationJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:17:\"physical_location\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"physical_location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/LocationPlainJSON\";}}}s:7:\"UrlJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:3:\"URL\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"URL\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"String\";}}}s:9:\"AliasJSON\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:5:\"alias\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"alias\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"String\";}}}s:28:\"CounterpartyWithMetadataJson\";O:8:\"stdClass\":2:{s:8:\"required\";a:18:{i:0;s:4:\"name\";i:1;s:11:\"description\";i:2;s:18:\"created_by_user_id\";i:3;s:12:\"this_bank_id\";i:4;s:15:\"this_account_id\";i:5;s:12:\"this_view_id\";i:6;s:15:\"counterparty_id\";i:7;s:25:\"other_bank_routing_scheme\";i:8;s:26:\"other_bank_routing_address\";i:9;s:27:\"other_branch_routing_scheme\";i:10;s:28:\"other_branch_routing_address\";i:11;s:28:\"other_account_routing_scheme\";i:12;s:29:\"other_account_routing_address\";i:13;s:38:\"other_account_secondary_routing_scheme\";i:14;s:39:\"other_account_secondary_routing_address\";i:15;s:14:\"is_beneficiary\";i:16;s:7:\"bespoke\";i:17;s:8:\"metadata\";}s:10:\"properties\";O:8:\"stdClass\":18:{s:29:\"other_account_routing_address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:22:\"7987987-2348987-234234\";}s:28:\"other_account_routing_scheme\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"accountNumber\";}s:18:\"created_by_user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:36:\"49e1e147-64c1-4823-ad9f-89efcd02a9fa\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"CounterpartyName\";}s:39:\"other_account_secondary_routing_address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:36:\"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\";}s:14:\"is_beneficiary\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";s:4:\"true\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"My
  landlord\";}s:28:\"other_branch_routing_address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"10010\";}s:7:\"bespoke\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/PostCounterpartyBespokeJson\";}}s:25:\"other_bank_routing_scheme\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"bankCode\";}s:27:\"other_branch_routing_scheme\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"branchNumber\";}s:15:\"this_account_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:36:\"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\";}s:12:\"this_view_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"owner\";}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CounterpartyMetadataJson\";}s:26:\"other_bank_routing_address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"10\";}s:12:\"this_bank_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"gh.29.uk\";}s:15:\"counterparty_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:36:\"1d65db7c-a7b2-4839-af41-958276ab7790\";}s:38:\"other_account_secondary_routing_scheme\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"accountId\";}}}s:27:\"PostCounterpartyBespokeJson\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:3:\"key\";i:1;s:5:\"value\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"english
  Name\";}s:3:\"key\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"englishName\";}}}s:24:\"CounterpartyMetadataJson\";O:8:\"stdClass\":2:{s:8:\"required\";a:8:{i:0;s:11:\"publicAlias\";i:1;s:8:\"moreInfo\";i:2;s:3:\"url\";i:3;s:8:\"imageURL\";i:4;s:17:\"openCorporatesURL\";i:5;s:17:\"corporateLocation\";i:6;s:16:\"physicalLocation\";i:7;s:12:\"privateAlias\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"publicAlias\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"String\";}}}}"
...
