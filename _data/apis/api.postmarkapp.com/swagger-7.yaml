---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":10:{s:11:\"description\";s:182:\"Postmark makes
  sending and receiving email \nincredibly easy. The Account-level API allows users
  to\nconfigure all Servers, Domains, and Sender Signatures associated \nwith an Account.\n\";s:5:\"title\";s:22:\"Postmark
  Account-level\";s:7:\"version\";s:5:\"0.9.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"email\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:110:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_879295889185157120_ZYlwxzeY_400x400.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:43:\"https://postmarkapp.com/swagger/account.yml\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:15:\"postmarkapp.com\";s:13:\"x-serviceName\";s:7:\"account\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:19:\"postmarkapp_account\";s:4:\"type\";s:7:\"openapi\";}}"
host: api.postmarkapp.com
basePath: /
paths:
  /domains:
    get:
      operationId: listDomains
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: Number of records to return per request. Max 500.
        in: query
        maximum: 500
        minimum: 1
        name: count
        required: true
        type: integer
      - description: Number of records to skip
        in: query
        minimum: 0
        name: offset
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainListingResults'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: List Domains
      tags:
      - Domains API
    post:
      operationId: createDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/DomainCreationModel'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Create a Domain
      tags:
      - Domains API
  /domains/{domainid}:
    delete:
      operationId: deleteDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Domain that should be deleted by the request.
        in: path
        name: domainid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StandardPostmarkResponse'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Delete a Domain
      tags:
      - Domains API
    get:
      operationId: getDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Domain that should be retrieved.
        in: path
        name: domainid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Get a Domain
      tags:
      - Domains API
    put:
      operationId: editDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Domain that should be modified by the request.
        in: path
        name: domainid
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/DomainEditingModel'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Update a Domain
      tags:
      - Domains API
  /domains/{domainid}/rotatedkim:
    post:
      description: Creates a new DKIM key to replace your current key. Until the DNS
        entries are confirmed, nthe new values will be in the `DKIMPendingHost` and
        `DKIMPendingTextValue` fields. nAfter the new DKIM value is verified in DNS,
        the pending values will migrate to n`DKIMTextValue` and `DKIMPendingTextValue`
        and Postmark will begin to sign emails nwith the new DKIM key.n
      operationId: rotateDKIMKeyForDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature for which a new DKIM Key should
          be generated.
        in: path
        name: domainid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DKIMRotationResponse'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Rotate DKIM Key
      tags:
      - Domains API
  /domains/{domainid}/verifydkim:
    put:
      operationId: requestDkimVerificationForDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Domain for which DKIM DNS records should be verified.
        in: path
        name: domainid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Request DNS Verification for DKIM
      tags:
      - Domains API
  /domains/{domainid}/verifyreturnpath:
    put:
      operationId: requestReturnPathVerificationForDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Domain for which Return-Path DNS records should
          be verified.
        in: path
        name: domainid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Request DNS Verification for Return-Path
      tags:
      - Domains API
  /domains/{domainid}/verifyspf:
    post:
      operationId: requestSPFVerificationForDomain
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Domain for which SPF DNS records should be verified.
        in: path
        name: domainid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DomainSPFResult'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Request DNS Verification for SPF
      tags:
      - Domains API
  /senders:
    get:
      operationId: listSenderSignatures
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: Number of records to return per request. Max 500.
        in: query
        maximum: 500
        minimum: 1
        name: count
        required: true
        type: integer
      - description: Number of records to skip
        in: query
        minimum: 0
        name: offset
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SenderListingResults'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: List Sender Signatures
      tags:
      - Sender Signatures API
    post:
      operationId: createSenderSignature
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/SenderSignatureCreationModel'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SenderSignatureExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Create a Sender Signature
      tags:
      - Sender Signatures API
  /senders/{signatureid}:
    delete:
      operationId: deleteSenderSignature
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature that should be deleted by the
          request.
        in: path
        name: signatureid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StandardPostmarkResponse'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Delete a Sender Signature
      tags:
      - Sender Signatures API
    get:
      operationId: getSenderSignature
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature that should be retrieved.
        in: path
        name: signatureid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SenderSignatureExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Get a Sender Signature
      tags:
      - Sender Signatures API
    put:
      operationId: editSenderSignature
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature that should be modified by the
          request.
        in: path
        name: signatureid
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/SenderSignatureEditingModel'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SenderSignatureExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Update a Sender Signature
      tags:
      - Sender Signatures API
  /senders/{signatureid}/requestnewdkim:
    post:
      description: Requests a new DKIM key to be created. Until the DNS entries are
        confirmed, nthe new values will be in the `DKIMPendingHost` and `DKIMPendingTextValue`
        fields. nAfter the new DKIM value is verified in DNS, the pending values will
        migrate to n`DKIMTextValue` and `DKIMPendingTextValue` and Postmark will begin
        to sign emails nwith the new DKIM key.n
      operationId: requestNewDKIMKeyForSenderSignature
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature for which a new DKIM Key should
          be generated.
        in: path
        name: signatureid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StandardPostmarkResponse'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Request a new DKIM Key
      tags:
      - Sender Signatures API
  /senders/{signatureid}/resend:
    post:
      operationId: resendSenderSignatureConfirmationEmail
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature that should have its confirmation
          email resent.
        in: path
        name: signatureid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StandardPostmarkResponse'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Resend Signature Confirmation Email
      tags:
      - Sender Signatures API
  /senders/{signatureid}/verifyspf:
    post:
      operationId: requestSPFVerificationForSenderSignature
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID for the Sender Signature for which SPF DNS records should
          be verified.
        in: path
        name: signatureid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SenderSignatureExtendedInformation'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Request DNS Verification for SPF
      tags:
      - Sender Signatures API
  /servers:
    get:
      operationId: listServers
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: Number of servers to return per request.
        in: query
        name: count
        required: true
        type: integer
      - description: Number of servers to skip.
        in: query
        name: offset
        required: true
        type: integer
      - description: Filter by a specific server name
        in: query
        name: name
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ServerListingResponse'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: List servers
      tags:
      - Server Management API
    post:
      operationId: createServer
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CreateServerPayload'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ExtendedServerInfo'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Create a Server
      tags:
      - Server Management API
  /servers/{serverid}:
    delete:
      operationId: deleteServer
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID of the Server that should be deleted.
        in: path
        name: serverid
        required: true
        type: integer
      responses:
        200:
          description: OK
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Delete a Server
      tags:
      - Server Management API
    get:
      operationId: getServerInformation
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID of the Server to get.
        in: path
        name: serverid
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ExtendedServerInfo'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Get a Server
      tags:
      - Server Management API
    put:
      operationId: editServerInformation
      parameters:
      - description: The token associated with the Account on which this request will
          operate.
        in: header
        name: X-Postmark-Account-Token
        required: true
        type: string
      - description: The ID of the Server to update.
        in: path
        name: serverid
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/EditServerPayload'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ExtendedServerInfo'
        422:
          $ref: '#/responses/422'
        500:
          $ref: '#/responses/500'
      summary: Edit a Server
      tags:
      - Server Management API
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":17:{s:19:\"CreateServerPayload\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":14:{s:13:\"BounceHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ClickHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DeliveryHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"InboundDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"InboundHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"InboundSpamThreshold\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"OpenHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"PostFirstOpenOnly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:15:\"RawEmailEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"SmtpApiActivated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"TrackLinks\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:4:\"None\";i:1;s:19:\"HtmlAndTextTracking\";i:2;s:16:\"HtmlOnlyTracking\";i:3;s:16:\"TextOnlyTracking\";}s:4:\"type\";s:6:\"string\";}s:10:\"TrackOpens\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:20:\"DKIMRotationResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":12:{s:8:\"DKIMHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DKIMPendingHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"DKIMPendingTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DKIMRevokedHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"DKIMRevokedTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"DKIMTestValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"DKIMUpdateStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"DKIMVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"ID\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:29:\"SafeToRemoveRevokedKeyFromDNS\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"WeakDKIM\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:19:\"DomainCreationModel\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"ReturnPathDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"DomainEditingModel\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"ReturnPathDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:25:\"DomainExtendedInformation\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":18:{s:8:\"DKIMHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DKIMPendingHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"DKIMPendingTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DKIMRevokedHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"DKIMRevokedTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"DKIMTestValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"DKIMUpdateStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"DKIMVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"ID\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"ReturnPathDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"ReturnPathDomainCNAMEValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"ReturnPathDomainVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"SPFHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"SPFTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"SPFVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:29:\"SafeToRemoveRevokedKeyFromDNS\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"WeakDKIM\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:17:\"DomainInformation\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":6:{s:12:\"DKIMVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"ID\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"ReturnPathDomainVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"SPFVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"WeakDKIM\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:20:\"DomainListingResults\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"Domains\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/DomainInformation\";}s:4:\"type\";s:5:\"array\";}s:10:\"TotalCount\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:15:\"DomainSPFResult\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"SPFHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"SPFTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"SPFVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:17:\"EditServerPayload\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":14:{s:13:\"BounceHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ClickHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DeliveryHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"InboundDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"InboundHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"InboundSpamThreshold\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"OpenHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"PostFirstOpenOnly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:15:\"RawEmailEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"SmtpApiActivated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"TrackLinks\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:4:\"None\";i:1;s:19:\"HtmlAndTextTracking\";i:2;s:16:\"HtmlOnlyTracking\";i:3;s:16:\"TextOnlyTracking\";}s:4:\"type\";s:6:\"string\";}s:10:\"TrackOpens\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:18:\"ExtendedServerInfo\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":19:{s:9:\"ApiTokens\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:13:\"BounceHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ClickHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"Color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DeliveryHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"ID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:14:\"InboundAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"InboundDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"InboundHash\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"InboundHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"InboundSpamThreshold\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"OpenHookUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"PostFirstOpenOnly\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:15:\"RawEmailEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"ServerLink\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"SmtpApiActivated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"TrackLinks\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:4:\"None\";i:1;s:19:\"HtmlAndTextTracking\";i:2;s:16:\"HtmlOnlyTracking\";i:3;s:16:\"TextOnlyTracking\";}s:4:\"type\";s:6:\"string\";}s:10:\"TrackOpens\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:20:\"SenderListingResults\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"SenderSignatures\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/SenderSignatureInformation\";}s:4:\"type\";s:5:\"array\";}s:10:\"TotalCount\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:28:\"SenderSignatureCreationModel\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"FromEmail\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ReplyToEmail\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:16:\"ReturnPathDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"SenderSignatureEditingModel\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ReplyToEmail\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:16:\"ReturnPathDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:34:\"SenderSignatureExtendedInformation\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":22:{s:9:\"Confirmed\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"DKIMHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DKIMPendingHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"DKIMPendingTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"DKIMRevokedHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"DKIMRevokedTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"DKIMTestValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"DKIMUpdateStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"DKIMVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"Domain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"EmailAddress\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:2:\"ID\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"ReplyToEmailAddress\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:16:\"ReturnPathDomain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"ReturnPathDomainCNAMEValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"ReturnPathDomainVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"SPFHost\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"SPFTextValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"SPFVerified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:29:\"SafeToRemoveRevokedKeyFromDNS\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"WeakDKIM\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:26:\"SenderSignatureInformation\";O:8:\"stdClass\":2:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"Confirmed\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"Domain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"EmailAddress\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:2:\"ID\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";}s:4:\"Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"ReplyToEmailAddress\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}}}s:21:\"ServerListingResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  results of listing servers.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"Servers\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ExtendedServerInfo\";}s:4:\"type\";s:5:\"array\";}s:10:\"TotalCount\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:24:\"StandardPostmarkResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"A
  Postmark API error.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"ErrorCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"Message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
