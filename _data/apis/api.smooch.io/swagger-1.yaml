---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:337:\"The Smooch API
  is a unified interface for powering messaging in your customer experiences across
  every channel. Our API speeds access to new markets, reduces time to ship, eliminates
  complexity, and helps you build the best experiences for your customers. For more
  information, visit our [official documentation](https://docs.smooch.io).\";s:7:\"version\";s:4:\"5.14\";s:5:\"title\";s:6:\"Smooch\";}"
host: api.smooch.io
paths:
  /v1.1/apps/{appId}/appusers/{userId}:
    get:
      tags:
      - AppUser
      description: Get the specified app user.
      operationId: getAppUser
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AppUserResponse'
    put:
      tags:
      - AppUser
      description: Update the specified app user.
      operationId: updateAppUser
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - in: body
        name: appUserUpdateBody
        description: Body for an updateAppUser request.
        required: true
        schema:
          $ref: '#/definitions/AppUserUpdate'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/AppUserResponse'
    delete:
      tags:
      - AppUser
      description: Delete specified app user.
      operationId: deleteAppUser
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/appusers:
    post:
      tags:
      - AppUser
      description: Pre-create an app user.
      operationId: preCreateAppUser
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: appUserPreCreateBody
        description: Body for a preCreateAppUser request.
        required: true
        schema:
          $ref: '#/definitions/AppUserPreCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/AppUserResponse'
  /v1.1/apps/{appId}/appusers/merge:
    post:
      tags:
      - AppUser
      description: Force the merge of two specific users, when the business has determined
        that they represent the same person.
      operationId: mergeUsers
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: appUserMergeBody
        description: Body for a mergeUsers request.
        required: true
        schema:
          $ref: '#/definitions/AppUserMerge'
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/appusers/{userId}/images:
    post:
      tags:
      - AppUser
      description: Send an image message to the conversation.
      operationId: postImageMessage
      consumes:
      - multipart/form-data
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - name: source
        in: formData
        description: Image to be uploaded
        required: true
        type: file
      - name: role
        in: formData
        description: Role of the sender
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/MessageResponse'
  /v1.1/apps/{appId}/appusers/{userId}/profile:
    delete:
      tags:
      - AppUser
      description: Delete specified app user's profile.
      operationId: deleteAppUserProfile
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AppUserResponse'
  /v1.1/apps/{appId}/appusers/{userId}/authcode:
    get:
      tags:
      - AppUser
      description: Get an auth code for facilitating a channel transfer
      operationId: getAppUserAuthCode
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AuthCodeResponse'
  /v1.1/apps/{appId}/appusers/{userId}/channels:
    get:
      tags:
      - AppUser
      description: Get specified app user's channel entity IDs.
      operationId: getAppUserEntityIds
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AppUserChannelsResponse'
    post:
      tags:
      - AppUser
      description: Link specified app user to given channel.
      operationId: linkAppUser
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - in: body
        name: appUserLinkBody
        description: Body for a linkAppUser request.
        required: true
        schema:
          $ref: '#/definitions/AppUserLink'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AppUserResponse'
  /v1.1/apps/{appId}/appusers/{userId}/businesssystems:
    get:
      tags:
      - AppUser
      description: Get specified app user's business system IDs.
      operationId: getAppUserBusinessSystemIds
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AppUserBusinessSystemsResponse'
  /v1.1/apps/{appId}/appusers/{userId}/channels/{channel}:
    delete:
      tags:
      - AppUser
      description: Unlink specified app user from given channel.
      operationId: unlinkAppUser
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - name: channel
        in: path
        description: Name of the channel.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/appusers/{userId}/linkrequest:
    get:
      tags:
      - AppUser
      description: Fetch link requests for the specified app user.
      operationId: getLinkRequests
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - name: integrationIds
        in: query
        description: List of integration IDs
        required: true
        type: array
        items:
          type: string
        minItems: 1
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/LinkRequestResponse'
  /v1.1/apps/{appId}/appusers/{userId}/messages:
    get:
      tags:
      - Conversation
      description: Get the specified app user's messages.
      operationId: getMessages
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - name: before
        in: query
        description: Timestamp of message. The API will return 100 messages before
          the specified timestamp (excluding any messages with the provided timestamp).
        required: false
        type: string
      - name: after
        in: query
        description: Timestamp of message. The API will return 100 messages after
          the specified timestamp (excluding any messages with the provided timestamp).
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetMessagesResponse'
    post:
      tags:
      - Conversation
      description: Post a message to or from the app user.
      operationId: postMessage
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - in: body
        name: messagePostBody
        description: Body for a postMessage request.nAdditional arguments are necessary
          based on message type ([text](https://docs.smooch.io/rest/#text), [image](https://docs.smooch.io/rest/#image),
          [carousel](https://docs.smooch.io/rest/#carousel), [list](https://docs.smooch.io/rest/#list),
          [form](https://docs.smooch.io/rest/#form))n
        required: true
        schema:
          $ref: '#/definitions/MessagePost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/MessageResponse'
    delete:
      tags:
      - Conversation
      description: Clears the message history for a user, permanently deleting all
        messages, but leaving any connections to Messaging Channels and Business Systems
        intact. These connections allow for the conversation to continue in the future,
        while still being associated to the same appUser.n
      operationId: deleteMessages
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/appusers/{userId}/messages/{messageId}:
    delete:
      tags:
      - Conversation
      description: Deletes a single message.
      operationId: deleteMessage
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - name: messageId
        in: path
        description: Identifies the message.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/appusers/{userId}/conversation/read:
    post:
      tags:
      - Conversation
      description: Reset the unread count of the conversation to 0.
      operationId: resetUnreadCount
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/appusers/{userId}/conversation/activity:
    post:
      tags:
      - Conversation
      description: Notify Smooch when an app maker starts or stops typing a response.
      operationId: conversationActivity
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: userId
        in: path
        description: Identifies the user. Can be either the smoochId or the userId.
        required: true
        type: string
      - in: body
        name: conversationActivityBody
        description: Body for a triggerConversationActivity request.
        required: true
        schema:
          $ref: '#/definitions/ConversationActivity'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ActivityResponse'
  /v1.1/apps/{appId}/menu:
    get:
      tags:
      - Menu
      description: Get the specified appu2019s menu.
      operationId: getMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/MenuResponse'
    put:
      tags:
      - Menu
      description: Configure the specified appu2019s menu.
      operationId: updateMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: menuUpdateBody
        description: Body for a updateMenu request.
        required: true
        schema:
          $ref: '#/definitions/Menu'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/MenuResponse'
    delete:
      tags:
      - Menu
      description: Remove the specified appu2019s menu.
      operationId: deleteMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/MenuResponse'
  /v1.1/serviceaccounts:
    get:
      tags:
      - ServiceAccount
      description: List all service accounts configured.
      operationId: listServiceAccounts
      parameters:
      - name: limit
        in: query
        description: The number of records to return.
        required: false
        type: integer
        default: 25
      - name: offset
        in: query
        description: The number of initial records to skip before picking records
          to return.
        required: false
        type: integer
        default: 0
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListServiceAccountsResponse'
    post:
      tags:
      - ServiceAccount
      description: Create a new service account.
      operationId: createServiceAccount
      parameters:
      - in: body
        name: serviceAccountCreateBody
        description: Body for a createServiceAccount request.
        required: true
        schema:
          $ref: '#/definitions/ServiceAccountCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ServiceAccountResponse'
  /v1.1/serviceaccounts/{serviceAccountId}:
    get:
      tags:
      - ServiceAccount
      description: Get the specified service account.
      operationId: getServiceAccount
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ServiceAccountResponse'
    put:
      tags:
      - ServiceAccount
      description: Update the specified service account.
      operationId: updateServiceAccount
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      - in: body
        name: serviceAccountUpdateBody
        description: Body for an updateServiceAccount request.
        required: true
        schema:
          $ref: '#/definitions/ServiceAccountUpdate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ServiceAccountResponse'
    delete:
      tags:
      - ServiceAccount
      description: Delete the specified service account.
      operationId: deleteServiceAccount
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/serviceaccounts/{serviceAccountId}/keys:
    get:
      tags:
      - ServiceAccount
      description: List the secret keys for the specified service account.
      operationId: listSecretKeys
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListSecretKeysResponse'
    post:
      tags:
      - ServiceAccount
      description: Create a secret key for the specified service account.
      operationId: createSecretKey
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      - in: body
        name: secretKeyCreateBody
        description: Body for a createSecretKey request.
        required: true
        schema:
          $ref: '#/definitions/SecretKeyCreate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/SecretKeyResponse'
  /v1.1/serviceaccounts/{serviceAccountId}/keys/{keyId}:
    get:
      tags:
      - ServiceAccount
      description: Get the specified service account secret key.
      operationId: getSecretKey
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      - name: keyId
        in: path
        description: Identifies the secret key.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/SecretKeyResponse'
    delete:
      tags:
      - ServiceAccount
      description: Delete the specified service account secret key.
      operationId: deleteSecretKey
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      - name: keyId
        in: path
        description: Identifies the secret key.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/serviceaccounts/{serviceAccountId}/keys/{keyId}/jwt:
    get:
      tags:
      - ServiceAccount
      description: Get an account-scoped JWT for the specified service account secret
        key.
      operationId: getJwt
      parameters:
      - name: serviceAccountId
        in: path
        description: Identifies the service account.
        required: true
        type: string
      - name: keyId
        in: path
        description: Identifies the secret key.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/JwtResponse'
  /v1.1/apps:
    get:
      tags:
      - App
      description: List all apps configured.
      operationId: listApps
      parameters:
      - name: limit
        in: query
        description: The number of records to return.
        required: false
        type: integer
        default: 25
      - name: offset
        in: query
        description: The number of initial records to skip before picking records
          to return.
        required: false
        type: integer
        default: 0
      - name: serviceAccountId
        in: query
        description: The service account ID for which to list apps.
        required: false
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListAppsResponse'
    post:
      tags:
      - App
      description: Create a new app.
      operationId: createApp
      parameters:
      - in: body
        name: appCreateBody
        description: Body for a createApp request.
        required: true
        schema:
          $ref: '#/definitions/AppCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/AppResponse'
  /v1.1/apps/{appId}:
    get:
      tags:
      - App
      description: Get the specified app.
      operationId: getApp
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AppResponse'
    put:
      tags:
      - App
      description: Update the specified app.
      operationId: updateApp
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: appUpdateBody
        description: Body for an updateApp request.
        required: true
        schema:
          $ref: '#/definitions/AppUpdate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AppResponse'
    delete:
      tags:
      - App
      description: Delete the specified app.
      operationId: deleteApp
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/keys:
    get:
      tags:
      - App
      description: List the secret keys for the specified app.
      operationId: listSecretKeys
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListSecretKeysResponse'
    post:
      tags:
      - App
      description: Create a secret key for the specified app.
      operationId: createSecretKey
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: secretKeyCreateBody
        description: Body for a createSecretKey request.
        required: true
        schema:
          $ref: '#/definitions/SecretKeyCreate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/SecretKeyResponse'
  /v1.1/apps/{appId}/keys/{keyId}:
    get:
      tags:
      - App
      description: Get the specified secret key.
      operationId: getSecretKey
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: keyId
        in: path
        description: Identifies the secret key.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/SecretKeyResponse'
    delete:
      tags:
      - App
      description: Delete the specified secret key.
      operationId: deleteSecretKey
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: keyId
        in: path
        description: Identifies the secret key.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/keys/{keyId}/jwt:
    get:
      tags:
      - App
      description: Get an app-scoped JWT for the specified secret key.
      operationId: getAppJwt
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: keyId
        in: path
        description: Identifies the secret key.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/JwtResponse'
  /v1.1/apps/{appId}/integrations:
    get:
      tags:
      - Integration
      description: List integrations for the specified app.
      operationId: listIntegrations
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: types
        in: query
        description: List of types to filter the query by.nMore than one value can
          be specified through comma separation e.g. ?types=*twilio*,*line*.n
        required: false
        type: string
      - name: limit
        in: query
        description: The number of records to return.
        required: false
        type: integer
        default: 25
      - name: offset
        in: query
        description: The number of initial records to skip before picking records
          to return.
        required: false
        type: integer
        default: 0
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListIntegrationsResponse'
    post:
      tags:
      - Integration
      description: Create an integration for the specified app.
      operationId: createIntegration
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: integrationCreateBody
        description: Body for a createIntegration request.nAdditional arguments are
          necessary based on integration type. For detailed instructions, visit our
          [official docs](https://docs.smooch.io/rest/#create-integration)n
        required: true
        schema:
          $ref: '#/definitions/IntegrationCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/IntegrationResponse'
  /v1.1/apps/{appId}/integrations/{integrationId}:
    get:
      tags:
      - Integration
      description: Get the specified integration.
      operationId: getIntegration
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/IntegrationResponse'
    put:
      tags:
      - Integration
      description: Update the specified integration.
      operationId: updateIntegration
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      - in: body
        name: integrationUpdateBody
        description: Body for a updateIntegration request.nAdditional arguments are
          necessary based on integration type. For detailed instructions, visit our
          [official docs](https://docs.smooch.io/rest/#update-integration)n
        required: true
        schema:
          $ref: '#/definitions/IntegrationUpdate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/IntegrationResponse'
    delete:
      tags:
      - Integration
      description: Delete the specified integration.
      operationId: deleteIntegration
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/integrations/{integrationId}/menu:
    get:
      tags:
      - Integration
      description: Get the specified integration's menu.
      operationId: getIntegrationMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/MenuResponse'
    post:
      tags:
      - Integration
      description: Create the specified integrationu2019s menu, overriding the app
        menu if configured.
      operationId: createIntegrationMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      - in: body
        name: menuCreateBody
        description: Body for a createMenu request.
        required: true
        schema:
          $ref: '#/definitions/Menu'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/MenuResponse'
    put:
      tags:
      - Integration
      description: Update the specified integrationu2019s menu.
      operationId: updateIntegrationMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      - in: body
        name: menuUpdateBody
        description: Body for a updateMenu request.
        required: true
        schema:
          $ref: '#/definitions/Menu'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/MenuResponse'
    delete:
      tags:
      - Integration
      description: Delete the specified integrationu2019s menu.
      operationId: deleteIntegrationMenu
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/integrations/{integrationId}/profile:
    get:
      tags:
      - Integration
      description: Get the specified integrationu2019s profile.
      operationId: getIntegrationProfile
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/GetIntegrationProfileResponse'
    put:
      tags:
      - Integration
      description: Update the specified integrationu2019s profile.
      operationId: updateIntegrationProfile
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      - in: body
        name: integrationProfileBody
        description: Body for a profileUpdate request.
        required: true
        schema:
          $ref: '#/definitions/IntegrationProfileUpdate'
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/integrations/{integrationId}/profile/photo:
    put:
      tags:
      - Integration
      description: Upload a photo to be used for the the specified integrationu2019s
        profile.
      operationId: uploadIntegrationProfilePhoto
      consumes:
      - multipart/form-data
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: integrationId
        in: path
        description: Identifies the integration.
        required: true
        type: string
      - name: source
        in: formData
        description: Photo to be uploaded
        required: true
        type: file
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/UploadIntegrationProfilePhotoResponse'
  /v1.1/apps/{appId}/webhooks:
    get:
      tags:
      - Webhook
      description: List webhooks for the specified app.
      operationId: listWebhooks
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListWebhooksResponse'
    post:
      tags:
      - Webhook
      description: Create a webhook for the specified app.
      operationId: createWebhook
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: webhookCreateBody
        description: Body for a createWebhook request.n
        required: true
        schema:
          $ref: '#/definitions/WebhookCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/WebhookResponse'
  /v1.1/apps/{appId}/webhooks/{webhookId}:
    get:
      tags:
      - Webhook
      description: Get the specified webhook.
      operationId: getWebhook
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: webhookId
        in: path
        description: Identifies the webhook.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/WebhookResponse'
    put:
      tags:
      - Webhook
      description: Update the specified webhook.
      operationId: updateWebhook
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: webhookId
        in: path
        description: Identifies the webhook.
        required: true
        type: string
      - in: body
        name: webhookUpdateBody
        description: Body for an updateWebhook request.n
        required: true
        schema:
          $ref: '#/definitions/WebhookUpdate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/WebhookResponse'
    delete:
      tags:
      - Webhook
      description: Delete the specified webhook.
      operationId: deleteWebhook
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: webhookId
        in: path
        description: Identifies the webhook.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/attachments:
    post:
      tags:
      - Attachments
      description: Upload an attachment to Smooch to use in future messages.
      operationId: uploadAttachment
      consumes:
      - multipart/form-data
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: source
        in: formData
        description: File to be uploaded
        required: true
        type: file
      - name: access
        in: query
        description: Access level for the resulting file
        required: true
        type: string
      - name: for
        in: query
        description: The intended container for the attachment
        required: false
        type: string
      - name: appUserId
        in: query
        description: The appUserId of the user that will receive the attachmentnUsed
          in attachments for messagesn
        required: false
        type: string
      - name: userId
        in: query
        description: The userId of the user that will receive the attachmentnUsed
          in attachments for messagesn
        required: false
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/AttachmentResponse'
  /v1.1/apps/{appId}/attachments/remove:
    post:
      tags:
      - Attachments
      description: Remove an attachment uploaded to Smooch.
      operationId: removeAttachment
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: attachmentRemoveBody
        description: Body for a removeAttachment request.n
        required: true
        schema:
          $ref: '#/definitions/AttachmentRemove'
      responses:
        200:
          description: Ok
  /v1.1/apps/{appId}/templates:
    get:
      tags:
      - Template
      description: List templates for the specified app.
      operationId: listTemplates
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: limit
        in: query
        description: The number of records to return.
        required: false
        type: integer
        default: 25
      - name: offset
        in: query
        description: The number of initial records to skip before picking records
          to return.
        required: false
        type: integer
        default: 0
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListTemplatesResponse'
    post:
      tags:
      - Template
      description: Create a template for the specified app.
      operationId: createTemplate
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - in: body
        name: templateCreateBody
        description: Body for a createTemplate request.n
        required: true
        schema:
          $ref: '#/definitions/TemplateCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/TemplateResponse'
  /v1.1/apps/{appId}/templates/{templateId}:
    get:
      tags:
      - Template
      description: Get the specified template.
      operationId: getTemplate
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: templateId
        in: path
        description: Identifies the template.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/TemplateResponse'
    put:
      tags:
      - Template
      description: Update the specified template.
      operationId: updateTemplate
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: templateId
        in: path
        description: Identifies the template.
        required: true
        type: string
      - in: body
        name: templateUpdateBody
        description: Body for an updateTemplate request.n
        required: true
        schema:
          $ref: '#/definitions/TemplateUpdate'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/TemplateResponse'
    delete:
      tags:
      - Template
      description: Delete the specified template.
      operationId: deleteTemplate
      parameters:
      - name: appId
        in: path
        description: Identifies the app.
        required: true
        type: string
      - name: templateId
        in: path
        description: Identifies the template.
        required: true
        type: string
      responses:
        200:
          description: Ok
  /v1.1/whatsapp/deployments:
    get:
      tags:
      - Deployment
      description: List owned WhatsApp deployments.
      operationId: listDeployments
      parameters: []
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ListDeploymentsResponse'
    post:
      tags:
      - Deployment
      description: Create a WhatsApp deployment.
      operationId: createDeployment
      parameters:
      - in: body
        name: deploymentCreateBody
        description: Body for a createDeployment request.n
        required: true
        schema:
          $ref: '#/definitions/DeploymentCreate'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/DeploymentResponse'
  /v1.1/whatsapp/deployments/{deploymentId}:
    get:
      tags:
      - Deployment
      description: Get the specified deployment.
      operationId: getDeployment
      parameters:
      - name: deploymentId
        in: path
        description: Identifies the deployment.
        required: true
        type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/DeploymentResponse'
    delete:
      tags:
      - Deployment
      description: Delete the specified deployment.
      operationId: deleteDeployment
      parameters:
      - name: deploymentId
        in: path
        description: Identifies the deployment.
        required: true
        type: string
      responses:
        200:
          description: Ok
        202:
          description: Accepted
          schema:
            $ref: '#/definitions/DeploymentResponse'
  /v1.1/whatsapp/deployments/{deploymentId}/activate:
    post:
      tags:
      - Deployment
      description: Activate a phone number on the specified deployment.
      operationId: activatePhoneNumber
      parameters:
      - name: deploymentId
        in: path
        description: Identifies the deployment.
        required: true
        type: string
      - in: body
        name: deploymentActivatePhoneNumberBody
        description: Body for an activatePhoneNumber request.n
        required: true
        schema:
          $ref: '#/definitions/DeploymentActivatePhoneNumber'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/DeploymentResponse'
  /v1.1/whatsapp/deployments/{deploymentId}/code/confirm:
    post:
      tags:
      - Deployment
      description: Confirm code to complete phone number activation.
      operationId: confirmCode
      parameters:
      - name: deploymentId
        in: path
        description: Identifies the deployment.
        required: true
        type: string
      - in: body
        name: deploymentConfirmCode
        description: Body for a confirmCode request.n
        required: true
        schema:
          $ref: '#/definitions/DeploymentConfirmCode'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/DeploymentResponse'
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":83:{s:5:\"Enums\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":19:{s:10:\"ActionSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:7:\"compact\";i:1;s:4:\"full\";i:2;s:4:\"tall\";}}s:10:\"ActionType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:7:{i:0;s:3:\"buy\";i:1;s:4:\"link\";i:2;s:15:\"locationRequest\";i:3;s:8:\"postback\";i:4;s:5:\"reply\";i:5;s:5:\"share\";i:6;s:7:\"webview\";}}s:18:\"BusinessSystemType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:9:\"helpscout\";i:1;s:5:\"slack\";i:2;s:7:\"zendesk\";}}s:12:\"ClientStatus\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:6:\"active\";i:1;s:7:\"blocked\";i:2;s:8:\"inactive\";i:3;s:7:\"pending\";}}s:16:\"ConfirmationType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:9:\"immediate\";i:1;s:12:\"userActivity\";i:2;s:6:\"prompt\";}}s:24:\"ConversationActivityType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:17:\"conversation:read\";i:1;s:12:\"typing:start\";i:2;s:11:\"typing:stop\";}}s:26:\"DeploymentActivationMethod\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:3:\"sms\";i:1;s:5:\"voice\";}}s:17:\"DeploymentHosting\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"self\";i:1;s:6:\"smooch\";}}s:16:\"DeploymentStatus\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:7:{i:0;s:8:\"deleting\";i:1;s:5:\"error\";i:2;s:10:\"integrated\";i:3;s:7:\"pending\";i:4;s:10:\"registered\";i:5;s:8:\"starting\";i:6;s:12:\"unregistered\";}}s:16:\"ImageAspectRatio\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:10:\"horizontal\";i:1;s:6:\"square\";}}s:17:\"IntegrationStatus\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:6:\"active\";i:1;s:8:\"inactive\";i:2;s:5:\"error\";}}s:15:\"IntegrationType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:16:{i:0;s:7:\"android\";i:1;s:3:\"api\";i:2;s:3:\"apn\";i:3;s:3:\"fcm\";i:4;s:3:\"ios\";i:5;s:4:\"line\";i:6;s:7:\"mailgun\";i:7;s:11:\"messagebird\";i:8;s:9:\"messenger\";i:9;s:8:\"telegram\";i:10;s:6:\"twilio\";i:11;s:7:\"twitter\";i:12;s:5:\"viber\";i:13;s:3:\"web\";i:14;s:6:\"wechat\";i:15;s:8:\"whatsapp\";}}s:12:\"MenuItemType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:4:\"link\";i:1;s:8:\"postback\";i:2;s:7:\"submenu\";}}s:15:\"MessageItemSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:7:\"compact\";i:1;s:5:\"large\";}}s:11:\"MessageType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:8:{i:0;s:8:\"carousel\";i:1;s:4:\"file\";i:2;s:5:\"image\";i:3;s:4:\"list\";i:4;s:8:\"location\";i:5;s:4:\"text\";i:6;s:4:\"form\";i:7;s:12:\"formResponse\";}}s:9:\"FieldType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:4:\"text\";i:1;s:5:\"email\";i:2;s:6:\"select\";}}s:17:\"QuotedMessageType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:7:\"message\";i:1;s:17:\"externalMessageId\";}}s:4:\"Role\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:8:\"appMaker\";i:1;s:7:\"appUser\";}}s:15:\"WebhookTriggers\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:17:{i:0;s:14:\"appUser:delete\";i:1;s:10:\"client:add\";i:2;s:13:\"client:remove\";i:3;s:17:\"conversation:read\";i:4;s:21:\"conversation:referral\";i:5;s:12:\"link:failure\";i:6;s:10:\"link:match\";i:7;s:12:\"link:success\";i:8;s:13:\"merge:appUser\";i:9;s:16:\"message:appMaker\";i:10;s:15:\"message:appUser\";i:11;s:24:\"message:delivery:channel\";i:12;s:24:\"message:delivery:failure\";i:13;s:21:\"message:delivery:user\";i:14;s:15:\"payment:success\";i:15;s:8:\"postback\";i:16;s:14:\"typing:appUser\";}}}}s:15:\"AppUserResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:7:\"appUser\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"appUser\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"The
  app user.\";s:4:\"$ref\";s:21:\"#/definitions/AppUser\";}}}s:7:\"AppUser\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:3:\"_id\";i:1;s:19:\"conversationStarted\";i:2;s:10:\"properties\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"The
  app user's ID, generated automatically.\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"The
  app user's userId.\nThis ID is specified by the appMaker.\n\";}s:9:\"givenName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  app user's given name.\";}s:7:\"surname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  app user's surname.\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  app user's email.\";}s:10:\"signedUpAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:104:\"A
  datetime string with the format *yyyy-mm-ddThh:mm:ssZ* representing the moment an
  appUser was created.\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:35:\"Custom
  properties for the app user.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:19:\"conversationStarted\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:65:\"Flag
  indicating if the conversation has started for the app user.\";}s:7:\"clients\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:45:\"List
  of clients associated with the app user.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Client\";}}s:14:\"pendingClients\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:94:\"As
  clients, but containing linked clients which have not been confirmed yet (i.e. Twilio
  SMS).\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Client\";}}}}s:6:\"Client\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:8:\"platform\";}s:10:\"properties\";O:8:\"stdClass\":12:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:54:\"An
  identifier for the client. Must be globally unique.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:154:\"The
  client status. Indicates if the client is able to receive messages or not. See [**ClientStatusEnum**](Enums.md#ClientStatusEnum)
  for available values.\";}s:10:\"externalId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:177:\"The
  ID of the user on an external channel. For example, the user's phone number for
  Twilio, or their page-scoped user ID for Facebook Messenger. Applies only to non-SDK
  clients.\";}s:6:\"active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:45:\"Deprecated
  - use the status property instead.\";}s:8:\"lastSeen\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:8:\"dateTime\";s:11:\"description\";s:39:\"The
  date time the client was last seen.\";}s:8:\"platform\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:104:\"The
  client's platform. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for
  available values.\";}s:13:\"integrationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:58:\"The
  ID of the integration that the client was created for.\";}s:21:\"pushNotificationToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:123:\"The
  GCM or APN token to be used for sending push notifications to the device.\nApplies
  to only *android* and *ios* clients.\n\";}s:10:\"appVersion\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:76:\"A
  reserved string field for reporting the app version running on the device.\";}s:11:\"displayName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  client's display name.\";}s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/ClientInfo\";}s:3:\"raw\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:123:\"An
  Object with raw properties that vary for each client platform. All keys are optional
  and not guaranteed to be available.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:10:\"ClientInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":17:{s:7:\"appName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"Name
  of the app associated with the client.\";}s:9:\"avatarUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  client's avatar URL.\";}s:7:\"carrier\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  client's carrier.\";}s:4:\"city\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"The
  client's city.\";}s:7:\"country\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  client's country.\";}s:11:\"deviceModel\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  client's device model.\";}s:14:\"devicePlatform\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:29:\"The
  client's device platform.\";}s:6:\"gender\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:25:\"The
  client user's gender.\";}s:16:\"isPaymentEnabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:45:\"Whether
  or not payment is enabled for client.\";}s:6:\"locale\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"The
  client's locale.\";}s:2:\"os\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"The
  client's OS.\";}s:9:\"osVersion\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  client's OS version.\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  client's phone number.\";}s:21:\"radioAccessTechnology\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"The
  client's radioAccessTechnology (Ex. HSDPA).\";}s:5:\"state\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"The
  client's state or province.\";}s:8:\"timezone\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:11:\"description\";s:29:\"The
  client's timezone offset.\";}s:4:\"wifi\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"Whether
  or not the client has wifi.\";}}}s:13:\"AppUserUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"givenName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  app user's given name.\";}s:7:\"surname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  app user's surname.\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  app user's email.\";}s:10:\"signedUpAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:104:\"A
  datetime string with the format *yyyy-mm-ddThh:mm:ssZ* representing the moment an
  appUser was created.\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:35:\"Custom
  properties for the app user.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:16:\"AppUserPreCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:6:\"userId\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"The
  app user's userId.\nThis ID is specified by the appMaker.\n\";}s:9:\"givenName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  app user's given name.\";}s:7:\"surname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  app user's surname.\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  app user's email.\";}s:10:\"signedUpAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:104:\"A
  datetime string with the format *yyyy-mm-ddThh:mm:ssZ* representing the moment an
  appUser was created.\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:35:\"Custom
  properties for the app user.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:12:\"AppUserMerge\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:9:\"discarded\";i:1;s:9:\"surviving\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"surviving\";O:8:\"stdClass\":2:{s:11:\"description\";s:77:\"Nested
  object representing the user that will survive at the end of the merge\";s:4:\"$ref\";s:24:\"#/definitions/MergedUser\";}s:9:\"discarded\";O:8:\"stdClass\":2:{s:11:\"description\";s:119:\"Nested
  object representing the user to merge into the surviving user. This user will be
  deleted as part of the process.\";s:4:\"$ref\";s:24:\"#/definitions/MergedUser\";}}}s:10:\"MergedUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"The
  `_id` of the user to merge.\";}}}s:15:\"MessageResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:12:\"conversation\";i:1;s:7:\"message\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"The
  message.\";s:4:\"$ref\";s:21:\"#/definitions/Message\";}s:13:\"extraMessages\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:31:\"List
  of extra messages created.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}}s:12:\"conversation\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"The
  conversation.\";s:4:\"$ref\";s:26:\"#/definitions/Conversation\";}}}s:7:\"Message\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:8:{i:0;s:3:\"_id\";i:1;s:8:\"authorId\";i:2;s:9:\"avatarUrl\";i:3;s:4:\"name\";i:4;s:8:\"received\";i:5;s:4:\"role\";i:6;s:4:\"text\";i:7;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":22:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  message ID, generated automatically.\";}s:8:\"authorId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"The
  ID of the message's author.\";}s:4:\"role\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:107:\"The
  role of the individual posting the message. See [**RoleEnum**](Enums.md#RoleEnum)
  for available values.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:91:\"The
  message type. See [**MessageTypeEnum**](Enums.md#MessageTypeEnum) for available
  values.\";}s:6:\"source\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The source
  of the message.\";s:4:\"$ref\";s:20:\"#/definitions/Source\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"The
  display name of the message author.\";}s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:46:\"The
  message text.\nRequired for text messages.\n\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  email address of the message author.\";}s:9:\"avatarUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:44:\"The
  URL of the desired message avatar image.\";}s:8:\"received\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:11:\"description\";s:58:\"The
  unix timestamp of the moment the message was received.\";}s:8:\"mediaUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:64:\"The
  mediaUrl for the message.\nRequired for image/file messages.\n\";}s:9:\"mediaType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:65:\"The
  mediaType for the message.\nRequired for image/file messages.\n\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:78:\"Flat
  JSON object containing any custom properties associated with the message.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:72:\"The
  items in the message list.\nRequired for carousel and list messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/MessageItem\";}}s:7:\"actions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:27:\"The
  actions in the message.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Action\";}}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  payload of a reply action, if applicable.\";}s:15:\"displaySettings\";O:8:\"stdClass\":2:{s:11:\"description\";s:110:\"Settings
  to adjust the carousel layout. See [Display Settings](https://docs.smooch.io/rest/#display-settings).\";s:4:\"$ref\";s:29:\"#/definitions/DisplaySettings\";}s:14:\"blockChatInput\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:98:\"Indicates
  if the Web SDK chat input should be blocked. Defaults to false.\nOnly for form messages.\n\";}s:6:\"fields\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:69:\"The
  fields in the form.\nRequired for form and formResponse messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Field\";}}s:9:\"submitted\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:61:\"Indicates
  if the form was submitted. Generated automatically.\";}s:13:\"quotedMessage\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"The
  form message a formResponse message responds to.\nRequired for formResponse messages.\n\";s:4:\"$ref\";s:27:\"#/definitions/QuotedMessage\";}s:12:\"textFallback\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:132:\"The
  text fallback displayed in channels that do not support form messages.\nOnly for
  formResponse messages. Generated automatically.\n\";}}}s:6:\"Source\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"An
  identifier used by Smooch for internal purposes.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:144:\"An
  identifier for the channel from which a message originated. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum)
  for available values.\";}s:17:\"originalMessageId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"Message
  identifier assigned by the originating channel.\";}s:24:\"originalMessageTimestamp\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:11:\"description\";s:54:\"Message
  timestamp assigned by the originating channel.\";}}}s:11:\"MessageItem\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:7:\"actions\";i:1;s:5:\"title\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  title of the message item.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"The
  text description, or subtitle.\";}s:8:\"mediaUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"The
  image URL to be shown in the carousel/list item.\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:199:\"The
  size of the image to be shown in the carousel/list item.\nOnly top item of Facebook
  Messenger carousel supported. See [**MessageItemSizeEnum**](Enums.md#MessageItemSizeEnum)
  for available values.\n\";}s:9:\"mediaType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:88:\"If
  a *mediaUrl* was specified, the media type is defined here, for example *image/jpeg*.\";}s:7:\"actions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:123:\"Array
  of [action buttons](https://docs.smooch.io/rest/#action-buttons). At least 1 is
  required, a maximum of 3 are allowed.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Action\";}}}}s:6:\"Action\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:4:\"text\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":12:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:88:\"The
  action type. See [**ActionTypeEnum**](Enums.md#ActionTypeEnum) for available values.\";}s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"The
  button text.\";}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:96:\"The
  payload to be sent with the resulting webhook.\nRequired for *postback* and *reply*
  actions.\n\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:77:\"Flat
  JSON object containing any custom properties associated with the action.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:6:\"amount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:107:\"The
  amount being charged. It needs to be specified in cents and is an integer.\nRequired
  for *buy* actions.\n\";}s:8:\"currency\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:58:\"The
  currency of the amount being charged (USD, CAD, etc.).\";}s:7:\"default\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:94:\"Flag
  indicating if the message action is the default for a message item in Facebook Messenger.\";}s:7:\"iconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:87:\"An
  icon to render next to the reply option (Facebook Messenger and Web Messenger only).\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:135:\"The
  action URI. This is the link that will be used in the clients when clicking the
  button.\nRequired for *link* and *webview* actions.\n\";}s:8:\"fallback\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:141:\"The
  webview action fallback uri. This is the link that will be used in clients that
  do not support webviews.\nRequired for *webview* actions.\n\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:197:\"The
  size used to display the webview. Allowed values are [\"compact\", \"tall\", \"full\"].\n(Optional)
  Used for *webview* actions. See [**ActionSizeEnum**](Enums.md#ActionSizeEnum) for
  available values.\n\";}s:19:\"extraChannelOptions\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:136:\"Extra
  options to pass directly to the channel API. See [Extra Channel Options](https://docs.smooch.io/rest#extra-channel-options-schema)\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:15:\"DisplaySettings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"imageAspectRatio\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:129:\"Specifies
  how to display all carousel images. See [**ImageAspectRatioEnum**](Enums.md#ImageAspectRatioEnum)
  for available values.\";}}}s:5:\"Field\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:5:\"label\";i:1;s:4:\"name\";i:2;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":12:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:38:\"The
  field ID, generated automatically.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:85:\"The
  field type. See [**FieldTypeEnum**](Enums.md#FieldTypeEnum) for available values.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:63:\"The
  name of the field. Each field name must be unique per form.\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  label to be displayed with the field.\";}s:11:\"placeholder\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:80:\"The
  placeholder text of the field that will be rendered.\nOnly for form messages\n\";}s:7:\"minSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:116:\"The
  minimum possible length of the response. Defaults to 1 if not specified.\nOnly for
  text fields in form messages.\n\";}s:7:\"maxSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:118:\"The
  maximum possible length of the response. Defaults to 128 if not specified.\nOnly
  for text fields in form messages.\n\";}s:7:\"options\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:117:\"The
  field options that can be selected. The array is limited to 20 options.\nOnly for
  select fields in form messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Option\";}}s:10:\"selectSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:83:\"The
  select size, generated automatically.\nOnly for select fields in form messages.\n\";}s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:87:\"The
  text response to a text field.\nRequired for text fields in form response messages.\n\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:91:\"The
  email response to an email field.\nRequired for email fields in form response messages.\n\";}s:6:\"select\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:108:\"The
  options selected as a response to a select field.\nRequired for select fields in
  form response messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Select\";}}}}s:6:\"Option\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:5:\"label\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"The
  name of the option. It must be unique per field.\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"The
  label the option will be displayed with on Web Messenger.\";}}}s:6:\"Select\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:5:\"label\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"The
  select ID, generated automatically.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"The
  name of the selected option.\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  label of the selected option.\";}}}s:13:\"QuotedMessage\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:110:\"The
  quoted message type. See [**QuotedMessageTypeEnum**](Enums.md#QuotedMessageTypeEnum)
  for available values.\";}s:17:\"externalMessageId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:108:\"The
  external message Id of the quoted message.\nOnly for quoted messages with type set
  to externalMessageId.\n\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}s:12:\"Conversation\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:3:\"_id\";i:1;s:11:\"unreadCount\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  conversation ID, generated automatically.\";}s:11:\"unreadCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:50:\"The
  number of unread messages in the conversation.\";}}}s:16:\"AuthCodeResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"authCode\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"authCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"The
  auth code\";}}}s:23:\"AppUserChannelsResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"channels\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"channels\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:66:\"An
  array of objects containing the channel type and the entity id.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ChannelEntityItem\";}}}}s:17:\"ChannelEntityItem\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:102:\"The
  type of channel. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for
  available values.\";}s:13:\"integrationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  ID of the integration.\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"The
  phone number for a *twilio* or *messagebird* integration\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:80:\"The
  userId for a *messenger*, *viber*, *line*, *wechat* or *twitter* integration\";}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  email address for a *mailgun* integration\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  username for a *whatsapp* integration\";}s:6:\"chatId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  chat id for a *telegram* integration\";}}}s:11:\"AppUserLink\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:12:\"confirmation\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:114:\"The
  type of the channel to link. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum)
  for available values.\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:167:\"A
  String of the appUser\u2019s phone number. It must contain the + prefix and the
  country code.\nRequired for *messenger*, *twilio*, *messagebird* and *whatsapp*
  linking.\n\";}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:75:\"A
  String of the appUser\u2019s email address.\nRequired for *mailgun* linking.\n\";}s:9:\"givenName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:148:\"A
  String of the appUser\u2019s given name. Used as additional criteria to increase
  the likelihood of a match.\n(Optional) Used for *messenger* linking.\n\";}s:7:\"surname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:145:\"A
  String of the appUser\u2019s surname. Used as additional criteria to increase the
  likelihood of a match.\n(Optional) Used for *messenger* linking.\n\";}s:7:\"subject\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:71:\"Subject
  for the outgoing email.\n(Optional) Used for *mailgun* linking.\n\";}s:12:\"confirmation\";O:8:\"stdClass\":2:{s:11:\"description\";s:80:\"Allows
  you to specify the strategy used to initiate a link with the target user.\";s:4:\"$ref\";s:26:\"#/definitions/Confirmation\";}}}s:12:\"Confirmation\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:106:\"The
  confirmation type. See [**ConfirmationTypeEnum**](Enums.md#ConfirmationTypeEnum)
  for available values.\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:102:\"The
  message used to reach out to the user. Must be a valid message object as per the
  post message API.\";s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}s:30:\"AppUserBusinessSystemsResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:15:\"businessSystems\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"businessSystems\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:67:\"An
  array of objects containing the business system type and the id.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/BusinessSystemItem\";}}}}s:18:\"BusinessSystemItem\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:116:\"The
  type of business system. See [**BusinessSystemTypeEnum**](Enums.md#BusinessSystemTypeEnum)
  for available values.\";}s:9:\"channelId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  channel id for a *slack* integration\";}s:8:\"ticketId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  ticket id for a *zendesk* integration\";}s:6:\"roomId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:39:\"The
  room id for a *hipchat* integration\";}s:14:\"conversationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:49:\"The
  conversation id for a *helpscout* integration\";}}}s:19:\"LinkRequestResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:12:\"linkRequests\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:26:\"The
  list of link requests.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/LinkRequestResponse_linkRequests\";}}}}s:19:\"GetMessagesResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"conversation\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"The
  conversation.\";s:4:\"$ref\";s:26:\"#/definitions/Conversation\";}s:8:\"messages\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:13:\"The
  messages.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}}s:4:\"next\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:57:\"The
  URI for the next set of messages in the conversation.\";}}}s:11:\"MessagePost\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"role\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":16:{s:4:\"role\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:107:\"The
  role of the individual posting the message. See [**RoleEnum**](Enums.md#RoleEnum)
  for available values.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:91:\"The
  message type. See [**MessageTypeEnum**](Enums.md#MessageTypeEnum) for available
  values.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"The
  display name of the message author.\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  email address of the message author.\";}s:9:\"avatarUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:44:\"The
  URL of the desired message avatar image.\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:78:\"Flat
  JSON object containing any custom properties associated with the message.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  payload of a reply action, if applicable.\";}s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:46:\"The
  message text.\nRequired for text messages.\n\";}s:8:\"mediaUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:64:\"The
  mediaUrl for the message.\nRequired for image/file messages.\n\";}s:9:\"mediaType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:65:\"The
  mediaType for the message.\nRequired for image/file messages.\n\";}s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:72:\"The
  items in the message list.\nRequired for carousel and list messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/MessageItem\";}}s:7:\"actions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:27:\"The
  actions in the message.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Action\";}}s:14:\"blockChatInput\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:98:\"Indicates
  if the Web SDK chat input should be blocked. Defaults to false.\nOnly for form messages.\n\";}s:6:\"fields\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:52:\"The
  fields in the form.\nRequired for form messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/FieldPost\";}}s:11:\"destination\";O:8:\"stdClass\":2:{s:11:\"description\";s:152:\"Specifies
  which channel to deliver a message to. See [list integrations](https://docs.smooch.io/rest/#list-integrations)
  to get integration ID and type.\";s:4:\"$ref\";s:25:\"#/definitions/Destination\";}s:8:\"override\";O:8:\"stdClass\":2:{s:11:\"description\";s:98:\"Specifies
  channel-specific overrides to use in order to bypass Smooch's message translation
  logic.\";s:4:\"$ref\";s:29:\"#/definitions/MessageOverride\";}}}s:9:\"FieldPost\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:5:\"label\";i:1;s:4:\"name\";i:2;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:85:\"The
  field type. See [**FieldTypeEnum**](Enums.md#FieldTypeEnum) for available values.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:63:\"The
  name of the field. Each field name must be unique per form.\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  label to be displayed with the field.\";}s:11:\"placeholder\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:80:\"The
  placeholder text of the field that will be rendered.\nOnly for form messages\n\";}s:7:\"minSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:116:\"The
  minimum possible length of the response. Defaults to 1 if not specified.\nOnly for
  text fields in form messages.\n\";}s:7:\"maxSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:118:\"The
  maximum possible length of the response. Defaults to 128 if not specified.\nOnly
  for text fields in form messages.\n\";}s:7:\"options\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:117:\"The
  field options that can be selected. The array is limited to 20 options.\nOnly for
  select fields in form messages.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Option\";}}}}s:11:\"Destination\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:13:\"integrationId\";i:1;s:15:\"integrationType\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"integrationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  ID of the target integration.\";}s:15:\"integrationType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:117:\"The
  type of the target integration. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum)
  for available values.\";}}}s:15:\"MessageOverride\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"whatsapp\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/MessageOverride_whatsapp\";}}}s:20:\"ConversationActivity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"role\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"role\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:102:\"The
  role of the actor. Must be *appMaker*. See [**RoleEnum**](Enums.md#RoleEnum) for
  available values.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:154:\"The
  type of activity to trigger. Must be either *typing:start* or *typing:stop*. See
  [**MessageTypeEnum**](Enums.md#MessageTypeEnum) for available values.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:65:\"The
  name of the app maker that starts or stops typing a response.\";}s:9:\"avatarUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:62:\"The
  avatar URL of the app maker that starts typing a response.\";}}}s:16:\"ActivityResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:12:\"conversation\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:12:\"conversation\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"The
  conversation.\";s:4:\"$ref\";s:26:\"#/definitions/Conversation\";}}}s:12:\"MenuResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"menu\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"menu\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"The
  menu.\";s:4:\"$ref\";s:18:\"#/definitions/Menu\";}}}s:4:\"Menu\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:5:\"items\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:21:\"A
  list of menu items.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/MenuItem\";}}}}s:8:\"MenuItem\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"text\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  button text of the menu item.\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:70:\"A
  valid address, like http://smooch.io. Required for a link type item.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:192:\"Can
  either be link, postback, which correspond to Smooch\u2019s link and postback actions,
  or submenu for nested menus. See [**MenuItemTypeEnum**](Enums.md#MenuItemTypeEnum)
  for available values.\";}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"A
  payload for a postback. Required for a postback type item.\";}s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:35:\"A
  list of menu items for a submenu.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/SubMenuItem\";}}}}s:11:\"SubMenuItem\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"text\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  button text of the menu item.\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:70:\"A
  valid address, like http://smooch.io. Required for a link type item.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:192:\"Can
  either be link, postback, which correspond to Smooch\u2019s link and postback actions,
  or submenu for nested menus. See [**MenuItemTypeEnum**](Enums.md#MenuItemTypeEnum)
  for available values.\";}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"A
  payload for a postback. Required for a postback type item.\";}}}s:27:\"ListServiceAccountsResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:15:\"serviceAccounts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:29:\"The
  list of service accounts.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ServiceAccount\";}}s:7:\"hasMore\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:88:\"Flag
  indicating if there are more service accounts that are not present in the response.\";}s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:67:\"The
  number of service account records skipped in the returned list.\";}}}s:14:\"ServiceAccount\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:3:\"_id\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:25:\"The
  service account's ID.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"The
  service account's name.\";}}}s:20:\"ServiceAccountCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"The
  service account's name.\";}}}s:22:\"ServiceAccountResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"serviceAccount\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"The
  service account.\";s:4:\"$ref\";s:28:\"#/definitions/ServiceAccount\";}}}s:20:\"ServiceAccountUpdate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"The
  service account's name.\";}}}s:22:\"ListSecretKeysResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"keys\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:24:\"The
  list of secret keys.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/SecretKey\";}}}}s:9:\"SecretKey\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:3:\"_id\";i:1;s:4:\"name\";i:2;s:6:\"secret\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"The
  secret key ID, generated automatically.\";}s:6:\"secret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"The
  secret itself.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"A
  friendly identifier for the secret key.\";}}}s:15:\"SecretKeyCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"A
  friendly identifier for the secret key.\";}}}s:17:\"SecretKeyResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"key\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"The
  secret key.\";s:4:\"$ref\";s:23:\"#/definitions/SecretKey\";}}}s:11:\"JwtResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"jwt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:8:\"The
  JWT.\";}}}s:16:\"ListAppsResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"apps\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:17:\"The
  list of apps.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/App\";}}s:7:\"hasMore\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:76:\"Flag
  indicating if there are more apps that are not present in the response.\";}s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:55:\"The
  number of app records skipped in the returned list.\";}}}s:3:\"App\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:3:\"_id\";i:1;s:8:\"appToken\";i:2;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"The
  app's ID.\";}s:8:\"appToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:111:\"The
  appToken, used to initialize the Web, iOS and Android clients and to make calls
  to the app user facing API.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"The
  app's name.\";}s:8:\"settings\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/App_settings\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:74:\"Flat
  JSON object containing any custom properties associated with the app.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:9:\"AppCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"The
  app's name.\";}s:8:\"settings\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/App_settings\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:74:\"Flat
  JSON object containing any custom properties associated with the app.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:11:\"AppResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"app\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"The
  app.\";s:4:\"$ref\";s:17:\"#/definitions/App\";}}}s:9:\"AppUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"The
  app's name.\";}s:8:\"settings\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/App_settings\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:74:\"Flat
  JSON object containing any custom properties associated with the app.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:24:\"ListIntegrationsResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"integrations\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:25:\"The
  list of integrations.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Integration\";}}s:7:\"hasMore\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:84:\"Flag
  indicating if there are more integrations that are not present in the response.\";}s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:63:\"The
  number of integration records skipped in the returned list.\";}}}s:11:\"Integration\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:3:\"_id\";i:1;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":61:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:44:\"The
  integration ID, generated automatically.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:103:\"The
  integration type. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for
  available values.\";}s:11:\"displayName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"The
  integration display name.\nUsed to map a human-friendly name to an integration.\n\";}s:15:\"pageAccessToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Facebook
  Page Access Token.\nRequired for *messenger* integrations.\n\";}s:5:\"appId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:86:\"Facebook
  App ID OR WeChat App ID.\nRequired for *messenger* and *wechat* integrations.\n\";}s:9:\"appSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:99:\"Facebook
  Page App Secret OR WeChat App Secret.\nRequired for *messenger* and *wechat* integrations.\n\";}s:14:\"accessTokenUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:112:\"Optional
  endpoint to generate access tokens for WeChat.\nUsed to coordinate API access with
  third party systems.\n\";}s:13:\"webhookSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:91:\"Secret
  to verify webhooks.\nReturned on successful *wechat* and *messagebird* integrations.\n\";}s:6:\"pageId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:71:\"Facebook
  Page App ID.\nReturned on successful *messenger* integrations.\n\";}s:10:\"accountSid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:56:\"Twilio
  Account SID.\nRequired for *twilio* integrations.\n\";}s:9:\"authToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"Twilio
  Auth Token.\nRequired for *twilio* integrations.\n\";}s:14:\"phoneNumberSid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"SID
  for specific phone number.\nRequired for *twilio* integrations.\n\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:106:\"Smooch
  will receive all messages sent to this phone number.\nReturned on successful *twilio*
  integrations.\n\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Name
  on the account.\nReturned on successful *twilio* integrations.\n\";}s:5:\"token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"Telegram
  Bot Token OR Viber Public Account token.\nRequired for *twilio* and *viber* integrations.\n\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:80:\"The
  viber URI to find the account.\nReturned on successful *viber* integrations.\n\";}s:9:\"channelId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"LINE
  Channel ID.\nRequired for *line* integrations.\n\";}s:13:\"channelSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"LINE
  Channel Secret.\nRequired for *line* integrations.\n\";}s:18:\"channelAccessToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"LINE
  Channel Access Token.\nRequired for *line* integrations.\n\";}s:11:\"serviceCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"LINE
  Service Code.\n\";}s:14:\"switcherSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"LINE
  Switcher Secret.\n\";}s:7:\"botName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"The
  bot's name.\nReturned on successful *line* integrations.\n\";}s:14:\"encodingAesKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"AES
  Encoding Key.\n(Optional) Used for *wechat* integrations.\n\";}s:11:\"fromAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"Email
  will display as coming from this address.\n(Optional) Used for *frontendEmail* integrations.\n\";}s:11:\"certificate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:84:\"The
  binary of your APN certificate base64 encoded.\nRequired for *apn* integrations.\n\";}s:12:\"deploymentId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Your
  WhatsApp deployment ID.\nRequired for *WhatsApp* integrations.\n\";}s:7:\"baseUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:97:\"Your
  WhatsApp API client's URL.\nRequired for *WhatsApp* integrations. (this usage is
  deprecated)\n\";}s:19:\"hsmFallbackLanguage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"Specification
  of a fallback language.\n(Optional) Used for *WhatsApp* integrations.\n\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:167:\"The
  password for your APN certificate or WhatsApp API client.\nRequired for *WhatsApp*
  integrations. (this usage is deprecated)\n(Optional) Used for *apn* integrations.\n\";}s:15:\"autoUpdateBadge\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"Use
  the unread count of the conversation as the application badge.\n(Optional) Used
  for *apn* integrations.\n\";}s:10:\"production\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:98:\"Flag
  specifying whether the certificate is production.\nReturned on successful *apn*
  integrations.\n\";}s:9:\"serverKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:71:\"Your
  server key from the fcm console.\nRequired for *fcm* integrations.\n\";}s:8:\"senderId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:70:\"Your
  sender id from the fcm console.\nRequired for *fcm* integrations.\n\";}s:4:\"tier\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:70:\"Your
  Twitter app\u2019s tier. Accepted values are enterprise or premium.\n\";}s:7:\"envName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:103:\"The
  Twitter environment name, e.g.: env-beta.\nRequired for *twitter* integrations with
  *premium* tier.\n\";}s:11:\"consumerKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:76:\"The
  consumer key for your Twitter app.\nRequired for *twitter* integrations.\n\";}s:14:\"consumerSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:79:\"The
  consumer secret for your Twitter app.\nRequired for *twitter* integrations.\n\";}s:14:\"accessTokenKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:93:\"The
  access token key obtained from your user via oauth.\nRequired for *twitter* integrations.\n\";}s:17:\"accessTokenSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:96:\"The
  access token secret obtained from your user via oauth.\nRequired for *twitter* integrations.\n\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"The
  twitter userId.\nReturned on successful *twitter* integrations.\n\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:157:\"The
  username for the account.\nReturned on successful *twitter* and *telegram* integrations.\nRequired
  for *WhatsApp* integrations. (this usage is deprecated)\n\";}s:6:\"apiKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:81:\"The
  public API key of your Mailgun account.\nRequired for *mailgun* integrations.\n\";}s:6:\"domain\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:69:\"The
  domain used to relay email.\nRequired for *mailgun* integrations.\n\";}s:15:\"incomingAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:90:\"Smooch
  will receive all emails sent to this address.\nRequired for *mailgun* integrations.\n\";}s:9:\"accessKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:89:\"The
  public API key of your MessageBird account.\nRequired for *messagebird* integrations.\n\";}s:10:\"originator\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:101:\"Smooch
  will receive all messages sent to this phone number.\nRequired for *messagebird*
  integrations.\n\";}s:10:\"brandColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:135:\"This
  color will be used in the messenger header and the button or tab in idle state.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:14:\"fixedIntroPane\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:191:\"When
  `true`, the introduction pane will be pinned at the top of the conversation instead
  of scrolling with it. The default value is `false`.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:17:\"conversationColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:138:\"This
  color will be used for customer messages, quick replies and actions in the footer.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:11:\"actionColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:116:\"This
  color will be used for call-to-actions inside your messages.\n(Optional) Used for
  *Web Messenger* integrations.\n\";}s:12:\"displayStyle\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:134:\"Choose
  how the messenger will appear on your website. Must be either button or tab.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:13:\"buttonIconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:142:\"With
  the button style Web Messenger, you have the option of selecting your own button
  icon.\n(Optional) Used for *Web Messenger* integrations.\n\";}s:11:\"buttonWidth\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:132:\"With
  the button style Web Messenger, you have the option of specifying its width.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:12:\"buttonHeight\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:133:\"With
  the button style Web Messenger, you have the option of specifying its height.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:16:\"integrationOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:250:\"Array
  of integration IDs, order will be reflected in the Web Messenger.\nWhen set, only
  integrations from this list will be displayed in the Web Messenger.\nIf unset, all
  integrations will be displayed\n(Optional) Used for *Web Messenger* integrations.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"businessName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:96:\"A
  custom business name for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:15:\"businessIconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:100:\"A
  custom business icon url for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:18:\"backgroundImageUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:97:\"A
  custom background url for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:15:\"originWhitelist\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:360:\"A
  list of origins to whitelist.\nWhen set, only the origins from this list will be
  able to initialize the Web Messenger.\nIf unset, all origins are whitelisted.\nThe
  elements in the list should follow the serialized-origin format from RFC 6454 `scheme
  \"://\" host [ \":\" port ]`, where scheme is `http` or `https`.\n(Optional) Used
  for *Web Messenger* integrations.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:166:\"The
  integration status. See [**IntegrationStatusEnum**](Enums.md#IntegrationStatusEnum)
  for available values. [More info](https://docs.smooch.io/#integration-status).\";}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:84:\"The
  error causing the integration to fail. Will be present when `status` is 'error'.\";}}}s:17:\"IntegrationCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":47:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:103:\"The
  integration type. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for
  available values.\";}s:11:\"displayName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"The
  integration display name.\nUsed to map a human-friendly name to an integration.\n\";}s:15:\"pageAccessToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Facebook
  Page Access Token.\nRequired for *messenger* integrations.\n\";}s:5:\"appId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:86:\"Facebook
  App ID OR WeChat App ID.\nRequired for *messenger* and *wechat* integrations.\n\";}s:9:\"appSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:99:\"Facebook
  Page App Secret OR WeChat App Secret.\nRequired for *messenger* and *wechat* integrations.\n\";}s:10:\"accountSid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:56:\"Twilio
  Account SID.\nRequired for *twilio* integrations.\n\";}s:9:\"authToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"Twilio
  Auth Token.\nRequired for *twilio* integrations.\n\";}s:7:\"baseUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:97:\"Your
  WhatsApp API client's URL.\nRequired for *WhatsApp* integrations. (this usage is
  deprecated)\n\";}s:19:\"hsmFallbackLanguage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"Specification
  of a fallback language.\n(Optional) Used for *WhatsApp* integrations.\n\";}s:14:\"phoneNumberSid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"SID
  for specific phone number.\nRequired for *twilio* integrations.\n\";}s:5:\"token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"Telegram
  Bot Token OR Viber Public Account token.\nRequired for *twilio* and *viber* integrations.\n\";}s:9:\"channelId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"LINE
  Channel ID.\nRequired for *line* integrations.\n\";}s:13:\"channelSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"LINE
  Channel Secret.\nRequired for *line* integrations.\n\";}s:18:\"channelAccessToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"LINE
  Channel Access Token.\nRequired for *line* integrations.\n\";}s:12:\"deploymentId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Your
  WhatsApp deployment ID.\nRequired for *WhatsApp* integrations.\n\";}s:11:\"serviceCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"LINE
  Service Code.\n\";}s:14:\"switcherSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"LINE
  Switcher Secret.\n\";}s:14:\"encodingAesKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:61:\"AES
  Encoding Key.\n(Optional) Used for *wechat* integrations.\n\";}s:11:\"fromAddress\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"Email
  will display as coming from this address.\n(Optional) Used for *frontendEmail* integrations.\n\";}s:11:\"certificate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:84:\"The
  binary of your APN certificate base64 encoded.\nRequired for *apn* integrations.\n\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:167:\"The
  password for your APN certificate or WhatsApp API client.\nRequired for *WhatsApp*
  integrations. (this usage is deprecated)\n(Optional) Used for *apn* integrations.\n\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:157:\"The
  username for the account.\nReturned on successful *twitter* and *telegram* integrations.\nRequired
  for *WhatsApp* integrations. (this usage is deprecated)\n\";}s:15:\"autoUpdateBadge\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"Use
  the unread count of the conversation as the application badge.\n(Optional) Used
  for *apn* integrations.\n\";}s:9:\"serverKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:71:\"Your
  server key from the fcm console.\nRequired for *fcm* integrations.\n\";}s:8:\"senderId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:70:\"Your
  sender id from the fcm console.\nRequired for *fcm* integrations.\n\";}s:4:\"tier\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:70:\"Your
  Twitter app\u2019s tier. Accepted values are enterprise or premium.\n\";}s:7:\"envName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:103:\"The
  Twitter environment name, e.g.: env-beta.\nRequired for *twitter* integrations with
  *premium* tier.\n\";}s:11:\"consumerKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:76:\"The
  consumer key for your Twitter app.\nRequired for *twitter* integrations.\n\";}s:14:\"consumerSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:79:\"The
  consumer secret for your Twitter app.\nRequired for *twitter* integrations.\n\";}s:14:\"accessTokenKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:93:\"The
  access token key obtained from your user via oauth.\nRequired for *twitter* integrations.\n\";}s:17:\"accessTokenSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:96:\"The
  access token secret obtained from your user via oauth.\nRequired for *twitter* integrations.\n\";}s:14:\"accessTokenUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:112:\"Optional
  endpoint to generate access tokens for WeChat.\nUsed to coordinate API access with
  third party systems.\n\";}s:9:\"accessKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:89:\"The
  public API key of your MessageBird account.\nRequired for *messagebird* integrations.\n\";}s:10:\"originator\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:101:\"Smooch
  will receive all messages sent to this phone number.\nRequired for *messagebird*
  integrations.\n\";}s:10:\"brandColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:135:\"This
  color will be used in the messenger header and the button or tab in idle state.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:14:\"fixedIntroPane\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:191:\"When
  `true`, the introduction pane will be pinned at the top of the conversation instead
  of scrolling with it. The default value is `false`.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:17:\"conversationColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:138:\"This
  color will be used for customer messages, quick replies and actions in the footer.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:11:\"actionColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:116:\"This
  color will be used for call-to-actions inside your messages.\n(Optional) Used for
  *Web Messenger* integrations.\n\";}s:12:\"displayStyle\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:134:\"Choose
  how the messenger will appear on your website. Must be either button or tab.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:13:\"buttonIconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:142:\"With
  the button style Web Messenger, you have the option of selecting your own button
  icon.\n(Optional) Used for *Web Messenger* integrations.\n\";}s:11:\"buttonWidth\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:132:\"With
  the button style Web Messenger, you have the option of specifying its width.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:12:\"buttonHeight\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:133:\"With
  the button style Web Messenger, you have the option of specifying its height.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:16:\"integrationOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:250:\"Array
  of integration IDs, order will be reflected in the Web Messenger.\nWhen set, only
  integrations from this list will be displayed in the Web Messenger.\nIf unset, all
  integrations will be displayed\n(Optional) Used for *Web Messenger* integrations.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"businessName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:96:\"A
  custom business name for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:15:\"businessIconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:100:\"A
  custom business icon url for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:18:\"backgroundImageUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:97:\"A
  custom background url for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:15:\"originWhitelist\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:360:\"A
  list of origins to whitelist.\nWhen set, only the origins from this list will be
  able to initialize the Web Messenger.\nIf unset, all origins are whitelisted.\nThe
  elements in the list should follow the serialized-origin format from RFC 6454 `scheme
  \"://\" host [ \":\" port ]`, where scheme is `http` or `https`.\n(Optional) Used
  for *Web Messenger* integrations.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:19:\"IntegrationResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"integration\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"The
  integration.\";s:4:\"$ref\";s:25:\"#/definitions/Integration\";}}}s:17:\"IntegrationUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":19:{s:11:\"displayName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"The
  integration display name.\nUsed to map a human-friendly name to an integration.\n\";}s:10:\"brandColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:135:\"This
  color will be used in the messenger header and the button or tab in idle state.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:14:\"fixedIntroPane\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:191:\"When
  `true`, the introduction pane will be pinned at the top of the conversation instead
  of scrolling with it. The default value is `false`.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:17:\"conversationColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:138:\"This
  color will be used for customer messages, quick replies and actions in the footer.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:11:\"actionColor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:116:\"This
  color will be used for call-to-actions inside your messages.\n(Optional) Used for
  *Web Messenger* integrations.\n\";}s:12:\"displayStyle\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:134:\"Choose
  how the messenger will appear on your website. Must be either button or tab.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:13:\"buttonIconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:142:\"With
  the button style Web Messenger, you have the option of selecting your own button
  icon.\n(Optional) Used for *Web Messenger* integrations.\n\";}s:11:\"buttonWidth\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:132:\"With
  the button style Web Messenger, you have the option of specifying its width.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:12:\"buttonHeight\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:133:\"With
  the button style Web Messenger, you have the option of specifying its height.\n(Optional)
  Used for *Web Messenger* integrations.\n\";}s:16:\"integrationOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:250:\"Array
  of integration IDs, order will be reflected in the Web Messenger.\nWhen set, only
  integrations from this list will be displayed in the Web Messenger.\nIf unset, all
  integrations will be displayed\n(Optional) Used for *Web Messenger* integrations.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"businessName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:96:\"A
  custom business name for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:15:\"businessIconUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:100:\"A
  custom business icon url for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:18:\"backgroundImageUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:97:\"A
  custom background url for the Web Messenger.\n(Optional) Used for *Web Messenger*
  integrations.\n\";}s:15:\"originWhitelist\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:360:\"A
  list of origins to whitelist.\nWhen set, only the origins from this list will be
  able to initialize the Web Messenger.\nIf unset, all origins are whitelisted.\nThe
  elements in the list should follow the serialized-origin format from RFC 6454 `scheme
  \"://\" host [ \":\" port ]`, where scheme is `http` or `https`.\n(Optional) Used
  for *Web Messenger* integrations.\n\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:9:\"channelId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"LINE
  Channel ID.\nRequired for *line* integrations.\n\";}s:13:\"channelSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"LINE
  Channel Secret.\nRequired for *line* integrations.\n\";}s:11:\"serviceCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"LINE
  Service Code.\n\";}s:14:\"switcherSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"LINE
  Switcher Secret.\n\";}s:19:\"hsmFallbackLanguage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:83:\"Specification
  of a fallback language.\n(Optional) Used for *WhatsApp* integrations.\n\";}}}s:29:\"GetIntegrationProfileResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"profile\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:113:\"JSON
  object containing the integration profile. [More info](https://docs.smooch.io/rest/#get-integration-profile)\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:24:\"IntegrationProfileUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"about\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:107:\"Text
  to display in your profile's About section. Can be used as a status update. Maximum
  of 139 characters.\";}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"Address
  of the business. Maximum of 256 characters.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"Description
  of the business. Maximum of 256 characters.\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:65:\"Email
  address to contact the business. Maximum of 128 characters.\";}s:8:\"photoUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:126:\"URL
  where the business' profile photo is hosted. WhatsApp recommends an image with dimensions
  of 640x640 and max size of 63KB.\";}s:8:\"vertical\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"Industry
  of the business. Maximum of 128 characters.\";}s:8:\"websites\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:57:\"URLs
  associated with the business. Maximum of 2 websites.\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"URL
  associated with the business. Maximum of 256 characters.\";}}}}s:37:\"UploadIntegrationProfilePhotoResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"photoUrl\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"photoUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  photo URL after uploading.\";}}}s:20:\"ListWebhooksResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"webhooks\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"webhooks\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:21:\"The
  list of webhooks.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Webhook\";}}}}s:7:\"Webhook\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:3:\"_id\";i:1;s:6:\"secret\";i:2;s:6:\"target\";i:3;s:8:\"triggers\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  webhook ID, generated automatically.\";}s:6:\"target\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"URL
  to be called when the webhook is triggered.\";}s:8:\"triggers\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:142:\"An
  array of triggers you wish to have the webhook listen to. See [**WebhookTriggersEnum**](Enums.md#WebhookTriggersEnum)
  for available values.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"secret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:119:\"Secret
  which will be transmitted with each webhook invocation and can be used to verify
  the authenticity of the caller.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  payload version of the webhook.\";}s:13:\"includeClient\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:122:\"Specifies
  whether webhook payloads should include the client information associated with a
  conversation in webhook events.\";}s:18:\"includeFullAppUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:97:\"Specifies
  whether webhook payloads should include the complete appUser schema for appUser
  events.\";}}}s:13:\"WebhookCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:6:\"target\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"target\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"URL
  to be called when the webhook is triggered.\";}s:8:\"triggers\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:142:\"An
  array of triggers you wish to have the webhook listen to. See [**WebhookTriggersEnum**](Enums.md#WebhookTriggersEnum)
  for available values.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:13:\"includeClient\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:122:\"Specifies
  whether webhook payloads should include the client information associated with a
  conversation in webhook events.\";}s:18:\"includeFullAppUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:97:\"Specifies
  whether webhook payloads should include the complete appUser schema for appUser
  events.\";}}}s:15:\"WebhookResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:7:\"webhook\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"webhook\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"The
  webhook.\";s:4:\"$ref\";s:21:\"#/definitions/Webhook\";}}}s:13:\"WebhookUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"target\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"URL
  to be called when the webhook is triggered.\";}s:8:\"triggers\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:142:\"An
  array of triggers you wish to have the webhook listen to. See [**WebhookTriggersEnum**](Enums.md#WebhookTriggersEnum)
  for available values.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:13:\"includeClient\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:122:\"Specifies
  whether webhook payloads should include the client information associated with a
  conversation in webhook events.\";}s:18:\"includeFullAppUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:97:\"Specifies
  whether webhook payloads should include the complete appUser schema for appUser
  events.\";}}}s:18:\"AttachmentResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:9:\"mediaType\";i:1;s:8:\"mediaUrl\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"mediaUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:64:\"The
  mediaUrl for the message.\nRequired for image/file messages.\n\";}s:9:\"mediaType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:65:\"The
  mediaType for the message.\nRequired for image/file messages.\n\";}}}s:16:\"AttachmentRemove\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"mediaUrl\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"mediaUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:64:\"The
  mediaUrl for the message.\nRequired for image/file messages.\n\";}}}s:21:\"ListTemplatesResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:9:\"templates\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"templates\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:22:\"The
  list of templates.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Template\";}}s:7:\"hasMore\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:81:\"Flag
  indicating if there are more templates that are not present in the response.\";}s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:60:\"The
  number of template records skipped in the returned list.\";}}}s:8:\"Template\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:3:\"_id\";i:1;s:7:\"message\";i:2;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  template ID, generated automatically.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:146:\"The
  name for the template, used when sending via [shorthand](https://docs.smooch.io/guide/shorthand/#sending-template-message-with-inline-syntax).\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"The
  message sent when referencing the template via syntax.\";s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}s:14:\"TemplateCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:7:\"message\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:146:\"The
  name for the template, used when sending via [shorthand](https://docs.smooch.io/guide/shorthand/#sending-template-message-with-inline-syntax).\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"The
  message sent when referencing the template via syntax.\";s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}s:16:\"TemplateResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"template\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"template\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"The
  template.\";s:4:\"$ref\";s:22:\"#/definitions/Template\";}}}s:14:\"TemplateUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:146:\"The
  name for the template, used when sending via [shorthand](https://docs.smooch.io/guide/shorthand/#sending-template-message-with-inline-syntax).\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"The
  message sent when referencing the template via syntax.\";s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}s:23:\"ListDeploymentsResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:11:\"deployments\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"deployments\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:24:\"The
  list of deployments.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Deployment\";}}}}s:10:\"Deployment\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:3:\"_id\";i:1;s:7:\"hosting\";i:2;s:6:\"status\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"The
  deployment ID, generated automatically.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:106:\"The
  deployment status. See [**DeploymentStatusEnum**](Enums.md#DeploymentStatusEnum)
  for available values.\";}s:7:\"hosting\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:109:\"The
  deployment hosting. See [**DeploymentHostingEnum**](Enums.md#DeploymentHostingEnum)
  for available values.\";}s:7:\"baseUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:74:\"The
  baseUrl of the deployment. Only present for `self` hosted deployments.\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:75:\"The
  username of the deployment. Only present for `self` hosted deployments.\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:88:\"The
  phoneNumber of the deployment. Only present once the deployment has been registered.\";}s:11:\"callbackUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:73:\"The
  URL to be called by Smooch when the status of the deployment changes.\";}s:14:\"callbackSecret\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"The
  secret used to secure the callback.\";}s:13:\"integrationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:59:\"The
  integrationId of the integration using this deployment.\";}s:5:\"appId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"The
  appId of the integration using this deployment.\";}}}s:16:\"DeploymentCreate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:7:\"hosting\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"hosting\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:109:\"The
  deployment hosting. See [**DeploymentHostingEnum**](Enums.md#DeploymentHostingEnum)
  for available values.\";}s:7:\"baseUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:84:\"The
  base URL to access your WhatsApp EC. Only provide for `self` hosted deployments.\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:84:\"The
  username to access your WhatsApp EC. Only provide for `self` hosted deployments.\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:84:\"The
  password to access your WhatsApp EC. Only provide for `self` hosted deployments.\";}s:11:\"callbackUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:73:\"The
  URL to be called by Smooch when the status of the deployment changes.\";}}}s:18:\"DeploymentResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:10:\"deployment\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"deployment\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"The
  deployment.\";s:4:\"$ref\";s:24:\"#/definitions/Deployment\";}}}s:29:\"DeploymentActivatePhoneNumber\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:6:\"method\";i:1;s:11:\"phoneNumber\";i:2;s:23:\"verifiedNameCertificate\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:48:\"The
  phone number to send the activation code to.\";}s:23:\"verifiedNameCertificate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:51:\"The
  verified name certificate for the phone number.\";}s:6:\"method\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:154:\"The
  method desired to receive the activation code. See [**DeploymentActivationMethodEnum**](Enums.md#DeploymentActivationMethodEnum)
  for available values.\";}}}s:21:\"DeploymentConfirmCode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"code\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"The
  code that was sent to you via SMS or phone call.\";}}}s:32:\"LinkRequestResponse_linkRequests\";O:8:\"stdClass\":2:{s:8:\"required\";a:4:{i:0;s:4:\"code\";i:1;s:13:\"integrationId\";i:2;s:4:\"type\";i:3;s:3:\"url\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:13:\"integrationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"The
  integration ID.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:103:\"The
  integration type. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for
  available values.\";}s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"The
  link request code.\";}s:3:\"url\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  link request url.\";}}}s:24:\"MessageOverride_whatsapp\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"payload\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:38:\"The
  exact payload to send to WhatsApp.\";s:10:\"properties\";O:8:\"stdClass\":0:{}}}}s:12:\"App_settings\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:21:\"maskCreditCardNumbers\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:96:\"Flag
  specifying whether credit card numbers will be automatically masked if sent through
  Smooch.\";}s:14:\"useAnimalNames\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:72:\"Flag
  specifying whether animal names should be used for anonymous users.\";}s:28:\"conversationRetentionSeconds\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:97:\"Number
  of seconds of inactivity before a conversation\u2019s messages will be automatically
  deleted.\";}s:12:\"echoPostback\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:117:\"A
  boolean specifying whether a message should be added to the conversation history
  when a postback button is clicked.\";}}s:11:\"description\";s:26:\"Customizable
  app settings.\";}}"
...
