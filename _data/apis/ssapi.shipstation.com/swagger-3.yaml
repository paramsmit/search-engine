---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":9:{s:11:\"description\";s:8963:\"# Integrating
  with ShipStation\n\nShipStation strives to streamline shipping for online sellers,
  no matter where they sell their products online. We are continuously adding new
  marketplaces, shopping carts, and integration tools, because we know the e-commerce
  space is growing. \nAs a result, we\u2019ve worked hard to provide developer resources
  to build custom integrations with ShipStation.  If you\u2019re interested in becoming
  a partner of ours, drop us a line by [filling out this form](http://www.shipstation.com/partners/shipstation-api-custom-store/)
  and we\u2019ll get in touch.\n\nThere are two methods to integrate with ShipStation:\n\n*
  Custom Store Integration\n\n* ShipStation API\n\n## Custom Store Integration\n\nLooking
  for a more 1-to-1 relationship between ShipStation and your chosen selling platform?
  The Custom Store Integration is the ticket. Our custom store integration is just
  like any of our other selling channel integration, and could be eligible (based
  on internal review) as a branded option within the ShipStation admin. It also allows
  the user to sync orders within ShipStation in a single click, in addition to ShipStation
  automatically sending shipment status and tracking information \nupdates back to
  your cart or marketplace once a label is created. It\u2019s the best way to sync
  up orders with ShipStation and have the most seamless experience.\n\nThe Custom
  Store allows you to perform two major functions:\n\n* Provide order information
  to ShipStation, including recipient address, products, customers, etc.\n\n* Receive
  tracking information when an order is shipped, including shipping method, shipping
  status, tracking number, and more\n\nTo integrate with the Custom Store, you must
  expose a web page that renders XML that adheres to the specification defined in
  the Custom Store Integration Guide. \nWe refer to this page as your \u201CXML Endpoint\u201D.
  If you can provide us an XML Endpoint, we can *pull* data from your endpoint just
  like we do with other marketplaces like eBay and Amazon.\n\n**To find out more about
  our Custom Store Integration, click here: [Custom Store Integration Guide](https://help.shipstation.com/hc/en-us/articles/205928478)**\n\n##
  ShipStation API\n\nOur API is available for any plan, and allows for read access
  to almost all data in your account, and write access to create specific objects,
  like Orders, Customers, and Products. \nThe API is a great way to get data directly
  to and from ShipStation, like creating products, customers, and querying order &
  shipping data. Please note that an API integration will not allow you to use your
  own MarketplaceID that could eventually be branded with your company's logo (see
  the Custom Store Integration above for that functionality).\n\n**This API allows
  developers to build applications that interface with the ShipStation platform. The
  API can be used to automate many tasks including:**\n\n+ Managing Orders\n\n+ Managing
  Shipments\n\n+ Creating Shipping Labels\n\n+ Retrieving Shipping Rates\n\n+ and
  more!!!\n\n**To learn more about our API, please review our API documentation below.**\n\n##
  Which one should I pick?\n\nThe method that's right for your integration very much
  depends on the type of integration you're planning on implementing. A Custom Store
  allows ShipStation to *pull* order information from your platform the very same
  way we *pull* data from marketplaces such as eBay, Amazon, and Shopify. Once an
  order has been shipped in ShipStation, ShipStation automatically *pushes* tracking
  information back to your custom store. Though the functionality afforded by this
  approach is limited to these 2 main functions, much of the *heavy lifting* is performed
  by ShipStation. Importing orders \nand sending tracking information is performed
  automatically by ShipStation, as long as your XML endpoint is available to receive
  our data.\n\nAn API integration, on the other hand, exposes much more functionality,
  but requires that the developer do much of the heavy lifting. Orders must be *pushed*
  to ShipStation by using our \"/orders/CreateOrder\" endpoint.  The API allows developers
  to perform functions such as tagging an order, \nshipping an order, creating a shipping
  label (without an order), retrieving shipping rates, adding funds to a carrier account,
  creating a warehouse, listing products, and much more.  The functionality the API
  affords are typical actions that a user would perform if using the web app.\n\n###
  Considerations\n\n* **Will your integration be the main order management tool for
  the online seller?**  If so, the API's broader range of functionality may be the
  best option.\n\n* **Would you like your store integration to be a branded marketplace
  within the ShipStation admin?** When you integrate using the Custom Store Integration,
  you could be eligible to have your company branded within the ShipStation admin.
  A branded store could have the plugin's logo in the app,\nas well as an easier store
  setup, order sync, and reporting. Please note, ShipStation makes the final decision,
  based on integration and partner requirements, on which custom stores are branded
  within our application.\n\n# ShipStation API Requirements\n\n## End Point\n\nEndpoints
  are located at the following domain https://ssapi.shipstation.com/ and will need
  to have a specific reference added to return data. PLEASE NOTE: You cannot access
  this URL directly and must reference one of the specific endpoints below.\n\n##
  Authentication\n\nThe ShipStation API uses [Basic HTTP authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).
  Use your ShipStation ``API Key`` as the username and ``API Secret`` as the password.
  \ You can find your ``API Key`` as the username and ``API Secret`` under Settings
  at https://ss.shipstation.com/#/settings/api .\n\nThe Authorization header is constructed
  as follows:\n\n+ Username (``API KEY``) and password (``API Secret``) are combined
  into a string \"username:password\"\n\n+ The resulting string is then encoded using
  the RFC2045-MIME variant of Base64, except not limited to 76 char/line\n\n+ The
  authorization method and a space i.e. \"Basic \" is then put before the encoded
  string.\n\nFor example, if the ``API KEY`` given is 'ShipStation' and the ``API
  Secret`` is 'Rocks' then the header is formed as follows:\n\n+ Authorization: Basic
  U2hpcFN0YXRpb246Um9ja3M=\n\n## API Rate Limits\n\nIn an effort to ensure consistent
  application performance and increased scalability, we have implemented rate limiting
  on the ShipStation API.  Your integration will need to be able to handle HTTP rate
  limiting status messages as defined below:\n\n**Response Headers**\n\nAll responses
  will include headers with status information about rate limiting.\n\n1. X-Rate-Limit-Limit:
  the maximum number of requests per minute to the endpoint\n\n2. X-Rate-Limit-Remaining:
  the available requests remaining in the current window\n\n3. X-Rate-Limit-Reset:
  the number of seconds remaining until the next window begins\n\n**Hitting the Limit**\n\nIf
  your application hits the rate limit, an HTTP 429 will be returned with this body:\n\n```\n{\n
  \   \"message\": \"Too Many Requests\"\n}\n```\n\nAnd these headers, assuming it
  is 40 seconds into the current window:\n\n```\n{\n    \"X-Rate-Limit-Limit\": 60,\n
  \   \"X-Rate-Limit-Remaining\": 0,\n    \"X-Rate-Limit-Reset\": 20\n}\n```\n\nWhen
  the limit is reached, your application should stop making requests until X-Rate-Limit-Reset
  seconds have elapsed. The current Rate limit for each set of the API Key and Secret
  is 40 requests per minute.\n\nIf you have any issues with the API, please email
  us at <apisupport@shipstation.com>\n\n## Server Responses\n\nStatus Code | Description\n------------|-------------\n``200``
  | OK - The request was successful (some API calls may return 201 instead).\n``201``
  | Created - The request was successful and a resource was created.\n``204`` | No
  Content - The request was successful but there is no representation to return (that
  is, the response is empty).\n``400`` | Bad Request -  The request could not be understood
  or was missing required parameters.\n``401`` | Unauthorized -  Authentication failed
  or user does not have permissions for the requested operation.\n``403`` | Forbidden
  - Access denied.\n``404`` | Not Found -  Resource was not found.\n``405`` | Method
  Not Allowed -  Requested method is not supported for the specified resource.\n``429``
  | Too Many Requests - Exceeded ShipStation API limits. When the limit is reached,
  your application should stop making requests until X-Rate-Limit-Reset seconds have
  elapsed.\n``500`` | Internal Server Error - ShipStation has encountered an error.\n\n##
  DateTime Format and Time Zone\n\nShipStation uses the ISO 8601 combined format for
  dateTime stamps being submitted to and returned from the API. Please be sure to
  submit all dateTime values as follows:\n\nyyyy-mm-dd hh:mm:ss (24 hour notation).
  Example - ``2016-11-29 23:59:59``\n\nThe time zone represented in all API responses
  is PST/PDT. Similarly, ShipStation asks that you make all time zone convertions
  and submit any dateTime requests in PST/PDT.\";s:5:\"title\";s:28:\"ShipStation
  Developer Portal\";s:7:\"version\";s:5:\"1.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:9:\"ecommerce\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:110:\"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_879470232292663296_Kp70vg1p_400x400.jpg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.2\";}s:6:\"format\";s:12:\"apiBlueprint\";s:3:\"url\";s:59:\"https://shipstation.docs.apiary.io/api-description-document\";s:7:\"version\";s:2:\"1A\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:15:\"shipstation.com\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:11:\"shipstation\";s:4:\"type\";s:7:\"openapi\";}}"
host: ssapi.shipstation.com
basePath: /
paths: ~
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":70:{s:9:\"Add_Funds\";O:8:\"stdClass\":0:{}s:14:\"Add_FundsModel\";O:8:\"stdClass\":0:{}s:16:\"Add_Tag_to_Order\";O:8:\"stdClass\":0:{}s:20:\"Assign_User_to_Order\";O:8:\"stdClass\":0:{}s:29:\"Create/Update_Multiple_Orders\";O:8:\"stdClass\":0:{}s:19:\"Create/Update_Order\";O:8:\"stdClass\":0:{}s:22:\"Create_Label_for_Order\";O:8:\"stdClass\":0:{}s:21:\"Create_Shipment_Label\";O:8:\"stdClass\":0:{}s:16:\"Create_Warehouse\";O:8:\"stdClass\":0:{}s:8:\"Customer\";O:8:\"stdClass\":0:{}s:13:\"CustomerModel\";O:8:\"stdClass\":0:{}s:16:\"Deactivate_Store\";O:8:\"stdClass\":0:{}s:16:\"Get/Delete_Order\";O:8:\"stdClass\":0:{}s:21:\"Get/Delete_OrderModel\";O:8:\"stdClass\":0:{}s:16:\"Get/Update_Store\";O:8:\"stdClass\":0:{}s:21:\"Get/Update_StoreModel\";O:8:\"stdClass\":0:{}s:20:\"Get/Update_Warehouse\";O:8:\"stdClass\":0:{}s:25:\"Get/Update_WarehouseModel\";O:8:\"stdClass\":0:{}s:20:\"Get/Update_a_Product\";O:8:\"stdClass\":0:{}s:25:\"Get/Update_a_ProductModel\";O:8:\"stdClass\":0:{}s:11:\"Get_Carrier\";O:8:\"stdClass\":0:{}s:16:\"Get_CarrierModel\";O:8:\"stdClass\":0:{}s:16:\"Get_Delete_Order\";O:8:\"stdClass\":0:{}s:21:\"Get_Delete_OrderModel\";O:8:\"stdClass\":0:{}s:9:\"Get_Rates\";O:8:\"stdClass\":0:{}s:24:\"Get_Store_Refresh_Status\";O:8:\"stdClass\":0:{}s:16:\"Get_Update_Store\";O:8:\"stdClass\":0:{}s:21:\"Get_Update_StoreModel\";O:8:\"stdClass\":0:{}s:20:\"Get_Update_Warehouse\";O:8:\"stdClass\":0:{}s:25:\"Get_Update_WarehouseModel\";O:8:\"stdClass\":0:{}s:20:\"Get_Update_a_Product\";O:8:\"stdClass\":0:{}s:25:\"Get_Update_a_ProductModel\";O:8:\"stdClass\":0:{}s:16:\"Hold_Order_Until\";O:8:\"stdClass\":0:{}s:13:\"List_Carriers\";O:8:\"stdClass\":0:{}s:18:\"List_CarriersModel\";O:8:\"stdClass\":0:{}s:14:\"List_Customers\";O:8:\"stdClass\":0:{}s:19:\"List_CustomersModel\";O:8:\"stdClass\":0:{}s:17:\"List_Fulfillments\";O:8:\"stdClass\":0:{}s:22:\"List_FulfillmentsModel\";O:8:\"stdClass\":0:{}s:17:\"List_Marketplaces\";O:8:\"stdClass\":0:{}s:11:\"List_Orders\";O:8:\"stdClass\":0:{}s:16:\"List_OrdersModel\";O:8:\"stdClass\":0:{}s:18:\"List_Orders_by_Tag\";O:8:\"stdClass\":0:{}s:13:\"List_Packages\";O:8:\"stdClass\":0:{}s:18:\"List_PackagesModel\";O:8:\"stdClass\":0:{}s:13:\"List_Products\";O:8:\"stdClass\":0:{}s:18:\"List_ProductsModel\";O:8:\"stdClass\":0:{}s:13:\"List_Services\";O:8:\"stdClass\":0:{}s:18:\"List_ServicesModel\";O:8:\"stdClass\":0:{}s:14:\"List_Shipments\";O:8:\"stdClass\":0:{}s:19:\"List_ShipmentsModel\";O:8:\"stdClass\":0:{}s:11:\"List_Stores\";O:8:\"stdClass\":0:{}s:9:\"List_Tags\";O:8:\"stdClass\":0:{}s:14:\"List_TagsModel\";O:8:\"stdClass\":0:{}s:10:\"List_Users\";O:8:\"stdClass\":0:{}s:15:\"List_UsersModel\";O:8:\"stdClass\":0:{}s:15:\"List_Warehouses\";O:8:\"stdClass\":0:{}s:13:\"List_Webhooks\";O:8:\"stdClass\":0:{}s:24:\"Mark_an_Order_as_Shipped\";O:8:\"stdClass\":0:{}s:16:\"Reactivate_Store\";O:8:\"stdClass\":0:{}s:13:\"Refresh_Store\";O:8:\"stdClass\":0:{}s:16:\"Register_Account\";O:8:\"stdClass\":0:{}s:21:\"Register_AccountModel\";O:8:\"stdClass\":0:{}s:21:\"Remove_Tag_from_Order\";O:8:\"stdClass\":0:{}s:26:\"Restore_Order_from_On_Hold\";O:8:\"stdClass\":0:{}s:20:\"Subscribe_to_Webhook\";O:8:\"stdClass\":0:{}s:25:\"Subscribe_to_WebhookModel\";O:8:\"stdClass\":0:{}s:24:\"Unassign_User_from_Order\";O:8:\"stdClass\":0:{}s:22:\"Unsubscribe_to_Webhook\";O:8:\"stdClass\":0:{}s:10:\"Void_Label\";O:8:\"stdClass\":0:{}}"
...
