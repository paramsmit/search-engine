---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":7:{s:11:\"description\";s:61:\"Use MotaWord API
  to post and track your translation projects.\";s:5:\"title\";s:12:\"MotaWord API\";s:7:\"version\";s:11:\"alpha-0.1.0\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:43:\"https://www.motaword.com/developer/register\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:71:\"https://dentycj2qhk72.cloudfront.net/new/images/new_logo_horizontal.png\";}s:8:\"x-origin\";O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:32:\"https://api.motaword.com/swagger\";s:7:\"version\";s:3:\"2.0\";}s:14:\"x-providerName\";s:12:\"motaword.com\";}"
host: api.motaword.com
basePath: /
paths:
  /:
    get:
      description: The root endpoint will provide you a JSON Swagger definition.n
      operationId: getEndpoints
      responses:
        200:
          description: JSON representation of our Swagger API definition.
          schema:
            type: object
        default:
          description: Authentication error
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Available endpoints
      tags:
      - Static
  /formats:
    get:
      description: Get a list of supported formats for documents, style guides and
        extensions.n
      operationId: getFormats
      responses:
        200:
          description: A list of supported formats
          schema:
            items:
              $ref: '#/definitions/Formats'
            type: object
      security:
      - client_credentials: []
      summary: Get a list of supported formats
      tags:
      - Static
  /languages:
    get:
      description: Get a list of supported languages
      operationId: getLanguages
      responses:
        200:
          description: A list of supported languages
          schema:
            items:
              $ref: '#/definitions/Language'
            type: array
      security:
      - client_credentials: []
      summary: Get a list of supported languages
      tags:
      - Static
  /me:
    get:
      operationId: getAccount
      responses:
        200:
          description: Account summary
          schema:
            $ref: '#/definitions/Account'
        404:
          description: UserNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get your account information and summary.
      tags:
      - Account
  /projects:
    get:
      description: Get a list of your projects
      operationId: getProjects
      parameters:
      - default: 1
        in: query
        name: page
        type: integer
      - default: 10
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Project list
          schema:
            items:
              $ref: '#/definitions/ProjectList'
            type: object
      security:
      - client_credentials: []
      summary: Get a list of your projects
      tags:
      - Project
    post:
      description: Create a new project
      operationId: createProject
      parameters:
      - in: formData
        name: source_language
        required: true
        type: string
      - collectionFormat: multi
        in: formData
        items:
          type: string
        name: target_languages[]
        required: true
        type: array
      - description: Optional. If you provide a callback URL, we will send POST callbacks
          when the status of the current project is changed. Possible status changes
          are, 'translated', 'proofread', 'completed'.
        in: formData
        name: callback_url
        type: string
      - description: Optional. This is a consistent custom data parameter that will
          be given to you in the response across every request of this project model.
          Values should be provided like this, custom[my_key] = my_value.
        in: formData
        items:
          type: string
        name: custom
        type: array
      - description: Optional. You can add as many files as you want in documents[]
          parameter. Or you add your documents later in separate calls.
        in: formData
        name: documents[]
        type: file
      - description: Optional. You can add as many files as you want in styleguides[]
          parameter. Or you add your style guides later in separate calls.
        in: formData
        name: styleguides[]
        type: file
      - description: Optional. Only one glossary is supported at the moment.
        in: formData
        name: glossaries[]
        type: file
      produces:
      - application/json
      responses:
        200:
          description: Newly created project
          schema:
            items:
              $ref: '#/definitions/Project'
            type: object
        400:
          description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedDocumentFormat UnsupportedStyleGuideFormat UnsupportedGlossaryFormat
          schema:
            $ref: '#/definitions/Error'
        406:
          description: UnsupportedLanguage TooManyGlossaries ProjectAlreadyHasGlossary
          schema:
            $ref: '#/definitions/Error'
        500:
          description: ProjectInsertFailed
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a new quote
      tags:
      - Project
  /projects/{id}:
    get:
      description: Get single project
      operationId: getProject
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Project model
          schema:
            $ref: '#/definitions/Project'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get single project
      tags:
      - Project
    put:
      description: Update project language pairs
      operationId: updateProject
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: source_language
        required: true
        type: string
      - collectionFormat: multi
        in: formData
        items:
          type: string
        name: target_languages[]
        required: true
        type: array
      - description: Optional. If you provide a callback URL, we will send POST callbacks
          when the status of the current project is changed. Possible status changes
          are, 'translated', 'proofread', 'completed'.
        in: formData
        name: callback_url
        type: string
      - description: Optional. This is a consistent custom data parameter that will
          be given to you in the response across every request of this project model.
          Values should be provided like this, custom[my_key] = my_value. If you previously
          provided one, it will be replaced.
        in: formData
        items:
          type: string
        name: custom
        type: array
      produces:
      - application/json
      responses:
        200:
          description: Updated project
          schema:
            items:
              $ref: '#/definitions/Project'
            type: object
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
        406:
          description: UnsupportedLanguage
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Update project language pairs
      tags:
      - Project
  /projects/{id}/download/{language}:
    post:
      description: Download the latest translation package. If a language is provided,
        only the translation package of that language is returned. You must have given
        a /package call beforehand and wait until the packaging status is 'completed'.
      operationId: download
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Optional language code. If you need, you can download the translation
          of only a specific language.
        in: path
        name: language
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Translation package streamed. The streamed file is always a
            ZIP file, except when the API client is configured for Drupal and Wordpress.
          schema:
            type: string
        402:
          description: ProjectNotLaunchedYet
          schema:
            $ref: '#/definitions/Error'
        404:
          description: TranslationPackageNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Download the latest translation package.
      tags:
      - Project
  /projects/{id}/launch:
    post:
      operationId: launchProject
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Optional. Determines which method to use for payment. Options
          are 'corporate', 'client'.
        enum:
        - corporate
        - client
        in: formData
        name: payment_method
        type: string
      - description: Optional. According to your corporate account configuration,
          this may be required.
        in: formData
        name: payment_code
        type: string
      - description: Optional with corporate accounts. Not available for others.
        in: formData
        name: budget_code
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Project launched successfully
          schema:
            properties:
              status:
                default: started
                type: string
            type: object
        400:
          description: MissingPaymentCode MissingCorporateAccount MissingPaymentMethod
          schema:
            $ref: '#/definitions/Error'
        401:
          description: CorporateAccountNotAllowedForApiPayment ApiClientMissingPaymentInformation
          schema:
            $ref: '#/definitions/Error'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Launch your translation project
      tags:
      - Project
  /projects/{id}/package/{language}:
    post:
      description: Package the translation project, make it ready to be downloaded.
      operationId: package
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Optional language code. If you need, you can package the translation
          of only a specific language.
        in: path
        name: language
        required: true
        type: string
      - default: 0
        description: If you want to package and download the translation synchronously,
          mark this parameter as '0'. It will package the translation and then return
          the packaged file in the response, identical to /download call after an
          asynchronous /package call.
        in: query
        name: async
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Packaging status and tracking code. With the package key, you
            can track the progress of translation packaging.
          schema:
            $ref: '#/definitions/Package'
        201:
          description: Packaged translation streamed. Status code is actually 200,
            not 201.
          schema:
            type: string
        402:
          description: ProjectNotLaunchedYet
          schema:
            $ref: '#/definitions/Error'
        404:
          description: TranslationPackageNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Package the project to be downloaded.
      tags:
      - Project
  /projects/{id}/package/check:
    get:
      description: This request will tell you the current progress of the translation
        packaging. You will use the 'key' provided by the /package call.
      operationId: trackPackage
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: This is the package tracking key provided in the response of
          a /package call.
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Current status of packaging process.
          schema:
            $ref: '#/definitions/PackageStatus'
        402:
          description: ProjectNotLaunchedYet
          schema:
            $ref: '#/definitions/Error'
        404:
          description: PackagingStatusMissing
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Track the status of translation packaging.
      tags:
      - Project
  /projects/{id}/progress:
    get:
      description: Get the progress of an already launched project.
      operationId: getProgress
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Progress information
          schema:
            $ref: '#/definitions/Progress'
        402:
          description: ProjectNotLaunchedYet
          schema:
            $ref: '#/definitions/Error'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get project progress
      tags:
      - Project
  /projects/{projectId}/activities:
    get:
      description: Get a list of realtime activities on the project, such as translation
        suggestion and translation approval.
      operationId: getActivities
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        type: integer
      - default: 10
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: A list of activity models
          schema:
            $ref: '#/definitions/ActivityList'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a list of realtime activities.
      tags:
      - Activity
  /projects/{projectId}/activities/{activityId}:
    get:
      description: Get a single realtime activity.
      operationId: getActivity
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Activity ID
        format: int64
        in: path
        name: activityId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Activity model
          schema:
            $ref: '#/definitions/Activity'
        404:
          description: ProjectActivityNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a single realtime activity.
      tags:
      - Activity
    post:
      description: Submit a comment to an activity.
      operationId: submitComment
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Activity ID
        format: int64
        in: path
        name: activityId
        required: true
        type: integer
      - description: Comment text.
        in: formData
        name: comment
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Comment model
          schema:
            $ref: '#/definitions/Comment'
        404:
          description: ProjectActivityNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Submit a comment to an activity.
      tags:
      - Activity
  /projects/{projectId}/activities/{activityId}/comments:
    get:
      description: Get a list of comments belonging to this activity.
      operationId: getActivityComments
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Activity ID
        format: int64
        in: path
        name: activityId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: A list of Comment models
          schema:
            $ref: '#/definitions/CommentList'
        404:
          description: ProjectActivityNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a list of comments belonging to this activity.
      tags:
      - Activity
  /projects/{projectId}/comments:
    get:
      description: Get a list of activity comments throughout the whole project.
      operationId: getComments
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        type: integer
      - default: 10
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: A list of Comment models
          schema:
            $ref: '#/definitions/CommentList'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a list of activity comments throughout the whole project.
      tags:
      - Activity
  /projects/{projectId}/documents:
    get:
      description: Get a list of documents
      operationId: getDocuments
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: A list of document models
          schema:
            $ref: '#/definitions/DocumentList'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a list of documents
      tags:
      - Document
    post:
      description: Upload a new document
      operationId: createDocument
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: You can add as many files as you want in documents[] parameter.
        in: formData
        name: documents[]
        required: true
        type: file
      produces:
      - application/json
      responses:
        200:
          description: A list of successfully added new documents.
          schema:
            $ref: '#/definitions/Document'
        400:
          description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
          schema:
            $ref: '#/definitions/Error'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedDocumentFormat
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Upload a new document
      tags:
      - Document
  /projects/{projectId}/documents/{documentId}:
    delete:
      description: Delete the document
      operationId: deleteDocument
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Document ID
        format: int64
        in: path
        name: documentId
        required: true
        type: integer
      responses:
        200:
          description: Document deleted successfully
          schema:
            properties:
              status:
                default: success
                type: string
            type: object
        404:
          description: DocumentNotFound
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Delete the document
      tags:
      - Document
    get:
      description: Get single document
      operationId: getDocument
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Document ID
        format: int64
        in: path
        name: documentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Document model
          schema:
            $ref: '#/definitions/Document'
        404:
          description: DocumentNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get single document
      tags:
      - Document
    put:
      description: Update the document. File name and contents will replaced with
        the new one.
      operationId: updateDocument
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Document ID
        format: int64
        in: path
        name: documentId
        required: true
        type: integer
      - description: Single file data. The name is plural to provide a consistent
          naming convention.
        in: formData
        name: documents
        required: true
        type: file
      produces:
      - application/json
      responses:
        200:
          description: Updated document model
          schema:
            $ref: '#/definitions/Document'
        400:
          description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
          schema:
            $ref: '#/definitions/Error'
        404:
          description: DocumentNotFound
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedDocumentFormat
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Update the document.
      tags:
      - Document
  /projects/{projectId}/documents/{documentId}/download:
    get:
      description: Download a document
      operationId: downloadDocument
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Document ID
        format: int64
        in: path
        name: documentId
        required: true
        type: integer
      responses:
        200:
          description: Document streamed
          schema:
            type: string
        404:
          description: DocumentNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Download a document
      tags:
      - Document
  /projects/{projectId}/glossaries:
    get:
      description: Get a list of glossaries
      operationId: getGlossaries
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: A list of glossary models
          schema:
            $ref: '#/definitions/GlossaryList'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a list of glossaries
      tags:
      - Glossary
    post:
      description: Upload a new glossary
      operationId: createGlossary
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: You can only add one glossary, even though the name suggests
          multiple glossaries. This may be updated in the future to support multiple
          glossaries.
        in: formData
        name: glossaries
        required: true
        type: file
      produces:
      - application/json
      responses:
        200:
          description: Newly created glossary model.
          schema:
            $ref: '#/definitions/Glossary'
        400:
          description: FileTooLarge
          schema:
            $ref: '#/definitions/Error'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedGlossaryFormat
          schema:
            $ref: '#/definitions/Error'
        406:
          description: ProjectAlreadyHasGlossary
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Upload a new glossary
      tags:
      - Glossary
  /projects/{projectId}/glossaries/{glossaryId}:
    delete:
      description: Delete the glossary
      operationId: deleteGlossary
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Glossary ID
        format: int64
        in: path
        name: glossaryId
        required: true
        type: integer
      responses:
        200:
          description: Glossary deleted successfully
          schema:
            properties:
              status:
                default: success
                type: string
            type: object
        404:
          description: GlossaryNotFound
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Delete the glossary
      tags:
      - Glossary
    get:
      description: Get single glossary
      operationId: getGlossary
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Glossary ID
        format: int64
        in: path
        name: glossaryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Glossary model
          schema:
            $ref: '#/definitions/Glossary'
        404:
          description: GlossaryNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get single glossary
      tags:
      - Glossary
    put:
      description: Update the glossary. File name and contents will replaced with
        the new one.
      operationId: updateGlossary
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Glossary ID
        format: int64
        in: path
        name: glossaryId
        required: true
        type: integer
      - description: Single file data. The name is plural to provide a consistent
          naming convention.
        in: formData
        name: glossaries
        required: true
        type: file
      produces:
      - application/json
      responses:
        200:
          description: Updated glossary model
          schema:
            $ref: '#/definitions/Glossary'
        400:
          description: FileTooLarge
          schema:
            $ref: '#/definitions/Error'
        404:
          description: GlossaryNotFound
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedGlossaryFormat
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Update the glossary.
      tags:
      - Glossary
  /projects/{projectId}/glossaries/{glossaryId}/download:
    get:
      description: Download a glossary
      operationId: downloadGlossary
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Glossary ID
        format: int64
        in: path
        name: glossaryId
        required: true
        type: integer
      responses:
        200:
          description: Glossary streamed
          schema:
            type: string
        404:
          description: GlossaryNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Download a glossary
      tags:
      - Glossary
  /projects/{projectId}/styleguides:
    get:
      description: Get a list of style guides
      operationId: getStyleGuides
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: A list of style guide models
          schema:
            $ref: '#/definitions/StyleGuideList'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get a list of style guides
      tags:
      - Style Guide
    post:
      description: Upload a new style guide
      operationId: createStyleGuide
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: You can add as many files as you want in styleguides[] parameter.
        in: formData
        name: styleguides[]
        required: true
        type: file
      produces:
      - application/json
      responses:
        200:
          description: Newly created style guide model or a list of new style guide
            models
          schema:
            $ref: '#/definitions/StyleGuide'
        400:
          description: FileTooLarge
          schema:
            $ref: '#/definitions/Error'
        404:
          description: ProjectNotFound
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedStyleGuideFormat
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Upload a new style guide
      tags:
      - Style Guide
  /projects/{projectId}/styleguides/{styleGuideId}:
    delete:
      description: Delete the style guide
      operationId: deleteStyleGuide
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Style Guide ID
        format: int64
        in: path
        name: styleGuideId
        required: true
        type: integer
      responses:
        200:
          description: Style guide deleted successfully
          schema:
            properties:
              status:
                default: success
                type: string
            type: object
        404:
          description: StyleGuideNotFound
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Delete the style guide
      tags:
      - Style Guide
    get:
      description: Get single style guide
      operationId: getStyleGuide
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Style Guide ID
        format: int64
        in: path
        name: styleGuideId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        200:
          description: Style guide model
          schema:
            $ref: '#/definitions/StyleGuide'
        404:
          description: StyleGuideNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Get single style guide
      tags:
      - Style Guide
    put:
      description: Update the style guide. File name and contents will replaced with
        the new one.
      operationId: updteStyleGuide
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Style guide ID
        format: int64
        in: path
        name: styleGuideId
        required: true
        type: integer
      - description: Single file data. The name is plural to provide a consistent
          naming convention.
        in: formData
        name: styleguides
        required: true
        type: file
      produces:
      - application/json
      responses:
        200:
          description: Updated style guide model
          schema:
            $ref: '#/definitions/StyleGuide'
        400:
          description: FileTooLarge
          schema:
            $ref: '#/definitions/Error'
        404:
          description: StyleGuideNotFound
          schema:
            $ref: '#/definitions/Error'
        405:
          description: UnsupportedStyleGuideFormat
          schema:
            $ref: '#/definitions/Error'
        409:
          description: ProjectAlreadyStarted
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Update the style guide.
      tags:
      - Style Guide
  /projects/{projectId}/styleguides/{styleGuideId}/download:
    get:
      description: Download a style guide
      operationId: downloadStyleGuide
      parameters:
      - description: Project ID
        format: int64
        in: path
        name: projectId
        required: true
        type: integer
      - description: Style Guide ID
        format: int64
        in: path
        name: styleGuideId
        required: true
        type: integer
      responses:
        200:
          description: Style guide streamed
          schema:
            type: string
        404:
          description: StyleGuideNotFound
          schema:
            $ref: '#/definitions/Error'
      security:
      - client_credentials: []
      summary: Download a style guide
      tags:
      - Style Guide
  /token:
    post:
      description: MotaWord API is using OAuth2 procedures when authenticating or
        authorizing your API call. Currently, we only allow Client Credential type
        flow.n
      operationId: getAccessToken
      parameters:
      - description: OAuth2 grant type. Currently only 'client_credentials' available.
        in: formData
        name: grant_type
        required: true
        type: string
      - description: HTTP Basic Authorization header.
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        200:
          description: Authentication response
          schema:
            $ref: '#/definitions/Token'
        default:
          description: Authentication error
          schema:
            $ref: '#/definitions/Error'
      summary: Retrieve an access token to interact with the API.
      tags:
      - Auth
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":30:{s:7:\"Account\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"billing\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"city\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"street\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"zip\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:10:\"created_at\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"projects\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"self\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"stats\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"started_projects\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:14:\"total_projects\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}}s:8:\"Activity\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":7:{s:11:\"activity_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ActivityLinks\";}s:11:\"source_text\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"Source
  text\";s:4:\"type\";s:6:\"string\";}s:11:\"target_text\";O:8:\"stdClass\":2:{s:11:\"description\";s:82:\"Target
  text of the activity, which is actually the translation of the source text.\";s:4:\"type\";s:6:\"string\";}s:10:\"translator\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"Unique
  identifier of the translator/proofreader of this activity.\";s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:76:\"Currently
  there are two available activity types; 'translated', 'proofread'.\";s:4:\"enum\";a:2:{i:0;s:10:\"translated\";i:1;s:9:\"proofread\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"ActivityLinks\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LinksMeta\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"comments\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"project\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:12:\"ActivityList\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"activities\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Activity\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/PagingMeta\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Comment\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"comment\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Comment
  text.\";s:4:\"type\";s:6:\"string\";}s:12:\"commented_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/CommentLinks\";}}s:4:\"type\";s:6:\"object\";}s:12:\"CommentLinks\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LinksMeta\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"activity\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"Link
  to the activity to which this comment was submitted.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"project\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:11:\"CommentList\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"activities\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Comment\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/PagingMeta\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Document\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DocumentLinks\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"uploaded_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:10:\"word_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:13:\"DocumentLinks\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LinksMeta\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"download\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"project\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:12:\"DocumentList\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"documents\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Document\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/PagingMeta\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Error\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"help\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"http_code\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Formats\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"documents\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"extensions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"mimes\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"glossaries\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"extensions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:11:\"styleguides\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"extensions\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Glossary\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DocumentLinks\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"uploaded_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:12:\"GlossaryList\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"glossaries\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Glossary\";}s:4:\"type\";s:5:\"array\";}s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/PagingMeta\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Language\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:16:\"LanguageProgress\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:12:\"languageCode\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProgressSub\";}}s:4:\"type\";s:6:\"object\";}s:9:\"LinksMeta\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"self\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Package\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":2:{s:11:\"description\";s:146:\"This
  is the unique package tracking key. You can use this key to track the current progress
  of the translation packaging with /package/check call.\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:181:\"The
  status of translation packaging. Possible values are 'started', 'packaging', 'completed'.
  When completed, you can make a /download call to download the last translation package.\";s:4:\"enum\";a:3:{i:0;s:7:\"started\";i:1;s:9:\"packaging\";i:2;s:9:\"completed\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"PackageStatus\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:181:\"The
  status of translation packaging. Possible values are 'started', 'packaging', 'completed'.
  When completed, you can make a /download call to download the last translation package.\";s:4:\"enum\";a:3:{i:0;s:7:\"started\";i:1;s:9:\"packaging\";i:2;s:9:\"completed\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"PagingLinksMeta\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LinksMeta\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"next\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"previous\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:10:\"PagingMeta\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"paging\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/PagingLinksMeta\";}s:4:\"page\";O:8:\"stdClass\":2:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";}s:8:\"per_page\";O:8:\"stdClass\":2:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";}s:11:\"total_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:8:\"Progress\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProgressSub\";}}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"languages\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/LanguageProgress\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ProgressLink\";}}s:4:\"type\";s:6:\"object\";}s:12:\"ProgressLink\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LinksMeta\";}}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"project\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ProgressSub\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"proofreading\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"total\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"translation\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Project\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":13:{s:12:\"callback_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Callback
  URL to notify when project status changed.\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:6:\"custom\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Custom
  data provided while creating a new project.\";s:4:\"type\";s:6:\"object\";}s:11:\"delivery_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:6:\"errors\";O:8:\"stdClass\":3:{s:11:\"description\";s:124:\"A
  list of errors. Visible when creating a project and uploading your documents at
  the same time, in case of multiple errors.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Error\";}s:4:\"type\";s:5:\"array\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ProjectLinks\";}s:5:\"price\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"amount\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"float\";s:4:\"type\";s:6:\"number\";}s:8:\"currency\";O:8:\"stdClass\":2:{s:7:\"default\";s:3:\"usd\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"source_language\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:7:\"pending\";i:1;s:7:\"started\";i:2;s:9:\"completed\";}s:4:\"type\";s:6:\"string\";}s:16:\"target_languages\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:11:\"valid_until\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Available
  only if status is `pending`\";s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}s:10:\"word_count\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:12:\"ProjectLinks\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LinksMeta\";}}s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"documents\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:10:\"glossaries\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"styleguides\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ProjectList\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/PagingMeta\";}s:8:\"projects\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Project\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"StyleGuide\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"links\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DocumentLinks\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"uploaded_at\";O:8:\"stdClass\":2:{s:6:\"format\";s:4:\"date\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:14:\"StyleGuideList\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"meta\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/PagingMeta\";}s:11:\"styleguides\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StyleGuide\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Token\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"access_token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"expires_in\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"scope\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"token_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
