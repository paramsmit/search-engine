---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":12:{s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";s:9:\"x-twitter\";s:7:\"youtube\";}s:11:\"description\";s:38:\"Retrieves
  your YouTube Analytics data.\";s:5:\"title\";s:17:\"YouTube Analytics\";s:7:\"version\";s:2:\"v1\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:21:\"x-apisguru-categories\";a:2:{i:0;s:9:\"analytics\";i:1;s:5:\"media\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:126:\"https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_(2013-2017).svg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.2\";}s:6:\"format\";s:6:\"google\";s:3:\"url\";s:69:\"https://www.googleapis.com/discovery/v1/apis/youtubeAnalytics/v1/rest\";s:7:\"version\";s:2:\"v1\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:16:\"youtubeAnalytics\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:23:\"google_youtubeanalytics\";s:4:\"type\";s:7:\"openapi\";}}"
host: www.googleapis.com
basePath: /youtube/analytics/v1
paths:
  /groupItems:
    delete:
      description: Removes an item from a group.
      operationId: groupItems.delete
      parameters:
      - description: The id parameter specifies the YouTube group item ID for the
          group that is being deleted.
        in: query
        name: id
        required: true
        type: string
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      responses:
        200:
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      tags:
      - groupItems
    get:
      description: Returns a collection of group items that match the API request
        parameters.
      operationId: groupItems.list
      parameters:
      - description: The id parameter specifies the unique ID of the group for which
          you want to retrieve group items.
        in: query
        name: groupId
        required: true
        type: string
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/GroupItemListResponse'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtube.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - groupItems
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
    post:
      description: Creates a group item.
      operationId: groupItems.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/GroupItem'
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/GroupItem'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      tags:
      - groupItems
  /groups:
    delete:
      description: Deletes a group.
      operationId: groups.delete
      parameters:
      - description: The id parameter specifies the YouTube group ID for the group
          that is being deleted.
        in: query
        name: id
        required: true
        type: string
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      responses:
        200:
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      tags:
      - groups
    get:
      description: Returns a collection of groups that match the API request parameters.
        For example, you can retrieve all groups that the authenticated user owns,
        or you can retrieve one or more groups by their unique IDs.
      operationId: groups.list
      parameters:
      - description: The id parameter specifies a comma-separated list of the YouTube
          group ID(s) for the resource(s) that are being retrieved. In a group resource,
          the id property specifies the group's YouTube group ID.
        in: query
        name: id
        type: string
      - description: Set this parameter's value to true to instruct the API to only
          return groups owned by the authenticated user.
        in: query
        name: mine
        type: boolean
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      - description: The pageToken parameter identifies a specific page in the result
          set that should be returned. In an API response, the nextPageToken property
          identifies the next page that can be retrieved.
        in: query
        name: pageToken
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/GroupListResponse'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtube.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - groups
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
    post:
      description: Creates a group.
      operationId: groups.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Group'
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Group'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      tags:
      - groups
    put:
      description: Modifies a group. For example, you could change a group's title.
      operationId: groups.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Group'
      - description: 'Note: This parameter is intended exclusively for YouTube content
          partners.nnThe onBehalfOfContentOwner parameter indicates that the request''s
          authorization credentials identify a YouTube CMS user who is acting on behalf
          of the content owner specified in the parameter value. This parameter is
          intended for YouTube content partners that own and manage many different
          YouTube channels. It allows content owners to authenticate once and get
          access to all their video and channel data, without having to provide authentication
          credentials for each individual channel. The CMS account that the user authenticates
          with must be linked to the specified YouTube content owner.'
        in: query
        name: onBehalfOfContentOwner
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Group'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtubepartner
      tags:
      - groups
  /reports:
    get:
      description: Retrieve your YouTube Analytics reports.
      operationId: reports.query
      parameters:
      - description: The currency to which financial metrics should be converted.
          The default is US Dollar (USD). If the result contains no financial metrics,
          this flag will be ignored. Responds with an error if the specified currency
          is not recognized.
        in: query
        name: currency
        type: string
      - description: A comma-separated list of YouTube Analytics dimensions, such
          as views or ageGroup,gender. See the Available Reports document for a list
          of the reports that you can retrieve and the dimensions used for those reports.
          Also see the Dimensions document for definitions of those dimensions.
        in: query
        name: dimensions
        type: string
      - description: The end date for fetching YouTube Analytics data. The value should
          be in YYYY-MM-DD format.
        in: query
        name: end-date
        required: true
        type: string
      - description: A list of filters that should be applied when retrieving YouTube
          Analytics data. The Available Reports document identifies the dimensions
          that can be used to filter each report, and the Dimensions document defines
          those dimensions. If a request uses multiple filters, join them together
          with a semicolon (;), and the returned result table will satisfy both filters.
          For example, a filters parameter value of video==dMH0bHeiRNg;country==IT
          restricts the result set to include data for the given video in Italy.
        in: query
        name: filters
        type: string
      - description: Identifies the YouTube channel or content owner for which you
          are retrieving YouTube Analytics data.n- To request data for a YouTube user,
          set the ids parameter value to channel==CHANNEL_ID, where CHANNEL_ID specifies
          the unique YouTube channel ID.n- To request data for a YouTube CMS content
          owner, set the ids parameter value to contentOwner==OWNER_NAME, where OWNER_NAME
          is the CMS name of the content owner.
        in: query
        name: ids
        required: true
        type: string
      - description: If set to true historical data (i.e. channel data from before
          the linking of the channel to the content owner) will be retrieved.
        in: query
        name: include-historical-channel-data
        type: boolean
      - description: The maximum number of rows to include in the response.
        in: query
        minimum: 1
        name: max-results
        type: integer
      - description: A comma-separated list of YouTube Analytics metrics, such as
          views or likes,dislikes. See the Available Reports document for a list of
          the reports that you can retrieve and the metrics available in each report,
          and see the Metrics document for definitions of those metrics.
        in: query
        name: metrics
        required: true
        type: string
      - description: A comma-separated list of dimensions or metrics that determine
          the sort order for YouTube Analytics data. By default the sort order is
          ascending. The '-' prefix causes descending sort order.
        in: query
        name: sort
        type: string
      - description: The start date for fetching YouTube Analytics data. The value
          should be in YYYY-MM-DD format.
        in: query
        name: start-date
        required: true
        type: string
      - description: An index of the first entity to retrieve. Use this parameter
          as a pagination mechanism along with the max-results parameter (one-based,
          inclusive).
        in: query
        minimum: 1
        name: start-index
        type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ResultTable'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/youtube
      - Oauth2:
        - https://www.googleapis.com/auth/youtube.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - reports
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":5:{s:5:\"Group\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"contentDetails\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"itemCount\";O:8:\"stdClass\":2:{s:6:\"format\";s:6:\"uint64\";s:4:\"type\";s:6:\"string\";}s:8:\"itemType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:7:\"default\";s:13:\"youtube#group\";s:4:\"type\";s:6:\"string\";}s:7:\"snippet\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"publishedAt\";O:8:\"stdClass\":2:{s:6:\"format\";s:9:\"date-time\";s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:9:\"GroupItem\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"groupId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:7:\"default\";s:17:\"youtube#groupItem\";s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:21:\"GroupItemListResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:104:\"A
  paginated list of grouList resources returned in response to a youtubeAnalytics.groupApi.list
  request.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/GroupItem\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:7:\"default\";s:29:\"youtube#groupItemListResponse\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:17:\"GroupListResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:104:\"A
  paginated list of grouList resources returned in response to a youtubeAnalytics.groupApi.list
  request.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Group\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:7:\"default\";s:25:\"youtube#groupListResponse\";s:4:\"type\";s:6:\"string\";}s:13:\"nextPageToken\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"ResultTable\";O:8:\"stdClass\":3:{s:11:\"description\";s:268:\"Contains
  a single result table. The table is returned as an array of rows that contain the
  values for the cells of the table. Depending on the metric or dimension, the cell
  can contain a string (video ID, country code) or a number (number of views or number
  of likes).\";s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"columnHeaders\";O:8:\"stdClass\":3:{s:11:\"description\";s:638:\"This
  value specifies information about the data returned in the rows fields. Each item
  in the columnHeaders list identifies a field returned in the rows value, which contains
  a list of comma-delimited data. The columnHeaders list will begin with the dimensions
  specified in the API request, which will be followed by the metrics specified in
  the API request. The order of both dimensions and metrics will match the ordering
  in the API request. For example, if the API request contains the parameters dimensions=ageGroup,gender&metrics=viewerPercentage,
  the API response will return columns in this order: ageGroup,gender,viewerPercentage.\";s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"columnType\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  type of the column (DIMENSION or METRIC).\";s:4:\"type\";s:6:\"string\";}s:8:\"dataType\";O:8:\"stdClass\":2:{s:11:\"description\";s:66:\"The
  type of the data in the column (STRING, INTEGER, FLOAT, etc.).\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  name of the dimension or metric.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:28:\"youtubeAnalytics#resultTable\";s:11:\"description\";s:151:\"This
  value specifies the type of data included in the API response. For the query method,
  the kind property value will be youtubeAnalytics#resultTable.\";s:4:\"type\";s:6:\"string\";}s:4:\"rows\";O:8:\"stdClass\":3:{s:11:\"description\";s:464:\"The
  list contains all rows of the result table. Each item in the list is an array that
  contains comma-delimited data corresponding to a single row of data. The order of
  the comma-delimited data fields will match the order of the columns listed in the
  columnHeaders field. If no data is available for the given query, the rows element
  will be omitted from the response. The response for a query with the day dimension
  will not contain rows for the most recent days.\";s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":0:{}s:4:\"type\";s:5:\"array\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}}"
...
