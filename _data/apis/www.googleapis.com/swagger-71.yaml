---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":14:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";}s:11:\"description\";s:55:\"Accesses
  a Google App Engine Pull Task Queue over REST.\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:32:\"Creative
  Commons Attribution 3.0\";s:3:\"url\";s:43:\"http://creativecommons.org/licenses/by/3.0/\";}s:14:\"termsOfService\";s:36:\"https://developers.google.com/terms/\";s:5:\"title\";s:9:\"TaskQueue\";s:7:\"version\";s:7:\"v1beta2\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:21:\"x-apisguru-categories\";a:1:{i:0;s:7:\"backend\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:116:\"https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.0\";}s:6:\"format\";s:6:\"google\";s:3:\"url\";s:67:\"https://www.googleapis.com/discovery/v1/apis/taskqueue/v1beta2/rest\";s:7:\"version\";s:2:\"v1\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:9:\"taskqueue\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:16:\"google_taskqueue\";s:4:\"type\";s:7:\"openapi\";}}"
host: www.googleapis.com
basePath: /taskqueue/v1beta2/projects
paths:
  /{project}/taskqueues/{taskqueue}:
    get:
      description: Get detailed information about a TaskQueue.
      operationId: taskqueues.get
      parameters:
      - description: Whether to get stats. Optional.
        in: query
        name: getStats
        type: boolean
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - description: The id of the taskqueue to get the properties of.
        in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/TaskQueue'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - taskqueues
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
  /{project}/taskqueues/{taskqueue}/tasks:
    get:
      description: List Tasks in a TaskQueue
      operationId: tasks.list
      parameters:
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - description: The id of the taskqueue to list tasks from.
        in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Tasks2'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
    post:
      description: Insert a new task in a TaskQueue
      operationId: tasks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Task'
      - description: The project under which the queue lies
        in: path
        name: project
        required: true
        type: string
      - description: The taskqueue to insert the task into
        in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
  /{project}/taskqueues/{taskqueue}/tasks/lease:
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
    post:
      description: Lease 1 or more tasks from a TaskQueue.
      operationId: tasks.lease
      parameters:
      - description: When true, all returned tasks will have the same tag
        in: query
        name: groupByTag
        type: boolean
      - description: The lease in seconds.
        in: query
        name: leaseSecs
        required: true
        type: integer
      - description: The number of tasks to lease.
        in: query
        name: numTasks
        required: true
        type: integer
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - description: The tag allowed for tasks in the response. Must only be specified
          if group_by_tag is true. If group_by_tag is true and tag is not specified
          the tag will be that of the oldest task by eta, i.e. the first available
          tag
        in: query
        name: tag
        type: string
      - description: The taskqueue to lease a task from.
        in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Tasks'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
  /{project}/taskqueues/{taskqueue}/tasks/{task}:
    delete:
      description: Delete a task from a TaskQueue.
      operationId: tasks.delete
      parameters:
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - description: The id of the task to delete.
        in: path
        name: task
        required: true
        type: string
      - description: The taskqueue to delete a task from.
        in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
    get:
      description: Get a particular task from a TaskQueue.
      operationId: tasks.get
      parameters:
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - description: The task to get properties of.
        in: path
        name: task
        required: true
        type: string
      - description: The taskqueue in which the task belongs.
        in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
    patch:
      description: Update tasks that are leased out of a TaskQueue. This method supports
        patch semantics.
      operationId: tasks.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Task'
      - description: The new lease in seconds.
        in: query
        name: newLeaseSeconds
        required: true
        type: integer
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - in: path
        name: task
        required: true
        type: string
      - in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
    post:
      description: Update tasks that are leased out of a TaskQueue.
      operationId: tasks.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Task'
      - description: The new lease in seconds.
        in: query
        name: newLeaseSeconds
        required: true
        type: integer
      - description: The project under which the queue lies.
        in: path
        name: project
        required: true
        type: string
      - in: path
        name: task
        required: true
        type: string
      - in: path
        name: taskqueue
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue
      - Oauth2:
        - https://www.googleapis.com/auth/taskqueue.consumer
        Oauth2c:
        - https://www.googleapis.com/auth/taskqueue.consumer
      tags:
      - tasks
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":4:{s:4:\"Task\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:16:\"enqueueTimestamp\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"Time
  (in seconds since the epoch) at which the task was enqueued.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Name
  of the task.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:15:\"taskqueues#task\";s:11:\"description\";s:54:\"The
  kind of object returned, in this case set to task.\";s:4:\"type\";s:6:\"string\";}s:14:\"leaseTimestamp\";O:8:\"stdClass\":3:{s:11:\"description\";s:137:\"Time
  (in seconds since the epoch) at which the task lease will expire. This value is
  0 if the task isnt currently leased out to a worker.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:13:\"payloadBase64\";O:8:\"stdClass\":2:{s:11:\"description\";s:96:\"A
  bag of bytes which is the task payload. The payload on the JSON side is always Base64
  encoded.\";s:4:\"type\";s:6:\"string\";}s:9:\"queueName\";O:8:\"stdClass\":2:{s:11:\"description\";s:38:\"Name
  of the queue that the task is in.\";s:4:\"type\";s:6:\"string\";}s:11:\"retry_count\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  number of leases applied to this task.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:3:\"tag\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"Tag
  for the task, could be used later to lease tasks grouped by a specific tag.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"TaskQueue\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:3:\"acl\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"ACLs
  that are applicable to this TaskQueue object.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"adminEmails\";O:8:\"stdClass\":3:{s:11:\"description\";s:125:\"Email
  addresses of users who are \"admins\" of the TaskQueue. This means they can control
  the queue, eg set ACLs for the queue.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:14:\"consumerEmails\";O:8:\"stdClass\":3:{s:11:\"description\";s:129:\"Email
  addresses of users who can \"consume\" tasks from the TaskQueue. This means they
  can Dequeue and Delete tasks from the queue.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:14:\"producerEmails\";O:8:\"stdClass\":3:{s:11:\"description\";s:117:\"Email
  addresses of users who can \"produce\" tasks into the TaskQueue. This means they
  can Insert tasks into the queue.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"Name
  of the taskqueue.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:20:\"taskqueues#taskqueue\";s:11:\"description\";s:57:\"The
  kind of REST object returned, in this case taskqueue.\";s:4:\"type\";s:6:\"string\";}s:9:\"maxLeases\";O:8:\"stdClass\":3:{s:11:\"description\";s:139:\"The
  number of times we should lease out tasks before giving up on them. If unset we
  lease them out forever until a worker deletes the task.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"stats\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"Statistics
  for the TaskQueue object in question.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:14:\"leasedLastHour\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Number
  of tasks leased in the last hour.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"leasedLastMinute\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"Number
  of tasks leased in the last minute.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:10:\"oldestTask\";O:8:\"stdClass\":3:{s:11:\"description\";s:73:\"The
  timestamp (in seconds since the epoch) of the oldest unfinished task.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:10:\"totalTasks\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Number
  of tasks in the queue.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Tasks\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"The
  actual list of tasks returned as a result of the lease operation.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Task\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:15:\"taskqueue#tasks\";s:11:\"description\";s:45:\"The
  kind of object returned, a list of tasks.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Tasks2\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"The
  actual list of tasks currently active in the TaskQueue.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Task\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:16:\"taskqueues#tasks\";s:11:\"description\";s:45:\"The
  kind of object returned, a list of tasks.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}"
...
