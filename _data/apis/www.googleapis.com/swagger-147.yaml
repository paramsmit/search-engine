---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":10:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";}s:11:\"description\";s:77:\"Stores
  and accesses user data in the fitness store from apps on any platform.\";s:5:\"title\";s:7:\"Fitness\";s:7:\"version\";s:2:\"v1\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:116:\"https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.2\";}s:6:\"format\";s:6:\"google\";s:3:\"url\";s:60:\"https://www.googleapis.com/discovery/v1/apis/fitness/v1/rest\";s:7:\"version\";s:2:\"v1\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:7:\"fitness\";}"
host: www.googleapis.com
basePath: /fitness/v1/users
paths: ~
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":22:{s:15:\"AggregateBucket\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"activity\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"Available
  for Bucket.Type.ACTIVITY_TYPE, Bucket.Type.ACTIVITY_SEGMENT\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"dataset\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"There
  will be one dataset per AggregateBy in the request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Dataset\";}s:4:\"type\";s:5:\"array\";}s:13:\"endTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:77:\"The
  end time for the aggregated data, in milliseconds since epoch, inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:7:\"session\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Session\";s:11:\"description\";s:33:\"Available
  for Bucket.Type.SESSION\";}s:15:\"startTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"The
  start time for the aggregated data, in milliseconds since epoch, inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:83:\"The
  type of a bucket signifies how the data aggregation is performed in the bucket.\";s:4:\"enum\";a:5:{i:0;s:15:\"activitySegment\";i:1;s:12:\"activityType\";i:2;s:7:\"session\";i:3;s:4:\"time\";i:4;s:7:\"unknown\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"AggregateBy\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"The
  specification of which data to aggregate.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"dataSourceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:210:\"A
  data source ID to aggregate. Mutually exclusive of dataTypeName. Only data from
  the specified data source ID will be included in the aggregation. The dataset in
  the response will have the same data source ID.\";s:4:\"type\";s:6:\"string\";}s:12:\"dataTypeName\";O:8:\"stdClass\":2:{s:11:\"description\";s:274:\"The
  data type to aggregate. All data sources providing this data type will contribute
  data to the aggregation. The response will contain a single dataset for this data
  type name. The dataset will have a data source ID of derived:com.google.:com.google.android.gms:aggregated\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:16:\"AggregateRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:11:\"Next
  id: 10\";s:10:\"properties\";O:8:\"stdClass\":8:{s:11:\"aggregateBy\";O:8:\"stdClass\":3:{s:11:\"description\";s:242:\"The
  specification of data to be aggregated. At least one aggregateBy spec must be provided.
  All data that is specified will be aggregated using the same bucketing criteria.
  There will be one dataset in the response for every aggregateBy spec.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/AggregateBy\";}s:4:\"type\";s:5:\"array\";}s:23:\"bucketByActivitySegment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/BucketByActivity\";s:11:\"description\";s:256:\"Specifies
  that data be aggregated each activity segment recored for a user. Similar to bucketByActivitySegment,
  but bucketing is done for each activity segment rather than all segments of the
  same type. Mutually exclusive of other bucketing specifications.\";}s:20:\"bucketByActivityType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/BucketByActivity\";s:11:\"description\";s:372:\"Specifies
  that data be aggregated by the type of activity being performed when the data was
  recorded. All data that was recorded during a certain activity type (for the given
  time range) will be aggregated into the same bucket. Data that was recorded while
  the user was not active will not be included in the response. Mutually exclusive
  of other bucketing specifications.\";}s:15:\"bucketBySession\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/BucketBySession\";s:11:\"description\";s:202:\"Specifies
  that data be aggregated by user sessions. Data that does not fall within the time
  range of a session will not be included in the response. Mutually exclusive of other
  bucketing specifications.\";}s:12:\"bucketByTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/BucketByTime\";s:11:\"description\";s:114:\"Specifies
  that data be aggregated by a single time interval. Mutually exclusive of other bucketing
  specifications.\";}s:13:\"endTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:143:\"The
  end of a window of time. Data that intersects with this time window will be aggregated.
  The time is in milliseconds since epoch, inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:27:\"filteredDataQualityStandard\";O:8:\"stdClass\":3:{s:11:\"description\";s:201:\"A
  list of acceptable data quality standards. Only data points which conform to at
  least one of the specified data quality standards will be returned. If the list
  is empty, all data points are returned.\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"enum\";a:10:{i:0;s:35:\"dataQualityBloodGlucoseIso151972003\";i:1;s:35:\"dataQualityBloodGlucoseIso151972013\";i:2;s:28:\"dataQualityBloodPressureAami\";i:3;s:29:\"dataQualityBloodPressureBhsAA\";i:4;s:29:\"dataQualityBloodPressureBhsAB\";i:5;s:29:\"dataQualityBloodPressureBhsBA\";i:6;s:29:\"dataQualityBloodPressureBhsBB\";i:7;s:31:\"dataQualityBloodPressureEsh2002\";i:8;s:31:\"dataQualityBloodPressureEsh2010\";i:9;s:18:\"dataQualityUnknown\";}s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"startTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:145:\"The
  start of a window of time. Data that intersects with this time window will be aggregated.
  The time is in milliseconds since epoch, inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:17:\"AggregateResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"bucket\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"A
  list of buckets containing the aggregated data.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/AggregateBucket\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:11:\"Application\";O:8:\"stdClass\":3:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"detailsUrl\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"An
  optional URI that can be used to link back to the application.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:251:\"The
  name of this application. This is required for REST clients, but we do not enforce
  uniqueness of this name. It is provided as a matter of convenience for other developers
  who would like to identify which REST created an Application or Data Source.\";s:4:\"type\";s:6:\"string\";}s:11:\"packageName\";O:8:\"stdClass\":2:{s:11:\"description\";s:279:\"Package
  name for this application. This is used as a unique identifier when created by Android
  applications, but cannot be specified by REST clients. REST clients will have their
  developer project number reflected into the Data Source data stream IDs, instead
  of the packageName.\";s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":2:{s:11:\"description\";s:140:\"Version
  of the application. You should update this field whenever the application changes
  in a way that affects the computation of the data.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:16:\"BucketByActivity\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:20:\"activityDataSourceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:93:\"The
  default activity stream will be used if a specific activityDataSourceId is not specified.\";s:4:\"type\";s:6:\"string\";}s:17:\"minDurationMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:139:\"Specifies
  that only activity segments of duration longer than minDurationMillis are considered
  and used as a container for aggregated data.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"BucketBySession\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"minDurationMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:130:\"Specifies
  that only sessions of duration longer than minDurationMillis are considered and
  used as a container for aggregated data.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:12:\"BucketByTime\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:14:\"durationMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:172:\"Specifies
  that result buckets aggregate data by exactly durationMillis time frames. Time frames
  that contain no data will be included in the response with an empty dataset.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:6:\"period\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/BucketByTimePeriod\";}}s:4:\"type\";s:6:\"object\";}s:18:\"BucketByTimePeriod\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"timeZoneId\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"org.joda.timezone.DateTimeZone\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:3:\"day\";i:1;s:5:\"month\";i:2;s:4:\"week\";}s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:9:\"DataPoint\";O:8:\"stdClass\":3:{s:11:\"description\";s:579:\"Represents
  a single data point, generated by a particular data source. A data point holds a
  value for each field, an end timestamp and an optional start time. The exact semantics
  of each of these attributes are specified in the documentation for the particular
  data type.\n\nA data point can represent an instantaneous measurement, reading or
  input observation, as well as averages or aggregates over a time interval. Check
  the data type documentation to determine which is the case for a particular data
  type.\n\nData points always contain one value for each field of the data type.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:21:\"computationTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:146:\"Used
  for version checking during transformation; that is, a datapoint can only replace
  another datapoint that has an older computation time stamp.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:12:\"dataTypeName\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"The
  data type defining the format of the values in this data point.\";s:4:\"type\";s:6:\"string\";}s:12:\"endTimeNanos\";O:8:\"stdClass\":3:{s:11:\"description\";s:88:\"The
  end time of the interval represented by this data point, in nanoseconds since epoch.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:18:\"modifiedTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:172:\"Indicates
  the last time this data point was modified. Useful only in contexts where we are
  listing the data changes, rather than representing the current state of the data.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:18:\"originDataSourceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:170:\"If
  the data point is contained in a dataset for a derived data source, this field will
  be populated with the data source stream ID that created the data point originally.\";s:4:\"type\";s:6:\"string\";}s:17:\"rawTimestampNanos\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"The
  raw timestamp from the original SensorEvent.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:14:\"startTimeNanos\";O:8:\"stdClass\":3:{s:11:\"description\";s:90:\"The
  start time of the interval represented by this data point, in nanoseconds since
  epoch.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":3:{s:11:\"description\";s:354:\"Values
  of each data type field for the data point. It is expected that each value corresponding
  to a data type field will occur in the same order that the field is listed with
  in the data type specified in a data source.\n\nOnly one of integer and floating
  point fields will be populated, depending on the format enum value within data source's
  type field.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Value\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"DataSource\";O:8:\"stdClass\":3:{s:11:\"description\";s:913:\"Definition
  of a unique source of sensor data. Data sources can expose raw data coming from
  hardware sensors on local or companion devices. They can also expose derived data,
  created by transforming or merging other data sources. Multiple data sources can
  exist for the same data type. Every data point inserted into or read from this service
  has an associated data source.\n\nThe data source contains enough information to
  uniquely identify its data, including the hardware device and the application that
  collected and/or transformed the data. It also holds useful metadata, such as the
  hardware and application versions, and the device type.\n\nEach data source produces
  a unique stream of data, with a unique identifier. Not all changes to data source
  affect the stream identifier, so that data collected by updated versions of the
  same application/device can still be considered to belong to the same data stream.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:11:\"application\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Application\";s:11:\"description\";s:75:\"Information
  about an application which feeds sensor data into the platform.\";}s:19:\"dataQualityStandard\";O:8:\"stdClass\":3:{s:11:\"description\";s:0:\"\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"enum\";a:10:{i:0;s:35:\"dataQualityBloodGlucoseIso151972003\";i:1;s:35:\"dataQualityBloodGlucoseIso151972013\";i:2;s:28:\"dataQualityBloodPressureAami\";i:3;s:29:\"dataQualityBloodPressureBhsAA\";i:4;s:29:\"dataQualityBloodPressureBhsAB\";i:5;s:29:\"dataQualityBloodPressureBhsBA\";i:6;s:29:\"dataQualityBloodPressureBhsBB\";i:7;s:31:\"dataQualityBloodPressureEsh2002\";i:8;s:31:\"dataQualityBloodPressureEsh2010\";i:9;s:18:\"dataQualityUnknown\";}s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"dataStreamId\";O:8:\"stdClass\":2:{s:11:\"description\";s:1568:\"A
  unique identifier for the data stream produced by this data source. The identifier
  includes:\n\n \n- The physical device's manufacturer, model, and serial number (UID).
  \n- The application's package name or name. Package name is used when the data source
  was created by an Android application. The developer project number is used when
  the data source was created by a REST client. \n- The data source's type. \n- The
  data source's stream name.  Note that not all attributes of the data source are
  used as part of the stream identifier. In particular, the version of the hardware/the
  application isn't used. This allows us to preserve the same stream through version
  updates. This also means that two DataSource objects may represent the same data
  stream even if they're not equal.\n\nThe exact format of the data stream ID created
  by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName
  \n\nThe exact format of the data stream ID created by a REST client is: type:dataType.name:developer
  project number:device.manufacturer:device.model:device.uid:dataStreamName \n\nWhen
  any of the optional fields that comprise of the data stream ID are blank, they will
  be omitted from the data stream ID. The minimum viable data stream ID would be:
  type:dataType.name:developer project number\n\nFinally, the developer project number
  is obfuscated when read by any REST or Android client that did not create the data
  source. Only the data source creator will see the developer project number in clear
  and normal form.\";s:4:\"type\";s:6:\"string\";}s:14:\"dataStreamName\";O:8:\"stdClass\":2:{s:11:\"description\";s:309:\"The
  stream name uniquely identifies this particular data source among other data sources
  of the same type from the same underlying producer. Setting the stream name is optional,
  but should be done whenever an application exposes two streams for the same data
  type, or when a device has two equivalent sensors.\";s:4:\"type\";s:6:\"string\";}s:8:\"dataType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/DataType\";s:11:\"description\";s:121:\"The
  data type defines the schema for a stream of data being collected by, inserted into,
  or queried from the Fitness API.\";}s:6:\"device\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Device\";s:11:\"description\";s:93:\"Representation
  of an integrated device (such as a phone or a wearable) that can hold sensors.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"An
  end-user visible name for this data source.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:116:\"A
  constant describing the type of this data source. Indicates whether this data source
  produces raw or derived data.\";s:4:\"enum\";a:2:{i:0;s:7:\"derived\";i:1;s:3:\"raw\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:8:\"DataType\";O:8:\"stdClass\":3:{s:11:\"description\";s:0:\"\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"field\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"A
  field represents one dimension of a data type.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DataTypeField\";}s:4:\"type\";s:5:\"array\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:125:\"Each
  data type has a unique, namespaced, name. All data types in the com.google namespace
  are shared as part of the platform.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"DataTypeField\";O:8:\"stdClass\":3:{s:11:\"description\";s:338:\"In
  case of multi-dimensional data (such as an accelerometer with x, y, and z axes)
  each field represents one dimension. Each data type field has a unique name which
  identifies it. The field also defines the format of the data (int, float, etc.).\n\nThis
  message is only instantiated in code and not used for wire comms or stored in any
  way.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"format\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  different supported formats for each field in a data type.\";s:4:\"enum\";a:7:{i:0;s:4:\"blob\";i:1;s:9:\"floatList\";i:2;s:10:\"floatPoint\";i:3;s:7:\"integer\";i:4;s:11:\"integerList\";i:5;s:3:\"map\";i:6;s:6:\"string\";}s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:141:\"Defines
  the name and format of data. Unlike data type names, field names are not namespaced,
  and only need to be unique within the data type.\";s:4:\"type\";s:6:\"string\";}s:8:\"optional\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Dataset\";O:8:\"stdClass\":3:{s:11:\"description\";s:224:\"A
  dataset represents a projection container for data points. They do not carry any
  info of their own. Datasets represent a set of data points from a particular data
  source. A data point can be found in more than one dataset.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"dataSourceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:78:\"The
  data stream ID of the data source that created the points in this dataset.\";s:4:\"type\";s:6:\"string\";}s:12:\"maxEndTimeNs\";O:8:\"stdClass\":3:{s:11:\"description\";s:195:\"The
  largest end time of all data points in this possibly partial representation of the
  dataset. Time is in nanoseconds from epoch. This should also match the first part
  of the dataset identifier.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:14:\"minStartTimeNs\";O:8:\"stdClass\":3:{s:11:\"description\";s:198:\"The
  smallest start time of all data points in this possibly partial representation of
  the dataset. Time is in nanoseconds from epoch. This should also match the first
  part of the dataset identifier.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:251:\"This
  token will be set when a dataset is received in response to a GET request and the
  dataset is too large to be included in a single response. Provide this value in
  a subsequent GET request to return the next page of data points within this dataset.\";s:4:\"type\";s:6:\"string\";}s:5:\"point\";O:8:\"stdClass\":3:{s:11:\"description\";s:270:\"A
  partial list of data points contained in the dataset, ordered by largest endTimeNanos
  first. This list is considered complete when retrieving a small dataset and partial
  when patching a dataset or retrieving a dataset that is too large to include in
  a single response.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DataPoint\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Device\";O:8:\"stdClass\":3:{s:11:\"description\";s:686:\"Representation
  of an integrated device (such as a phone or a wearable) that can hold sensors. Each
  sensor is exposed as a data source.\n\nThe main purpose of the device information
  contained in this class is to identify the hardware of a particular data source.
  This can be useful in different ways, including:  \n- Distinguishing two similar
  sensors on different devices (the step counter on two nexus 5 phones, for instance)\n-
  Display the source of data to the user (by using the device make / model)\n- Treat
  data differently depending on sensor type (accelerometers on a watch may give different
  patterns than those on a phone)\n- Build different analysis models for each device/version.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"manufacturer\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"Manufacturer
  of the product/hardware.\";s:4:\"type\";s:6:\"string\";}s:5:\"model\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"End-user
  visible model name for the device.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"A
  constant representing the type of the device.\";s:4:\"enum\";a:7:{i:0;s:10:\"chestStrap\";i:1;s:11:\"headMounted\";i:2;s:5:\"phone\";i:3;s:5:\"scale\";i:4;s:6:\"tablet\";i:5;s:7:\"unknown\";i:6;s:5:\"watch\";}s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":2:{s:11:\"description\";s:234:\"The
  serial number or other unique ID for the hardware. This field is obfuscated when
  read by any REST or Android client that did not create the data source. Only the
  data source creator will see the uid field in clear and normal form.\";s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"Version
  string for the device hardware/software.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:28:\"ListDataPointChangesResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"dataSourceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:62:\"The
  data stream ID of the data source with data point changes.\";s:4:\"type\";s:6:\"string\";}s:16:\"deletedDataPoint\";O:8:\"stdClass\":3:{s:11:\"description\";s:107:\"Deleted
  data points for the user. Note, for modifications this should be parsed before handling
  insertions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DataPoint\";}s:4:\"type\";s:5:\"array\";}s:17:\"insertedDataPoint\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Inserted
  data points for the user.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DataPoint\";}s:4:\"type\";s:5:\"array\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:151:\"The
  continuation token, which is used to page through large result sets. Provide this
  value in a subsequent request to return the next page of results.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:23:\"ListDataSourcesResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"dataSource\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"A
  previously created data source.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/DataSource\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:20:\"ListSessionsResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:14:\"deletedSession\";O:8:\"stdClass\":3:{s:11:\"description\";s:161:\"If
  includeDeleted is set to true in the request, this list will contain sessions deleted
  with original end times that are within the startTime and endTime frame.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Session\";}s:4:\"type\";s:5:\"array\";}s:11:\"hasMoreData\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Flag
  to indicate server has more data to transfer\";s:4:\"type\";s:7:\"boolean\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:151:\"The
  continuation token, which is used to page through large result sets. Provide this
  value in a subsequent request to return the next page of results.\";s:4:\"type\";s:6:\"string\";}s:7:\"session\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"Sessions
  with an end time that is between startTime and endTime of the request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Session\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:8:\"MapValue\";O:8:\"stdClass\":3:{s:11:\"description\";s:150:\"Holder
  object for the value of an entry in a map field of a data point.\n\nA map value
  supports a subset of the formats that the regular Value supports.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"fpVal\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"Floating
  point value.\";s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Session\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"Sessions
  contain metadata, such as a user-friendly name and time interval information.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:16:\"activeTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:312:\"Session
  active time. While start_time_millis and end_time_millis define the full session
  time, the active time can be shorter and specified by active_time_millis. If the
  inactive time during the session is known, it should also be inserted via a com.google.activity.segment
  data point with a STILL activity value\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:12:\"activityType\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"The
  type of activity this session represents.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"application\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/Application\";s:11:\"description\";s:41:\"The
  application that created the session.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"A
  description for this session.\";s:4:\"type\";s:6:\"string\";}s:13:\"endTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"An
  end time, in milliseconds since epoch, inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:95:\"A
  client-generated identifier that is unique across all sessions owned by this particular
  user.\";s:4:\"type\";s:6:\"string\";}s:18:\"modifiedTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"A
  timestamp that indicates when the session was last modified.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"A
  human readable name of the session.\";s:4:\"type\";s:6:\"string\";}s:15:\"startTimeMillis\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"A
  start time, in milliseconds since epoch, inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Value\";O:8:\"stdClass\":3:{s:11:\"description\";s:184:\"Holder
  object for the value of a single field in a data point.\n\nA field value has a particular
  format and is only ever set to one of an integer or a floating point value. LINT.IfChange\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"fpVal\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"Floating
  point value. When this is set, other values must not be set.\";s:6:\"format\";s:6:\"double\";s:4:\"type\";s:6:\"number\";}s:6:\"intVal\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"Integer
  value. When this is set, other values must not be set.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"mapVal\";O:8:\"stdClass\":3:{s:11:\"description\";s:259:\"Map
  value. The valid key space and units for the corresponding value of each entry should
  be documented as part of the data type definition. Keys should be kept small whenever
  possible. Data streams with large keys and high data frequency may be down sampled.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/ValueMapValEntry\";}s:4:\"type\";s:5:\"array\";}s:9:\"stringVal\";O:8:\"stdClass\":2:{s:11:\"description\";s:192:\"String
  value. When this is set, other values must not be set. Strings should be kept small
  whenever possible. Data streams with large string values and high data frequency
  may be down sampled.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:16:\"ValueMapValEntry\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/MapValue\";}}s:4:\"type\";s:6:\"object\";}}"
...
