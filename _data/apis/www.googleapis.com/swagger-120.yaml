---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";}s:11:\"description\";s:70:\"Finds
  the least expensive flights between an origin and a destination.\";s:5:\"title\";s:11:\"QPX
  Express\";s:7:\"version\";s:2:\"v1\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:116:\"https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.0\";}s:6:\"format\";s:6:\"google\";s:3:\"url\";s:63:\"https://www.googleapis.com/discovery/v1/apis/qpxExpress/v1/rest\";s:7:\"version\";s:2:\"v1\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:10:\"qpxExpress\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:17:\"google_qpxexpress\";s:4:\"type\";s:7:\"openapi\";}}"
host: www.googleapis.com
basePath: /qpxExpress/v1/trips
paths:
  /search:
    parameters:
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/userIp'
    post:
      description: Returns a list of flights.
      operationId: trips.search
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/TripsSearchRequest'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/TripsSearchResponse'
      tags:
      - trips
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":24:{s:12:\"AircraftData\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"The
  make, model, and type of an aircraft.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:71:\"The
  aircraft code. For example, for a Boeing 777 the code would be 777.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:23:\"qpxexpress#aircraftData\";s:11:\"description\";s:90:\"Identifies
  this as an aircraftData object. Value: the fixed string qpxexpress#aircraftData\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"The
  name of an aircraft, for example Boeing 777.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"AirportData\";O:8:\"stdClass\":3:{s:11:\"description\";s:11:\"An
  airport.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"city\";O:8:\"stdClass\":2:{s:11:\"description\";s:82:\"The
  city code an airport is located in. For example, for JFK airport, this is NYC.\";s:4:\"type\";s:6:\"string\";}s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:70:\"An
  airport's code. For example, for Boston Logan airport, this is BOS.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:22:\"qpxexpress#airportData\";s:11:\"description\";s:85:\"Identifies
  this as an airport object. Value: the fixed string qpxexpress#airportData.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:94:\"The
  name of an airport. For example, for airport BOS the name is \"Boston Logan International\".\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"BagDescriptor\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Information
  about an item of baggage.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"commercialName\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Provides
  the commercial name for an optional service.\";s:4:\"type\";s:6:\"string\";}s:5:\"count\";O:8:\"stdClass\":3:{s:11:\"description\";s:60:\"How
  many of this type of bag will be checked on this flight.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:11:\"description\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"A
  description of the baggage.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:24:\"qpxexpress#bagDescriptor\";s:11:\"description\";s:86:\"Identifies
  this as a baggage object. Value: the fixed string qpxexpress#bagDescriptor.\";s:4:\"type\";s:6:\"string\";}s:7:\"subcode\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"The
  standard IATA subcode used to identify this optional service.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"CarrierData\";O:8:\"stdClass\":3:{s:11:\"description\";s:117:\"Information
  about a carrier (ie. an airline, bus line, railroad, etc) that might be useful to
  display to an end-user.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:100:\"The
  IATA designator of a carrier (airline, etc). For example, for American Airlines,
  the code is AA.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:22:\"qpxexpress#carrierData\";s:11:\"description\";s:127:\"Identifies
  this as a kind of carrier (ie. an airline, bus line, railroad, etc). Value: the
  fixed string qpxexpress#carrierData.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"The
  long, full name of a carrier. For example: American Airlines.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:8:\"CityData\";O:8:\"stdClass\":3:{s:11:\"description\";s:95:\"Information
  about a city that might be useful to an end-user; typically the city of an airport.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:69:\"The
  IATA character ID of a city. For example, for Boston this is BOS.\";s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":2:{s:11:\"description\";s:119:\"The
  two-character country code of the country the city is located in. For example, US
  for the United States of America.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:19:\"qpxexpress#cityData\";s:11:\"description\";s:108:\"Identifies
  this as a city, typically with one or more airports. Value: the fixed string qpxexpress#cityData.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"The
  full name of a city. An example would be: New York.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Data\";O:8:\"stdClass\":3:{s:11:\"description\";s:142:\"Detailed
  information about components found in the solutions of this response, including
  a trip's airport, city, taxes, airline, and aircraft.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"aircraft\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"The
  aircraft that is flying between an origin and destination.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/AircraftData\";}s:4:\"type\";s:5:\"array\";}s:7:\"airport\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"The
  airport of an origin or destination.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/AirportData\";}s:4:\"type\";s:5:\"array\";}s:7:\"carrier\";O:8:\"stdClass\":3:{s:11:\"description\";s:116:\"The
  airline carrier of the aircraft flying between an origin and destination. Allowed
  values are IATA carrier codes.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/CarrierData\";}s:4:\"type\";s:5:\"array\";}s:4:\"city\";O:8:\"stdClass\":3:{s:11:\"description\";s:68:\"The
  city that is either the origin or destination of part of a trip.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/CityData\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:15:\"qpxexpress#data\";s:11:\"description\";s:154:\"Identifies
  this as QPX Express response resource, including a trip's airport, city, taxes,
  airline, and aircraft. Value: the fixed string qpxexpress#data.\";s:4:\"type\";s:6:\"string\";}s:3:\"tax\";O:8:\"stdClass\":3:{s:11:\"description\";s:61:\"The
  taxes due for flying between an origin and a destination.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/TaxData\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:8:\"FareInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:353:\"Complete
  information about a fare used in the solution to a low-fare search query. In the
  airline industry a fare is a price an airline charges for one-way travel between
  two points. A fare typically contains a carrier code, two city codes, a price, and
  a fare basis. (A fare basis is a one-to-eight character alphanumeric code used to
  identify a fare.)\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"basisCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"carrier\";O:8:\"stdClass\":2:{s:11:\"description\";s:74:\"The
  carrier of the aircraft or other vehicle commuting between two points.\";s:4:\"type\";s:6:\"string\";}s:11:\"destination\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"The
  city code of the city the trip ends at.\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"A
  unique identifier of the fare.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:19:\"qpxexpress#fareInfo\";s:11:\"description\";s:78:\"Identifies
  this as a fare object. Value: the fixed string qpxexpress#fareInfo.\";s:4:\"type\";s:6:\"string\";}s:6:\"origin\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  city code of the city the trip begins at.\";s:4:\"type\";s:6:\"string\";}s:7:\"private\";O:8:\"stdClass\":2:{s:11:\"description\";s:112:\"Whether
  this is a private fare, for example one offered only to select customers rather
  than the general public.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:10:\"FlightInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:473:\"A
  flight is a sequence of legs with the same airline carrier and flight number. (A
  leg is the smallest unit of travel, in the case of a flight a takeoff immediately
  followed by a landing at two set points on a particular carrier with a particular
  flight number.) The naive view is that a flight is scheduled travel of an aircraft
  between two points, with possibly intermediate stops, but carriers will frequently
  list flights that require a change of aircraft between legs.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"carrier\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"The
  flight number.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:20:\"FreeBaggageAllowance\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Information
  about free baggage allowed on one segment of a trip.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:13:\"bagDescriptor\";O:8:\"stdClass\":3:{s:11:\"description\";s:99:\"A
  representation of a type of bag, such as an ATPCo subcode, Commercial Name, or other
  description.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/BagDescriptor\";}s:4:\"type\";s:5:\"array\";}s:5:\"kilos\";O:8:\"stdClass\":3:{s:11:\"description\";s:68:\"The
  maximum number of kilos all the free baggage together may weigh.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"kilosPerPiece\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"The
  maximum number of kilos any one piece of baggage may weigh.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:31:\"qpxexpress#freeBaggageAllowance\";s:11:\"description\";s:130:\"Identifies
  this as free baggage object, allowed on one segment of a trip. Value: the fixed
  string qpxexpress#freeBaggageAllowance.\";s:4:\"type\";s:6:\"string\";}s:6:\"pieces\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"The
  number of free pieces of baggage allowed.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"pounds\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"The
  number of pounds of free baggage allowed.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:7:\"LegInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:207:\"Information
  about a leg. (A leg is the smallest unit of travel, in the case of a flight a takeoff
  immediately followed by a landing at two set points on a particular carrier with
  a particular flight number.)\";s:10:\"properties\";O:8:\"stdClass\":17:{s:8:\"aircraft\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"The
  aircraft (or bus, ferry, railcar, etc) travelling between the two points of this
  leg.\";s:4:\"type\";s:6:\"string\";}s:11:\"arrivalTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:91:\"The
  scheduled time of arrival at the destination of the leg, local to the point of arrival.\";s:4:\"type\";s:6:\"string\";}s:11:\"changePlane\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"Whether
  you have to change planes following this leg. Only applies to the next leg.\";s:4:\"type\";s:7:\"boolean\";}s:18:\"connectionDuration\";O:8:\"stdClass\":3:{s:11:\"description\";s:56:\"Duration
  of a connection following this leg, in minutes.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:13:\"departureTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:73:\"The
  scheduled departure time of the leg, local to the point of departure.\";s:4:\"type\";s:6:\"string\";}s:11:\"destination\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"The
  leg destination as a city and airport.\";s:4:\"type\";s:6:\"string\";}s:19:\"destinationTerminal\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"The
  terminal the flight is scheduled to arrive at.\";s:4:\"type\";s:6:\"string\";}s:8:\"duration\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"The
  scheduled travelling time from the origin to the destination.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"An
  identifier that uniquely identifies this leg in the solution.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:18:\"qpxexpress#legInfo\";s:11:\"description\";s:257:\"Identifies
  this as a leg object. A leg is the smallest unit of travel, in the case of a flight
  a takeoff immediately followed by a landing at two set points on a particular carrier
  with a particular flight number. Value: the fixed string qpxexpress#legInfo.\";s:4:\"type\";s:6:\"string\";}s:4:\"meal\";O:8:\"stdClass\":2:{s:11:\"description\";s:91:\"A
  simple, general description of the meal(s) served on the flight, for example: \"Hot
  meal\".\";s:4:\"type\";s:6:\"string\";}s:7:\"mileage\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  number of miles in this leg.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"onTimePerformance\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"In
  percent, the published on time performance on this leg.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:19:\"operatingDisclosure\";O:8:\"stdClass\":2:{s:11:\"description\";s:296:\"Department
  of Transportation disclosure information on the actual operator of a flight in a
  code share. (A code share refers to a marketing agreement between two carriers,
  where one carrier will list in its schedules (and take bookings for) flights that
  are actually operated by another carrier.)\";s:4:\"type\";s:6:\"string\";}s:6:\"origin\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"The
  leg origin as a city and airport.\";s:4:\"type\";s:6:\"string\";}s:14:\"originTerminal\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"The
  terminal the flight is scheduled to depart from.\";s:4:\"type\";s:6:\"string\";}s:6:\"secure\";O:8:\"stdClass\":2:{s:11:\"description\";s:133:\"Whether
  passenger information must be furnished to the United States Transportation Security
  Administration (TSA) prior to departure.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:15:\"PassengerCounts\";O:8:\"stdClass\":3:{s:11:\"description\";s:158:\"The
  number and type of passengers. Unfortunately the definition of an infant, child,
  adult, and senior citizen varies across carriers and reservation systems.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"adultCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"The
  number of passengers that are adults.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:10:\"childCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  number of passengers that are children.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:16:\"infantInLapCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:76:\"The
  number of passengers that are infants travelling in the lap of an adult.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"infantInSeatCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"The
  number of passengers that are infants each assigned a seat.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:26:\"qpxexpress#passengerCounts\";s:11:\"description\";s:135:\"Identifies
  this as a passenger count object, representing the number of passengers. Value:
  the fixed string qpxexpress#passengerCounts.\";s:4:\"type\";s:6:\"string\";}s:11:\"seniorCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"The
  number of passengers that are senior citizens.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:11:\"PricingInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:251:\"The
  price of one or more travel segments. The currency used to purchase tickets is usually
  determined by the sale/ticketing city or the sale/ticketing country, unless none
  are specified, in which case it defaults to that of the journey origin country.\";s:10:\"properties\";O:8:\"stdClass\":13:{s:13:\"baseFareTotal\";O:8:\"stdClass\":2:{s:11:\"description\";s:197:\"The
  total fare in the base fare currency (the currency of the country of origin). This
  element is only present when the sales currency and the currency of the country
  of commencement are different.\";s:4:\"type\";s:6:\"string\";}s:4:\"fare\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"The
  fare used to price one or more segments.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/FareInfo\";}s:4:\"type\";s:5:\"array\";}s:15:\"fareCalculation\";O:8:\"stdClass\":2:{s:11:\"description\";s:142:\"The
  horizontal fare calculation. This is a field on a ticket that displays all of the
  relevant items that go into the calculation of the fare.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:22:\"qpxexpress#pricingInfo\";s:11:\"description\";s:139:\"Identifies
  this as a pricing object, representing the price of one or more travel segments.
  Value: the fixed string qpxexpress#pricingInfo.\";s:4:\"type\";s:6:\"string\";}s:19:\"latestTicketingTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:177:\"The
  latest ticketing time for this pricing assuming the reservation occurs at ticketing
  time and there is no change in fares/rules. The time is local to the point of sale
  (POS).\";s:4:\"type\";s:6:\"string\";}s:10:\"passengers\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PassengerCounts\";s:11:\"description\";s:53:\"The
  number of passengers to which this price applies.\";}s:3:\"ptc\";O:8:\"stdClass\":2:{s:11:\"description\";s:196:\"The
  passenger type code for this pricing. An alphanumeric code used by a carrier to
  restrict fares to certain categories of passenger. For instance, a fare might be
  valid only for senior citizens.\";s:4:\"type\";s:6:\"string\";}s:10:\"refundable\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Whether
  the fares on this pricing are refundable.\";s:4:\"type\";s:7:\"boolean\";}s:13:\"saleFareTotal\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"The
  total fare in the sale or equivalent currency.\";s:4:\"type\";s:6:\"string\";}s:12:\"saleTaxTotal\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  taxes in the sale or equivalent currency.\";s:4:\"type\";s:6:\"string\";}s:9:\"saleTotal\";O:8:\"stdClass\":2:{s:11:\"description\";s:76:\"Total
  per-passenger price (fare and tax) in the sale or equivalent currency.\";s:4:\"type\";s:6:\"string\";}s:14:\"segmentPricing\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  per-segment price and baggage information.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/SegmentPricing\";}s:4:\"type\";s:5:\"array\";}s:3:\"tax\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"The
  taxes used to calculate the tax total per ticket.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/TaxInfo\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:11:\"SegmentInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:262:\"Details
  of a segment of a flight; a segment is one or more consecutive legs on the same
  flight. For example a hypothetical flight ZZ001, from DFW to OGG, would have one
  segment with two legs: DFW to HNL (leg 1), HNL to OGG (leg 2), and DFW to OGG (legs
  1 and 2).\";s:10:\"properties\";O:8:\"stdClass\":11:{s:11:\"bookingCode\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"The
  booking code or class for this segment.\";s:4:\"type\";s:6:\"string\";}s:16:\"bookingCodeCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:67:\"The
  number of seats available in this booking code on this segment.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"cabin\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"The
  cabin booked for this segment.\";s:4:\"type\";s:6:\"string\";}s:18:\"connectionDuration\";O:8:\"stdClass\":3:{s:11:\"description\";s:66:\"In
  minutes, the duration of the connection following this segment.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"duration\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  duration of the flight segment in minutes.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"flight\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/FlightInfo\";s:11:\"description\";s:32:\"The
  flight this is a segment of.\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"An
  id uniquely identifying the segment in the solution.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:22:\"qpxexpress#segmentInfo\";s:11:\"description\";s:282:\"Identifies
  this as a segment object. A segment is one or more consecutive legs on the same
  flight. For example a hypothetical flight ZZ001, from DFW to OGG, could have one
  segment with two legs: DFW to HNL (leg 1), HNL to OGG (leg 2). Value: the fixed
  string qpxexpress#segmentInfo.\";s:4:\"type\";s:6:\"string\";}s:3:\"leg\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  legs composing this segment.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/LegInfo\";}s:4:\"type\";s:5:\"array\";}s:19:\"marriedSegmentGroup\";O:8:\"stdClass\":2:{s:11:\"description\";s:616:\"The
  solution-based index of a segment in a married segment group. Married segments can
  only be booked together. For example, an airline might report a certain booking
  code as sold out from Boston to Pittsburgh, but as available as part of two married
  segments Boston to Chicago connecting through Pittsburgh. For example content of
  this field, consider the round-trip flight ZZ1 PHX-PHL ZZ2 PHL-CLT ZZ3 CLT-PHX.
  This has three segments, with the two outbound ones (ZZ1 ZZ2) married. In this case,
  the two outbound segments belong to married segment group 0, and the return segment
  belongs to married segment group 1.\";s:4:\"type\";s:6:\"string\";}s:27:\"subjectToGovernmentApproval\";O:8:\"stdClass\":2:{s:11:\"description\";s:77:\"Whether
  the operation of this segment remains subject to government approval.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:14:\"SegmentPricing\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"The
  price of this segment.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"fareId\";O:8:\"stdClass\":2:{s:11:\"description\";s:114:\"A
  segment identifier unique within a single solution. It is used to refer to different
  parts of the same solution.\";s:4:\"type\";s:6:\"string\";}s:17:\"freeBaggageOption\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"Details
  of the free baggage allowance on this segment.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/FreeBaggageAllowance\";}s:4:\"type\";s:5:\"array\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:25:\"qpxexpress#segmentPricing\";s:11:\"description\";s:135:\"Identifies
  this as a segment pricing object, representing the price of this segment. Value:
  the fixed string qpxexpress#segmentPricing.\";s:4:\"type\";s:6:\"string\";}s:9:\"segmentId\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Unique
  identifier in the response of this segment.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"SliceInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:487:\"Information
  about a slice. A slice represents a traveller's intent, the portion of a low-fare
  search corresponding to a traveler's request to get between two points. One-way
  journeys are generally expressed using 1 slice, round-trips using 2. For example,
  if a traveler specifies the following trip in a user interface:\n| Origin | Destination
  | Departure Date | | BOS | LAX | March 10, 2007 | | LAX | SYD | March 17, 2007 |
  | SYD | BOS | March 22, 2007 |\nthen this is a three slice trip.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"duration\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"The
  duration of the slice in minutes.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:20:\"qpxexpress#sliceInfo\";s:11:\"description\";s:296:\"Identifies
  this as a slice object. A slice represents a traveller's intent, the portion of
  a low-fare search corresponding to a traveler's request to get between two points.
  One-way journeys are generally expressed using 1 slice, round-trips using 2. Value:
  the fixed string qpxexpress#sliceInfo.\";s:4:\"type\";s:6:\"string\";}s:7:\"segment\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  segment(s) constituting the slice.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/SegmentInfo\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:10:\"SliceInput\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"Criteria
  a desired slice must satisfy.\";s:10:\"properties\";O:8:\"stdClass\":11:{s:8:\"alliance\";O:8:\"stdClass\":2:{s:11:\"description\";s:159:\"Slices
  with only the carriers in this alliance should be returned; do not use this field
  with permittedCarrier. Allowed values are ONEWORLD, SKYTEAM, and STAR.\";s:4:\"type\";s:6:\"string\";}s:4:\"date\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"Departure
  date in YYYY-MM-DD format.\";s:4:\"type\";s:6:\"string\";}s:11:\"destination\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Airport
  or city IATA designator of the destination.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:21:\"qpxexpress#sliceInput\";s:11:\"description\";s:143:\"Identifies
  this as a slice input object, representing the criteria a desired slice must satisfy.
  Value: the fixed string qpxexpress#sliceInput.\";s:4:\"type\";s:6:\"string\";}s:21:\"maxConnectionDuration\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"The
  longest connection between two legs, in minutes, you are willing to accept.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"maxStops\";O:8:\"stdClass\":3:{s:11:\"description\";s:68:\"The
  maximum number of stops you are willing to accept in this slice.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:6:\"origin\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"Airport
  or city IATA designator of the origin.\";s:4:\"type\";s:6:\"string\";}s:16:\"permittedCarrier\";O:8:\"stdClass\":3:{s:11:\"description\";s:96:\"A
  list of 2-letter IATA airline designators. Slices with only these carriers should
  be returned.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:22:\"permittedDepartureTime\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/TimeOfDayRange\";s:11:\"description\";s:78:\"Slices
  must depart in this time of day range, local to the point of departure.\";}s:14:\"preferredCabin\";O:8:\"stdClass\":2:{s:11:\"description\";s:118:\"Prefer
  solutions that book in this cabin for this slice. Allowed values are COACH, PREMIUM_COACH,
  BUSINESS, and FIRST.\";s:4:\"type\";s:6:\"string\";}s:17:\"prohibitedCarrier\";O:8:\"stdClass\":3:{s:11:\"description\";s:84:\"A
  list of 2-letter IATA airline designators. Exclude slices that use these carriers.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:7:\"TaxData\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"Tax
  data.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"An
  identifier uniquely identifying a tax in a response.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:18:\"qpxexpress#taxData\";s:11:\"description\";s:104:\"Identifies
  this as a tax data object, representing some tax. Value: the fixed string qpxexpress#taxData.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"The
  name of a tax.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"TaxInfo\";O:8:\"stdClass\":3:{s:11:\"description\";s:16:\"Tax
  information.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"chargeType\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"Whether
  this is a government charge or a carrier surcharge.\";s:4:\"type\";s:6:\"string\";}s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"The
  code to enter in the ticket's tax box.\";s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"For
  government charges, the country levying the charge.\";s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:99:\"Identifier
  uniquely identifying this tax in a response. Not present for unnamed carrier surcharges.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:18:\"qpxexpress#taxInfo\";s:11:\"description\";s:88:\"Identifies
  this as a tax information object. Value: the fixed string qpxexpress#taxInfo.\";s:4:\"type\";s:6:\"string\";}s:9:\"salePrice\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"The
  price of the tax in the sales or equivalent currency.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:14:\"TimeOfDayRange\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"Two
  times in a single day defining a time range.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"earliestTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"The
  earliest time of day in HH:MM format.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:25:\"qpxexpress#timeOfDayRange\";s:11:\"description\";s:159:\"Identifies
  this as a time of day range object, representing two times in a single day defining
  a time range. Value: the fixed string qpxexpress#timeOfDayRange.\";s:4:\"type\";s:6:\"string\";}s:10:\"latestTime\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"The
  latest time of day in HH:MM format.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:10:\"TripOption\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"Trip
  information.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"Identifier
  uniquely identifying this trip in a response.\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:21:\"qpxexpress#tripOption\";s:11:\"description\";s:92:\"Identifies
  this as a trip information object. Value: the fixed string qpxexpress#tripOption.\";s:4:\"type\";s:6:\"string\";}s:7:\"pricing\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Per
  passenger pricing information.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PricingInfo\";}s:4:\"type\";s:5:\"array\";}s:9:\"saleTotal\";O:8:\"stdClass\":2:{s:11:\"description\";s:112:\"The
  total price for all passengers on the trip, in the form of a currency followed by
  an amount, e.g. USD253.35.\";s:4:\"type\";s:6:\"string\";}s:5:\"slice\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  slices that make up this trip's itinerary.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/SliceInfo\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:18:\"TripOptionsRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"A
  QPX Express search request, which will yield one or more solutions.\";s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"maxPrice\";O:8:\"stdClass\":2:{s:11:\"description\";s:168:\"Do
  not return solutions that cost more than this price. The alphabetical part of the
  price is in ISO 4217. The format, in regex, is [A-Z]{3}\\d+(\\.\\d+)? Example: $102.07\";s:4:\"type\";s:6:\"string\";}s:10:\"passengers\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PassengerCounts\";s:11:\"description\";s:46:\"Counts
  for each passenger type in the request.\";}s:10:\"refundable\";O:8:\"stdClass\":2:{s:11:\"description\";s:44:\"Return
  only solutions with refundable fares.\";s:4:\"type\";s:7:\"boolean\";}s:11:\"saleCountry\";O:8:\"stdClass\":2:{s:11:\"description\";s:119:\"IATA
  country code representing the point of sale. This determines the \"equivalent amount
  paid\" currency for the ticket.\";s:4:\"type\";s:6:\"string\";}s:5:\"slice\";O:8:\"stdClass\":3:{s:11:\"description\";s:435:\"The
  slices that make up the itinerary of this trip. A slice represents a traveler's
  intent, the portion of a low-fare search corresponding to a traveler's request to
  get between two points. One-way journeys are generally expressed using one slice,
  round-trips using two. An example of a one slice trip with three segments might
  be BOS-SYD, SYD-LAX, LAX-BOS if the traveler only stopped in SYD and LAX just long
  enough to change planes.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/SliceInput\";}s:4:\"type\";s:5:\"array\";}s:9:\"solutions\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  number of solutions to return, maximum 500.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:16:\"ticketingCountry\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"IATA
  country code representing the point of ticketing.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"TripOptionsResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  QPX Express search response.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Data\";s:11:\"description\";s:47:\"Informational
  data global to list of solutions.\";}s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:22:\"qpxexpress#tripOptions\";s:11:\"description\";s:144:\"Identifies
  this as a QPX Express trip response object, which consists of zero or more solutions.
  Value: the fixed string qpxexpress#tripOptions.\";s:4:\"type\";s:6:\"string\";}s:9:\"requestId\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"An
  identifier uniquely identifying this response.\";s:4:\"type\";s:6:\"string\";}s:10:\"tripOption\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"A
  list of priced itinerary solutions to the QPX Express query.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/TripOption\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:18:\"TripsSearchRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"A
  QPX Express search request.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"request\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/TripOptionsRequest\";s:11:\"description\";s:127:\"A
  QPX Express search request. Required values are at least one adult or senior passenger,
  an origin, a destination, and a date.\";}}s:4:\"type\";s:6:\"object\";}s:19:\"TripsSearchResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  QPX Express search response.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"kind\";O:8:\"stdClass\":3:{s:7:\"default\";s:22:\"qpxExpress#tripsSearch\";s:11:\"description\";s:110:\"Identifies
  this as a QPX Express API search response resource. Value: the fixed string qpxExpress#tripsSearch.\";s:4:\"type\";s:6:\"string\";}s:5:\"trips\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/TripOptionsResponse\";s:11:\"description\";s:57:\"All
  possible solutions to the QPX Express search request.\";}}s:4:\"type\";s:6:\"object\";}}"
...
