---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:5:\"title\";s:11:\"BIMData API\";s:11:\"description\";s:201:\"BIMData
  API is a tool to interact with your models stored on BIMData\u2019s servers.\n    Through
  the API, you can manage your projects, the clouds, upload your IFC files and manage
  them through endpoints.\";s:14:\"termsOfService\";s:38:\"https://www.google.com/policies/terms/\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:18:\"contact@bimdata.io\";}s:7:\"license\";O:8:\"stdClass\":1:{s:4:\"name\";s:20:\"Copyright
  BIMData.io\";}s:7:\"version\";s:2:\"v1\";}"
host: api-staging.bimdata.io
basePath: /
paths:
  /bcf/2.1/current-user:
    get:
      operationId: getUser
      summary: Get current user info
      description: 'Get current user infonRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/SelfBcfUser'
      tags:
      - bcf
    parameters: []
  /bcf/2.1/projects:
    get:
      operationId: getBcfProjects
      summary: Retrieve all BCF projects
      description: 'Retrieve all BCF projectsnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/BcfProject'
      tags:
      - bcf
    parameters: []
  /bcf/2.1/projects/{id}:
    get:
      operationId: getBcfProject
      summary: Retrieve a BCF project
      description: 'Retrieve a BCF projectnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/BcfProject'
      tags:
      - bcf
    put:
      operationId: fullUpdateBcfProject
      summary: Update all fields of a BCF project
      description: 'Update all fields of a BCF projectnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/BcfProject'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/BcfProject'
      tags:
      - bcf
    patch:
      operationId: updateBcfProject
      summary: Update some fields of a BCF project
      description: 'Update some fields of a BCF projectnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/BcfProject'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/BcfProject'
      tags:
      - bcf
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /bcf/2.1/projects/{id}/export:
    get:
      operationId: downloadBcfExport
      summary: Export project's topics in bcf-xml format
      description: 'Export project''s topics in bcf-xml formatnRequired scopes: bcf:read'
      parameters:
      - name: topics
        in: query
        description: topic guids to export, comma separated. Default = all
        type: string
      - name: format
        in: query
        description: topic format to export, comma separated. Default = all
        type: string
      responses:
        200:
          description: The file
      tags:
      - bcf
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /bcf/2.1/projects/{projects_pk}/extensions:
    get:
      operationId: getExtensions
      summary: Retrieve project extensions
      description: Retrieve project extensions
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Extensions'
      tags:
      - bcf
    patch:
      operationId: updateExtensions
      summary: Update project extensions
      description: Update project extensions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Extensions'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Extensions'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/full-topic:
    get:
      operationId: getFullTopics
      summary: Retrieve all full topics
      description: 'This is not a standard route. It responds with all topics, their
        viewpoints and their commentsnRequired scopes: bcf:read'
      parameters:
      - name: ifcs
        in: query
        description: Filter the returned list by ifcs
        required: false
        type: string
      - name: format
        in: query
        description: Filter the returned list by format
        required: false
        type: string
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/FullTopic'
      tags:
      - bcf
    post:
      operationId: createFullTopic
      summary: Create a Topic with viewpoints and comments
      description: 'This is not a standard route. You can send a topic, viewpoints
        and comments in a single callnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/FullTopic'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/FullTopic'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/full-topic/{guid}:
    get:
      operationId: getFullTopic
      summary: Retrieve a full topic
      description: 'This is not a standard route. It responds with a topic, its viewpoints
        and its commentsnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/FullTopic'
      tags:
      - bcf
    put:
      operationId: fullUpdateFullTopic
      summary: Update all fields of a topic
      description: 'This is not a standard route. You can update topic, viewpoints
        and comment is a signle callnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/FullTopic'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/FullTopic'
      tags:
      - bcf
    patch:
      operationId: updateFullTopic
      summary: Update some fields of a topic
      description: 'This is not a standard route. You can update topic, viewpoints
        and comment is a signle callnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/FullTopic'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/FullTopic'
      tags:
      - bcf
    parameters:
    - name: guid
      in: path
      description: A UUID string identifying this topic.
      required: true
      type: string
      format: uuid
    - name: projects_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics:
    get:
      operationId: getTopics
      summary: Retrieve all topics
      description: 'Retrieve all topicsnRequired scopes: bcf:read'
      parameters:
      - name: ifcs
        in: query
        description: Filter the returned list by ifcs
        required: false
        type: string
      - name: format
        in: query
        description: Filter the returned list by format
        required: false
        type: string
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Topic'
      tags:
      - bcf
    post:
      operationId: createTopic
      summary: Create a topic
      description: 'Create a topicnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Topic'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Topic'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{guid}:
    get:
      operationId: getTopic
      summary: Retrieve a topic
      description: 'Retrieve a topicnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Topic'
      tags:
      - bcf
    put:
      operationId: fullUpdateTopic
      summary: Update all fields of a topic
      description: 'Update all fields of a topicnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Topic'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Topic'
      tags:
      - bcf
    patch:
      operationId: updateTopic
      summary: Update some fields of a topic
      description: 'Update some fields of a topicnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Topic'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Topic'
      tags:
      - bcf
    delete:
      operationId: deleteTopic
      summary: Delete a topic
      description: 'Delete a topicnRequired scopes: bcf:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - bcf
    parameters:
    - name: guid
      in: path
      description: A UUID string identifying this topic.
      required: true
      type: string
      format: uuid
    - name: projects_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/comments:
    get:
      operationId: getComments
      summary: Retrieve all comments
      description: 'Retrieve all commentsnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
      tags:
      - bcf
    post:
      operationId: createComment
      summary: Create a comment
      description: 'Create a commentnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Comment'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/comments/{guid}:
    get:
      operationId: getComment
      summary: Retrieve a comment
      description: 'Retrieve a commentnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - bcf
    put:
      operationId: fullUpdateComment
      summary: Update all fields of a comment
      description: 'Update all fields of a commentnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Comment'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - bcf
    patch:
      operationId: updateComment
      summary: Update some fields of a comment
      description: 'Update some fields of a commentnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Comment'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Comment'
      tags:
      - bcf
    delete:
      operationId: deleteComment
      summary: Delete a comment
      description: 'Delete a commentnRequired scopes: bcf:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - bcf
    parameters:
    - name: guid
      in: path
      description: A UUID string identifying this comment.
      required: true
      type: string
      format: uuid
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/topic-viewpoints:
    get:
      operationId: getTopicViewpoints
      summary: Retrieve all viewpoints attached to the topic
      description: 'This is not a standard route. It returns all viewpoints of the
        topic that are not attached to a comment.nRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Viewpoint'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints:
    get:
      operationId: getViewpoints
      summary: Retrieve all Viewpoints of a topic
      description: 'Retrieve all Viewpoints of a topicnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Viewpoint'
      tags:
      - bcf
    post:
      operationId: createViewpoint
      summary: Create a Viewpoint
      description: 'Create a ViewpointnRequired scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Viewpoint'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Viewpoint'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{guid}:
    get:
      operationId: getViewpoint
      summary: Retrieve a Viewpoint
      description: 'Retrieve a ViewpointnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Viewpoint'
      tags:
      - bcf
    put:
      operationId: fullUpdateViewpoint
      summary: Update all fields of a Viewpoint
      description: 'This is not a standard route. Update all fields of a ViewpointnRequired
        scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Viewpoint'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Viewpoint'
      tags:
      - bcf
    patch:
      operationId: updateViewpoint
      summary: Update some fields of a Viewpoint
      description: 'This is not a standard route. Update some fields of a ViewpointnRequired
        scopes: bcf:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Viewpoint'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Viewpoint'
      tags:
      - bcf
    delete:
      operationId: deleteViewpoint
      summary: Delete a Viewpoint
      description: 'This is not a standard route. Delete a ViewpointnRequired scopes:
        bcf:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - bcf
    parameters:
    - name: guid
      in: path
      description: A UUID string identifying this viewpoint.
      required: true
      type: string
      format: uuid
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/coloring:
    get:
      operationId: getColorings
      summary: Retrieve all colorings of a viewpoint
      description: 'Retrieve all colorings of a viewpointnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Coloring'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
    - name: viewpoints_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/selection:
    get:
      operationId: getSelections
      summary: Retrieve all selections of a viewpoint
      description: 'Retrieve all selections of a viewpointnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Component'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
    - name: viewpoints_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/snapshot:
    get:
      operationId: getSnapshot
      summary: Retrieve the viewpoint' snapshot
      description: Retrieve the viewpoint' snapshot
      parameters: []
      responses:
        200:
          description: Snapshot file
          schema:
            description: Snapshot file
            type: file
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
    - name: viewpoints_pk
      in: path
      required: true
      type: string
  /bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/visibility:
    get:
      operationId: getVisibilities
      summary: Retrieve all visibilities of a viewpoint
      description: 'Retrieve all visibilities of a viewpointnRequired scopes: bcf:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Visibility'
      tags:
      - bcf
    parameters:
    - name: projects_pk
      in: path
      required: true
      type: string
    - name: topics_pk
      in: path
      required: true
      type: string
    - name: viewpoints_pk
      in: path
      required: true
      type: string
  /cloud:
    get:
      operationId: getClouds
      summary: Retrieve all clouds
      description: Returns user's (or app's) clouds only
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Cloud'
      tags:
      - cloud
    post:
      operationId: createCloud
      summary: Create a cloud
      description: 'nRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Cloud'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Cloud'
      tags:
      - cloud
    parameters: []
  /cloud/{cloud_pk}/invitation:
    get:
      operationId: getCloudInvitations
      summary: Retrieve all pending invitations in the cloud
      description: 'Returns app''s invitations onlynRequired scopes: org:manage'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/CloudInvitation'
      tags:
      - cloud
    post:
      operationId: inviteCloudUser
      summary: Invite a cloud administrator
      description: 'Invite cloud administrators only. To invite in a project, see
        inviteProjectUser. You can''t invite a user already in the cloud. Create multiple
        invitations of the same email in the same cloud will generate multiple invitation
        emails but not multiple invitation objectnRequired scopes: org:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CloudInvitation'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/CloudInvitation'
      tags:
      - cloud
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/invitation/{id}:
    delete:
      operationId: cancelCloudUserInvitation
      summary: Cancel a pending invitation
      description: 'Cancel a pending invitationnRequired scopes: org:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - cloud
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this invitation.
      required: true
      type: integer
  /cloud/{cloud_pk}/project:
    get:
      operationId: getProjects
      summary: Retrieve all projects
      description: Retrieve all projects of the cloud
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
      tags:
      - project
    post:
      operationId: createProject
      summary: Create a project
      description: 'Create a projectnRequired scopes: org:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Project'
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{id}:
    get:
      operationId: getProject
      summary: Retrieve a project
      description: Retrieve a project
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Project'
      tags:
      - project
    put:
      operationId: fullUpdateProject
      summary: Update all fields of a project
      description: 'Update all fields of a projectnRequired scopes: org:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Project'
      tags:
      - project
    patch:
      operationId: updateProject
      summary: Update some fields of a project
      description: 'Update some fields of a projectnRequired scopes: org:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Project'
      tags:
      - project
    delete:
      operationId: deleteProject
      summary: Delete a project
      description: 'It can take a long time to respond because we may need to delete
        all properties of all elements of all models in the projectnRequired scopes:
        org:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /cloud/{cloud_pk}/project/{id}/tree:
    get:
      operationId: getProjectTree
      summary: Retrieve the complete DMS tree
      description: Returns the document tree from root folder
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Folder'
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /cloud/{cloud_pk}/project/{project_pk}/checkplan:
    get:
      operationId: getCheckplans
      summary: Retrieve all Checkplans
      description: 'Retrieve all CheckplansnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/CheckPlan'
      tags:
      - checkplan
    post:
      operationId: createCheckplan
      summary: Create a Checkplan
      description: 'TCreate a CheckplannRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CheckPlan'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/CheckPlan'
      tags:
      - checkplan
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset:
    get:
      operationId: getRulesets
      summary: Retrieve all Rulesets
      description: 'Retrieve all RulesetsnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Ruleset'
      tags:
      - checkplan
    post:
      operationId: createRuleset
      summary: Create a Ruleset
      description: 'TCreate a RulesetnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Ruleset'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Ruleset'
      tags:
      - checkplan
    parameters:
    - name: check_plan_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}:
    get:
      operationId: getRuleset
      summary: Retrieve one Ruleset
      description: 'Retrieve one RulesetnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Ruleset'
      tags:
      - checkplan
    put:
      operationId: fullUpdateRuleset
      summary: Update all fields of a Ruleset
      description: 'Update all fields of a RulesetnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Ruleset'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Ruleset'
      tags:
      - checkplan
    patch:
      operationId: updateRuleset
      summary: Update some fields of a Ruleset
      description: 'Update some fields of a RulesetnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Ruleset'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Ruleset'
      tags:
      - checkplan
    delete:
      operationId: deleteRuleset
      summary: Delete a Ruleset
      description: 'Delete a RulesetnRequired scopes: check:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: check_plan_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ruleset.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule:
    get:
      operationId: getRules
      summary: Retrieve all Rules
      description: 'Retrieve all RulesnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Rule'
      tags:
      - checkplan
    post:
      operationId: createRule
      summary: Create a Rule
      description: 'TCreate a RulenRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Rule'
      tags:
      - checkplan
    parameters:
    - name: check_plan_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: ruleset_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}:
    get:
      operationId: getRule
      summary: Retrieve one Rule
      description: 'Retrieve one RulenRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Rule'
      tags:
      - checkplan
    put:
      operationId: fullUpdateRule
      summary: Update all fields of a Rule
      description: 'Update all fields of a RulenRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Rule'
      tags:
      - checkplan
    patch:
      operationId: updateRule
      summary: Update some fields of a Rule
      description: 'Update some fields of a RulenRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Rule'
      tags:
      - checkplan
    delete:
      operationId: deleteRule
      summary: Delete a Rule
      description: 'Delete a RulenRequired scopes: check:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: check_plan_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this rule.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
    - name: ruleset_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent:
    get:
      operationId: getRuleComponents
      summary: Retrieve all RuleComponents
      description: 'Retrieve all RuleComponentsnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/RuleComponent'
      tags:
      - checkplan
    post:
      operationId: createRuleComponent
      summary: Create a RuleComponent
      description: 'TCreate a RuleComponentnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RuleComponent'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/RuleComponent'
      tags:
      - checkplan
    parameters:
    - name: check_plan_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: rule_pk
      in: path
      required: true
      type: string
    - name: ruleset_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}:
    get:
      operationId: getRuleComponent
      summary: Retrieve one RuleComponent
      description: 'Retrieve one RuleComponentnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/RuleComponent'
      tags:
      - checkplan
    put:
      operationId: fullUpdateRuleComponent
      summary: Update all fields of a RuleComponent
      description: 'Update all fields of a RuleComponentnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RuleComponent'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/RuleComponent'
      tags:
      - checkplan
    patch:
      operationId: updateRuleComponent
      summary: Update some fields of a RuleComponent
      description: 'Update some fields of a RuleComponentnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RuleComponent'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/RuleComponent'
      tags:
      - checkplan
    delete:
      operationId: deleteRuleComponent
      summary: Delete a RuleComponent
      description: 'Delete a RuleComponentnRequired scopes: check:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: check_plan_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this rule component.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
    - name: rule_pk
      in: path
      required: true
      type: string
    - name: ruleset_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}:
    get:
      operationId: getCheckplan
      summary: Retrieve one Checkplan
      description: 'Retrieve one CheckplannRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/CheckPlan'
      tags:
      - checkplan
    put:
      operationId: fullUpdateCheckplan
      summary: Update all fields of a Checkplan
      description: 'Update all fields of a CheckplannRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CheckPlan'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/CheckPlan'
      tags:
      - checkplan
    patch:
      operationId: updateCheckplan
      summary: Update some fields of a Checkplan
      description: 'Update some fields of a CheckplannRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CheckPlan'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/CheckPlan'
      tags:
      - checkplan
    delete:
      operationId: deleteCheckplan
      summary: Delete a Checkplan
      description: 'Delete a CheckplannRequired scopes: check:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this check plan.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/classification:
    get:
      operationId: getClassifications
      summary: Retrieve all classifications
      description: 'Retrieve all classifications of all models in the projectnRequired
        scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Classification'
      tags:
      - project
    post:
      operationId: createClassification
      summary: Create a classification
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    n    If
        created classification already exists, it will not be duplicated and the previous
        one will be returned.n    You also can add a ''classification'' filter on
        this endpoint. By ex: /classification?name=''untec''. The name is case sensitiven    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Classification'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Classification'
        400:
          description: 'All creates failed: list of errors'
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/classification/{id}:
    get:
      operationId: getClassification
      summary: Retrieve a classification
      description: 'Retrieve a classificationnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Classification'
      tags:
      - project
    put:
      operationId: fullUpdateClassification
      summary: Update all fields of a classification
      description: 'Update all fields of a classificationnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Classification'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Classification'
      tags:
      - project
    patch:
      operationId: updateClassification
      summary: Update some fields of a classification
      description: 'Update some fields of a classificationnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Classification'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Classification'
      tags:
      - project
    delete:
      operationId: deleteClassification
      summary: Delete a classification
      description: 'All elements having this classification will lose itnRequired
        scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this classification.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/document:
    get:
      operationId: getClassifications
      summary: Retrieve all classifications
      description: 'Retrieve all classifications of all models in the projectnRequired
        scopes: document:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
      tags:
      - project
    post:
      operationId: createClassification
      summary: Create a classification
      description: 'nRequired scopes: document:write'
      parameters:
      - name: parent
        in: formData
        required: false
        type: integer
        x-nullable: true
      - name: parent_id
        in: formData
        required: false
        type: integer
      - name: creator
        in: formData
        required: false
        type: integer
        x-nullable: true
      - name: project
        in: formData
        required: false
        type: integer
        x-nullable: true
      - name: name
        in: formData
        description: Shown name of the file
        required: true
        type: string
        maxLength: 512
        minLength: 1
      - name: file_name
        in: formData
        description: Full name of the file
        required: false
        type: string
        maxLength: 512
        x-nullable: true
      - name: description
        in: formData
        description: Description of the file
        required: false
        type: string
        x-nullable: true
      - name: file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: size
        in: formData
        description: Size of the file. The file may be compressed and show a smaller
          size
        required: false
        type: integer
        maximum: 2147483647
        minimum: 0
        x-nullable: true
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Document'
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/document/{id}:
    get:
      operationId: getClassification
      summary: Retrieve a classification
      description: 'Retrieve a classificationnRequired scopes: document:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Document'
      tags:
      - project
    put:
      operationId: fullUpdateClassification
      summary: Update all fields of a classification
      description: 'Update all fields of a classificationnRequired scopes: document:write'
      parameters:
      - name: parent
        in: formData
        required: false
        type: integer
        x-nullable: true
      - name: parent_id
        in: formData
        required: false
        type: integer
      - name: creator
        in: formData
        required: false
        type: integer
        x-nullable: true
      - name: project
        in: formData
        required: false
        type: integer
        x-nullable: true
      - name: name
        in: formData
        description: Shown name of the file
        required: true
        type: string
        maxLength: 512
        minLength: 1
      - name: file_name
        in: formData
        description: Full name of the file
        required: false
        type: string
        maxLength: 512
        x-nullable: true
      - name: description
        in: formData
        description: Description of the file
        required: false
        type: string
        x-nullable: true
      - name: file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: size
        in: formData
        description: Size of the file. The file may be compressed and show a smaller
          size
        required: false
        type: integer
        maximum: 2147483647
        minimum: 0
        x-nullable: true
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Document'
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      tags:
      - project
    patch:
      operationId: updateClassification
      summary: Update some fields of a classification
      description: 'Update some fields of a classificationnRequired scopes: document:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Document'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Document'
      tags:
      - project
    delete:
      operationId: deleteClassification
      summary: Delete a classification
      description: 'All elements having this classification will lose itnRequired
        scopes: document:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this document.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/folder:
    get:
      operationId: getFolders
      summary: Retrieve all folders
      description: 'Retrieve all folders in the project. This is an array of folder.
        If you want to get the tree of all folders, see getProjectTreenRequired scopes:
        document:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
      tags:
      - project
    post:
      operationId: createFolder
      summary: Create a folder
      description: 'If the created folder have no parent, it will be put as a child
        of the default root folder of the projectnRequired scopes: document:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Folder'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Folder'
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/folder/{id}:
    get:
      operationId: getFolder
      summary: Retrieve a folder
      description: 'Retrieve a foldernRequired scopes: document:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Folder'
      tags:
      - project
    put:
      operationId: fullUpdateFolder
      summary: Update all fields of a folder
      description: 'Update all fields of a foldernRequired scopes: document:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Folder'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Folder'
      tags:
      - project
    patch:
      operationId: updateFolder
      summary: Update some fields of a folder
      description: 'Update some fields of a foldernRequired scopes: document:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Folder'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Folder'
      tags:
      - project
    delete:
      operationId: deleteFolder
      summary: Delete a folder
      description: 'All files and subfolders will be deleted toonRequired scopes:
        document:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this folder.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc:
    get:
      operationId: getIfcs
      summary: Retrieve all models
      description: 'Retrieve all modelsnRequired scopes: ifc:read'
      parameters:
      - name: status
        in: query
        description: Filter the returned list by status
        required: false
        type: string
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Ifc'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}:
    get:
      operationId: getIfc
      summary: Retrieve one model
      description: 'nRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Ifc'
      tags:
      - ifc
    put:
      operationId: fullUpdateIfc
      summary: Update all fields of a model
      description: 'Update all fields of a modelnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Ifc'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Ifc'
      tags:
      - ifc
    patch:
      operationId: updateIfc
      summary: Update some fields of a model
      description: 'Update some fields of a modelnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Ifc'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Ifc'
      tags:
      - ifc
    delete:
      operationId: deleteIfc
      summary: Delete a model
      description: 'It will delete the related document toonRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/bvh:
    get:
      operationId: getIfcMap
      summary: Get bvh file
      description: 'n        DEPRECATED: Now, retrieve the file url in the ifc object
        itselfn        Returns the bvh filen        nRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: The file
      tags:
      - ifc
      deprecated: true
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/files:
    patch:
      operationId: updateIfcFiles
      summary: Update models file (gltf, svg, structure, etc)
      description: 'n        Patch ifc files (gltf, structure, svg, etc)n        nRequired
        scopes: ifc:write'
      parameters:
      - name: structure_file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: systems_file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: map_file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: gltf_file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: bvh_tree_file
        in: formData
        required: false
        type: file
        x-nullable: true
      - name: viewer_360_file
        in: formData
        required: false
        type: file
        x-nullable: true
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/IfcFiles'
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/gltf:
    get:
      operationId: getIfcGLTF
      summary: Get gltf file
      description: 'n        DEPRECATED: Now, retrieve the file url in the ifc object
        itselfn        Returns the gltf filen        nRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: The file
      tags:
      - ifc
      deprecated: true
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/map:
    get:
      operationId: getIfcBVH
      summary: Get svg file
      description: 'n        DEPRECATED: Now, retrieve the file url in the ifc object
        itselfn        Returns the map filen        nRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: The file
      tags:
      - ifc
      deprecated: true
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/structure:
    get:
      operationId: getIfcStructure
      summary: Get structure file
      description: 'n        DEPRECATED: Now, retrieve the file url in the ifc object
        itselfn        Returns the structure filen        nRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: The file
      tags:
      - ifc
      deprecated: true
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/systems:
    get:
      operationId: getIfcSystems
      summary: Get systems file
      description: 'n        DEPRECATED: Now, retrieve the file url in the ifc object
        itselfn        Returns the system filen        nRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: The file
      tags:
      - ifc
      deprecated: true
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker:
    get:
      operationId: getCheckers
      summary: Retrieve all checkers of a model
      description: 'A checker is a link between a checkplan and a model. A checker
        can launch a check multiple time and store all the resultsnRequired scopes:
        check:read, ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/IfcChecker'
      tags:
      - checkplan
    post:
      operationId: createChecker
      summary: Create a checker to a model
      description: 'A checker is a link between a checkplan and a model. A checker
        can launch a check multiple time and store all the resultsnRequired scopes:
        check:write, ifc:read'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/IfcChecker'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/IfcChecker'
      tags:
      - checkplan
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result:
    get:
      operationId: getCheckerResults
      summary: Retrieve all CheckerResults
      description: 'Retrieve all CheckerResultsnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/CheckerResult'
      tags:
      - checkplan
    post:
      operationId: createCheckerResult
      summary: Create a CheckerResult
      description: 'TCreate a CheckerResultnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CheckerResult'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/CheckerResult'
      tags:
      - checkplan
    parameters:
    - name: checker_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}:
    get:
      operationId: getCheckerResult
      summary: Retrieve one CheckerResult
      description: 'Retrieve one CheckerResultnRequired scopes: check:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/CheckerResult'
      tags:
      - checkplan
    put:
      operationId: fullUpdateCheckerResult
      summary: Update all fields of a CheckerResult
      description: 'Update all fields of a CheckerResultnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CheckerResult'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/CheckerResult'
      tags:
      - checkplan
    patch:
      operationId: updateCheckerResult
      summary: Update some fields of a CheckerResult
      description: 'Update some fields of a CheckerResultnRequired scopes: check:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CheckerResult'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/CheckerResult'
      tags:
      - checkplan
    delete:
      operationId: deleteCheckerResult
      summary: Delete a CheckerResult
      description: 'Delete a CheckerResultnRequired scopes: check:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: checker_pk
      in: path
      required: true
      type: string
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this checker result.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}:
    get:
      operationId: getChecker
      summary: Retrieve a checker of a model
      description: 'A checker is a link between a checkplan and a model. A checker
        can launch a check multiple time and store all the resultsnRequired scopes:
        check:read, ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/IfcChecker'
      tags:
      - checkplan
    put:
      operationId: fullUpdateChecker
      summary: Update all fields of a checker of a model
      description: 'A checker is a link between a checkplan and a model. A checker
        can launch a check multiple time and store all the resultsnRequired scopes:
        check:write, ifc:read'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/IfcChecker'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/IfcChecker'
      tags:
      - checkplan
    patch:
      operationId: updateChecker
      summary: Update some fields of a checker of a model
      description: 'A checker is a link between a checkplan and a model. A checker
        can launch a check multiple time and store all the resultsnRequired scopes:
        check:write, ifc:read'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/IfcChecker'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/IfcChecker'
      tags:
      - checkplan
    delete:
      operationId: deleteChecker
      summary: Delete a checker of a model
      description: 'A checker is a link between a checkplan and a model. A checker
        can launch a check multiple time and store all the resultsnRequired scopes:
        check:write, ifc:read'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc checker.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}/launch-check:
    post:
      operationId: launchNewCheck
      summary: Launch a new check on the model
      description: 'Starts a new check in the checkernRequired scopes: check:write,
        ifc:read'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/IfcChecker'
      responses:
        201:
          description: ""
      tags:
      - checkplan
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this ifc checker.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification:
    get:
      operationId: getIfcClassifications
      summary: Retrieve all classifications in a model
      description: 'Retrieve all classifications in a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Classification'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element:
    get:
      operationId: listClassificationElementRelations
      summary: List all associations between classifications and elements
      description: 'List all associations between classifications and elementsnRequired
        scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/ElementClassificationRelation'
      tags:
      - ifc
    post:
      operationId: createClassificationElementRelations
      summary: Create association between existing classification and existing element
      description: 'Create association between existing classification and existing
        elementnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ElementClassificationRelation'
      responses:
        201:
          description: The response is empty
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/list_destroy:
    delete:
      operationId: bulkDeleteIfcClassifications
      summary: Remove all classifications from model's elements
      description: 'n            Delete relation between filtered classifications
        (eg. /classifications?name=untec) and all ifc''s elements.n            No
        classification will be deleted on this endpoint, only the relation between
        ifc''s elements and their classification.n        nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element:
    get:
      operationId: getElementsFromClassification
      summary: Retrieve all elements with the classification
      description: 'Retrieve all elements with the classificationnRequired scopes:
        ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Element'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_classification_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/bulk_destroy:
    delete:
      operationId: bulkRemoveElementsFromClassification
      summary: Remove the classifications from all elements
      description: 'n        Bulk delete.n        You should send a list of ids in
        the body.n        These ids (or relations with these ids in case of many-to-many
        relation deletion) will be deletedn    nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_classification_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/{uuid}:
    delete:
      operationId: removeElementsFromClassification
      summary: Remove the classification from all elements
      description: 'Remove the classification from all elements. No element nor classification
        will be deletednRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_classification_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: uuid
      in: path
      description: IFC element or element type UUID
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element:
    get:
      operationId: getElements
      summary: Retrieve all elements of a model
      description: 'Retrieve all elements of a model. If not filtered, the json may
        be very large. To efficently retrieve all elements and their data, see getRawElementsnRequired
        scopes: ifc:read'
      parameters:
      - name: type
        in: query
        description: Filter the returned list by type
        required: false
        type: string
      - name: classification
        in: query
        description: Filter the returned list by classification
        required: false
        type: string
      - name: classification__notation
        in: query
        description: Filter the returned list by classification__notation
        required: false
        type: string
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Element'
      tags:
      - ifc
    post:
      operationId: createElement
      summary: Create an element in the model
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Element'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Element'
        400:
          description: 'If all creates fail: a list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update:
    put:
      operationId: bulkUpdateElements
      summary: Update many elements at once (all field must be defined)
      description: 'n        Bulk update.n        Similar to update, but the body
        should be a list of objects to patch or putn        The response will be a
        list (in the same order) of updated objects or of errors if anyn        If
        at least one update succeeded, the status code will be 200. If every update
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Element'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Element'
        400:
          description: 'If all updates fail: a list of errors'
      tags:
      - ifc
    patch:
      operationId: bulkFullUpdateElements
      summary: Update many elements at once (only changing fields may be defined)
      description: 'n        Bulk update.n        Similar to update, but the body
        should be a list of objects to patch or putn        The response will be a
        list (in the same order) of updated objects or of errors if anyn        If
        at least one update succeeded, the status code will be 200. If every update
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Element'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Element'
        400:
          description: 'If all updates fail: a list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw:
    get:
      operationId: getRawElements
      summary: Retrieve all elements in a optimized format
      description: 'n        Returns elements, property_sets, properties, definitions
        and units in a JSON optimized structuren        nRequired scopes: ifc:read'
      parameters:
      - name: type
        in: query
        description: Filter the returned list by type
        required: false
        type: string
      - name: classification
        in: query
        description: Filter the returned list by classification
        required: false
        type: string
      - name: classification__notation
        in: query
        description: Filter the returned list by classification__notation
        required: false
        type: string
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/RawElements'
      tags:
      - ifc
    post:
      operationId: createRawElements
      summary: Create elements in an optimized format
      description: 'n        You can use the same optimized structure to post multiple
        elements, property_sets, properties, definitions and units at once.n        If
        the structure is malformed, an error 500 without more explaination may be
        returnedn        nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RawElements'
      responses:
        201:
          description: Empty response
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification:
    get:
      operationId: getClassificationsOfElement
      summary: Retrieve all classifications of an element
      description: 'Retrieve all classifications of an elementnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Classification'
      tags:
      - ifc
    post:
      operationId: createClassificationsOfElement
      summary: Create one or many classifications to an element
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    n    If
        classification created already exists, it will just be added to item''s classifications
        and will not be duplicatedn    nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Classification'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Classification'
        400:
          description: 'All creates failed: list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/bulk_destroy:
    delete:
      operationId: bulkRemoveClassificationsOfElement
      summary: Remove many classifications from an element
      description: 'n        Bulk delete.n        You should send a list of ids in
        the body.n        These ids (or relations with these ids in case of many-to-many
        relation deletion) will be deletedn    nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/{id}:
    delete:
      operationId: removeClassificationOfElement
      summary: Remove a classification from an element
      description: 'The classification will not be deletednRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this classification.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset:
    get:
      operationId: getElementPropertySets
      summary: Retrieve all PropertySets of an element
      description: 'Retrieve all PropertySets of an elementnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    post:
      operationId: createElementPropertySet
      summary: Create a PropertySets to an element
      description: 'Create a PropertySets that will be automatically linked to the
        elementnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PropertySet'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}:
    get:
      operationId: getElementPropertySet
      summary: Retrieve a PropertySet of an element
      description: 'Retrieve a PropertySet of an elementnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    delete:
      operationId: removeElementPropertySet
      summary: Remove a PropertySet from an element
      description: 'Delete the relation between the element and the property set.
        Does not delete any objectnRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this property set.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property:
    get:
      operationId: getElementPropertySetProperties
      summary: Retrieve all Properties of a PropertySet
      description: 'Retrieve all Properties of a PropertySetnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Property'
      tags:
      - ifc
    post:
      operationId: createElementPropertySetProperty
      summary: Create a property to a PropertySet
      description: 'nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Property'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Property'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: propertyset_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}:
    get:
      operationId: getElementPropertySetProperty
      summary: Retrieve a Property of a PropertySet
      description: 'Retrieve a Property of a PropertySetnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Property'
      tags:
      - ifc
    delete:
      operationId: removeElementPropertySetProperty
      summary: Remove a property from a PropertySet
      description: 'nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this property.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: propertyset_pk
      in: path
      required: true
      type: string
  ? /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition
  : get:
      operationId: getElementPropertySetPropertyDefinitions
      summary: Retrieve all Definitions of a PropertySet
      description: 'Retrieve all Definitions of a PropertySetnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    post:
      operationId: createElementPropertySetPropertyDefinition
      summary: Create a Definition to a Property
      description: 'nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PropertyDefinition'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: property_pk
      in: path
      required: true
      type: string
    - name: propertyset_pk
      in: path
      required: true
      type: string
  ? /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}
  : get:
      operationId: getElementPropertySetPropertyDefinition
      summary: Retrieve a Definition of a Property
      description: 'Retrieve a Definition of a PropertynRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    delete:
      operationId: removeElementPropertySetPropertyDefinition
      summary: Remove a Definition from a Property
      description: 'nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this property definition.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: property_pk
      in: path
      required: true
      type: string
    - name: propertyset_pk
      in: path
      required: true
      type: string
  ? /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit
  : get:
      operationId: getElementPropertySetPropertyDefinitionUnits
      summary: Retrieve all Units of a Definition
      description: 'Retrieve all Units of a DefinitionnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Unit'
      tags:
      - ifc
    post:
      operationId: createElementPropertySetPropertyDefinitionUnit
      summary: Create a Unit to a Definition
      description: 'Create a Unit to a DefinitionnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Unit'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/Unit'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: property_pk
      in: path
      required: true
      type: string
    - name: propertydefinition_pk
      in: path
      required: true
      type: string
    - name: propertyset_pk
      in: path
      required: true
      type: string
  ? /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}
  : get:
      operationId: getElementPropertySetPropertyDefinitionUnit
      summary: Retrieve a Unit of a Definition
      description: 'Retrieve a Unit of a DefinitionnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Unit'
      tags:
      - ifc
    delete:
      operationId: removeElementPropertySetPropertyDefinitionUnit
      summary: Remove a Unit from a Definition
      description: 'Remove a Unit from a DefinitionnRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: element_uuid
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this unit.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: property_pk
      in: path
      required: true
      type: string
    - name: propertydefinition_pk
      in: path
      required: true
      type: string
    - name: propertyset_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}:
    get:
      operationId: getElement
      summary: Retrieve an element of a model
      description: 'Retrieve an element of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Element'
      tags:
      - ifc
    put:
      operationId: fullUpdateElement
      summary: Update all fields of an element
      description: 'Update all fields of a element. The IFC file will not be updated.
        The created element will be accessible over the API and when exporting an
        IFC filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Element'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Element'
      tags:
      - ifc
    patch:
      operationId: updateElement
      summary: Update some fields of a zone
      description: 'Update some fields of a zone. The IFC file will not be updated.
        The created element will be accessible over the API and when exporting an
        IFC filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Element'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Element'
      tags:
      - ifc
    delete:
      operationId: deleteElement
      summary: Delete a zone of a model
      description: 'The IFC file will not be updated. The remaining elements are available
        in API and will be available when exporting an IFC filenRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: uuid
      in: path
      description: IFC element or element type UUID
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property:
    get:
      operationId: getIfcProperties
      summary: Retrieve all Properties of a model
      description: 'Retrieve all PropertySets of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Property'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_destroy:
    delete:
      operationId: bulkDeleteIfcProperties
      summary: Delete many Property of a model
      description: 'n        Bulk delete.n        You should send a list of ids in
        the body.n        These ids (or relations with these ids in case of many-to-many
        relation deletion) will be deletedn    nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update:
    put:
      operationId: bulkUpdateIfcProperty
      summary: Update all fields of many properties of a model
      description: 'n        Bulk update.n        Similar to update, but the body
        should be a list of objects to patch or putn        The response will be a
        list (in the same order) of updated objects or of errors if anyn        If
        at least one update succeeded, the status code will be 200. If every update
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Property'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Property'
        400:
          description: 'All updates failed: list of errors'
      tags:
      - ifc
    patch:
      operationId: bulkFullUpdateIfcProperty
      summary: Update some fields of many properties of a model
      description: 'n        Bulk update.n        Similar to update, but the body
        should be a list of objects to patch or putn        The response will be a
        list (in the same order) of updated objects or of errors if anyn        If
        at least one update succeeded, the status code will be 200. If every update
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Property'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Property'
        400:
          description: 'All updates failed: list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}:
    get:
      operationId: getIfcProperty
      summary: Retrieve a Property of a model
      description: 'Retrieve a Property of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Property'
      tags:
      - ifc
    put:
      operationId: fullUpdateIfcProperty
      summary: Update some fields of a Property
      description: 'Update some fields of a PropertynRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Property'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Property'
      tags:
      - ifc
    patch:
      operationId: updateIfcProperty
      summary: Update some fields of a Property
      description: 'Update some fields of a PropertynRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Property'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Property'
      tags:
      - ifc
    delete:
      operationId: deleteIfcProperty
      summary: Delete a Property of a model
      description: 'Delete a Property of a modelnRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this property.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition:
    get:
      operationId: getIfcPropertyDefinitions
      summary: Retrieve all PropertyDefinitions of a model
      description: 'Retrieve all PropertyDefinitions of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    post:
      operationId: createIfcPropertyDefinition
      summary: Create a PropertyDefinition on the model
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PropertyDefinition'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertyDefinition'
        400:
          description: 'All creates failed: list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/bulk_destroy:
    delete:
      operationId: bulkDeleteIfcPropertyDefinitions
      summary: Delete many PropertyDefinitions of a model
      description: 'n        Bulk delete.n        You should send a list of ids in
        the body.n        These ids (or relations with these ids in case of many-to-many
        relation deletion) will be deletedn    nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}:
    get:
      operationId: getIfcPropertyDefinition
      summary: Retrieve a PropertyDefinition of a model
      description: 'Retrieve a PropertyDefinition of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    put:
      operationId: fullUpdateIfcPropertyDefinition
      summary: Update all fields of many PropertyDefinitions of a model
      description: 'nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PropertyDefinition'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    patch:
      operationId: updateIfcPropertyDefinition
      summary: Update some fields of many PropertyDefinitions of a model
      description: 'nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PropertyDefinition'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertyDefinition'
      tags:
      - ifc
    delete:
      operationId: deleteIfcPropertyDefinition
      summary: Delete a PropertyDefinitions of a model
      description: 'Delete a PropertyDefinitions of a modelnRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this property definition.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset:
    get:
      operationId: getPropertySets
      summary: Retrieve all PropertySets of a model
      description: 'Retrieve all PropertySets of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    post:
      operationId: createPropertySet
      summary: Create a PropertySet
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PropertySet'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertySet'
        400:
          description: 'All creates failed: list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset-element:
    post:
      operationId: createPropertySetElementRelations
      summary: Create association between PropertySet and element
      description: 'Create association between existing PropertySet and existing elementnRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ElementPropertySetRelation'
      responses:
        201:
          description: The response is empty
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/bulk_destroy:
    delete:
      operationId: bulkDeletePropertySet
      summary: Delete many PropertySet of a model
      description: 'n        Bulk delete.n        You should send a list of ids in
        the body.n        These ids (or relations with these ids in case of many-to-many
        relation deletion) will be deletedn    nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}:
    get:
      operationId: getPropertySet
      summary: Retrieve a PropertySet of a model
      description: 'Retrieve a PropertySet of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    put:
      operationId: fullUpdatePropertySet
      summary: Update all fields of a PropertySet
      description: 'Update all fields of a PropertySetnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PropertySet'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    patch:
      operationId: updatePropertySet
      summary: Update some fields of a PropertySet
      description: 'Update some fields of a PropertySetnRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PropertySet'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PropertySet'
      tags:
      - ifc
    delete:
      operationId: deletePropertySet
      summary: Delete a PropertySet of a model
      description: 'Delete a PropertySet of a modelnRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this property set.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space:
    get:
      operationId: getSpaces
      summary: Retrieve all spaces of the model
      description: 'Retrieve all spaces of the modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Space'
      tags:
      - ifc
    post:
      operationId: createSpace
      summary: Create a space in the model
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Space'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Space'
        400:
          description: 'All creates failed: list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}:
    get:
      operationId: getSpace
      summary: Retrieve one space of the model
      description: 'Retrieve one space of the modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Space'
      tags:
      - ifc
    put:
      operationId: fullUpdateSpace
      summary: Update all fields of a space
      description: 'Update all fields of a space. The IFC file will not be updated.
        The created space will be accessible over the API and when exporting an IFC
        filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Space'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Space'
      tags:
      - ifc
    patch:
      operationId: updateSpace
      summary: Update some fields of a space
      description: 'Update some fields of a space. The IFC file will not be updated.
        The created space will be accessible over the API and when exporting an IFC
        filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Space'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Space'
      tags:
      - ifc
    delete:
      operationId: deleteSpace
      summary: Delete a space
      description: 'It will not delete related zones. The IFC file will not be updated.
        The remaining spaces are available in API and will be available when exporting
        an IFC filenRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this space.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit:
    get:
      operationId: getIfcUnits
      summary: Retrieve all Units of a model
      description: 'Retrieve all Units of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Unit'
      tags:
      - ifc
    post:
      operationId: createIfcUnit
      summary: Create a Unit on a model
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Unit'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Unit'
        400:
          description: 'All creates failed: list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/bulk_destroy:
    delete:
      operationId: bulkDeleteIfcUnits
      summary: Delete many Units of a model
      description: 'n        Bulk delete.n        You should send a list of ids in
        the body.n        These ids (or relations with these ids in case of many-to-many
        relation deletion) will be deletedn    nRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}:
    get:
      operationId: getIfcUnit
      summary: Retrieve a Unit of a model
      description: 'Retrieve a Unit of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Unit'
      tags:
      - ifc
    put:
      operationId: fullUpdateIfcUnit
      summary: Update all fields of a Unit of a model
      description: 'nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Unit'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Unit'
      tags:
      - ifc
    patch:
      operationId: updateIfcUnit
      summary: Update some fields of a Unit of a model
      description: 'nRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Unit'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Unit'
      tags:
      - ifc
    delete:
      operationId: deleteIfcUnit
      summary: Delete a Unit of a model
      description: 'Delete a Unit of a modelnRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this unit.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone:
    get:
      operationId: getZones
      summary: Retrieve all zones of a model
      description: 'Retrieve all zones of a modelnRequired scopes: ifc:read'
      parameters:
      - name: color
        in: query
        description: Filter the returned list by color
        required: false
        type: string
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Zone'
      tags:
      - ifc
    post:
      operationId: createZone
      summary: Create a zone in the model
      description: 'n        Bulk create available.n        You can either post an
        object or a list of objects.n        Is you post a list, the response will
        be a list (in the same order) of created objects or of errors if anyn        If
        at least one create succeeded, the status code will be 201. If every create
        failed, the status code we''ll be 400 with the list of errorsn    nRequired
        scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Zone'
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Zone'
        400:
          description: 'If all creates fail: a list of errors'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}:
    get:
      operationId: getZone
      summary: Retrieve one zone of a model
      description: 'Retrieve one zone of a modelnRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Zone'
      tags:
      - ifc
    put:
      operationId: fullUpdateZone
      summary: Update all fields of a zone
      description: 'Update all fields of a zone. The IFC file will not be updated.
        The created zone will be accessible over the API and when exporting an IFC
        filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Zone'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Zone'
      tags:
      - ifc
    patch:
      operationId: updateZone
      summary: Update some fields of a zone
      description: 'Update some fields of a zone. The IFC file will not be updated.
        The created zone will be accessible over the API and when exporting an IFC
        filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Zone'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Zone'
      tags:
      - ifc
    delete:
      operationId: deleteZone
      summary: Delete a zone of a model
      description: 'The IFC file will not be updated. The remaining zones are available
        in API and will be available when exporting an IFC filenRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this zone.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space:
    get:
      operationId: getZoneSpaces
      summary: Retrieve all spaces of a zone
      description: 'Retrieve all spaces of a zonenRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/ZoneSpace'
      tags:
      - ifc
    post:
      operationId: createZoneSpace
      summary: Create a space in a zone
      description: 'The IFC file will not be updated. The created space will be accessible
        over the API and when exporting an IFC filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ZoneSpace'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/ZoneSpace'
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: zone_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}:
    get:
      operationId: getZoneSpace
      summary: Retrieve one space of a zone
      description: 'Retrieve one space of a zonenRequired scopes: ifc:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/ZoneSpace'
      tags:
      - ifc
    put:
      operationId: fullUpdateZoneSpace
      summary: Update all fields of a space
      description: 'Update all fields of a space. The IFC file will not be updated.
        The created space will be accessible over the API and when exporting an IFC
        filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ZoneSpace'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/ZoneSpace'
      tags:
      - ifc
    patch:
      operationId: updateZoneSpace
      summary: Update some fields of a space
      description: 'Update some fields of a space. The IFC file will not be updated.
        The created space will be accessible over the API and when exporting an IFC
        filenRequired scopes: ifc:write'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ZoneSpace'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/ZoneSpace'
      tags:
      - ifc
    delete:
      operationId: deleteZoneSpace
      summary: Delete a space of a zone
      description: 'The IFC file will not be updated. The remaining spaces are available
        in API and will be available when exporting an IFC filenRequired scopes: ifc:write'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - ifc
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this space.
      required: true
      type: integer
    - name: ifc_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
    - name: zone_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/invitation:
    get:
      operationId: getProjectInvitations
      summary: Retrieve all pending invitations in the project
      description: 'Returns app''s invitations onlynRequired scopes: org:manage'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectInvitation'
      tags:
      - project
    post:
      operationId: inviteProjectUser
      summary: Invite a project member
      description: 'Invite a project member. If the user is not already a cloud member,
        they will also be invited in the cloud with USER role.nRequired scopes: org:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectInvitation'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/ProjectInvitation'
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/invitation/{id}:
    delete:
      operationId: cancelProjectUserInvitation
      summary: Cancel a pending invitation
      description: 'nRequired scopes: org:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this invitation.
      required: true
      type: integer
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/user:
    get:
      operationId: getProjectUsers
      summary: Retrieve all users in a project
      description: 'Each member of a project can see other members of the projectnRequired
        scopes: cloud:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/project/{project_pk}/user/{id}:
    get:
      operationId: getProjectUser
      summary: Retrieve a user in a project
      description: 'Each member of a project can see other members of the projectnRequired
        scopes: cloud:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/User'
      tags:
      - project
    put:
      operationId: fullUpdateProjectUser
      summary: Update all fields of a project user
      description: 'Change the user role in the cloudnRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProjectUpdate'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/User'
      tags:
      - project
    patch:
      operationId: updateProjectUser
      summary: Update some fields of a project user
      description: 'Change the user role in the cloudnRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProjectUpdate'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/User'
      tags:
      - project
    delete:
      operationId: deleteProjectUser
      summary: Remove a user from a project
      description: 'Remove a user from a projectnRequired scopes: cloud:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - project
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      required: true
      type: string
    - name: project_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/user:
    get:
      operationId: getCloudUsers
      summary: Retrieve all users in a cloud
      description: 'Only administrators can see all cloud membersnRequired scopes:
        cloud:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
      - cloud
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/user/{id}:
    get:
      operationId: getCloudUser
      summary: Retrieve a user in a cloud
      description: 'Only administrators can see a cloud membernRequired scopes: cloud:read'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/User'
      tags:
      - cloud
    put:
      operationId: fullUpdateCloudUser
      summary: Update all fields of a cloud user
      description: 'Change the user role in the cloudnRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserCloudUpdate'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/User'
      tags:
      - cloud
    patch:
      operationId: updateCloudUser
      summary: Update some fields of a cloud user
      description: 'Change the user role in the cloudnRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserCloudUpdate'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/User'
      tags:
      - cloud
    delete:
      operationId: deleteCloudUser
      summary: Remove a user from a cloud
      description: 'The user will also be removed from all the projects of the cloudnRequired
        scopes: cloud:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - cloud
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/webhook:
    get:
      operationId: getWebHooks
      summary: Retrieve all configured webhooks
      description: 'Retrieve all configured webhooksnRequired scopes: webhook:manage'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/WebHook'
      tags:
      - application
    post:
      operationId: createWebHook
      summary: Create a new Webhook
      description: 'Create a new WebhooknRequired scopes: webhook:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/WebHook'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/WebHook'
      tags:
      - application
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/webhook/{id}:
    get:
      operationId: getWebHook
      summary: Retrieve one configured webhook
      description: 'Retrieve one configured webhooknRequired scopes: webhook:manage'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WebHook'
      tags:
      - application
    put:
      operationId: fullUpdateWebHook
      summary: Update all field of a webhook
      description: 'Update all field of a webhooknRequired scopes: webhook:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/WebHook'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WebHook'
      tags:
      - application
    patch:
      operationId: updateWebHook
      summary: Update some field of a webhook
      description: 'Update some field of a webhooknRequired scopes: webhook:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/WebHook'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/WebHook'
      tags:
      - application
    delete:
      operationId: deleteWebHook
      summary: Delete a webhook
      description: 'Delete a webhooknRequired scopes: webhook:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - application
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      required: true
      type: string
  /cloud/{cloud_pk}/webhook/{id}/ping:
    post:
      operationId: cloud_webhook_ping
      summary: ""
      description: 'nRequired scopes: webhook:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/WebHook'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/WebHook'
      tags:
      - application
    parameters:
    - name: cloud_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      required: true
      type: string
  /cloud/{id}:
    get:
      operationId: getCloud
      summary: Retrieve one cloud
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Cloud'
      tags:
      - cloud
    put:
      operationId: fullUpdateCloud
      summary: Update all fields of a cloud
      description: 'nRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Cloud'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Cloud'
      tags:
      - cloud
    patch:
      operationId: updateCloud
      summary: Update some fields of a cloud
      description: 'Update some fields of a cloudnRequired scopes: cloud:manage'
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Cloud'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Cloud'
      tags:
      - cloud
    delete:
      operationId: deleteCloud
      summary: Delete a cloud
      description: 'nRequired scopes: cloud:manage'
      parameters: []
      responses:
        204:
          description: ""
      tags:
      - cloud
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this cloud.
      required: true
      type: integer
  /cloud/{id}/create-demo:
    post:
      operationId: createDemo
      summary: Create a Demo project in a cloud
      description: 'Create a demo project with a pre-populated IFC and its datanRequired
        scopes: cloud:manage'
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Project'
      tags:
      - cloud
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this cloud.
      required: true
      type: integer
  /cloud/{id}/size:
    get:
      operationId: getCloudSize
      summary: Get size of all files in the cloud
      description: Returns the size of the cloud in Bytes
      parameters: []
      responses:
        200:
          description: Size of the cloud in Bytes
          schema:
            type: integer
      tags:
      - cloud
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this cloud.
      required: true
      type: integer
  /user:
    get:
      operationId: getSelfUser
      summary: ""
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/SelfUser'
      tags:
      - user
    patch:
      operationId: updateSelfUser
      summary: ""
      description: ""
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SelfUser'
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/SelfUser'
      tags:
      - user
    parameters: []
  /user/projects:
    get:
      operationId: user_projects_list
      summary: ""
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
      tags:
      - user
    parameters: []
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":65:{s:11:\"SelfBcfUser\";O:8:\"stdClass\":4:{s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:5:\"email\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"Id\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:5:\"email\";O:8:\"stdClass\":5:{s:5:\"title\";s:5:\"Email\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:254;s:9:\"minLength\";i:1;}}s:5:\"title\";s:11:\"SelfBcfUser\";}s:10:\"BcfProject\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:19:\"Name
  of the project\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:9:\"minLength\";i:1;}}}s:9:\"TopicType\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:10:\"topic_type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"topic_type\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Topic
  type\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}}}s:11:\"TopicStatus\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:12:\"topic_status\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:12:\"topic_status\";O:8:\"stdClass\":4:{s:5:\"title\";s:12:\"Topic
  status\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}}}s:5:\"Label\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:5:\"label\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"label\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Label\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}}}s:8:\"Priority\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:8:\"priority\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"priority\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Priority\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}}}s:5:\"Stage\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:5:\"stage\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"stage\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Stage\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}}}s:10:\"Extensions\";O:8:\"stdClass\":3:{s:8:\"required\";a:5:{i:0;s:10:\"topic_type\";i:1;s:12:\"topic_status\";i:2;s:11:\"topic_label\";i:3;s:8:\"priority\";i:4;s:5:\"stage\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"topic_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:9:\"TopicType\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}s:12:\"topic_status\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"TopicStatus\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}s:11:\"topic_label\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Labels\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}s:8:\"priority\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:8:\"Priority\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}s:12:\"user_id_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:8:\"readOnly\";b:1;}s:5:\"stage\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Stage\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}}}s:7:\"BcfUser\";O:8:\"stdClass\":4:{s:5:\"title\";s:15:\"Creation
  author\";s:8:\"required\";a:1:{i:0;s:5:\"email\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"email\";O:8:\"stdClass\":5:{s:5:\"title\";s:5:\"Email\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:254;s:9:\"minLength\";i:1;}}}s:7:\"Comment\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:7:\"comment\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:4:\"guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:8:\"readOnly\";b:1;}s:4:\"date\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:6:\"author\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:10:\"x-nullable\";b:1;s:8:\"readOnly\";b:1;}s:7:\"comment\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Comment\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:14:\"viewpoint_guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:14:\"Viewpoint
  guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:10:\"x-nullable\";b:1;}s:21:\"reply_to_comment_guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:21:\"Reply
  to comment guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:10:\"x-nullable\";b:1;}s:10:\"topic_guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Topic
  guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:8:\"readOnly\";b:1;}s:15:\"modified_author\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:10:\"x-nullable\";b:1;s:8:\"readOnly\";b:1;}s:13:\"modified_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Modified
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:17:\"viewpoint_temp_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:17:\"Viewpoint
  temp id\";s:11:\"description\";s:80:\"Only used when using POST on the full-topic
  route to bind viewpoint with comment\";s:4:\"type\";s:7:\"integer\";}}}s:9:\"Direction\";O:8:\"stdClass\":4:{s:5:\"title\";s:16:\"Camera
  direction\";s:8:\"required\";a:3:{i:0;s:1:\"x\";i:1;s:1:\"y\";i:2;s:1:\"z\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:1:\"x\";O:8:\"stdClass\":2:{s:5:\"title\";s:1:\"X\";s:4:\"type\";s:6:\"number\";}s:1:\"y\";O:8:\"stdClass\":2:{s:5:\"title\";s:1:\"Y\";s:4:\"type\";s:6:\"number\";}s:1:\"z\";O:8:\"stdClass\":2:{s:5:\"title\";s:1:\"Z\";s:4:\"type\";s:6:\"number\";}}}s:5:\"Point\";O:8:\"stdClass\":4:{s:5:\"title\";s:17:\"Camera
  view point\";s:8:\"required\";a:3:{i:0;s:1:\"x\";i:1;s:1:\"y\";i:2;s:1:\"z\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:1:\"x\";O:8:\"stdClass\":2:{s:5:\"title\";s:1:\"X\";s:4:\"type\";s:6:\"number\";}s:1:\"y\";O:8:\"stdClass\":2:{s:5:\"title\";s:1:\"Y\";s:4:\"type\";s:6:\"number\";}s:1:\"z\";O:8:\"stdClass\":2:{s:5:\"title\";s:1:\"Z\";s:4:\"type\";s:6:\"number\";}}}s:16:\"OrthogonalCamera\";O:8:\"stdClass\":4:{s:5:\"title\";s:17:\"Orthogonal
  camera\";s:8:\"required\";a:4:{i:0;s:19:\"view_to_world_scale\";i:1;s:16:\"camera_direction\";i:2;s:16:\"camera_up_vector\";i:3;s:17:\"camera_view_point\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:19:\"view_to_world_scale\";O:8:\"stdClass\":2:{s:5:\"title\";s:19:\"View
  to world scale\";s:4:\"type\";s:6:\"number\";}s:16:\"camera_direction\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Direction\";}s:16:\"camera_up_vector\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Direction\";}s:17:\"camera_view_point\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Point\";}}}s:17:\"PerspectiveCamera\";O:8:\"stdClass\":4:{s:5:\"title\";s:18:\"Perspective
  camera\";s:8:\"required\";a:4:{i:0;s:13:\"field_of_view\";i:1;s:16:\"camera_direction\";i:2;s:16:\"camera_up_vector\";i:3;s:17:\"camera_view_point\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:13:\"field_of_view\";O:8:\"stdClass\":2:{s:5:\"title\";s:13:\"Field
  of view\";s:4:\"type\";s:6:\"number\";}s:16:\"camera_direction\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Direction\";}s:16:\"camera_up_vector\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Direction\";}s:17:\"camera_view_point\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Point\";}s:24:\"bimdata_camera_direction\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Direction\";}}}s:13:\"LineSeriaizer\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:9:\"end_point\";i:1;s:11:\"start_point\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"end_point\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Point\";}s:11:\"start_point\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Point\";}}}s:13:\"ClippingPlane\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:8:\"location\";i:1;s:9:\"direction\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Point\";}s:9:\"direction\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Direction\";}}}s:8:\"Snapshot\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Snapshot\";s:8:\"required\";a:1:{i:0;s:13:\"snapshot_type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"snapshot_type\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Snapshot
  type\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:13:\"snapshot_data\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Snapshot
  data\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}}}s:9:\"Component\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"ifc_guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Ifc
  guid\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}s:18:\"originating_system\";O:8:\"stdClass\":4:{s:5:\"title\";s:18:\"Originating
  system\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}s:17:\"authoring_tool_id\";O:8:\"stdClass\":4:{s:5:\"title\";s:17:\"Authoring
  tool id\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}}}s:8:\"Coloring\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:5:\"color\";i:1;s:10:\"components\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"color\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Color\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:10:\"components\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Component\";}}}}s:14:\"ViewSetupHints\";O:8:\"stdClass\":3:{s:5:\"title\";s:16:\"View
  setup hints\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"spaces_visible\";O:8:\"stdClass\":2:{s:5:\"title\";s:14:\"Spaces
  visible\";s:4:\"type\";s:7:\"boolean\";}s:24:\"space_boundaries_visible\";O:8:\"stdClass\":2:{s:5:\"title\";s:24:\"Space
  boundaries visible\";s:4:\"type\";s:7:\"boolean\";}s:16:\"openings_visible\";O:8:\"stdClass\":2:{s:5:\"title\";s:16:\"Openings
  visible\";s:4:\"type\";s:7:\"boolean\";}}}s:10:\"Visibility\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Visibility\";s:8:\"required\";a:2:{i:0;s:10:\"exceptions\";i:1;s:16:\"view_setup_hints\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:18:\"default_visibility\";O:8:\"stdClass\":2:{s:5:\"title\";s:18:\"Default
  visibility\";s:4:\"type\";s:7:\"boolean\";}s:10:\"exceptions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Component\";}}s:16:\"view_setup_hints\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ViewSetupHints\";}}}s:16:\"ComponentsParent\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Components\";s:8:\"required\";a:1:{i:0;s:10:\"visibility\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"coloring\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Coloring\";}}s:10:\"visibility\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Visibility\";}s:9:\"selection\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Component\";}}}}s:9:\"Viewpoint\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:5:\"index\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Index\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:8:\"readOnly\";b:1;}s:17:\"orthogonal_camera\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/OrthogonalCamera\";}s:18:\"perspective_camera\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/PerspectiveCamera\";}s:5:\"lines\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/LineSeriaizer\";}}s:15:\"clipping_planes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ClippingPlane\";}}s:8:\"snapshot\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Snapshot\";}s:10:\"components\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/ComponentsParent\";}s:7:\"temp_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Temp
  id\";s:11:\"description\";s:80:\"Only used when using POST on the full-topic route
  to bind viewpoint with comment\";s:4:\"type\";s:7:\"integer\";}}}s:9:\"FullTopic\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:5:\"title\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":20:{s:4:\"guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:8:\"readOnly\";b:1;}s:13:\"creation_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Creation
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:15:\"creation_author\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:8:\"readOnly\";b:1;}s:13:\"modified_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Modified
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:15:\"modified_author\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:8:\"readOnly\";b:1;}s:5:\"title\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Title\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:15:\"reference_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:15:\"Reference
  links\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:10:\"x-nullable\";b:1;}s:4:\"ifcs\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"uniqueItems\";b:1;}s:6:\"labels\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Labels\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}s:10:\"topic_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:9:\"TopicType\";s:10:\"x-nullable\";b:1;}s:12:\"topic_status\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:11:\"TopicStatus\";s:10:\"x-nullable\";b:1;}s:5:\"stage\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:5:\"Stage\";s:10:\"x-nullable\";b:1;}s:8:\"priority\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:8:\"Priority\";s:10:\"x-nullable\";b:1;}s:5:\"index\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Index\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:11:\"assigned_to\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:10:\"x-nullable\";b:1;}s:6:\"format\";O:8:\"stdClass\":4:{s:5:\"title\";s:6:\"Format\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:64;s:9:\"minLength\";i:1;}s:8:\"due_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Due
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:10:\"x-nullable\";b:1;}s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Comment\";}}s:10:\"viewpoints\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Viewpoint\";}}}}s:5:\"Topic\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:5:\"title\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":18:{s:4:\"guid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Guid\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"uuid\";s:8:\"readOnly\";b:1;}s:10:\"topic_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:9:\"TopicType\";s:10:\"x-nullable\";b:1;}s:12:\"topic_status\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:11:\"TopicStatus\";s:10:\"x-nullable\";b:1;}s:5:\"title\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Title\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:8:\"priority\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:8:\"Priority\";s:10:\"x-nullable\";b:1;}s:6:\"labels\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Labels\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;}s:10:\"x-nullable\";b:1;}s:13:\"creation_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Creation
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:15:\"creation_author\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:8:\"readOnly\";b:1;}s:13:\"modified_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Modified
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:15:\"modified_author\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:8:\"readOnly\";b:1;}s:11:\"assigned_to\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:5:\"title\";s:4:\"User\";s:10:\"x-nullable\";b:1;}s:15:\"reference_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:5:\"title\";s:15:\"Reference
  links\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:10:\"x-nullable\";b:1;}s:5:\"stage\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:5:\"Stage\";s:10:\"x-nullable\";b:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:8:\"due_date\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Due
  date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:10:\"x-nullable\";b:1;}s:4:\"ifcs\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"uniqueItems\";b:1;}s:6:\"format\";O:8:\"stdClass\":4:{s:5:\"title\";s:6:\"Format\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:64;s:9:\"minLength\";i:1;}s:5:\"index\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Index\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}}}s:7:\"Feature\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:19:\"Name
  of the feature\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:127;s:9:\"minLength\";i:1;}s:10:\"viewer_url\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Viewer
  url\";s:11:\"description\";s:46:\"Viewer's url to load instead of standard's one\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:512;s:10:\"x-nullable\";b:1;}}}s:4:\"User\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"User\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"email\";O:8:\"stdClass\":5:{s:5:\"title\";s:5:\"Email\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:8:\"readOnly\";b:1;s:9:\"minLength\";i:1;}s:7:\"company\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Company\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:9:\"firstname\";O:8:\"stdClass\":4:{s:5:\"title\";s:9:\"Firstname\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:9:\"minLength\";i:1;}s:8:\"lastname\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Lastname\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:9:\"minLength\";i:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"cloud_role\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Cloud
  role\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:12:\"project_role\";O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"Project
  role\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}}}s:5:\"Cloud\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:17:\"Name
  of the cloud\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:9:\"minLength\";i:1;}s:8:\"features\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Feature\";}s:8:\"readOnly\";b:1;}s:7:\"creator\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:10:\"is_default\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Is
  default\";s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Created
  at\";s:11:\"description\";s:13:\"Creation date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Updated
  at\";s:11:\"description\";s:23:\"Date of the last update\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}}}s:15:\"CloudInvitation\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:5:\"email\";i:1;s:12:\"redirect_uri\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"email\";O:8:\"stdClass\":5:{s:5:\"title\";s:5:\"Email\";s:11:\"description\";s:27:\"email
  of the user to invite\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:9:\"minLength\";i:1;}s:12:\"redirect_uri\";O:8:\"stdClass\":5:{s:5:\"title\";s:12:\"Redirect
  uri\";s:11:\"description\";s:67:\"User will be redirected to this uri when they
  accept the invitation\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:512;s:9:\"minLength\";i:1;}s:4:\"role\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Role\";s:4:\"type\";s:7:\"integer\";s:4:\"enum\";a:2:{i:0;i:100;i:1;i:50;}s:8:\"readOnly\";b:1;}}}s:7:\"Project\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"logo\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Logo\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:5:\"cloud\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Cloud\";}s:4:\"name\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:19:\"Name
  of the project\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:9:\"minLength\";i:1;}s:6:\"status\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Status\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:1:\"A\";i:1;s:1:\"D\";}}s:10:\"created_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Created
  at\";s:11:\"description\";s:13:\"Creation date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Updated
  at\";s:11:\"description\";s:23:\"Date of the last update\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:14:\"root_folder_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:14:\"Root
  folder id\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:28:\"property_permissions_enabled\";O:8:\"stdClass\":2:{s:5:\"title\";s:28:\"Property
  permissions enabled\";s:4:\"type\";s:7:\"boolean\";}}}s:6:\"Folder\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:9:\"Parent
  id\";s:4:\"type\";s:7:\"integer\";}s:4:\"type\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Type\";s:11:\"description\";s:85:\"Value
  is \"Folder\". It is usefull to parse the tree and discriminate folders and files\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:18:\"Name
  of the folder\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:10:\"created_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Created
  at\";s:11:\"description\";s:13:\"Creation date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Updated
  at\";s:11:\"description\";s:23:\"Date of the last update\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:8:\"children\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Folder\";}s:8:\"readOnly\";b:1;}s:10:\"created_by\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}}}s:13:\"RuleComponent\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:5:\"value\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Value\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:8:\"operator\";O:8:\"stdClass\":3:{s:5:\"title\";s:8:\"Operator\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:6:\"params\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Params\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:9:\"condition\";O:8:\"stdClass\":3:{s:5:\"title\";s:9:\"Condition\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:15:\"rule_components\";O:8:\"stdClass\":3:{s:5:\"title\";s:15:\"Rule
  components\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}}}s:4:\"Rule\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:9:\"condition\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:9:\"condition\";O:8:\"stdClass\":3:{s:5:\"title\";s:9:\"Condition\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:15:\"rule_components\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/RuleComponent\";}}s:2:\"on\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Rule\";}}}s:7:\"Ruleset\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:17:\"parent_ruleset_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:17:\"Parent
  ruleset id\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:5:\"rules\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Rule\";}}s:8:\"rulesets\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Ruleset\";}}}}s:9:\"CheckPlan\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:8:\"rulesets\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Ruleset\";}}s:10:\"is_default\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Is
  default\";s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;}}}s:14:\"Classification\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:57:\"Name
  of the clasification (uniformat, Untec, custom, etc)\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:8:\"notation\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Notation\";s:11:\"description\";s:26:\"Code
  of the classification\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:5:\"title\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Title\";s:11:\"description\";s:32:\"Full
  title of the classification\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}}}s:8:\"Document\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":13:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:6:\"parent\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Parent\";s:4:\"type\";s:7:\"integer\";s:10:\"x-nullable\";b:1;}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:9:\"Parent
  id\";s:4:\"type\";s:7:\"integer\";}s:7:\"creator\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Creator\";s:4:\"type\";s:7:\"integer\";s:10:\"x-nullable\";b:1;}s:7:\"project\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Project\";s:4:\"type\";s:7:\"integer\";s:10:\"x-nullable\";b:1;}s:4:\"name\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:22:\"Shown
  name of the file\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:512;s:9:\"minLength\";i:1;}s:9:\"file_name\";O:8:\"stdClass\":5:{s:5:\"title\";s:9:\"File
  name\";s:11:\"description\";s:21:\"Full name of the file\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:512;s:10:\"x-nullable\";b:1;}s:11:\"description\";O:8:\"stdClass\":4:{s:5:\"title\";s:11:\"Description\";s:11:\"description\";s:23:\"Description
  of the file\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"file\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"File\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:4:\"size\";O:8:\"stdClass\":6:{s:5:\"title\";s:4:\"Size\";s:11:\"description\";s:68:\"Size
  of the file. The file may be compressed and show a smaller size\";s:4:\"type\";s:7:\"integer\";s:7:\"maximum\";i:2147483647;s:7:\"minimum\";i:0;s:10:\"x-nullable\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Created
  at\";s:11:\"description\";s:13:\"Creation date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Updated
  at\";s:11:\"description\";s:23:\"Date of the last update\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:6:\"ifc_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Ifc
  id\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:3:\"Ifc\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":16:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:7:\"creator\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:6:\"status\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Status\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:1:\"C\";i:1;s:1:\"D\";i:2;s:1:\"P\";i:3;s:1:\"I\";i:4;s:1:\"E\";}}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:11:\"document_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Document
  id\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:8:\"document\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Document\";}s:14:\"structure_file\";O:8:\"stdClass\":4:{s:5:\"title\";s:14:\"Structure
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}s:12:\"systems_file\";O:8:\"stdClass\":4:{s:5:\"title\";s:12:\"Systems
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}s:8:\"map_file\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Map
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}s:9:\"gltf_file\";O:8:\"stdClass\":4:{s:5:\"title\";s:9:\"Gltf
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}s:13:\"bvh_tree_file\";O:8:\"stdClass\":4:{s:5:\"title\";s:13:\"Bvh
  tree file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}s:15:\"viewer_360_file\";O:8:\"stdClass\":4:{s:5:\"title\";s:15:\"Viewer
  360 file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:6:\"format\";s:3:\"uri\";}s:12:\"error_detail\";O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"Error
  detail\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:10:\"project_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Project
  id\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:8:\"IfcFiles\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:14:\"structure_file\";O:8:\"stdClass\":5:{s:5:\"title\";s:14:\"Structure
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:12:\"systems_file\";O:8:\"stdClass\":5:{s:5:\"title\";s:12:\"Systems
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:8:\"map_file\";O:8:\"stdClass\":5:{s:5:\"title\";s:8:\"Map
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:9:\"gltf_file\";O:8:\"stdClass\":5:{s:5:\"title\";s:9:\"Gltf
  file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:13:\"bvh_tree_file\";O:8:\"stdClass\":5:{s:5:\"title\";s:13:\"Bvh
  tree file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}s:15:\"viewer_360_file\";O:8:\"stdClass\":5:{s:5:\"title\";s:15:\"Viewer
  360 file\";s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:10:\"x-nullable\";b:1;s:6:\"format\";s:3:\"uri\";}}}s:10:\"IfcChecker\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:3:\"ifc\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Ifc\";}s:7:\"creator\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:4:\"name\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:10:\"x-nullable\";b:1;}s:12:\"checkplan_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:12:\"Checkplan
  id\";s:4:\"type\";s:7:\"integer\";}s:7:\"results\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:7:\"checker\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:12:\"error_detail\";O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"Error
  detail\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:6:\"status\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Status\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:1:\"C\";i:1;s:1:\"P\";i:2;s:1:\"E\";}}s:6:\"result\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Result\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"collisions\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Collisions\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"checker\";O:8:\"stdClass\":2:{s:5:\"title\";s:7:\"Checker\";s:4:\"type\";s:7:\"integer\";}}}s:8:\"readOnly\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:9:\"checkplan\";O:8:\"stdClass\":4:{s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:7:\"project\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:9:\"protected\";O:8:\"stdClass\":2:{s:5:\"title\";s:9:\"Protected\";s:4:\"type\";s:7:\"boolean\";}s:7:\"project\";O:8:\"stdClass\":2:{s:5:\"title\";s:7:\"Project\";s:4:\"type\";s:7:\"integer\";}}s:8:\"readOnly\";b:1;}}}s:13:\"CheckerResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:6:\"status\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Status\";s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:1:\"C\";i:1;s:1:\"P\";i:2;s:1:\"E\";}}s:6:\"result\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Result\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"collisions\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Collisions\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:12:\"error_detail\";O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"Error
  detail\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}}}s:29:\"ElementClassificationRelation\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:12:\"element_uuid\";i:1;s:17:\"classification_id\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"element_uuid\";O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"Element
  uuid\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:17:\"classification_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:17:\"Classification
  id\";s:4:\"type\";s:7:\"integer\";}}}s:4:\"Unit\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Unit\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"type\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Type\";s:11:\"description\";s:93:\"IfcDerivedUnit,
  IfcContextDependentUnit, IfcConversionBasedUnit, IfcSIUnit or IfcMonetaryUnit\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:4:\"name\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Name\";s:11:\"description\";s:29:\"Name
  of the unit (ex: DEGREE)\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:9:\"unit_type\";O:8:\"stdClass\":4:{s:5:\"title\";s:9:\"Unit
  type\";s:11:\"description\";s:84:\"IFC type of the unit or user defined type (ex:
  PLANEANGLEUNIT for DEGREE and RADIAN)\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:6:\"prefix\";O:8:\"stdClass\":4:{s:5:\"title\";s:6:\"Prefix\";s:11:\"description\";s:50:\"Litteral
  prefix for scale (ex: MILLI, KILO, etc..)\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"dimensions\";O:8:\"stdClass\":4:{s:11:\"description\";s:26:\"List
  of 7 units dimensions\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:5:\"title\";s:10:\"Dimensions\";s:4:\"type\";s:6:\"number\";}s:10:\"x-nullable\";b:1;}s:17:\"conversion_factor\";O:8:\"stdClass\":4:{s:5:\"title\";s:17:\"Conversion
  factor\";s:11:\"description\";s:93:\"Factor of conversion and base unit id (ex:
  DEGREE from RADIAN with factor 0.0174532925199433)\";s:4:\"type\";s:6:\"number\";s:10:\"x-nullable\";b:1;}s:19:\"conversion_baseunit\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}s:8:\"elements\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Elements\";s:11:\"description\";s:112:\"List
  of constitutive unit elements by id with corresponding exponent (ex: [meterID/1,
  secondID/-1] for velocity)\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}}}s:18:\"PropertyDefinition\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Definition\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"unit\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"type\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Type\";s:11:\"description\";s:93:\"IfcProperty*,
  Ifc*Properties, IfcComplexProperty, IfcQuantity*, IfcComplexQuantity, Attribute\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"value_type\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Value
  type\";s:11:\"description\";s:80:\"Type of the corresponding value (Boolean, integer,
  float, string, IfcRange, ...)\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}}}s:8:\"Property\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:10:\"definition\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"definition\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/PropertyDefinition\";}s:5:\"value\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Value\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}}}s:11:\"PropertySet\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Attributes\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Property\";}}}}s:7:\"Element\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"uuid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Uuid\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:22;s:9:\"minLength\";i:22;}s:4:\"type\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"Type\";s:11:\"description\";s:24:\"IFC
  type for the element\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:64;s:9:\"minLength\";i:1;}s:10:\"attributes\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PropertySet\";}s:13:\"property_sets\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PropertySet\";}}s:15:\"classifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/Classification\";}}}}s:7:\"RawUnit\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:9:\"unit_type\";O:8:\"stdClass\":3:{s:5:\"title\";s:9:\"Unit
  type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:6:\"prefix\";O:8:\"stdClass\":3:{s:5:\"title\";s:6:\"Prefix\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:8:\"elements\";O:8:\"stdClass\":3:{s:5:\"title\";s:8:\"Elements\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:17:\"conversion_factor\";O:8:\"stdClass\":3:{s:5:\"title\";s:17:\"Conversion
  factor\";s:4:\"type\";s:6:\"number\";s:10:\"x-nullable\";b:1;}s:10:\"dimensions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"x-nullable\";b:1;}s:25:\"conversion_baseunit_index\";O:8:\"stdClass\":3:{s:5:\"title\";s:25:\"Conversion
  baseunit index\";s:4:\"type\";s:7:\"integer\";s:10:\"x-nullable\";b:1;}}}s:13:\"RawDefinition\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"value_type\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Value
  type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:7:\"unit_id\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Unit
  id\";s:4:\"type\";s:7:\"integer\";s:10:\"x-nullable\";b:1;}}s:10:\"x-nullable\";b:1;}s:11:\"RawProperty\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:6:\"def_id\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":3:{s:5:\"title\";s:5:\"Value\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:6:\"def_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:6:\"Def
  id\";s:4:\"type\";s:7:\"integer\";}}}s:14:\"RawPropertySet\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:10:\"properties\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"name\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/RawProperty\";}}}}s:17:\"RawClassification\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:8:\"notation\";O:8:\"stdClass\":3:{s:5:\"title\";s:8:\"Notation\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:11:\"description\";O:8:\"stdClass\":3:{s:5:\"title\";s:11:\"Description\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}}s:10:\"x-nullable\";b:1;}s:10:\"RawElement\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:4:\"uuid\";i:1;s:4:\"type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"uuid\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Uuid\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:4:\"type\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Type\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:10:\"attributes\";O:8:\"stdClass\":3:{s:5:\"title\";s:10:\"Attributes\";s:4:\"type\";s:7:\"integer\";s:10:\"x-nullable\";b:1;}s:5:\"psets\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"x-nullable\";b:1;}s:15:\"classifications\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"x-nullable\";b:1;}}}s:11:\"RawElements\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:8:\"elements\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"units\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/RawUnit\";}s:10:\"x-nullable\";b:1;}s:11:\"definitions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/RawDefinition\";}s:10:\"x-nullable\";b:1;}s:13:\"property_sets\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/RawPropertySet\";}s:10:\"x-nullable\";b:1;}s:15:\"classifications\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/RawClassification\";}s:10:\"x-nullable\";b:1;}s:8:\"elements\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/RawElement\";}}}}s:26:\"ElementPropertySetRelation\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:12:\"element_uuid\";i:1;s:15:\"property_set_id\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"element_uuid\";O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"Element
  uuid\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:15:\"property_set_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:15:\"Property
  set id\";s:4:\"type\";s:7:\"integer\";}}}s:5:\"Space\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"uuid\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}s:8:\"longname\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Longname\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}s:4:\"uuid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Uuid\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:8:\"zone_set\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"readOnly\";b:1;s:11:\"uniqueItems\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}}}s:4:\"Zone\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:4:\"uuid\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:4:\"uuid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Uuid\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:5:\"zones\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Zone\";}}s:9:\"parent_id\";O:8:\"stdClass\":2:{s:5:\"title\";s:9:\"Parent
  id\";s:4:\"type\";s:7:\"integer\";}s:6:\"spaces\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Space\";}}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:5:\"color\";O:8:\"stdClass\":4:{s:5:\"title\";s:5:\"Color\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:8;s:10:\"x-nullable\";b:1;}}}s:9:\"ZoneSpace\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"uuid\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Name\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}s:8:\"longname\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Longname\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}s:4:\"uuid\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Uuid\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:9:\"minLength\";i:1;}s:8:\"zone_set\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"readOnly\";b:1;s:11:\"uniqueItems\";b:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}}}s:17:\"ProjectInvitation\";O:8:\"stdClass\":3:{s:8:\"required\";a:3:{i:0;s:5:\"email\";i:1;s:12:\"redirect_uri\";i:2;s:4:\"role\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"email\";O:8:\"stdClass\":5:{s:5:\"title\";s:5:\"Email\";s:11:\"description\";s:27:\"email
  of the user to invite\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:9:\"minLength\";i:1;}s:12:\"redirect_uri\";O:8:\"stdClass\":5:{s:5:\"title\";s:12:\"Redirect
  uri\";s:11:\"description\";s:67:\"User will be redirected to this uri when they
  accept the invitation\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:512;s:9:\"minLength\";i:1;}s:4:\"role\";O:8:\"stdClass\":3:{s:5:\"title\";s:4:\"Role\";s:4:\"type\";s:7:\"integer\";s:4:\"enum\";a:3:{i:0;i:100;i:1;i:50;i:2;i:25;}}}}s:17:\"UserProjectUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"role\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Role\";s:11:\"description\";s:26:\"User's
  role in the project\";s:4:\"type\";s:7:\"integer\";s:4:\"enum\";a:3:{i:0;i:100;i:1;i:50;i:2;i:25;}}}}s:15:\"UserCloudUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"role\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Role\";s:11:\"description\";s:29:\"Role
  of the user in the cloud\";s:4:\"type\";s:7:\"integer\";s:4:\"enum\";a:2:{i:0;i:100;i:1;i:50;}}}}s:7:\"WebHook\";O:8:\"stdClass\":3:{s:8:\"required\";a:3:{i:0;s:6:\"events\";i:1;s:3:\"url\";i:2;s:6:\"secret\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:6:\"events\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"uniqueItems\";b:1;}s:3:\"url\";O:8:\"stdClass\":4:{s:5:\"title\";s:3:\"Url\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:1024;s:9:\"minLength\";i:1;}s:6:\"secret\";O:8:\"stdClass\":4:{s:5:\"title\";s:6:\"Secret\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:256;s:9:\"minLength\";i:1;}}}s:9:\"CloudRole\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:5:\"cloud\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"cloud\";O:8:\"stdClass\":2:{s:5:\"title\";s:5:\"Cloud\";s:4:\"type\";s:7:\"integer\";}s:4:\"role\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Role\";s:11:\"description\";s:29:\"Role
  of the user in the cloud\";s:4:\"type\";s:7:\"integer\";s:4:\"enum\";a:2:{i:0;i:100;i:1;i:50;}}}}s:11:\"ProjectRole\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:7:\"project\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"project\";O:8:\"stdClass\":2:{s:5:\"title\";s:7:\"Project\";s:4:\"type\";s:7:\"integer\";}s:4:\"role\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Role\";s:11:\"description\";s:26:\"User's
  role in the project\";s:4:\"type\";s:7:\"integer\";s:4:\"enum\";a:3:{i:0;i:100;i:1;i:50;i:2;i:25;}}}}s:8:\"SelfUser\";O:8:\"stdClass\":4:{s:8:\"required\";a:3:{i:0;s:5:\"email\";i:1;s:9:\"firstname\";i:2;s:8:\"lastname\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:2:\"id\";O:8:\"stdClass\":3:{s:5:\"title\";s:2:\"ID\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"email\";O:8:\"stdClass\":5:{s:5:\"title\";s:5:\"Email\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:254;s:9:\"minLength\";i:1;}s:7:\"company\";O:8:\"stdClass\":3:{s:5:\"title\";s:7:\"Company\";s:4:\"type\";s:6:\"string\";s:10:\"x-nullable\";b:1;}s:9:\"firstname\";O:8:\"stdClass\":3:{s:5:\"title\";s:9:\"Firstname\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:8:\"lastname\";O:8:\"stdClass\":3:{s:5:\"title\";s:8:\"Lastname\";s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:1;}s:10:\"created_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Created
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"Updated
  at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:6:\"clouds\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CloudRole\";}s:8:\"readOnly\";b:1;}s:8:\"projects\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProjectRole\";}s:8:\"readOnly\";b:1;}s:8:\"oidc_sub\";O:8:\"stdClass\":4:{s:5:\"title\";s:8:\"Oidc
  sub\";s:4:\"type\";s:6:\"string\";s:9:\"maxLength\";i:255;s:10:\"x-nullable\";b:1;}}s:5:\"title\";s:8:\"SelfUser\";}}"
...
