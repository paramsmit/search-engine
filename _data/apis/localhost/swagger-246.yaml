---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:1:\".\";s:7:\"version\";s:5:\"API
  4\";s:5:\"title\";s:60:\"Mikroserwis zarz\u0105dzania udzia\u0142em w wydarzeniach
  - REST API\";s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"name\";s:13:\"Filip Lewczak\";}s:7:\"license\";O:8:\"stdClass\":1:{s:4:\"name\";s:15:\"API
  License URL\";}}"
host: localhost:8181
basePath: /
paths:
  /orders/all_orders:
    get:
      tags:
      - main-controller
      summary: getAllOrders
      operationId: getAllOrdersUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/error/{errornr}:
    get:
      tags:
      - main-controller
      summary: tokenValidationFail
      operationId: tokenValidationFailUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: errornr
        in: path
        description: errornr
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/event/delete/{eventid}:
    get:
      tags:
      - main-controller
      summary: cancelEvent
      operationId: cancelEventUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: eventid
        in: path
        description: eventid
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StringRES'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/event/{eventid}:
    get:
      tags:
      - main-controller
      summary: showAllTicketsFromEvent
      operationId: showAllTicketsFromEventUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: eventid
        in: path
        description: eventid
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/new_order:
    post:
      tags:
      - main-controller
      summary: createNewRelations
      operationId: createNewRelationsUsingPOST
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: bookings[0].orderObjcet.bookings[0].relationID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].orderObjcet.bookings[0].eventID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].orderObjcet.bookings[0].ticketID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].orderObjcet.bookings[0].relationCreationDate
        in: query
        required: false
        type: string
        format: date-time
      - name: bookings[0].orderObjcet.bookings[0].relationModificationDate
        in: query
        required: false
        type: string
        format: date-time
      - name: bookings[0].orderObjcet.bookings[0].relationStatus
        in: query
        required: false
        type: boolean
      - name: bookings[0].orderObjcet.orderID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].orderObjcet.userID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].orderObjcet.paymentOrder
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].orderObjcet.status
        in: query
        required: false
        type: boolean
      - name: bookings[0].relationID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].eventID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].ticketID
        in: query
        required: false
        type: integer
        format: int64
      - name: bookings[0].relationCreationDate
        in: query
        required: false
        type: string
        format: date-time
      - name: bookings[0].relationModificationDate
        in: query
        required: false
        type: string
        format: date-time
      - name: bookings[0].relationStatus
        in: query
        required: false
        type: boolean
      - name: orderID
        in: query
        required: false
        type: integer
        format: int64
      - name: userID
        in: query
        required: false
        type: integer
        format: int64
      - name: paymentOrder
        in: query
        required: false
        type: integer
        format: int64
      - name: status
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/resignation/{orderid}:
    post:
      tags:
      - main-controller
      summary: makeResignation
      operationId: makeResignationUsingPOST
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: orderid
        in: path
        description: orderid
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/user/{userid}:
    get:
      tags:
      - main-controller
      summary: showUserTickets
      operationId: showUserTicketsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: userid
        in: path
        description: userid
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /orders/{order}:
    get:
      tags:
      - main-controller
      summary: getOrderDetails
      operationId: getOrderDetailsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: order
        in: path
        description: order
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/JsonErrorResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
definitions: !php/object "O:8:\"stdClass\":3:{s:5:\"Error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"details\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"JsonErrorResponses\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:14:\"errorContainer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Error\";}s:6:\"result\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:10:\"statusCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:9:\"StringRES\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}}"
...
