---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:282:\"This is a sample
  server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io)
  or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample,
  you can use the api key `special-key` to test the authorization     filters.\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:16:\"Swagger
  Petstore\";}"
host: localhost:5000
basePath: /
paths:
  /order/inventory:
    get:
      tags:
      - wallet
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
      security:
      - api_key: []
  /wallets:
    post:
      tags:
      - wallet
      summary: Place an order for a pet
      description: ""
      operationId: placeOrder
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: order placed for purchasing the pet
        required: true
        schema:
          $ref: '#/definitions/Wallet'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Wallet'
        400:
          description: Invalid Order
  /wallets/{id}:
    get:
      tags:
      - wallet
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value >= 1 and <= 10.         Other
        values will generated exceptions
      operationId: getWalletById
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of pet that needs to be fetched
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Wallet'
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
    delete:
      tags:
      - wallet
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with positive integer value.         Negative
        or non-integer values will generate API errors
      operationId: deleteOrder
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the wallet that needs to be deleted
        required: true
        type: integer
        format: int32
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":2:{s:6:\"Wallet\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"balance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"coin_symbol\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:6:\"Wallet\";}}s:11:\"ApiResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
