---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"workix api\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:10:\"Workix
  Api\";}"
host: localhost:8080
basePath: /workix/services
paths:
  /authors:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Author'
      responses:
        default:
          description: successful operation
  /authors/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Author'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /blogs:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Blog'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Blog'
      responses:
        default:
          description: successful operation
  /blogs/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Blog'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /candidates:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Candidate'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Candidate'
      responses:
        default:
          description: successful operation
  /candidates/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Candidate'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /comments:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Comment'
      responses:
        default:
          description: successful operation
  /comments/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Comment'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /companies:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Company'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Company'
      responses:
        default:
          description: successful operation
  /companies/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Company'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /jaasroles:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/JAASRole'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/JAASRole'
      responses:
        default:
          description: successful operation
  /jaasroles/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: string
        pattern: '[0-9][0-9]*'
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: string
        pattern: '[0-9][0-9]*'
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/JAASRole'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: string
        pattern: '[0-9][0-9]*'
      responses:
        default:
          description: successful operation
  /jaasusers:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/JAASUser'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/JAASUser'
      responses:
        default:
          description: successful operation
  /jaasusers/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/JAASUser'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /jobs:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Job'
      responses:
        default:
          description: successful operation
  /jobs/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Job'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /login/firebaselogin:
    post:
      summary: do a Login with firebase token
      description: ""
      operationId: doLogin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: token
        description: Token
        required: true
        schema:
          $ref: '#/definitions/Token'
      responses:
        200:
          description: Login with success
          schema:
            $ref: '#/definitions/Candidate'
          headers:
            Location:
              type: string
              description: uri of login
        400:
          description: Bad Request
          schema:
            type: string
          headers:
            Location:
              type: string
              description: uri of login
        401:
          description: Unauthorized
          schema:
            type: string
          headers:
            Location:
              type: string
              description: uri of login
  /members:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Member'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Member'
      responses:
        default:
          description: successful operation
  /members/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Member'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /ping/test:
    post:
      operationId: doTest
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: string
      responses:
        default:
          description: successful operation
  /resumes:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Resume'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Resume'
      responses:
        default:
          description: successful operation
  /resumes/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Resume'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /save/candidate:
    post:
      operationId: save
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Candidate'
      responses:
        default:
          description: successful operation
  /save/resume:
    post:
      operationId: save
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Resume'
      responses:
        default:
          description: successful operation
  /save/user:
    post:
      operationId: save
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /selectiveprocesses:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SelectiveProcess'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/SelectiveProcess'
      responses:
        default:
          description: successful operation
  /selectiveprocesses/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/SelectiveProcess'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /subscribers:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscriber'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Subscriber'
      responses:
        default:
          description: successful operation
  /subscribers/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Subscriber'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /testimonials:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Testimonial'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Testimonial'
      responses:
        default:
          description: successful operation
  /testimonials/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Testimonial'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
  /users:
    get:
      operationId: listAll
      parameters:
      - name: start
        in: query
        required: false
        type: integer
        format: int32
      - name: max
        in: query
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          headers: []
    post:
      operationId: create
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /users/{id}:
    get:
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
    put:
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        pattern: '[0-9][0-9]*'
        format: int64
      responses:
        default:
          description: successful operation
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":22:{s:9:\"Candidate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:9:\"birthDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:3:\"cpf\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:6:\"Locale\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"city\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"estate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:27:{i:0;s:2:\"AC\";i:1;s:2:\"AL\";i:2;s:2:\"AM\";i:3;s:2:\"AP\";i:4;s:2:\"BA\";i:5;s:2:\"CE\";i:6;s:2:\"DF\";i:7;s:2:\"ES\";i:8;s:2:\"GO\";i:9;s:2:\"MA\";i:10;s:2:\"MG\";i:11;s:2:\"MS\";i:12;s:2:\"MT\";i:13;s:2:\"PA\";i:14;s:2:\"PB\";i:15;s:2:\"PE\";i:16;s:2:\"PI\";i:17;s:2:\"PR\";i:18;s:2:\"RJ\";i:19;s:2:\"RN\";i:20;s:2:\"RO\";i:21;s:2:\"RR\";i:22;s:2:\"RS\";i:23;s:2:\"SC\";i:24;s:2:\"SE\";i:25;s:2:\"SP\";i:26;s:2:\"TO\";}}s:12:\"neighborhood\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"street\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"zipCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:7:\"Comment\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"blog\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Blog\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Company\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Locale\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"cnpj\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"segment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"User\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"firebaseUUID\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"firebaseMessageToken\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:8:\"JAASUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"login\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"roles\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/JAASRole\";}}}}s:5:\"Token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"createdAt\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"SelectiveProcess\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:10:\"candidates\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Candidate\";}}s:6:\"expire\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:3:\"job\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Job\";}s:13:\"maxCandidates\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"start\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:7:\"Contact\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"mobilePhone\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:8:\"JAASRole\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"Experience\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"employerName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"jobTitle\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:5:\"Skill\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"skillName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"SocialMedia\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"media\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"Education\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"qualification\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"schoolName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:10:\"Subscriber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:11:\"Testimonial\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:6:\"author\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Author\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"picture\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"signature\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Author\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"aboutText\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"medias\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/SocialMedia\";}}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"picture\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"Tag\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"Job\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"company\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Company\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"jobCategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:10:\"MANAGEMENT\";i:1;s:8:\"OPERATOR\";}}s:7:\"jobType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:9:\"FREELANCE\";i:1;s:8:\"FULLTIME\";i:2;s:10:\"INTERNSHIP\";i:3;s:8:\"PARTTIME\";i:4;s:9:\"TEMPORARY\";}}s:10:\"minPayment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"maxPayment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"requirement\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"benefits\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Member\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"medias\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/SocialMedia\";}}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"occupation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"picture\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"shortText\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"Blog\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:6:\"author\";}s:10:\"properties\";O:8:\"stdClass\":12:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Author\";}s:8:\"category\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:9:\"COMPANIES\";i:1;s:4:\"JOBS\";i:2;s:7:\"RESUMES\";i:3;s:6:\"MARKET\";}}s:8:\"citation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"publishDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"pictures\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"resume\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"tags\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"picturesAsList\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:6:\"Resume\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"candidate\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Candidate\";}s:10:\"educations\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Education\";}}s:11:\"experiences\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Experience\";}}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"objective\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"skills\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Skill\";}}}}}"
...
