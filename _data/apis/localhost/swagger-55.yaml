---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:30:\"Node
  express basic RESTful API\";s:11:\"description\";s:28:\"Can be used in test projects\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:35:\"https://opensource.org/licenses/MIT\";}}"
host: localhost:3000
basePath: /api/v1
paths:
  /users:
    post:
      tags:
      - Users
      description: Create new user in system
      parameters:
      - name: user
        in: body
        description: User that we want to create
        schema:
          $ref: '#/definitions/User'
      produces:
      - application/json
      responses:
        200:
          description: New user is created
          schema:
            $ref: '#/definitions/User'
    get:
      tags:
      - Users
      summary: Get all users in system
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Users'
  /users/{userId}:
    parameters:
    - name: userId
      in: path
      required: true
      description: ID of user that we want to find
      type: string
    get:
      tags:
      - Users
      summary: Get user with given ID
      responses:
        200:
          description: User is found
          schema:
            $ref: '#/definitions/User'
    delete:
      summary: Delete user with given ID
      tags:
      - Users
      responses:
        200:
          description: User is deleted
          schema:
            $ref: '#/definitions/User'
    put:
      summary: Update user with give ID
      tags:
      - Users
      parameters:
      - name: user
        in: body
        description: User with new values of properties
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: User is updated
          schema:
            $ref: '#/definitions/User'
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":2:{s:4:\"User\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:5:\"email\";i:1;s:3:\"_id\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"uniqueItems\";b:1;}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"uniqueItems\";b:1;}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:4:\"$ref\";s:18:\"#/definitions/User\";}}"
...
