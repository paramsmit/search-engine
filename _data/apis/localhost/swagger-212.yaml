---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:44:\"These are a School
  management system's API .\";s:5:\"title\";s:15:\"Back2School API\";s:14:\"termsOfService\";s:24:\"http://swagger.io/terms/\";s:7:\"contact\";O:8:\"stdClass\":0:{}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}s:7:\"version\";s:7:\"1.0byID\";}"
host: localhost:5000
paths:
  /accounts:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Accounts
      summary: Get all accounts
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Login'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Accounts
      summary: Update Account
      parameters:
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Account'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Accounts
      summary: Create an account
      parameters:
      - description: data
        name: Account
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.User'
  /accounts/{username}:
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Accounts
      summary: Delete Account
      parameters:
      - type: integer
        description: Account ID
        name: id
        in: path
        required: true
  /appointments:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Appointments
      summary: Get all appointments
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.List'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Appointments
      summary: Create appointment
      parameters:
      - type: integer
        description: Appointment ID
        name: id
        in: path
        required: true
      - description: data
        name: appointment
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Appointment'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Appointment'
  /appointments/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Appointments
      summary: Get a appointment by id
      parameters:
      - type: integer
        description: Appointment ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Appointment'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Appointments
      summary: Update appointment's data
      parameters:
      - type: integer
        description: Appointment ID
        name: id
        in: path
        required: true
      - description: data
        name: appointment
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Appointment'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Appointment'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Appointments
      summary: Delete Appointment
      parameters:
      - type: integer
        description: Appointment ID
        name: id
        in: path
        required: true
  /classes:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Get all classes
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Class'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Create class
      parameters:
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Class'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Class'
  /classes/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Get a class by id
      parameters:
      - type: integer
        description: Class ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Class'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Update Class's data
      parameters:
      - type: integer
        description: Class ID
        name: id
        in: path
        required: true
      - description: data
        name: parent
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Class'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Class'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Delete Class
      parameters:
      - type: integer
        description: Class ID
        name: id
        in: path
        required: true
  /classes/{id}/lectures:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Get lectures by class
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      - type: integer
        description: Class ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.TimeTable'
  /classes/{id}/students:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Classes
      summary: Get a student by class
      parameters:
      - type: integer
        description: Class ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Student'
  /grades:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Grades
      summary: Get all grades
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Grade'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Grades
      summary: Create grade
      parameters:
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Grade'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Grade'
  /grades/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Grades
      summary: Get a grade by id
      parameters:
      - type: integer
        description: Grade ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Grade'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Grades
      summary: Update Grade
      parameters:
      - type: integer
        description: Grade ID
        name: id
        in: path
        required: true
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Grade'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Grade'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Grades
      summary: Delete Grade
      parameters:
      - type: integer
        description: Grade ID
        name: id
        in: path
        required: true
  /lectures:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Lectures
      summary: Get all lectures
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.TimeTable'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Lectures
      summary: Create lecture
      parameters:
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.TimeTable'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Payment'
  /lectures/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Lectures
      summary: Get a lecture by id
      parameters:
      - type: integer
        description: Lecture ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.TimeTable'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Lectures
      summary: Update lecture
      parameters:
      - type: integer
        description: Lecture ID
        name: id
        in: path
        required: true
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.TimeTable'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.TimeTable'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Lectures
      summary: Delete Lecture
      parameters:
      - type: integer
        description: Lecture ID
        name: id
        in: path
        required: true
  /login:
    post:
      tags:
      - Accounts
      summary: Authenticate
      parameters:
      - description: data
        name: Account
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Login'
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Token'
  /notifications:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Notifications
      summary: Get all notifications
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Notification'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Notifications
      summary: Create notification
      parameters:
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Notification'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Notification'
  /notifications/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Notifications
      summary: Get a notification by id
      parameters:
      - type: integer
        description: Notification ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Notification'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Notifications
      summary: Update notification
      parameters:
      - type: integer
        description: Notification ID
        name: id
        in: path
        required: true
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Notification'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Notification'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Notifications
      summary: Delete Notification
      parameters:
      - type: integer
        description: Notification ID
        name: id
        in: path
        required: true
  /parents:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Get all parents
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Parent'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      - Parents
      summary: Create parent
      parameters:
      - description: data
        name: parent
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Parent'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Parent'
  /parents/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Get a parent by id
      parameters:
      - type: integer
        description: Account ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Parent'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Update parents's data
      parameters:
      - type: integer
        description: Parent ID
        name: id
        in: path
        required: true
      - description: data
        name: parent
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Parent'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Parent'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Delete Parent
      parameters:
      - type: integer
        description: Parent ID
        name: id
        in: path
        required: true
  /parents/{id}/appointments:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      - Parents
      summary: Get appointments of the parent
      parameters:
      - type: integer
        description: Parent ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Appointment'
  /parents/{id}/notifications:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Get notifications of the parent
      parameters:
      - type: integer
        description: Parent ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Notification'
  /parents/{id}/payments:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Get payments of the parent
      parameters:
      - type: integer
        description: Parent ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Payment'
  /parents/{id}/students:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Parents
      summary: Get children of the parent
      parameters:
      - type: integer
        description: Parent ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Student'
  /payments:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Payments
      summary: Get all payments
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Payment'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Payments
      summary: Create payment
      parameters:
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Payment'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Payment'
  /payments/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Payments
      summary: Get a payment by id
      parameters:
      - type: integer
        description: Payment ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Payment'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Payments
      summary: Update payment
      parameters:
      - type: integer
        description: Payment ID
        name: id
        in: path
        required: true
      - description: data
        name: class
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Payment'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Payment'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Payments
      summary: Delete Payment
      parameters:
      - type: integer
        description: Payment ID
        name: id
        in: path
        required: true
  /students:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Students
      summary: Get all students
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Student'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Students
      summary: Create student
      parameters:
      - description: data
        name: student
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Student'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Student'
  /students/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Students
      summary: Get a student by id
      parameters:
      - type: integer
        description: Student ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Student'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Students
      summary: Update student's data
      parameters:
      - type: integer
        description: Student ID
        name: id
        in: path
        required: true
      - description: data
        name: student
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Student'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Student'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Students
      summary: Delete Student
      parameters:
      - type: integer
        description: Student ID
        name: id
        in: path
        required: true
  /students/{id}/grades:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Students
      summary: Get grades of the student
      parameters:
      - type: integer
        description: Student ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Grade'
  /teachers:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get all teachers
      parameters:
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Teacher'
    post:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Create teacher
      parameters:
      - description: data
        name: teacher
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Teacher'
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: '#/definitions/models.Teacher'
  /teachers/{id}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get a teacher by id
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/models.Teacher'
    put:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Update teacher's data
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - description: data
        name: teacher
        in: body
        required: true
        schema:
          type: object
          $ref: '#/definitions/models.Teacher'
      responses:
        204:
          description: No Content
          schema:
            type: object
            $ref: '#/definitions/models.Teacher'
    delete:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Delete Teacher
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
  /teachers/{id}/appointments:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get appointments of the teacher
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Appointment'
  /teachers/{id}/classes:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get classes in which the teacher teaches
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Class'
  /teachers/{id}/lectures:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get lectures taught by the teacher
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.TimeTable'
  /teachers/{id}/notifications:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get notifications of the teacher
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.TimeTable'
  /teachers/{id}/subjects:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get subject taught by the teacher
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: object
            $ref: '#/definitions/repository.Subjects'
  /teachers/{id}/subjects/{subject}:
    get:
      security:
      - ApiKeyAuth: []
      tags:
      - Teachers
      summary: Get classes in which the subject is taught by the teacher
      parameters:
      - type: integer
        description: Teacher ID
        name: id
        in: path
        required: true
      - type: integer
        description: Subject ID
        name: subject
        in: path
        required: true
      - type: integer
        description: number of elements to return
        name: limit
        in: query
      - type: integer
        description: offset in the list of elements to return
        name: offset
        in: query
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Class'
definitions: !php/object "O:8:\"stdClass\":15:{s:14:\"models.Account\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:4:\"kind\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"Parent\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"Password\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"John\";}}}s:18:\"models.Appointment\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"location\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"Aula
  Magna\";}s:9:\"studentID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"teacherID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"models.Class\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"grade\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"section\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"year\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:12:\"models.Grade\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"date\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"grade\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:9:\"studentID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"subject\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"science\";}s:9:\"teacherID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:11:\"models.List\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:74:\"&{%!s(token.Pos=4155)
  %!s(*ast.FieldList=&{4164 [] 4165}) %!s(bool=false)}\";}}s:4:\"next\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"previous\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"self\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"models.Login\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:19:\"models.Notification\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"receiver\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:13:\"receiver_kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"models.Parent\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"surname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"models.Payment\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:6:\"amount\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"emitted\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"paid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"reason\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"studentID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:14:\"models.Student\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"surname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"models.Teacher\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"surname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"models.TimeTable\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"classID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:3:\"end\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"location\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"Aula
  Magna\";}s:5:\"start\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"subject\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"science\";}}}s:12:\"models.Token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"expire\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"models.User\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:19:\"repository.Subjects\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"subjects\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";a:1:{i:0;s:7:\"science\";}}}}}"
...
