---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:17:\"Docker Remote API\";s:11:\"description\";s:0:\"\";}"
host: localhost
basePath: /
paths:
  /_ping:
    get:
      parameters: []
      responses:
        200:
          description: ""
      summary: Ping the docker server
  /auth:
    post:
      parameters: []
      responses:
        200:
          description: ""
      summary: Get the default username and email
  /build:
    post:
      parameters:
      - name: Content-type
        in: formData
        type: string
      - name: X-Registry-Config
        in: formData
        type: string
      - name: buildargs
        in: formData
        type: string
      - name: cpuperiod
        in: formData
        type: string
      - name: cpuquota
        in: formData
        type: string
      - name: cpusetcpus
        in: formData
        type: string
      - name: cpushares
        in: formData
        type: string
      - name: dockerfile
        in: formData
        type: string
      - name: forcerm
        in: formData
        type: string
      - name: memory
        in: formData
        type: string
      - name: memswap
        in: formData
        type: string
      - name: nocache
        in: formData
        type: string
      - name: pull
        in: formData
        type: string
      - name: q
        in: formData
        type: string
      - name: remote
        in: formData
        type: string
      - name: rm
        in: formData
        type: string
      - name: t
        in: formData
        type: string
      responses:
        200:
          description: ""
      summary: Build an image from a Dockerfile
  /commit:
    post:
      parameters:
      - name: author
        in: formData
        type: string
      - name: changes
        in: formData
        type: string
      - name: comment
        in: formData
        type: string
      - name: container
        in: formData
        type: string
      - name: pause
        in: formData
        type: string
      - name: repo
        in: formData
        type: string
      - name: tag
        in: formData
        type: string
      responses:
        200:
          description: ""
      summary: Create a new image from a containeru2019s changes
  /containers/create:
    post:
      parameters:
      - name: name
        in: formData
        type: string
      responses:
        200:
          description: ""
      summary: Create a container
  /containers/json:
    get:
      parameters:
      - name: all
        in: query
        type: string
      - name: before
        in: query
        type: string
      - name: filters
        in: query
        type: string
      - name: limit
        in: query
        type: string
      - name: since
        in: query
        type: string
      - name: size
        in: query
        type: string
      responses:
        200:
          description: ""
      summary: List containers
  /containers/{id}:
    delete:
      parameters:
      - name: force
        in: query
        type: string
      - name: v
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Remove the container id from the filesystem
  /containers/{id}/archive:
    get:
      parameters:
      - name: path
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Get an tar archive of a resource in the filesystem of container id.
    head:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: See the description of the X-Docker-Container-Path-Stat header in thenfollowing
        section.
    put:
      parameters:
      - name: noOverwriteDirNonDir
        in: formData
        type: string
      - name: path
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Upload a tar archive to be extracted to a path in the filesystem of
        containernid.
  /containers/{id}/attach:
    post:
      parameters:
      - name: logs
        in: formData
        type: string
      - name: stderr
        in: formData
        type: string
      - name: stdin
        in: formData
        type: string
      - name: stdout
        in: formData
        type: string
      - name: stream
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Attach to the container id
  /containers/{id}/attach/ws:
    get:
      parameters:
      - name: logs
        in: query
        type: string
      - name: stderr
        in: query
        type: string
      - name: stdin
        in: query
        type: string
      - name: stdout
        in: query
        type: string
      - name: stream
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Attach to the container id via websocket
  /containers/{id}/changes:
    get:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Inspect changes on container idu2019s filesystem
  /containers/{id}/copy:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Copy files or folders of container id
  /containers/{id}/exec:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Sets up an exec instance in a running container id
  /containers/{id}/export:
    get:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Export the contents of container id
  /containers/{id}/json:
    get:
      parameters:
      - name: size
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Return low-level information on the container id
  /containers/{id}/kill:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Kill the container id
  /containers/{id}/logs:
    get:
      parameters:
      - name: follow
        in: query
        type: string
      - name: since
        in: query
        type: string
      - name: stderr
        in: query
        type: string
      - name: stdout
        in: query
        type: string
      - name: tail
        in: query
        type: string
      - name: timestamps
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Get stdout and stderr logs from the container id
  /containers/{id}/pause:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Pause the container id
  /containers/{id}/rename:
    post:
      parameters:
      - name: name
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Rename the container id to a new_name
  /containers/{id}/resize:
    post:
      parameters:
      - name: h
        in: formData
        type: string
      - name: w
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Resize the TTY for container with  id. The unit is number of characters.
        You must restart the container for the resize to take effect.
  /containers/{id}/restart:
    post:
      parameters:
      - name: t
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Restart the container id
  /containers/{id}/start:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Start the container id
  /containers/{id}/stats:
    get:
      parameters:
      - name: stream
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: This endpoint returns a live stream of a containeru2019s resource usage
        statistics.
  /containers/{id}/stop:
    post:
      parameters:
      - name: t
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Stop the container id
  /containers/{id}/top:
    get:
      parameters:
      - name: ps_args
        in: query
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: List processes running inside the container id
  /containers/{id}/unpause:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Unpause the container id
  /containers/{id}/wait:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Block until container id stops, then returns the exit code
  /events:
    get:
      parameters:
      - name: filters
        in: query
        type: string
      - name: since
        in: query
        type: string
      - name: until
        in: query
        type: string
      responses:
        200:
          description: ""
      summary: Get container events from docker, either in real time via streaming,
        or vianpolling (using since).
  /exec/{id}/json:
    get:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Return low-level information about the exec command id.
  /exec/{id}/resize:
    post:
      parameters:
      - name: h
        in: formData
        type: string
      - name: w
        in: formData
        type: string
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Resizes the tty session used by the exec command id.  The unit is number
        of characters.nThis API is valid only if tty was specified as part of creating
        and starting the exec command.
  /exec/{id}/start:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Starts a previously set up exec instance id. If detach is true, this
        APInreturns after starting the exec command. Otherwise, this API sets up anninteractive
        session with the exec command.
  /images/create:
    post:
      parameters:
      - name: X-Registry-Auth
        in: formData
        type: string
      - name: fromImage
        in: formData
        type: string
      - name: fromSrc
        in: formData
        type: string
      - name: repo
        in: formData
        type: string
      - name: tag
        in: formData
        type: string
      responses:
        200:
          description: ""
      summary: Create an image either by pulling it from the registry or by importing
        it
  /images/get:
    get:
      parameters: []
      responses:
        200:
          description: ""
      summary: Get a tarball containing all images and metadata for one or more repositories.
  /images/json:
    get:
      parameters:
      - name: all
        in: query
        type: string
      - name: filter
        in: query
        type: string
      - name: filters
        in: query
        type: string
      responses:
        200:
          description: ""
      summary: 'Example request:'
  /images/load:
    post:
      parameters: []
      responses:
        200:
          description: ""
      summary: Load a set of images and tags into a Docker repository.nSee the image
        tarball format for more details.
  /images/search:
    get:
      parameters:
      - name: term
        in: query
        type: string
      responses:
        200:
          description: ""
      summary: Search for an image on Docker Hub.
  /images/{name}:
    delete:
      parameters:
      - name: force
        in: query
        type: string
      - name: noprune
        in: query
        type: string
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Remove the image name from the filesystem
  /images/{name}/get:
    get:
      parameters:
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Get a tarball containing all images and metadata for the repository
        specifiednby name.
  /images/{name}/history:
    get:
      parameters:
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Return the history of the image name
  /images/{name}/json:
    get:
      parameters:
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Return low-level information on the image name
  /images/{name}/push:
    post:
      parameters:
      - name: tag
        in: formData
        type: string
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Push the image name on the registry
  /images/{name}/tag:
    post:
      parameters:
      - name: force
        in: formData
        type: string
      - name: repo
        in: formData
        type: string
      - name: tag
        in: formData
        type: string
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Tag the image name into a repository
  /info:
    get:
      parameters: []
      responses:
        200:
          description: ""
      summary: Display system-wide information
  /networks:
    get:
      parameters:
      - name: filters
        in: query
        type: string
      responses:
        200:
          description: ""
      summary: 'Example request:'
  /networks/<network-id>:
    get:
      parameters: []
      responses:
        200:
          description: ""
      summary: 'Example request:'
  /networks/create:
    post:
      parameters: []
      responses:
        200:
          description: ""
      summary: Create a network
  /networks/{id}:
    delete:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Instruct the driver to remove the network (id).
  /networks/{id}/connect:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Connects a container to a network
  /networks/{id}/disconnect:
    post:
      parameters:
      - in: path
        name: id
        type: string
      responses:
        200:
          description: ""
      summary: Disconnects a container from a network
  /version:
    get:
      parameters: []
      responses:
        200:
          description: ""
      summary: Show the docker version information
  /volumes:
    get:
      parameters:
      - name: filters
        in: query
        type: string
      responses:
        200:
          description: ""
      summary: 'Example request:'
  /volumes/create:
    post:
      parameters: []
      responses:
        200:
          description: ""
      summary: Create a volume
  /volumes/{name}:
    delete:
      parameters:
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Instruct the driver to remove the volume (name).
    get:
      parameters:
      - in: path
        name: name
        type: string
      responses:
        200:
          description: ""
      summary: Return low-level information on the volume name
schemes:
- https
...
