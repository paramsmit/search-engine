---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:178:\"This basic modern
  RESTful API written in GoLang, provides CRUD operations\nand search functionality
  for a directory of hard-coded company employees\nstored in an in-memory database\";s:5:\"title\";s:32:\"Services
  & Api Tech Challange #1\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:10:\"Chima
  Uwah\";s:3:\"url\";s:56:\"https://github.com/chimauwah/services-api-tech-challenge\";s:5:\"email\";s:27:\"cuwah@captechconsulting.com\";}s:7:\"version\";s:5:\"0.1.0\";s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:87:\"https://raw.githubusercontent.com/chimauwah/services-api-tech-challenge/master/OTWL.png\";}}"
host: localhost:8080
basePath: /
paths:
  /api/employee:
    post:
      tags:
      - employee
      summary: Create a single employee.
      operationId: createEmployee
      parameters:
      - x-go-name: Employee
        description: The Employee to create.
        name: employee
        in: body
        required: true
        schema:
          $ref: '#/definitions/EmployeeSampleReq'
      responses:
        201:
          $ref: '#/responses/employeeResponse'
        400:
          $ref: '#/responses/badReq'
        500:
          $ref: '#/responses/errInternal'
  /api/employee/details/{id}:
    get:
      tags:
      - employeedetails
      summary: Retreive details for a specific employee.
      operationId: listEmployeeDetails
      parameters:
      - type: integer
        format: int32
        example: 1710
        x-go-name: ID
        description: id of employee to retrieve details for
        name: id
        in: path
        required: true
      responses:
        200:
          $ref: '#/responses/employeeDtlResponse'
        500:
          $ref: '#/responses/errInternal'
  /api/employee/search:
    get:
      tags:
      - employees
      summary: Search for an employee with provided criteria.
      operationId: searchEmployees
      parameters:
      - type: string
        example: James
        x-go-name: FirstName
        description: search by first name
        name: first_name
        in: query
      - type: string
        example: Howlett
        x-go-name: LastName
        description: search last name
        name: last_name
        in: query
      - type: string
        example: Mutant
        x-go-name: Title
        description: search by title
        name: title
        in: query
      - pattern: '[0-1]{1}'
        type: integer
        format: int32
        example: 1
        x-go-name: Active
        description: search by active (1 or 2)
        name: active
        in: query
      - type: string
        example: (555) 867-5309
        x-go-name: CellPhone
        description: search by cellphone
        name: cell_phone
        in: query
      - type: string
        example: logan
        x-go-name: Samaccountname
        description: search by samaccountname
        name: samaccountname
        in: query
      - type: string
        example: logan@xmen.com
        x-go-name: Mail
        description: search by email
        name: mail
        in: query
      - type: string
        example: OPS
        x-go-name: PrimaryPa
        description: search by primary pa
        name: primary_pa
        in: query
      - type: string
        example: Alberta
        x-go-name: Office
        description: search by office
        name: office
        in: query
      - type: string
        example: professorx
        x-go-name: ManagerSamaccountname
        description: search by manager samaccountname
        name: manager_samaccountname
        in: query
      - type: string
        example: Potentially
        x-go-name: TravelPref
        description: search by travel preference
        name: travel_pref
        in: query
      responses:
        200:
          $ref: '#/responses/employeesResponse'
        404:
          $ref: '#/responses/notFound'
        500:
          $ref: '#/responses/errInternal'
  /api/employee/{id}:
    get:
      tags:
      - employee
      summary: Retrieve employee with given id.
      operationId: getEmployee
      parameters:
      - type: integer
        format: int32
        example: 1710
        x-go-name: ID
        description: id of employee to retrieve
        name: id
        in: path
        required: true
      responses:
        200:
          $ref: '#/responses/employeeResponse'
        500:
          $ref: '#/responses/errInternal'
    put:
      tags:
      - employee
      summary: Update an existing employee.
      operationId: updateEmployee
      parameters:
      - x-go-name: Employee
        description: The employee data with which to overwrite existing Employee.
        name: employee
        in: body
        required: true
        schema:
          $ref: '#/definitions/EmployeeSampleReq'
      - type: integer
        format: int32
        example: 1710
        x-go-name: ID
        description: id of employee to retrieve
        name: id
        in: path
        required: true
      responses:
        204:
          $ref: '#/responses/noContent'
        400:
          $ref: '#/responses/badReq'
        404:
          $ref: '#/responses/notFound'
        500:
          $ref: '#/responses/errInternal'
    delete:
      tags:
      - employee
      summary: Delete an existing employee.
      operationId: deleteEmployee
      parameters:
      - type: integer
        format: int32
        example: 1710
        x-go-name: ID
        description: id of employee to delete
        name: id
        in: path
        required: true
      responses:
        204:
          $ref: '#/responses/noContent'
        404:
          $ref: '#/responses/notFound'
        500:
          $ref: '#/responses/errInternal'
  /api/employees:
    get:
      tags:
      - employees
      summary: Retrieve all employees.
      operationId: listEmployees
      responses:
        200:
          $ref: '#/responses/employeesResponse'
        500:
          $ref: '#/responses/errInternal'
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":4:{s:9:\"CoreSkill\";O:8:\"stdClass\":4:{s:11:\"description\";s:16:\"CoreSkill
  struct\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"proficiency\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:11:\"Proficiency\";}s:5:\"skill\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:5:\"Skill\";}}s:12:\"x-go-package\";s:54:\"github.com/chimauwah/services-api-tech-challenge/model\";}s:8:\"Employee\";O:8:\"stdClass\":5:{s:11:\"description\";s:52:\"This
  is used for operations that involve an Employee\";s:4:\"type\";s:6:\"object\";s:5:\"title\";s:17:\"An
  Employee model\";s:10:\"properties\";O:8:\"stdClass\":14:{s:6:\"active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:9:\"x-go-name\";s:6:\"Active\";}s:9:\"cellphone\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"CellPhone\";}s:7:\"enterts\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:9:\"x-go-name\";s:7:\"EnterTs\";}s:9:\"firstname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"FirstName\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:9:\"x-go-name\";s:2:\"ID\";}s:8:\"lastname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:8:\"LastName\";}s:4:\"mail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:4:\"Mail\";}s:9:\"managerdn\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"ManagerDn\";}s:21:\"managersamaccountname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:21:\"ManagerSamaccountname\";}s:6:\"office\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:6:\"Office\";}s:9:\"primarypa\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"PrimaryPa\";}s:14:\"samaccountname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:14:\"Samaccountname\";}s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:5:\"Title\";}s:10:\"travelpref\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:10:\"TravelPref\";}}s:12:\"x-go-package\";s:54:\"github.com/chimauwah/services-api-tech-challenge/model\";}s:14:\"EmployeeDetail\";O:8:\"stdClass\":5:{s:11:\"description\";s:59:\"This
  is used for operations that involve an EmployeeDetail.\";s:4:\"type\";s:6:\"object\";s:5:\"title\";s:23:\"An
  EmployeeDetail model\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"employee\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Employee\";}s:6:\"skills\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CoreSkill\";}s:9:\"x-go-name\";s:6:\"Skills\";}}s:12:\"x-go-package\";s:54:\"github.com/chimauwah/services-api-tech-challenge/model\";}s:17:\"EmployeeSampleReq\";O:8:\"stdClass\":5:{s:11:\"description\";s:82:\"This
  is used for as a sample request body for update employee and create employee.\";s:4:\"type\";s:6:\"object\";s:5:\"title\";s:26:\"An
  EmployeeSampleReq model\";s:10:\"properties\";O:8:\"stdClass\":11:{s:6:\"active\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:9:\"x-go-name\";s:6:\"Active\";s:7:\"example\";b:1;}s:9:\"cellphone\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"CellPhone\";s:7:\"example\";s:14:\"(555)
  555-5555\";}s:9:\"firstname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"FirstName\";s:7:\"example\";s:8:\"T'Challa\";}s:8:\"lastname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:8:\"LastName\";s:7:\"example\";s:3:\"N/A\";}s:4:\"mail\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:4:\"Mail\";s:7:\"example\";s:20:\"king@wakandamail.com\";}s:21:\"managersamaccountname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:21:\"ManagerSamaccountname\";s:7:\"example\";s:6:\"tchaka\";}s:6:\"office\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:6:\"Office\";s:7:\"example\";s:7:\"Wakanda\";}s:9:\"primarypa\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:9:\"PrimaryPa\";s:7:\"example\";s:3:\"OPS\";}s:14:\"samaccountname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:14:\"Samaccountname\";s:7:\"example\";s:4:\"king\";}s:5:\"title\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:5:\"Title\";s:7:\"example\";s:13:\"Black
  Panther\";}s:10:\"travelpref\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"x-go-name\";s:10:\"TravelPref\";s:7:\"example\";s:11:\"Potentially\";}}s:12:\"x-go-package\";s:54:\"github.com/chimauwah/services-api-tech-challenge/model\";}}"
...
