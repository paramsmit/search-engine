---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:620:\"This is documentatin
  for the Snuuper ode API. For every request you must include in the header: \n Content-Type:
  application/json \n\n For protected routes by authorization we use JWT. Each of
  these have a lock by them. Must include a Bearer Token in the header \n Example:
  Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ... \n\n Use /users/login
  with email or phone and get token bearer from response. \n Click in the Authorize
  button, \n In the modal window in section api_key paste token (Bearer ...), client_id
  leave in blank  \n1) Click Authorize, \n2) To finish click done to save token \n
  3) Use all urls protected\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:24:\"Snuuper
  Test Application\";s:14:\"termsOfService\";s:24:\"http://swagger.io/terms/\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:20:\"contacto@snuuper.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: localhost:3000
basePath: /v1
paths:
  /users/login:
    post:
      tags:
      - user
      summary: User Login, get token bearer
      description: Returns Bearer Token for JWT authentication
      operationId: createToken
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Get token
        required: true
        schema:
          $ref: '#/definitions/CreateToken'
      responses:
        204:
          description: success
          schema:
            $ref: '#/definitions/LoginUserResponse'
        422:
          description: error
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /users/{user_id}:
    get:
      tags:
      - user
      summary: Return user
      description: This can only be done by the logged in user.
      produces:
      - application/json
      parameters:
      - name: user_id
        in: path
        description: User identifier
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ReturnUserResponse'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/ApiUnauthorizezdResponse'
      security:
      - api_key: []
    put:
      tags:
      - user
      summary: Update user
      description: This can only be done by the logged in user.
      produces:
      - application/json
      parameters:
      - name: user_id
        in: path
        description: User identifier
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
      responses:
        200:
          description: successful request
          schema:
            $ref: '#/definitions/ApiSuccessResponse'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/ApiUnauthorizezdResponse'
      security:
      - api_key: []
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      produces:
      - application/json
      parameters:
      - name: user_id
        in: path
        description: User identifier
        required: true
        type: string
      responses:
        204:
          description: success
          schema:
            $ref: '#/definitions/ApiSuccessResponse'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/ApiUnauthorizezdResponse'
        default:
          description: successful operation
      security:
      - api_key: []
  /users:
    post:
      tags:
      - user
      summary: Create user
      description: Creates user that can now be used for authentication
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Creates user
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
      responses:
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/CreateUserResponse'
        422:
          description: Invalid operation
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      security:
      - api_key: []
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":9:{s:11:\"CreateToken\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:26:\"unique_key
  | email | phone\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"8885678345\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"secure-password\";}}}s:10:\"CreateUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"first_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"John\";}s:9:\"last_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"doe\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:18:\"john.doe@gmail.com\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"8889401234\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"mike31\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"secure-password\";}}}s:14:\"UpdateUserBody\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"first_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"John\";}s:9:\"last_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"doe\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:18:\"john.doe@gmail.com\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"8889401234\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"mike31\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"secure-password\";}}}s:18:\"CreateUserResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"success\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:30:\"Successfully
  created new user.\";}s:5:\"token\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:45:\"Bearer
  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...\";s:11:\"description\";s:20:\"Authentication
  token\";}}}s:17:\"LoginUserResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"success\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:5:\"token\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:45:\"Bearer
  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...\";s:11:\"description\";s:20:\"Authentication
  token\";}}}s:18:\"ReturnUserResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"success\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"first_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"John\";}s:9:\"last_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"doe\";}s:5:\"email\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:18:\"john.doe@gmail.com\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"8889401234\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"mike31\";}}}}}s:16:\"ApiErrorResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"success\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:0;}s:5:\"error\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"ApiSuccessResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"success\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:24:\"ApiUnauthorizezdResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Unauthorized\";}}"
...
