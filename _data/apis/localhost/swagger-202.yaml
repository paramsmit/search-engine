---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:13:\"ASINT
  Project\";s:11:\"description\";s:50:\"API for clients to communicate with my news
  forum.\";s:14:\"termsOfService\";s:20:\"www.lslima.me/terms/\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:10:\"Jo\xE3o
  Lima\";s:5:\"email\";s:18:\"j.lima91@yahoo.com\";s:3:\"url\";s:23:\"www.github.com/lslima91\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:34:\"http://opensource.org/licenses/MIT\";}}"
host: localhost:4000
basePath: /api
paths:
  /authenticate:
    post:
      tags:
      - auth
      description: Logs in
      operationId: logIn
      produces:
      - application/json
      parameters:
      - name: login Infoc
        in: body
        description: Login Information
        required: true
        schema:
          $ref: '#/definitions/login'
      responses:
        200:
          description: user info response
          schema:
            $ref: '#/definitions/authResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /posts:
    get:
      tags:
      - posts
      description: Returns all posts from the server.
      operationId: getPosts
      produces:
      - application/json
      responses:
        200:
          description: posts response
          schema:
            type: array
            items:
              $ref: '#/definitions/post'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      tags:
      - posts
      security:
      - jwt: []
      description: Creates a new post in the server.
      operationId: addPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Post payload.
        required: true
        schema:
          $ref: '#/definitions/postcreate'
      responses:
        201:
          description: post created response
          schema:
            $ref: '#/definitions/createdpost'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /posts/{pid}/upvotes:
    post:
      tags:
      - posts
      security:
      - jwt: []
      description: Upvotes post.
      operationId: upPost
      produces:
      - application/json
      parameters:
      - name: pid
        in: path
        description: Post ID.
        required: true
        type: integer
      responses:
        200:
          description: post upvoted response
          schema:
            $ref: '#/definitions/modifiedModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /posts/{pid}/downvotes:
    post:
      tags:
      - posts
      security:
      - jwt: []
      description: Downvotes post.
      operationId: downPost
      produces:
      - application/json
      parameters:
      - name: pid
        in: path
        description: Post ID.
        required: true
        type: integer
      responses:
        200:
          description: post downvoted response
          schema:
            $ref: '#/definitions/modifiedModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /users:
    get:
      security:
      - jwt: []
      tags:
      - users
      description: Logs in
      operationId: logn
      produces:
      - application/json
      responses:
        200:
          description: user created response
          schema:
            type: array
            items:
              $ref: '#/definitions/usercreated'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /users/{login}:
    put:
      tags:
      - users
      description: Creates user
      operationId: createUser
      produces:
      - application/json
      parameters:
      - name: login
        in: path
        description: Desired login name.
        required: true
        type: string
      - name: userinfo
        in: body
        description: Add user to the server.
        required: true
        schema:
          $ref: '#/definitions/user'
      responses:
        200:
          description: user created response
          schema:
            $ref: '#/definitions/usercreatedResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    get:
      security:
      - jwt: []
      tags:
      - users
      description: Logs in
      operationId: login
      produces:
      - application/json
      parameters:
      - name: login
        in: path
        description: ID of post where comment list was made.
        required: true
        type: string
      responses:
        200:
          description: user created response
          schema:
            $ref: '#/definitions/usercreated'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      tags:
      - users
      security:
      - jwt: []
      description: Deletes user
      operationId: deluser
      produces:
      - application/json
      parameters:
      - name: login
        in: path
        description: Login ID of user to be deleted.
        required: true
        type: string
      responses:
        200:
          description: user deleted response
          schema:
            $ref: '#/definitions/defaultModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /comments/{pid}:
    get:
      tags:
      - comments
      description: Returns list of comments based on post id
      operationId: findCommentsByPostId
      produces:
      - application/json
      parameters:
      - name: pid
        in: path
        description: ID of post where comment list was made
        required: true
        type: integer
      responses:
        200:
          description: comment response
          schema:
            type: array
            items:
              $ref: '#/definitions/comment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      tags:
      - comments
      security:
      - jwt: []
      description: Creates a new comment into the corresponding pid section.
      operationId: addComment
      produces:
      - application/json
      parameters:
      - name: pid
        in: path
        description: Post identification .
        required: true
        type: integer
      - name: body
        in: body
        description: Comment payload.
        required: true
        schema:
          $ref: '#/definitions/commentcreate'
      responses:
        200:
          description: Comment response
          schema:
            $ref: '#/definitions/comment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /comments/{postId}/{commentId}:
    delete:
      tags:
      - comments
      security:
      - jwt: []
      description: Deletes user
      operationId: delcom
      produces:
      - application/json
      parameters:
      - name: postId
        in: path
        description: Id of post where comment was made.
        required: true
        type: string
      - name: commentId
        in: path
        description: Unique ID of comment to be deleted.
        required: true
        type: string
      responses:
        200:
          description: comment deleted response
          schema:
            $ref: '#/definitions/defaultModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":13:{s:4:\"post\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"pid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"upvotes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"downvotes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:8:\"submited\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"postcreate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:4:\"News\";i:1;s:5:\"Games\";i:2;s:6:\"Videos\";i:3;s:4:\"Pics\";}}}}s:7:\"comment\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"comment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"pid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"time\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"commentcreate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"comment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"user\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"authResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:25:\"#/definitions/usercreated\";}}}s:5:\"login\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"login\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:19:\"usercreatedResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:25:\"#/definitions/usercreated\";}}}s:11:\"usercreated\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:5:\"login\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"upvotelist\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"downvotelist\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"posts\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"admin\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"createdpost\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"defaultModel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:7:\"success\";i:1;s:7:\"message\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"modifiedModel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"code\";i:1;s:10:\"operations\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"operations\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"errors\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"inserted\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"replaced\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"skipped\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"unchanged\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:10:\"errorModel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"code\";i:1;s:7:\"message\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
