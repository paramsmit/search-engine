---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:9:\"Gradebook\";s:11:\"description\";s:18:\"The
  next big thing\";s:7:\"version\";s:0:\"\";}"
host: localhost:8081
paths:
  /api/GHtoken:
    get:
      tags:
      - GithubToken
      summary: read GithubToken
      description: Returns the GH token
      operationId: GithubToken#read
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GithubtokenMt'
      schemes:
      - http
  /api/bug-profile:
    get:
      tags:
      - bug_profile
      summary: list bug_profile
      description: Show all of my bug profiles
      operationId: bug_profile#list
      responses:
        200:
          description: OK
      schemes:
      - http
    post:
      tags:
      - bug_profile
      summary: create bug_profile
      description: Make me a new bug profile
      operationId: bug_profile#create
      parameters:
      - name: payload
        in: body
        description: A bug profile
        required: true
        schema:
          $ref: '#/definitions/bug_profile'
      responses:
        200:
          description: OK
      schemes:
      - http
  /api/bug-profile/{profileID}:
    get:
      tags:
      - bug_profile
      summary: show bug_profile
      description: Show a single bug profile
      operationId: bug_profile#show
      parameters:
      - name: profileID
        in: path
        description: The profile's unique identifier
        required: true
        type: integer
      responses:
        200:
          description: OK
        404:
          description: Not Found
      schemes:
      - http
    put:
      tags:
      - bug_profile
      summary: update bug_profile
      description: Update my pre-existing bug profile
      operationId: bug_profile#update
      parameters:
      - name: profileID
        in: path
        description: The profile's unique identifier
        required: true
        type: integer
      - name: payload
        in: body
        description: A bug profile
        required: true
        schema:
          $ref: '#/definitions/bug_profile'
      responses:
        200:
          description: OK
        404:
          description: Not Found
      schemes:
      - http
    delete:
      tags:
      - bug_profile
      summary: delete bug_profile
      description: I don't want this bug profile anymore
      operationId: bug_profile#delete
      parameters:
      - name: profileID
        in: path
        description: The profile's unique identifier
        required: true
        type: integer
      responses:
        200:
          description: OK
        404:
          description: Not Found
      schemes:
      - http
  /api/swagger.json:
    get:
      summary: Download src/swagger/swagger.json
      operationId: swagger#/api/swagger.json
      responses:
        200:
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
  /api/user:
    post:
      tags:
      - user
      summary: create user
      description: Sign up for the first time
      operationId: user#create
      parameters:
      - name: payload
        in: body
        description: payload used to sign up a user
        required: true
        schema:
          $ref: '#/definitions/user'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserMtGithub'
        500:
          description: Internal Server Error
      schemes:
      - http
  /api/user/{userID}:
    get:
      tags:
      - user
      summary: read user
      description: Get the detials about this particular account
      operationId: user#read
      parameters:
      - name: userID
        in: path
        description: The user's unique identifier
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserMt'
        500:
          description: Internal Server Error
      schemes:
      - http
    put:
      tags:
      - user
      summary: update user
      description: Adjust your account settings
      operationId: user#update
      parameters:
      - name: userID
        in: path
        description: The user's unique identifier
        required: true
        type: integer
      - name: payload
        in: body
        description: payload used to sign up a user
        required: true
        schema:
          $ref: '#/definitions/user'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserMt'
        500:
          description: Internal Server Error
      schemes:
      - http
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":7:{s:10:\"Checkstyle\";O:8:\"stdClass\":5:{s:5:\"title\";s:10:\"Checkstyle\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":153:{s:24:\"AbbreviationAsWordInName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:132:\"The
  Check validate abbreviations(consecutive capital letters) length in identifier name,
  it also allow in enforce camel case naming.\";s:7:\"example\";b:0;}s:17:\"AbstractClassName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:81:\"Ensures
  that the names of abstract classes conforming to some regular expression.\";s:7:\"example\";b:0;}s:18:\"AnnotationLocation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Check
  location of annotation on language elements.\";s:7:\"example\";b:1;}s:18:\"AnnotationUseStyle\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:60:\"This
  check controls the style with the usage of annotations.\";s:7:\"example\";b:1;}s:15:\"AnonInnerLength\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:40:\"Checks
  for long anonymous inner classes.\";s:7:\"example\";b:0;}s:18:\"ArrayTrailingComma\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:64:\"Checks
  if array initialization contains optional trailing comma.\";s:7:\"example\";b:1;}s:14:\"ArrayTypeStyle\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:43:\"Checks
  the style of array type definitions.\";s:7:\"example\";b:1;}s:13:\"AtclauseOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:31:\"Checks
  the order of at-clauses.\";s:7:\"example\";b:1;}s:29:\"AvoidEscapedUnicodeCharacters\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:31:\"Restrict
  using Unicode escapes.\";s:7:\"example\";b:1;}s:23:\"AvoidInlineConditionals\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:28:\"Detects
  inline conditionals.\";s:7:\"example\";b:1;}s:17:\"AvoidNestedBlocks\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:20:\"Finds
  nested blocks.\";s:7:\"example\";b:1;}s:15:\"AvoidStarImport\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:59:\"Check
  that finds import statements that use the * notation.\";s:7:\"example\";b:0;}s:17:\"AvoidStaticImport\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:32:\"Check
  that finds static imports.\";s:7:\"example\";b:1;}s:27:\"BooleanExpressionComplexity\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:91:\"Restricts
  nested boolean operators (&&, ||, &, | and ^) to a specified depth (default = 3).\";s:7:\"example\";b:1;}s:18:\"CatchParameterName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:87:\"Checks
  that catch parameter names conform to a format specified by the format property.\";s:7:\"example\";b:0;}s:28:\"ClassDataAbstractionCoupling\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:90:\"This
  metric measures the number of instantiations of other classes within the given class.\";s:7:\"example\";b:0;}s:21:\"ClassFanOutComplexity\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:52:\"The
  number of other classes a given class relies on.\";s:7:\"example\";b:1;}s:22:\"ClassTypeParameterName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:92:\"Checks
  that class type parameter names conform to a format specified by the format property.\";s:7:\"example\";b:0;}s:19:\"CommentsIndentation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Controls
  the indentation between comments and surrounding code.\";s:7:\"example\";b:0;}s:12:\"ConstantName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:80:\"Checks
  that constant names conform to a format specified by the format property.\";s:7:\"example\";b:1;}s:15:\"CovariantEquals\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:106:\"Checks
  that if a class defines a covariant method equals, then it defines method equals(java.lang.Object).\";s:7:\"example\";b:1;}s:17:\"CustomImportOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:88:\"Checks
  that the groups of import declarations appear in the order specified by the user.\";s:7:\"example\";b:0;}s:20:\"CyclomaticComplexity\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:55:\"Checks
  cyclomatic complexity against a specified limit.\";s:7:\"example\";b:0;}s:16:\"DeclarationOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:146:\"Checks
  that the parts of a class or interface declaration appear in the order suggested
  by the Code Conventions for the Java Programming Language.\";s:7:\"example\";b:1;}s:16:\"DefaultComesLast\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:68:\"Check
  that the default is after all the cases in a switch statement.\";s:7:\"example\";b:1;}s:15:\"DescendantToken\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Checks
  for restricted tokens beneath other tokens.\";s:7:\"example\";b:1;}s:18:\"DesignForExtension\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:49:\"Checks
  that classes are designed for inheritance.\";s:7:\"example\";b:0;}s:10:\"EmptyBlock\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Checks
  for empty blocks.\";s:7:\"example\";b:0;}s:15:\"EmptyCatchBlock\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:65:\"Checks
  for empty catch blocks with few options to skip violation.\";s:7:\"example\";b:1;}s:22:\"EmptyForInitializerPad\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:142:\"Checks
  the padding of an empty for initializer; that is whether a space is required at
  an empty for initializer, or such spaces are forbidden.\";s:7:\"example\";b:1;}s:19:\"EmptyForIteratorPad\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:136:\"Checks
  the padding of an empty for iterator; that is whether a space is required at an
  empty for iterator, or such spaces are forbidden.\";s:7:\"example\";b:1;}s:18:\"EmptyLineSeparator\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:33:\"Checks
  for blank line separators.\";s:7:\"example\";b:0;}s:14:\"EmptyStatement\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:42:\"Detects
  empty statements (standalone ';').\";s:7:\"example\";b:0;}s:15:\"EqualsAvoidNull\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:93:\"Checks
  that any combination of String literals is on the left side of an equals() comparison.\";s:7:\"example\";b:1;}s:14:\"EqualsHashCode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:68:\"Checks
  that classes that override equals() also override hashCode().\";s:7:\"example\";b:0;}s:24:\"ExecutableStatementCount\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:82:\"Restricts
  the number of executable statements to a specified limit (default = 30).\";s:7:\"example\";b:1;}s:22:\"ExplicitInitialization\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:173:\"Checks
  if any class or object member explicitly initialized to default for its type value
  (null for object references, zero for numeric types and char and false for boolean.\";s:7:\"example\";b:1;}s:11:\"FallThrough\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:150:\"Checks
  for fall through in switch statements Finds locations where a case contains Java
  code - but lacks a break, return, throw or continue statement.\";s:7:\"example\";b:1;}s:10:\"FileLength\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:29:\"Checks
  for long source files.\";s:7:\"example\";b:0;}s:16:\"FileTabCharacter\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:49:\"Checks
  to see if a file contains a tab character.\";s:7:\"example\";b:0;}s:10:\"FinalClass\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:75:\"Checks
  that class which has only private constructors is declared as final.\";s:7:\"example\";b:0;}s:18:\"FinalLocalVariable\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Ensures
  that local variables that never get their values changed, must be declared final.\";s:7:\"example\";b:0;}s:15:\"FinalParameters\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:65:\"Check
  that method/constructor/catch/foreach parameters are final.\";s:7:\"example\";b:1;}s:17:\"GenericWhitespace\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:99:\"Checks
  that the whitespace around the Generic tokens < and > are correct to the typical
  convention.\";s:7:\"example\";b:0;}s:6:\"Header\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:60:\"Checks
  the header of the source against a fixed header file.\";s:7:\"example\";b:0;}s:11:\"HiddenField\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:102:\"Checks
  that a local variable or a parameter does not shadow a field that is defined in
  the same class.\";s:7:\"example\";b:1;}s:27:\"HideUtilityClassConstructor\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"Make
  sure that utility classes (classes that contain only static methods) do not have
  a public constructor.\";s:7:\"example\";b:0;}s:12:\"IllegalCatch\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:103:\"Catching
  java.lang.Exception, java.lang.Error or java.lang.RuntimeException is almost never
  acceptable.\";s:7:\"example\";b:1;}s:13:\"IllegalImport\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Checks
  for imports from a set of illegal packages.\";s:7:\"example\";b:1;}s:20:\"IllegalInstantiation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:70:\"Checks
  for illegal instantiations where a factory method is preferred.\";s:7:\"example\";b:0;}s:13:\"IllegalThrows\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:82:\"Throwing
  java.lang.Error or java.lang.RuntimeException is almost never acceptable.\";s:7:\"example\";b:1;}s:12:\"IllegalToken\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:26:\"Checks
  for illegal tokens.\";s:7:\"example\";b:1;}s:16:\"IllegalTokenText\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:30:\"Checks
  for illegal token text.\";s:7:\"example\";b:1;}s:11:\"IllegalType\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"Checks
  that particular class are never used as types in variable declarations, return values
  or parameters.\";s:7:\"example\";b:1;}s:13:\"ImportControl\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:66:\"Check
  that controls what packages can be imported in each package.\";s:7:\"example\";b:0;}s:11:\"ImportOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:56:\"Ensures
  that groups of imports come in a specific order.\";s:7:\"example\";b:1;}s:11:\"Indentation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:40:\"Checks
  correct indentation of Java Code.\";s:7:\"example\";b:1;}s:15:\"InnerAssignment\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Checks
  for assignments in subexpressions, such as in String s = Integer.toString(i = 2);.\";s:7:\"example\";b:1;}s:13:\"InnerTypeLast\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:123:\"Check
  nested (internal) classes/interfaces are declared at the bottom of the class after
  all method and field declarations.\";s:7:\"example\";b:0;}s:15:\"InterfaceIsType\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:80:\"Implements
  Bloch, Effective Java, Item 17 - Use Interfaces only to define types.\";s:7:\"example\";b:0;}s:26:\"InterfaceTypeParameterName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:96:\"Checks
  that interface type parameter names conform to a format specified by the format
  property.\";s:7:\"example\";b:1;}s:8:\"JavaNCSS\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"This
  check calculates the Non Commenting Source Statements (NCSS) metric for Java source
  files and methods.\";s:7:\"example\";b:1;}s:13:\"JavadocMethod\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:46:\"Checks
  the Javadoc of a method or constructor.\";s:7:\"example\";b:0;}s:14:\"JavadocPackage\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:54:\"Checks
  that all packages have a package documentation.\";s:7:\"example\";b:0;}s:16:\"JavadocParagraph\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:26:\"Checks
  Javadoc paragraphs.\";s:7:\"example\";b:0;}s:12:\"JavadocStyle\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:44:\"Custom
  Checkstyle Check to validate Javadoc.\";s:7:\"example\";b:1;}s:33:\"JavadocTagContinuationIndentation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Checks
  the indentation of the continuation lines in at-clauses.\";s:7:\"example\";b:1;}s:11:\"JavadocType\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:29:\"Checks
  the Javadoc of a type.\";s:7:\"example\";b:1;}s:15:\"JavadocVariable\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:43:\"Checks
  that a variable has Javadoc comment.\";s:7:\"example\";b:1;}s:9:\"LeftCurly\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:77:\"Checks
  the placement of left curly braces on types, methods and other blocks:\";s:7:\"example\";b:1;}s:10:\"LineLength\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:22:\"Checks
  for long lines.\";s:7:\"example\";b:0;}s:22:\"LocalFinalVariableName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:92:\"Checks
  that local final variable names conform to a format specified by the format property.\";s:7:\"example\";b:0;}s:17:\"LocalVariableName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:97:\"Checks
  that local, non-final variable names conform to a format specified by the format
  property.\";s:7:\"example\";b:1;}s:11:\"MagicNumber\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:25:\"Checks
  for magic numbers.\";s:7:\"example\";b:0;}s:10:\"MemberName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Checks
  that instance variable names conform to a format specified by the format property.\";s:7:\"example\";b:1;}s:11:\"MethodCount\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:51:\"Checks
  the number of methods declared in each type.\";s:7:\"example\";b:1;}s:12:\"MethodLength\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Checks
  for long methods.\";s:7:\"example\";b:0;}s:10:\"MethodName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:78:\"Checks
  that method names conform to a format specified by the format property.\";s:7:\"example\";b:0;}s:14:\"MethodParamPad\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:177:\"Checks
  the padding between the identifier of a method definition, constructor definition,
  method call, or constructor invocation; and the left parenthesis of the parameter
  list.\";s:7:\"example\";b:1;}s:23:\"MethodTypeParameterName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:92:\"Checks
  that class type parameter names conform to a format specified by the format property.\";s:7:\"example\";b:0;}s:11:\"MissingCtor\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:90:\"Checks
  that classes (except abstract one) define a ctor and don't rely on the default one.\";s:7:\"example\";b:0;}s:17:\"MissingDeprecated\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:152:\"This
  class is used to verify that both the java.lang.Deprecated annotation is present
  and the @deprecated Javadoc tag is present when either is present.\";s:7:\"example\";b:0;}s:15:\"MissingOverride\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:125:\"This
  class is used to verify that the java.lang.Override annotation is present when the
  {@inheritDoc} javadoc tag is present.\";s:7:\"example\";b:0;}s:20:\"MissingSwitchDefault\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Checks
  that switch statement has 'default' clause.\";s:7:\"example\";b:1;}s:23:\"ModifiedControlVariable\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Check
  for ensuring that for loop control variables are not modified inside the for block.\";s:7:\"example\";b:1;}s:13:\"ModifierOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:131:\"Checks
  that the order of modifiers conforms to the suggestions in the Java Language specification,
  sections 8.1.1, 8.3.1 and 8.4.3.\";s:7:\"example\";b:0;}s:22:\"MultipleStringLiterals\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:80:\"Checks
  for multiple occurrences of the same string literal within a single file.\";s:7:\"example\";b:0;}s:28:\"MultipleVariableDeclarations\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:82:\"Checks
  that each variable declaration is in its own statement and on its own line.\";s:7:\"example\";b:0;}s:16:\"MutableException\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:104:\"Ensures
  that exceptions (defined as any class name conforming to some regular expression)
  are immutable.\";s:7:\"example\";b:0;}s:15:\"NPathComplexity\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:70:\"Checks
  the npath complexity against a specified limit (default = 200).\";s:7:\"example\";b:0;}s:10:\"NeedBraces\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:37:\"Checks
  for braces around code blocks.\";s:7:\"example\";b:1;}s:14:\"NestedForDepth\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Restricts
  nested for blocks to a specified depth (default = 1).\";s:7:\"example\";b:1;}s:13:\"NestedIfDepth\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:67:\"Restricts
  nested if-else blocks to a specified depth (default = 1).\";s:7:\"example\";b:1;}s:14:\"NestedTryDepth\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:77:\"Restricts
  nested try-catch-finally blocks to a specified depth (default = 1).\";s:7:\"example\";b:0;}s:18:\"NewlineAtEndOfFile\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:55:\"Checks
  that there is a newline at the end of each file.\";s:7:\"example\";b:1;}s:7:\"NoClone\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:69:\"Checks
  that the clone method is not overridden from the Object class.\";s:7:\"example\";b:0;}s:11:\"NoFinalizer\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:80:\"Checks
  that no method having zero parameters is defined using the name finalize.\";s:7:\"example\";b:1;}s:10:\"NoLineWrap\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:51:\"Checks
  that chosen statements are not line-wrapped.\";s:7:\"example\";b:0;}s:17:\"NoWhitespaceAfter\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:49:\"Checks
  that there is no whitespace after a token.\";s:7:\"example\";b:1;}s:18:\"NoWhitespaceBefore\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Checks
  that there is no whitespace before a token.\";s:7:\"example\";b:1;}s:27:\"NonEmptyAtclauseDescription\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:58:\"Checks
  that the at-clause tag is followed by description .\";s:7:\"example\";b:1;}s:19:\"OneStatementPerLine\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:49:\"Checks
  that there is only one statement per line.\";s:7:\"example\";b:1;}s:16:\"OneTopLevelClass\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Checks
  that each top-level class, interfaces or enum resides in a source file of its own.\";s:7:\"example\";b:1;}s:12:\"OperatorWrap\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:35:\"Checks
  line wrapping for operators.\";s:7:\"example\";b:0;}s:17:\"OuterTypeFilename\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:56:\"Checks
  that the outer type name and the file name match.\";s:7:\"example\";b:0;}s:15:\"OuterTypeNumber\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:60:\"Checks
  for the number of defined types at the 'outer' level.\";s:7:\"example\";b:0;}s:31:\"OverloadMethodsDeclarationOrder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Checks
  that overload methods are grouped together.\";s:7:\"example\";b:0;}s:17:\"PackageAnnotation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:85:\"This
  check makes sure that all package annotations are in the package-info.java file.\";s:7:\"example\";b:0;}s:18:\"PackageDeclaration\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:81:\"Ensures
  there is a package declaration and (optionally) in the correct directory.\";s:7:\"example\";b:0;}s:11:\"PackageName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:79:\"Checks
  that package names conform to a format specified by the format property.\";s:7:\"example\";b:1;}s:19:\"ParameterAssignment\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:34:\"Disallow
  assignment of parameters.\";s:7:\"example\";b:1;}s:13:\"ParameterName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:81:\"Checks
  that parameter names conform to a format specified by the format property.\";s:7:\"example\";b:1;}s:15:\"ParameterNumber\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:65:\"Checks
  the number of parameters that a method or constructor has.\";s:7:\"example\";b:1;}s:8:\"ParenPad\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:262:\"Checks
  the padding of parentheses; that is whether a space is required after a left parenthesis
  and before a right parenthesis, or such spaces are forbidden, with the exception
  that it does not check for padding of the right parenthesis at an empty for iterator.\";s:7:\"example\";b:0;}s:15:\"RedundantImport\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:38:\"Checks
  for imports that are redundant.\";s:7:\"example\";b:1;}s:17:\"RedundantModifier\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:279:\"Checks
  for redundant modifiers in interface and annotation definitions, final modifier
  on methods of final classes, inner interface declarations that are declared as static,
  non public class constructors and enum constructors, nested enum definitions that
  are declared as static.\";s:7:\"example\";b:0;}s:6:\"Regexp\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:77:\"A
  check that makes sure that a specified pattern exists (or not) in the file.\";s:7:\"example\";b:0;}s:12:\"RegexpHeader\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:69:\"Checks
  the header of the source against a header file that contains a\";s:7:\"example\";b:1;}s:15:\"RegexpMultiline\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Implementation
  of a check that looks that matches across multiple lines in any file type.\";s:7:\"example\";b:0;}s:16:\"RegexpOnFilename\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:72:\"Implementation
  of a check that matches based on file and/or folder path.\";s:7:\"example\";b:1;}s:16:\"RegexpSingleline\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:72:\"Implementation
  of a check that looks for a single line in any file type.\";s:7:\"example\";b:0;}s:20:\"RegexpSinglelineJava\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:69:\"Implementation
  of a check that looks for a single line in Java files.\";s:7:\"example\";b:0;}s:11:\"RequireThis\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:52:\"Checks
  that code doesn't rely on the 'this' default.\";s:7:\"example\";b:0;}s:11:\"ReturnCount\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Restricts
  return statements to a specified count (default = 2).\";s:7:\"example\";b:1;}s:10:\"RightCurly\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:43:\"Checks
  the placement of right curly braces.\";s:7:\"example\";b:1;}s:13:\"SeparatorWrap\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:37:\"Checks
  line wrapping with separators.\";s:7:\"example\";b:1;}s:25:\"SimplifyBooleanExpression\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:50:\"Checks
  for overly complicated boolean expressions.\";s:7:\"example\";b:1;}s:21:\"SimplifyBooleanReturn\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:56:\"Checks
  for overly complicated boolean return statements.\";s:7:\"example\";b:0;}s:17:\"SingleLineJavadoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:89:\"Checks
  that a JavaDoc block which can fit on a single line and doesn't contain at-clauses\";s:7:\"example\";b:0;}s:20:\"SingleSpaceSeparator\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:83:\"Checks
  that non-whitespace characters are separated by no more than one whitespace.\";s:7:\"example\";b:1;}s:18:\"StaticVariableName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:98:\"Checks
  that static, non-final variable names conform to a format specified by the format
  property.\";s:7:\"example\";b:1;}s:21:\"StringLiteralEquality\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:55:\"Checks
  that string literals are not used with == or !=.\";s:7:\"example\";b:1;}s:14:\"SummaryJavadoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:94:\"Checks
  that Javadoc summary sentence does not contain phrases that are not recommended
  to use.\";s:7:\"example\";b:1;}s:10:\"SuperClone\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Checks
  that an overriding clone() method invokes super.clone().\";s:7:\"example\";b:0;}s:13:\"SuperFinalize\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:69:\"Checks
  that an overriding finalize() method invokes super.finalize().\";s:7:\"example\";b:0;}s:16:\"SuppressWarnings\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:51:\"This
  check allows you to specify what warnings that\";s:7:\"example\";b:0;}s:22:\"SuppressWarningsHolder\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:76:\"This
  check allows for finding code that should not be reported by Checkstyle\";s:7:\"example\";b:0;}s:11:\"ThrowsCount\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Restricts
  throws statements to a specified count (default = 4).\";s:7:\"example\";b:1;}s:11:\"TodoComment\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:26:\"A
  check for TODO comments.\";s:7:\"example\";b:0;}s:15:\"TrailingComment\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:76:\"The
  check to ensure that requires that comments be the only thing on a line.\";s:7:\"example\";b:0;}s:11:\"Translation\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:139:\"The
  TranslationCheck class helps to ensure the correct translation of code by checking
  property files for consistency regarding their keys.\";s:7:\"example\";b:0;}s:8:\"TypeName\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:76:\"Checks
  that type names conform to a format specified by the format property.\";s:7:\"example\";b:1;}s:16:\"TypecastParenPad\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:48:\"Checks
  the padding of parentheses for typecasts.\";s:7:\"example\";b:1;}s:15:\"UncommentedMain\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:33:\"Detects
  uncommented main methods.\";s:7:\"example\";b:1;}s:16:\"UniqueProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:44:\"Detects
  duplicated keys in properties files.\";s:7:\"example\";b:0;}s:22:\"UnnecessaryParentheses\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:72:\"Checks
  if unnecessary parentheses are used in a statement or expression.\";s:7:\"example\";b:0;}s:13:\"UnusedImports\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:36:\"Checks
  for unused import statements.\";s:7:\"example\";b:1;}s:8:\"UpperEll\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:57:\"Checks
  that long constants are defined with an upper ell.\";s:7:\"example\";b:1;}s:32:\"VariableDeclarationUsageDistance\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:72:\"Checks
  the distance between declaration of variable and its first usage.\";s:7:\"example\";b:1;}s:18:\"VisibilityModifier\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:35:\"Checks
  visibility of class members.\";s:7:\"example\";b:1;}s:15:\"WhitespaceAfter\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:149:\"Checks
  that a token is followed by whitespace, with the exception that it does not check
  for whitespace after the semicolon of an empty for iterator.\";s:7:\"example\";b:1;}s:16:\"WhitespaceAround\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:48:\"Checks
  that a token is surrounded by whitespace.\";s:7:\"example\";b:0;}s:8:\"WriteTag\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:37:\"Outputs
  a JavaDoc tag as information.\";s:7:\"example\";b:1;}}s:11:\"description\";s:50:\"Description
  of which Checkstyle lints are checked.\";s:7:\"example\";O:8:\"stdClass\":153:{s:24:\"AbbreviationAsWordInName\";b:0;s:17:\"AbstractClassName\";b:0;s:18:\"AnnotationLocation\";b:1;s:18:\"AnnotationUseStyle\";b:1;s:15:\"AnonInnerLength\";b:0;s:18:\"ArrayTrailingComma\";b:1;s:14:\"ArrayTypeStyle\";b:1;s:13:\"AtclauseOrder\";b:1;s:29:\"AvoidEscapedUnicodeCharacters\";b:1;s:23:\"AvoidInlineConditionals\";b:1;s:17:\"AvoidNestedBlocks\";b:1;s:15:\"AvoidStarImport\";b:0;s:17:\"AvoidStaticImport\";b:1;s:27:\"BooleanExpressionComplexity\";b:1;s:18:\"CatchParameterName\";b:0;s:28:\"ClassDataAbstractionCoupling\";b:0;s:21:\"ClassFanOutComplexity\";b:1;s:22:\"ClassTypeParameterName\";b:0;s:19:\"CommentsIndentation\";b:0;s:12:\"ConstantName\";b:1;s:15:\"CovariantEquals\";b:1;s:17:\"CustomImportOrder\";b:0;s:20:\"CyclomaticComplexity\";b:0;s:16:\"DeclarationOrder\";b:1;s:16:\"DefaultComesLast\";b:1;s:15:\"DescendantToken\";b:1;s:18:\"DesignForExtension\";b:0;s:10:\"EmptyBlock\";b:0;s:15:\"EmptyCatchBlock\";b:1;s:22:\"EmptyForInitializerPad\";b:1;s:19:\"EmptyForIteratorPad\";b:1;s:18:\"EmptyLineSeparator\";b:0;s:14:\"EmptyStatement\";b:0;s:15:\"EqualsAvoidNull\";b:1;s:14:\"EqualsHashCode\";b:0;s:24:\"ExecutableStatementCount\";b:1;s:22:\"ExplicitInitialization\";b:1;s:11:\"FallThrough\";b:1;s:10:\"FileLength\";b:0;s:16:\"FileTabCharacter\";b:0;s:10:\"FinalClass\";b:0;s:18:\"FinalLocalVariable\";b:0;s:15:\"FinalParameters\";b:1;s:17:\"GenericWhitespace\";b:0;s:6:\"Header\";b:0;s:11:\"HiddenField\";b:1;s:27:\"HideUtilityClassConstructor\";b:0;s:12:\"IllegalCatch\";b:1;s:13:\"IllegalImport\";b:1;s:20:\"IllegalInstantiation\";b:0;s:13:\"IllegalThrows\";b:1;s:12:\"IllegalToken\";b:1;s:16:\"IllegalTokenText\";b:1;s:11:\"IllegalType\";b:1;s:13:\"ImportControl\";b:0;s:11:\"ImportOrder\";b:1;s:11:\"Indentation\";b:1;s:15:\"InnerAssignment\";b:1;s:13:\"InnerTypeLast\";b:0;s:15:\"InterfaceIsType\";b:0;s:26:\"InterfaceTypeParameterName\";b:1;s:8:\"JavaNCSS\";b:1;s:13:\"JavadocMethod\";b:0;s:14:\"JavadocPackage\";b:0;s:16:\"JavadocParagraph\";b:0;s:12:\"JavadocStyle\";b:1;s:33:\"JavadocTagContinuationIndentation\";b:1;s:11:\"JavadocType\";b:1;s:15:\"JavadocVariable\";b:1;s:9:\"LeftCurly\";b:1;s:10:\"LineLength\";b:0;s:22:\"LocalFinalVariableName\";b:0;s:17:\"LocalVariableName\";b:1;s:11:\"MagicNumber\";b:0;s:10:\"MemberName\";b:1;s:11:\"MethodCount\";b:1;s:12:\"MethodLength\";b:0;s:10:\"MethodName\";b:0;s:14:\"MethodParamPad\";b:1;s:23:\"MethodTypeParameterName\";b:0;s:11:\"MissingCtor\";b:0;s:17:\"MissingDeprecated\";b:0;s:15:\"MissingOverride\";b:0;s:20:\"MissingSwitchDefault\";b:1;s:23:\"ModifiedControlVariable\";b:1;s:13:\"ModifierOrder\";b:0;s:22:\"MultipleStringLiterals\";b:0;s:28:\"MultipleVariableDeclarations\";b:0;s:16:\"MutableException\";b:0;s:15:\"NPathComplexity\";b:0;s:10:\"NeedBraces\";b:1;s:14:\"NestedForDepth\";b:1;s:13:\"NestedIfDepth\";b:1;s:14:\"NestedTryDepth\";b:0;s:18:\"NewlineAtEndOfFile\";b:1;s:7:\"NoClone\";b:0;s:11:\"NoFinalizer\";b:1;s:10:\"NoLineWrap\";b:0;s:17:\"NoWhitespaceAfter\";b:1;s:18:\"NoWhitespaceBefore\";b:1;s:27:\"NonEmptyAtclauseDescription\";b:1;s:19:\"OneStatementPerLine\";b:1;s:16:\"OneTopLevelClass\";b:1;s:12:\"OperatorWrap\";b:0;s:17:\"OuterTypeFilename\";b:0;s:15:\"OuterTypeNumber\";b:0;s:31:\"OverloadMethodsDeclarationOrder\";b:0;s:17:\"PackageAnnotation\";b:0;s:18:\"PackageDeclaration\";b:0;s:11:\"PackageName\";b:1;s:19:\"ParameterAssignment\";b:1;s:13:\"ParameterName\";b:1;s:15:\"ParameterNumber\";b:1;s:8:\"ParenPad\";b:0;s:15:\"RedundantImport\";b:1;s:17:\"RedundantModifier\";b:0;s:6:\"Regexp\";b:0;s:12:\"RegexpHeader\";b:1;s:15:\"RegexpMultiline\";b:0;s:16:\"RegexpOnFilename\";b:1;s:16:\"RegexpSingleline\";b:0;s:20:\"RegexpSinglelineJava\";b:0;s:11:\"RequireThis\";b:0;s:11:\"ReturnCount\";b:1;s:10:\"RightCurly\";b:1;s:13:\"SeparatorWrap\";b:1;s:25:\"SimplifyBooleanExpression\";b:1;s:21:\"SimplifyBooleanReturn\";b:0;s:17:\"SingleLineJavadoc\";b:0;s:20:\"SingleSpaceSeparator\";b:1;s:18:\"StaticVariableName\";b:1;s:21:\"StringLiteralEquality\";b:1;s:14:\"SummaryJavadoc\";b:1;s:10:\"SuperClone\";b:0;s:13:\"SuperFinalize\";b:0;s:16:\"SuppressWarnings\";b:0;s:22:\"SuppressWarningsHolder\";b:0;s:11:\"ThrowsCount\";b:1;s:11:\"TodoComment\";b:0;s:15:\"TrailingComment\";b:0;s:11:\"Translation\";b:0;s:8:\"TypeName\";b:1;s:16:\"TypecastParenPad\";b:1;s:15:\"UncommentedMain\";b:1;s:16:\"UniqueProperties\";b:0;s:22:\"UnnecessaryParentheses\";b:0;s:13:\"UnusedImports\";b:1;s:8:\"UpperEll\";b:1;s:32:\"VariableDeclarationUsageDistance\";b:1;s:18:\"VisibilityModifier\";b:1;s:15:\"WhitespaceAfter\";b:1;s:16:\"WhitespaceAround\";b:0;s:8:\"WriteTag\";b:1;}}s:8:\"Findbugs\";O:8:\"stdClass\":5:{s:5:\"title\";s:8:\"Findbugs\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"Nulla
  ipsa.\";}}s:11:\"description\";s:47:\"Description of which Findbugs bugs are checked.\";s:7:\"example\";O:8:\"stdClass\":1:{s:4:\"name\";s:11:\"Nulla
  ipsa.\";}}s:13:\"GithubtokenMt\";O:8:\"stdClass\":5:{s:5:\"title\";s:62:\"Mediatype
  identifier: application/githubtoken.mt; view=default\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:25:\"Consequatur
  labore harum.\";}}s:11:\"description\";s:39:\"GithubtokenMt media type (default
  view)\";s:7:\"example\";O:8:\"stdClass\":1:{s:5:\"token\";s:25:\"Consequatur labore
  harum.\";}}s:6:\"UserMt\";O:8:\"stdClass\":5:{s:5:\"title\";s:55:\"Mediatype identifier:
  application/user.mt; view=default\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"email\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:10:\"User
  email\";s:7:\"example\";s:30:\"stewart_denesik@maggiowiza.net\";s:6:\"format\";s:5:\"email\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:2736450560861405665;s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"Modi
  ut.\";}s:12:\"phone_number\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Dignissimos
  in.\";}}s:11:\"description\";s:32:\"UserMt media type (default view)\";s:7:\"example\";O:8:\"stdClass\":4:{s:5:\"email\";s:30:\"stewart_denesik@maggiowiza.net\";s:2:\"id\";i:2736450560861405665;s:4:\"name\";s:8:\"Modi
  ut.\";s:12:\"phone_number\";s:15:\"Dignissimos in.\";}}s:12:\"UserMtGithub\";O:8:\"stdClass\":5:{s:5:\"title\";s:54:\"Mediatype
  identifier: application/user.mt; view=github\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:8:\"callback\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:26:\"Dignissimos
  aliquid saepe.\";}s:5:\"email\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:10:\"User
  email\";s:7:\"example\";s:30:\"stewart_denesik@maggiowiza.net\";s:6:\"format\";s:5:\"email\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:2736450560861405665;s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"Modi
  ut.\";}s:12:\"phone_number\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Dignissimos
  in.\";}}s:11:\"description\";s:31:\"UserMt media type (github view)\";s:7:\"example\";O:8:\"stdClass\":5:{s:8:\"callback\";s:26:\"Dignissimos
  aliquid saepe.\";s:5:\"email\";s:30:\"stewart_denesik@maggiowiza.net\";s:2:\"id\";i:2736450560861405665;s:4:\"name\";s:8:\"Modi
  ut.\";s:12:\"phone_number\";s:15:\"Dignissimos in.\";}}s:11:\"bug_profile\";O:8:\"stdClass\":5:{s:5:\"title\";s:11:\"bug_profile\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"checkstyle\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Checkstyle\";}s:8:\"findbugs\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Findbugs\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"Et
  aspernatur.\";}}s:11:\"description\";s:13:\"A bug profile\";s:7:\"example\";O:8:\"stdClass\":3:{s:10:\"checkstyle\";O:8:\"stdClass\":153:{s:24:\"AbbreviationAsWordInName\";b:0;s:17:\"AbstractClassName\";b:0;s:18:\"AnnotationLocation\";b:1;s:18:\"AnnotationUseStyle\";b:1;s:15:\"AnonInnerLength\";b:0;s:18:\"ArrayTrailingComma\";b:1;s:14:\"ArrayTypeStyle\";b:1;s:13:\"AtclauseOrder\";b:1;s:29:\"AvoidEscapedUnicodeCharacters\";b:1;s:23:\"AvoidInlineConditionals\";b:1;s:17:\"AvoidNestedBlocks\";b:1;s:15:\"AvoidStarImport\";b:0;s:17:\"AvoidStaticImport\";b:1;s:27:\"BooleanExpressionComplexity\";b:1;s:18:\"CatchParameterName\";b:0;s:28:\"ClassDataAbstractionCoupling\";b:0;s:21:\"ClassFanOutComplexity\";b:1;s:22:\"ClassTypeParameterName\";b:0;s:19:\"CommentsIndentation\";b:0;s:12:\"ConstantName\";b:1;s:15:\"CovariantEquals\";b:1;s:17:\"CustomImportOrder\";b:0;s:20:\"CyclomaticComplexity\";b:0;s:16:\"DeclarationOrder\";b:1;s:16:\"DefaultComesLast\";b:1;s:15:\"DescendantToken\";b:1;s:18:\"DesignForExtension\";b:0;s:10:\"EmptyBlock\";b:0;s:15:\"EmptyCatchBlock\";b:1;s:22:\"EmptyForInitializerPad\";b:1;s:19:\"EmptyForIteratorPad\";b:1;s:18:\"EmptyLineSeparator\";b:0;s:14:\"EmptyStatement\";b:0;s:15:\"EqualsAvoidNull\";b:1;s:14:\"EqualsHashCode\";b:0;s:24:\"ExecutableStatementCount\";b:1;s:22:\"ExplicitInitialization\";b:1;s:11:\"FallThrough\";b:1;s:10:\"FileLength\";b:0;s:16:\"FileTabCharacter\";b:0;s:10:\"FinalClass\";b:0;s:18:\"FinalLocalVariable\";b:0;s:15:\"FinalParameters\";b:1;s:17:\"GenericWhitespace\";b:0;s:6:\"Header\";b:0;s:11:\"HiddenField\";b:1;s:27:\"HideUtilityClassConstructor\";b:0;s:12:\"IllegalCatch\";b:1;s:13:\"IllegalImport\";b:1;s:20:\"IllegalInstantiation\";b:0;s:13:\"IllegalThrows\";b:1;s:12:\"IllegalToken\";b:1;s:16:\"IllegalTokenText\";b:1;s:11:\"IllegalType\";b:1;s:13:\"ImportControl\";b:0;s:11:\"ImportOrder\";b:1;s:11:\"Indentation\";b:1;s:15:\"InnerAssignment\";b:1;s:13:\"InnerTypeLast\";b:0;s:15:\"InterfaceIsType\";b:0;s:26:\"InterfaceTypeParameterName\";b:1;s:8:\"JavaNCSS\";b:1;s:13:\"JavadocMethod\";b:0;s:14:\"JavadocPackage\";b:0;s:16:\"JavadocParagraph\";b:0;s:12:\"JavadocStyle\";b:1;s:33:\"JavadocTagContinuationIndentation\";b:1;s:11:\"JavadocType\";b:1;s:15:\"JavadocVariable\";b:1;s:9:\"LeftCurly\";b:1;s:10:\"LineLength\";b:0;s:22:\"LocalFinalVariableName\";b:0;s:17:\"LocalVariableName\";b:1;s:11:\"MagicNumber\";b:0;s:10:\"MemberName\";b:1;s:11:\"MethodCount\";b:1;s:12:\"MethodLength\";b:0;s:10:\"MethodName\";b:0;s:14:\"MethodParamPad\";b:1;s:23:\"MethodTypeParameterName\";b:0;s:11:\"MissingCtor\";b:0;s:17:\"MissingDeprecated\";b:0;s:15:\"MissingOverride\";b:0;s:20:\"MissingSwitchDefault\";b:1;s:23:\"ModifiedControlVariable\";b:1;s:13:\"ModifierOrder\";b:0;s:22:\"MultipleStringLiterals\";b:0;s:28:\"MultipleVariableDeclarations\";b:0;s:16:\"MutableException\";b:0;s:15:\"NPathComplexity\";b:0;s:10:\"NeedBraces\";b:1;s:14:\"NestedForDepth\";b:1;s:13:\"NestedIfDepth\";b:1;s:14:\"NestedTryDepth\";b:0;s:18:\"NewlineAtEndOfFile\";b:1;s:7:\"NoClone\";b:0;s:11:\"NoFinalizer\";b:1;s:10:\"NoLineWrap\";b:0;s:17:\"NoWhitespaceAfter\";b:1;s:18:\"NoWhitespaceBefore\";b:1;s:27:\"NonEmptyAtclauseDescription\";b:1;s:19:\"OneStatementPerLine\";b:1;s:16:\"OneTopLevelClass\";b:1;s:12:\"OperatorWrap\";b:0;s:17:\"OuterTypeFilename\";b:0;s:15:\"OuterTypeNumber\";b:0;s:31:\"OverloadMethodsDeclarationOrder\";b:0;s:17:\"PackageAnnotation\";b:0;s:18:\"PackageDeclaration\";b:0;s:11:\"PackageName\";b:1;s:19:\"ParameterAssignment\";b:1;s:13:\"ParameterName\";b:1;s:15:\"ParameterNumber\";b:1;s:8:\"ParenPad\";b:0;s:15:\"RedundantImport\";b:1;s:17:\"RedundantModifier\";b:0;s:6:\"Regexp\";b:0;s:12:\"RegexpHeader\";b:1;s:15:\"RegexpMultiline\";b:0;s:16:\"RegexpOnFilename\";b:1;s:16:\"RegexpSingleline\";b:0;s:20:\"RegexpSinglelineJava\";b:0;s:11:\"RequireThis\";b:0;s:11:\"ReturnCount\";b:1;s:10:\"RightCurly\";b:1;s:13:\"SeparatorWrap\";b:1;s:25:\"SimplifyBooleanExpression\";b:1;s:21:\"SimplifyBooleanReturn\";b:0;s:17:\"SingleLineJavadoc\";b:0;s:20:\"SingleSpaceSeparator\";b:1;s:18:\"StaticVariableName\";b:1;s:21:\"StringLiteralEquality\";b:1;s:14:\"SummaryJavadoc\";b:1;s:10:\"SuperClone\";b:0;s:13:\"SuperFinalize\";b:0;s:16:\"SuppressWarnings\";b:0;s:22:\"SuppressWarningsHolder\";b:0;s:11:\"ThrowsCount\";b:1;s:11:\"TodoComment\";b:0;s:15:\"TrailingComment\";b:0;s:11:\"Translation\";b:0;s:8:\"TypeName\";b:1;s:16:\"TypecastParenPad\";b:1;s:15:\"UncommentedMain\";b:1;s:16:\"UniqueProperties\";b:0;s:22:\"UnnecessaryParentheses\";b:0;s:13:\"UnusedImports\";b:1;s:8:\"UpperEll\";b:1;s:32:\"VariableDeclarationUsageDistance\";b:1;s:18:\"VisibilityModifier\";b:1;s:15:\"WhitespaceAfter\";b:1;s:16:\"WhitespaceAround\";b:0;s:8:\"WriteTag\";b:1;}s:8:\"findbugs\";O:8:\"stdClass\":1:{s:4:\"name\";s:11:\"Nulla
  ipsa.\";}s:4:\"name\";s:14:\"Et aspernatur.\";}}s:4:\"user\";O:8:\"stdClass\":5:{s:5:\"title\";s:4:\"user\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"email\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:10:\"User
  email\";s:7:\"example\";s:30:\"patsy_prohaska@breitenberg.org\";s:6:\"format\";s:5:\"email\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Et
  nostrum est.\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:26:\"Ut
  enim ea voluptas magni.\";}s:12:\"phone_number\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"Et
  minus odio.\";}}s:11:\"description\";s:30:\"payload used to sign up a user\";s:7:\"example\";O:8:\"stdClass\":4:{s:5:\"email\";s:30:\"patsy_prohaska@breitenberg.org\";s:4:\"name\";s:15:\"Et
  nostrum est.\";s:8:\"password\";s:26:\"Ut enim ea voluptas magni.\";s:12:\"phone_number\";s:14:\"Et
  minus odio.\";}}}"
...
