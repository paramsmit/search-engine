---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:11:\"Description\";s:7:\"version\";s:3:\"0.1\";s:5:\"title\";s:11:\"My
  REST API\";s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"name\";s:6:\"Alexgo\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:7:\"License\";s:3:\"url\";s:11:\"License
  URL\";}}"
host: localhost
basePath: /
paths:
  /api/account:
    post:
      tags:
      - User account
      summary: Crear cuenta de usuario
      description: Crea una nueva cuenta de usuario en el sistema
      operationId: createUserAccountFormUsingPOST
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - '*/*'
      parameters:
      - name: username
        in: query
        description: Nombre de usuario
        required: false
        type: string
      - name: email
        in: query
        description: Email
        required: false
        type: string
      - name: password
        in: query
        description: Contraseu00efu00bfu00bda
        required: false
        type: string
      - name: userAccount
        description: Datos de la cuenta
        required: true
        schema:
          $ref: '#/definitions/UserAccountDTO'
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - User account
      summary: Actualizar cuenta de usuario
      description: Actualiza una cuenta de usuario existente en el sistema
      operationId: updateUserAccountUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: userAccount
        description: Datos de la cuenta
        required: true
        schema:
          $ref: '#/definitions/UserAccountDTO'
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/authors:
    get:
      tags:
      - Author
      summary: Buscar autores
      description: Busca los autores que cumplan las condiciones indicadas
      operationId: getAllAuthorsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: createdBy
        in: query
        description: Usuario de creacion
        required: false
        type: string
      - name: createdDate
        in: query
        description: Fecha de creacion
        required: false
        type: string
        format: date-time
      - name: lastModifiedBy
        in: query
        description: Usuario de modificacion
        required: false
        type: string
      - name: lastModifiedDate
        in: query
        description: Fecha de modificacion
        required: false
        type: string
        format: date-time
      - name: birthDate
        in: query
        description: Fecha de nacimiento
        required: false
        type: string
        format: date
      - name: id
        in: query
        description: ID
        required: false
        type: integer
        format: int64
      - name: name
        in: query
        description: Nombre
        required: false
        type: string
      - name: document
        in: query
        description: Documento de identidad
        required: false
        type: string
      - name: page
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        description: Number of records per page
        required: false
        type: integer
        format: int32
      - name: sort
        in: query
        description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AuthorDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - Author
      summary: Crear autor
      description: Almacena un nuevo autor en el sistema
      operationId: createAuthorUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: author
        description: Datos del autor
        required: true
        schema:
          $ref: '#/definitions/AuthorDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AuthorDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - Author
      summary: Actualizar autor
      description: Actualiza un autor existente en el sistema
      operationId: updateAuthorUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: author
        description: Datos del autor
        required: true
        schema:
          $ref: '#/definitions/AuthorDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AuthorDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/authors/{id}:
    get:
      tags:
      - Author
      summary: Buscar autor por ID
      description: Busca el autor con el ID indicado
      operationId: getAuthorUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AuthorDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - Author
      summary: Eliminar autor
      description: Elimina del sistema el autor con el ID indicado
      operationId: deleteAuthorUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /api/books:
    get:
      tags:
      - Book
      summary: Buscar libros
      description: Busca los libros que cumplan las condiciones indicadas
      operationId: getAllBooksUsingGET
      produces:
      - '*/*'
      parameters:
      - name: createdBy
        in: query
        description: Usuario de creacion
        required: false
        type: string
      - name: createdDate
        in: query
        description: Fecha de creacion
        required: false
        type: string
        format: date-time
      - name: lastModifiedBy
        in: query
        description: Usuario de modificacion
        required: false
        type: string
      - name: lastModifiedDate
        in: query
        description: Fecha de modificacion
        required: false
        type: string
        format: date-time
      - name: description
        in: query
        description: Descripcion
        required: false
        type: string
      - name: publicationDate
        in: query
        description: Fecha de publicacion
        required: false
        type: string
        format: date
      - name: authorId
        in: query
        description: ID del autor
        required: false
        type: integer
        format: int64
      - name: id
        in: query
        description: ID
        required: false
        type: integer
        format: int64
      - name: title
        in: query
        description: Titulo
        required: false
        type: string
      - name: price
        in: query
        description: Precio
        required: false
        type: number
        format: float
      - name: page
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        description: Number of records per page
        required: false
        type: integer
        format: int32
      - name: sort
        in: query
        description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BookDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - Book
      summary: Crear libro
      description: Almacena un nuevo libro en el sistema
      operationId: createBookUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: book
        description: Datos del libro
        required: true
        schema:
          $ref: '#/definitions/BookDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - Book
      summary: Actualizar libro
      description: Actualiza un libro existente en el sistema
      operationId: updateBookUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: book
        description: Datos del libro
        required: true
        schema:
          $ref: '#/definitions/BookDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/books/{id}:
    get:
      tags:
      - Book
      summary: Buscar libro por ID
      description: Busca el libro con el ID indicado
      operationId: getBookUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - Book
      summary: Eliminar libro
      description: Elimina del sistema el libro con el ID indicado
      operationId: deleteBookUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /api/customers:
    post:
      tags:
      - customer-controller
      summary: createCustomer
      operationId: createCustomerUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: customer
        description: customer
        required: true
        schema:
          $ref: '#/definitions/CustomerDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CustomerDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/date:
    get:
      tags:
      - date-time-controller
      summary: getFecha
      operationId: getFechaUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Fecha'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - date-time-controller
      summary: processDate
      operationId: processDateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: fecha
        description: fecha
        required: true
        schema:
          $ref: '#/definitions/Fecha'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Fecha'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/custom:
    get:
      tags:
      - exception-controller
      summary: throwCustomParam
      operationId: throwCustomParamUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/denied:
    get:
      tags:
      - exception-controller
      summary: throwAccessDenied
      operationId: throwAccessDeniedUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/error:
    get:
      tags:
      - exception-controller
      summary: throwException
      operationId: throwExceptionUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/integrity:
    get:
      tags:
      - exception-controller
      summary: throwDataIntegrityViolation
      operationId: throwDataIntegrityViolationUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/notfound:
    get:
      tags:
      - exception-controller
      summary: throwItemNotFound
      operationId: throwItemNotFoundUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/notvalid:
    post:
      tags:
      - exception-controller
      summary: throwMethodArgumentNotValid
      operationId: throwMethodArgumentNotValidUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: item
        description: item
        required: true
        schema:
          $ref: '#/definitions/Validacion'
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/error/param:
    get:
      tags:
      - exception-controller
      summary: throwParam
      operationId: throwParamUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int64
      - name: cab
        in: header
        description: cab
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/mail/prueba:
    get:
      tags:
      - mail-controller
      summary: prueba
      operationId: pruebaUsingGET_1
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/ping:
    get:
      tags:
      - Ping
      summary: Ping
      description: Comprueba si el API esta disponible
      operationId: pingUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/templates/prueba:
    get:
      tags:
      - template-controller
      summary: prueba
      operationId: pruebaUsingGET_2
      produces:
      - '*/*'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/users:
    get:
      tags:
      - User
      summary: Buscar usuarios
      description: Busca los usuarios que cumplan las condiciones indicadas
      operationId: getAllUsersUsingGET
      produces:
      - '*/*'
      parameters:
      - name: page
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        description: Number of records per page
        required: false
        type: integer
        format: int32
      - name: sort
        in: query
        description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - User
      summary: Crear usuario
      description: Almacena un nuevo usuario en el sistema
      operationId: createUserUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: user
        description: Datos del usuario
        required: true
        schema:
          $ref: '#/definitions/UserDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - User
      summary: Actualizar usuario
      description: Actualiza un usuario existente en el sistema
      operationId: updateUserUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: user
        description: Datos del usuario
        required: true
        schema:
          $ref: '#/definitions/UserDTO'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/users/roles:
    get:
      tags:
      - User
      summary: Obtener roles
      description: Obtiene el listado de roles del sistema
      operationId: getAllRolesUsingGET
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /api/users/{id}:
    get:
      tags:
      - User
      summary: Buscar usuario por ID
      description: Busca el usuario con el ID indicado
      operationId: getUserUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - User
      summary: Eliminar usuario
      description: Elimina del sistema el usuario con el ID indicado
      operationId: deleteUserUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
definitions: !php/object "O:8:\"stdClass\":9:{s:10:\"AddressDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"number\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"street\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:10:\"AddressDTO\";}s:9:\"AuthorDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"birthDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:11:\"description\";s:19:\"Fecha
  de nacimiento\";s:15:\"allowEmptyValue\";b:0;}s:9:\"createdBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Usuario
  de creacion\";s:15:\"allowEmptyValue\";b:0;}s:11:\"createdDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:17:\"Fecha
  de creacion\";s:15:\"allowEmptyValue\";b:0;}s:8:\"document\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"Documento
  de identidad\";s:15:\"allowEmptyValue\";b:0;}s:2:\"id\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:2:\"ID\";s:15:\"allowEmptyValue\";b:0;}s:14:\"lastModifiedBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Usuario
  de modificacion\";s:15:\"allowEmptyValue\";b:0;}s:16:\"lastModifiedDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:21:\"Fecha
  de modificacion\";s:15:\"allowEmptyValue\";b:0;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:6:\"Nombre\";s:15:\"allowEmptyValue\";b:0;}}s:5:\"title\";s:9:\"AuthorDTO\";}s:7:\"BookDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:8:\"authorId\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:12:\"ID
  del autor\";s:15:\"allowEmptyValue\";b:0;}s:9:\"createdBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Usuario
  de creacion\";s:15:\"allowEmptyValue\";b:0;}s:11:\"createdDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:17:\"Fecha
  de creacion\";s:15:\"allowEmptyValue\";b:0;}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"Descripcion\";s:15:\"allowEmptyValue\";b:0;}s:2:\"id\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:2:\"ID\";s:15:\"allowEmptyValue\";b:0;}s:14:\"lastModifiedBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Usuario
  de modificacion\";s:15:\"allowEmptyValue\";b:0;}s:16:\"lastModifiedDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:21:\"Fecha
  de modificacion\";s:15:\"allowEmptyValue\";b:0;}s:5:\"price\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";s:11:\"description\";s:6:\"Precio\";s:15:\"allowEmptyValue\";b:0;}s:15:\"publicationDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";s:11:\"description\";s:20:\"Fecha
  de publicacion\";s:15:\"allowEmptyValue\";b:0;}s:5:\"title\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:6:\"Titulo\";s:15:\"allowEmptyValue\";b:0;}}s:5:\"title\";s:7:\"BookDTO\";}s:11:\"CustomerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/AddressDTO\";}s:3:\"age\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:11:\"CustomerDTO\";}s:5:\"Fecha\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"instant\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"localDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:13:\"localDateTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"localTime\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/LocalTime\";}s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"zoned\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}s:5:\"title\";s:5:\"Fecha\";}s:9:\"LocalTime\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"hour\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"minute\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"nano\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"second\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:5:\"title\";s:9:\"LocalTime\";}s:14:\"UserAccountDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"email\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:5:\"Email\";s:15:\"allowEmptyValue\";b:0;}s:8:\"password\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Contrase\xEF\xBF\xBDa\";s:15:\"allowEmptyValue\";b:0;}s:8:\"username\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:17:\"Nombre
  de usuario\";s:15:\"allowEmptyValue\";b:0;}}s:5:\"title\";s:14:\"UserAccountDTO\";}s:7:\"UserDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:9:\"createdBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Usuario
  de creacion\";s:15:\"allowEmptyValue\";b:0;}s:11:\"createdDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:17:\"Fecha
  de creacion\";s:15:\"allowEmptyValue\";b:0;}s:5:\"email\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:5:\"Email\";s:15:\"allowEmptyValue\";b:0;}s:2:\"id\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:2:\"ID\";s:15:\"allowEmptyValue\";b:0;}s:14:\"lastModifiedBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Usuario
  de modificacion\";s:15:\"allowEmptyValue\";b:0;}s:16:\"lastModifiedDate\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:21:\"Fecha
  de modificacion\";s:15:\"allowEmptyValue\";b:0;}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"roles\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:5:\"Roles\";s:15:\"allowEmptyValue\";b:0;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"username\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:17:\"Nombre
  de usuario\";s:15:\"allowEmptyValue\";b:0;}}s:5:\"title\";s:7:\"UserDTO\";}s:10:\"Validacion\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:3:\"age\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:13:\"cadenaMinYMax\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"cadenaNoNula\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"cadenaPattern\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"date\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"gender\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:4:\"MALE\";i:1;s:6:\"FEMALE\";}}s:12:\"numeroMaximo\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:10:\"Validacion\";}}"
...
