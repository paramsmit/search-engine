---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:38:\"Matrix Client-Server Client
  Config API\";s:7:\"version\";s:5:\"1.0.0\";}"
host: localhost:8008
basePath: /_matrix
paths: ~
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":57:{s:10:\"ThirdParty\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:136:\"A
  signature of an ``m.third_party_invite`` token to prove that this user owns a third
  party identity which has been invited to the room.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"sender\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:48:\"The
  Matrix ID of the user who issued the invite.\";}s:4:\"mxid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:29:\"The
  Matrix ID of the invitee.\";}s:5:\"token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:48:\"The
  state key of the m.third_party_invite event.\";}s:10:\"signatures\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:71:\"A
  signatures object containing a signature of the entire signed object.\";s:5:\"title\";s:10:\"Signatures\";}}s:8:\"required\";a:4:{i:0;s:6:\"sender\";i:1;s:4:\"mxid\";i:2;s:5:\"token\";i:3;s:10:\"signatures\";}s:7:\"example\";s:189:\"{\n
  \   \"sender\": \"@cat:the.hat\",\n    \"mxid\": \"@green:eggs.ham\",\n    \"token\":
  \"random8nonce\",\n    \"signatures\": {\n      \"horton.hears\": {\n        \"ed25519:0\":
  \"some9signature\"\n      }\n    }\n}\";}s:14:\"RoomIdResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"room_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"RoomId
  of joined room\";}}}s:17:\"PublicRoomsResult\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:34:\"A
  list of the rooms on the server.\";s:8:\"required\";a:1:{i:0;s:5:\"chunk\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"chunk\";O:8:\"stdClass\":4:{s:5:\"title\";s:17:\"PublicRoomsChunks\";s:4:\"type\";s:5:\"array\";s:11:\"description\";s:34:\"A
  paginated chunk of public rooms.\";s:5:\"items\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:16:\"PublicRoomsChunk\";s:8:\"required\";a:4:{i:0;s:7:\"room_id\";i:1;s:18:\"num_joined_members\";i:2;s:14:\"world_readable\";i:3;s:14:\"guest_can_join\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:7:\"aliases\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:34:\"Aliases
  of the room. May be empty.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:15:\"canonical_alias\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  canonical alias of the room, if any.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:29:\"The
  name of the room, if any.\";}s:18:\"num_joined_members\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:41:\"The
  number of members joined to the room.\";}s:7:\"room_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"The
  ID of the room.\";}s:5:\"topic\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  topic of the room, if any.\";}s:14:\"world_readable\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:62:\"Whether
  the room may be viewed by guest users without joining.\";}s:14:\"guest_can_join\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:145:\"Whether
  guest users may join the room and participate in it.\nIf they can, they will be
  subject to ordinary power level\nrules like any other user.\";}s:10:\"avatar_url\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  URL for the room's avatar, if one is set.\";}}}}s:10:\"next_batch\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:142:\"A
  pagination token for the response. The absence of this token\nmeans there are no
  more results to fetch and the client should\nstop paginating.\";}s:10:\"prev_batch\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:159:\"A
  pagination token that allows fetching previous results. The\nabsence of this token
  means there are no results before this\nbatch, i.e. this is the first batch.\";}s:25:\"total_room_count_estimate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:79:\"An
  estimate on the total number of public rooms, if the\nserver has an estimate.\";}}}s:10:\"EventBatch\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"events\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"List
  of events\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:19:\"#/definitions/Event\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:57:\"matrix-doc/api/client-server/definitions/event_batch.yaml\";}s:12:\"ClientDevice\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:15:\"A
  client device\";s:7:\"x-title\";s:6:\"Device\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"device_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"Identifier
  of this device.\";s:7:\"example\";s:10:\"QBUAZIFURK\";}s:12:\"display_name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:77:\"Display
  name set by the user for this device. Absent if no name has been\nset.\";s:7:\"example\";s:7:\"android\";}s:12:\"last_seen_ip\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:107:\"The
  IP address where this device was last seen. (May be a few minutes out\nof date,
  for efficiency reasons).\";s:7:\"example\";s:7:\"1.2.3.4\";}s:12:\"last_seen_ts\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:145:\"The
  timestamp (in milliseconds since the unix epoch) when this devices\nwas last seen.
  (May be a few minutes out of date, for efficiency\nreasons).\";s:7:\"example\";i:1474491775024;}}s:8:\"required\";a:1:{i:0;s:9:\"device_id\";}s:8:\"x-origin\";s:59:\"matrix-doc/api/client-server/definitions/client_device.yaml\";}s:8:\"AuthData\";O:8:\"stdClass\":8:{s:7:\"x-title\";s:19:\"Authentication
  Data\";s:11:\"description\";s:90:\"Used by clients to submit authentication information
  to the interactive-authentication API\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"The
  login type that the client is attempting to complete.\";s:4:\"type\";s:6:\"string\";}s:7:\"session\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"The
  value of the session key given by the homeserver.\";s:4:\"type\";s:6:\"string\";}}s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Keys
  dependent on the login type\";s:4:\"type\";s:6:\"object\";}s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"type\";s:16:\"example.type.foo\";s:7:\"session\";s:5:\"xxxxx\";s:18:\"example_credential\";s:20:\"verypoorsharedsecret\";}s:8:\"x-origin\";s:55:\"matrix-doc/api/client-server/definitions/auth_data.yaml\";}s:12:\"AuthResponse\";O:8:\"stdClass\":6:{s:7:\"x-title\";s:23:\"Authentication
  response\";s:11:\"description\";s:83:\"Used by servers to indicate that additional
  authentication information is required,\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"flows\";O:8:\"stdClass\":4:{s:11:\"description\";s:63:\"A
  list of the login flows supported by the server for this API.\";s:5:\"title\";s:16:\"Flow
  information\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"stages\";O:8:\"stdClass\":3:{s:11:\"description\";s:82:\"The
  login type of each of the stages required to complete this\nauthentication flow\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"example.type.foo\";}}}s:8:\"required\";a:1:{i:0;s:6:\"stages\";}}}s:6:\"params\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:263:\"Contains
  any information that the client will need to know in order to\nuse a given type
  of authentication. For each login type presented,\nthat type may be present as a
  key in this dictionary. For example, the\npublic part of an OAuth client ID could
  be given here.\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"example\";O:8:\"stdClass\":1:{s:16:\"example.type.baz\";O:8:\"stdClass\":1:{s:11:\"example_key\";s:6:\"foobar\";}}}s:7:\"session\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:160:\"This
  is a session identifier that the client must pass back to the home\nserver, if one
  is provided, in subsequent attempts to authenticate in the\nsame API call.\";s:7:\"example\";s:8:\"xxxxxxyz\";}s:9:\"completed\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:58:\"A
  list of the stages the client has completed successfully\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"example.type.foo\";}}}s:8:\"required\";a:1:{i:0;s:5:\"flows\";}s:8:\"x-origin\";s:59:\"matrix-doc/api/client-server/definitions/auth_response.yaml\";}s:9:\"RoomEvent\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:82:\"In
  addition to the Event fields, Room Events have the following additional fields.\";s:7:\"x-title\";s:10:\"Room
  Event\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:3:\"age\";O:8:\"stdClass\":2:{s:11:\"description\";s:284:\"The
  time in milliseconds that has elapsed since the event was sent. This field is generated
  by the local homeserver, and may be incorrect if the local time on at least one
  of the two servers is out of sync, which can cause the age to either be negative
  or greater than it actually is.\";s:4:\"type\";s:7:\"integer\";}s:8:\"event_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Required.
  The globally unique event identifier.\";s:4:\"type\";s:6:\"string\";}s:7:\"room_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"Required.
  The ID of the room associated with this event.\";s:4:\"type\";s:6:\"string\";}s:6:\"sender\";O:8:\"stdClass\":2:{s:11:\"description\";s:76:\"Required.
  Contains the fully-qualified ID of the user who *sent* this event.\";s:4:\"type\";s:6:\"string\";}s:16:\"origin_server_ts\";O:8:\"stdClass\":2:{s:11:\"description\";s:87:\"Required.
  Timestamp in milliseconds on originating homeserver when this event was sent.\";s:4:\"type\";s:6:\"number\";}s:8:\"unsigned\";O:8:\"stdClass\":4:{s:11:\"description\";s:52:\"Contains
  optional extra information about the event.\";s:5:\"title\";s:12:\"UnsignedData\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:3:\"age\";O:8:\"stdClass\":2:{s:11:\"description\";s:284:\"The
  time in milliseconds that has elapsed since the event was sent. This field is generated
  by the local homeserver, and may be incorrect if the local time on at least one
  of the two servers is out of sync, which can cause the age to either be negative
  or greater than it actually is.\";s:4:\"type\";s:7:\"integer\";}s:16:\"redacted_because\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Optional.
  The event that redacted this event, if any.\";s:5:\"title\";s:5:\"Event\";s:4:\"type\";s:6:\"object\";}s:14:\"transaction_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:102:\"The
  client-supplied transaction ID, if the client being given the event is the same
  one which sent it.\";s:4:\"type\";s:6:\"string\";}s:11:\"prev_sender\";O:8:\"stdClass\":2:{s:11:\"description\";s:70:\"Contains
  the fully-qualified ID of the user who *sent* previous event.\";s:4:\"type\";s:6:\"string\";}s:12:\"prev_content\";O:8:\"stdClass\":3:{s:11:\"description\";s:109:\"Optional.
  The previous ``content`` for this event. If there is no previous content, this key
  will be missing.\";s:5:\"title\";s:12:\"EventContent\";s:4:\"type\";s:6:\"object\";}s:14:\"replaces_state\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Previous
  state event\";s:4:\"type\";s:6:\"string\";}}}}}}s:8:\"required\";a:4:{i:0;s:8:\"event_id\";i:1;s:7:\"room_id\";i:2;s:6:\"sender\";i:3;s:16:\"origin_server_ts\";}s:8:\"x-origin\";s:65:\"matrix-doc/event-schemas/schema/core-event-schema/room_event.yaml\";}s:10:\"StateEvent\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:88:\"In
  addition to the Room Event fields, State Events have the following additional fields.\";s:7:\"x-title\";s:11:\"State
  Event\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"state_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:214:\"A
  unique key which defines the overwriting semantics for this piece of room state.
  This value is often a zero-length string. The presence of this key makes this event
  a State Event. The key MUST NOT start with '_'.\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"required\";a:2:{i:0;s:9:\"state_key\";i:1;s:4:\"type\";}s:8:\"x-origin\";s:66:\"matrix-doc/event-schemas/schema/core-event-schema/state_event.yaml\";}s:10:\"SyncFilter\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"event_fields\";O:8:\"stdClass\":3:{s:11:\"description\";s:345:\"List
  of event fields to include. If this list is absent then all fields are included.
  The entries may include '.' charaters to indicate sub-fields. So ['content.body']
  will include the 'body' field of the 'content' object. A literal '.' character in
  a field name may be escaped using a '\\\\'. A server may include more fields than
  were requested.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"event_format\";O:8:\"stdClass\":3:{s:11:\"description\";s:189:\"The
  format to use for events. 'client' will return the events in a format suitable for
  clients. 'federation' will return the raw event as receieved over federation. The
  default is 'client'.\";s:4:\"enum\";a:2:{i:0;s:6:\"client\";i:1;s:10:\"federation\";}s:4:\"type\";s:6:\"string\";}s:8:\"presence\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/EventFilter\";s:11:\"description\";s:32:\"The
  presence updates to include.\";}s:12:\"account_data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/EventFilter\";s:11:\"description\";s:66:\"The
  user account data that isn't associated with rooms to include.\";}s:4:\"room\";O:8:\"stdClass\":4:{s:5:\"title\";s:10:\"RoomFilter\";s:11:\"description\";s:35:\"Filters
  to be applied to room data.\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"not_rooms\";O:8:\"stdClass\":3:{s:11:\"description\";s:266:\"A
  list of room IDs to exclude. If this list is absent then no rooms are excluded.
  A matching room will be excluded even if it is listed in the ``'rooms'`` filter.
  This filter is applied before the filters in ``ephemeral``, ``state``, ``timeline``
  or ``account_data``\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"rooms\";O:8:\"stdClass\":3:{s:11:\"description\";s:186:\"A
  list of room IDs to include. If this list is absent then all rooms are included.
  This filter is applied before the filters in ``ephemeral``, ``state``, ``timeline``
  or ``account_data``\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"ephemeral\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/RoomEventFilter\";s:11:\"description\";s:100:\"The
  events that aren't recorded in the room history, e.g. typing and receipts, to include
  for rooms.\";}s:13:\"include_leave\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"Include
  rooms that the user has left in the sync, default false\";s:4:\"type\";s:7:\"boolean\";}s:5:\"state\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/RoomEventFilter\";s:11:\"description\";s:38:\"The
  state events to include for rooms.\";}s:8:\"timeline\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/RoomEventFilter\";s:11:\"description\";s:57:\"The
  message and state update events to include for rooms.\";}s:12:\"account_data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/RoomEventFilter\";s:11:\"description\";s:47:\"The
  per user account data to include for rooms.\";}}s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:57:\"matrix-doc/api/client-server/definitions/sync_filter.yaml\";}s:5:\"Error\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:20:\"A
  Matrix-level Error\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"errcode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"An
  error code.\";}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"A
  human-readable error message.\";}}s:8:\"required\";a:1:{i:0;s:7:\"errcode\";}s:8:\"x-origin\";s:51:\"matrix-doc/api/client-server/definitions/error.yaml\";}s:10:\"DeviceKeys\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:7:\"x-title\";s:10:\"DeviceKeys\";s:11:\"description\";s:20:\"Device
  identity keys\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"user_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:86:\"The
  ID of the user the device belongs to. Must match the user ID used\nwhen logging
  in.\";s:7:\"example\";s:18:\"@alice:example.com\";}s:9:\"device_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:89:\"The
  ID of the device these keys belong to. Must match the device ID used\nwhen logging
  in.\";s:7:\"example\";s:10:\"JLAFKJWSCS\";}s:10:\"algorithms\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:51:\"The
  encryption algorithms supported by this device.\";s:7:\"example\";a:2:{i:0;s:27:\"m.olm.curve25519-aes-sha256\";i:1;s:19:\"m.megolm.v1.aes-sha\";}}s:4:\"keys\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:175:\"Public
  identity keys. The names of the properties should be in the\nformat ``<algorithm>:<device_id>``.
  The keys themselves should be\nencoded as specified by the key algorithm.\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";O:8:\"stdClass\":2:{s:21:\"curve25519:JLAFKJWSCS\";s:43:\"3C5BFWi2Y8MaVvjM8M22DBmh24PmgR0nPvJOIArzgyI\";s:18:\"ed25519:JLAFKJWSCS\";s:43:\"lEuiRJBit0IG6nUf5pUzWTUEsRVVe/HJkoKuEww9ULI\";}}s:10:\"signatures\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:194:\"Signatures
  for the device key object. A map from user ID, to a map from\n``<algorithm>:<device_id>``
  to the signature.\n\nThe signature is calculated using the process described at
  `Signing\nJSON`_.\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":1:{s:18:\"@alice:example.com\";O:8:\"stdClass\":1:{s:18:\"ed25519:JLAFKJWSCS\";s:86:\"dSO80A01XiigH3uBiDVx/EjzaoycHcjq9lfQX0uWsqxl2giMIiSPR8a4d291W1ihKJL/a+myXS367WT6NAIcBA\";}}}}s:8:\"required\";a:5:{i:0;s:7:\"user_id\";i:1;s:9:\"device_id\";i:2;s:10:\"algorithms\";i:3;s:4:\"keys\";i:4;s:10:\"signatures\";}s:8:\"x-origin\";s:57:\"matrix-doc/api/client-server/definitions/device_keys.yaml\";}s:5:\"Event\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:45:\"The
  basic set of fields all events must have.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:126:\"The
  fields in this object will vary depending on the type of event. When interacting
  with the REST API, this is the HTTP body.\";s:5:\"title\";s:12:\"EventContent\";s:4:\"type\";s:6:\"object\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:127:\"The
  type of event. This SHOULD be namespaced similar to Java package naming conventions
  e.g. 'com.example.subdomain.event.type'\";s:4:\"type\";s:6:\"string\";}}s:13:\"discriminator\";s:4:\"type\";s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:8:\"x-origin\";s:60:\"matrix-doc/event-schemas/schema/core-event-schema/event.yaml\";}s:11:\"MRoomMember\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:1488:\"Adjusts
  the membership state for a user in a room. It is preferable to use\nthe membership
  APIs (``/rooms/<room id>/invite`` etc) when performing\nmembership actions rather
  than adjusting the state directly as there are a\nrestricted set of valid transformations.
  For example, user A cannot force\nuser B to join a room, and trying to force this
  state change directly will\nfail.\n\nThe following membership states are specified:\n\n-
  ``invite`` - The user has been invited to join a room, but has not yet\n  joined
  it. They may not participate in the room until they join.\n\n- ``join`` - The user
  has joined the room (possibly after accepting an\n  invite), and may participate
  in it.\n\n- ``leave`` - The user was once joined to the room, but has since left\n
  \ (possibly by choice, or possibly by being kicked).\n\n- ``ban`` - The user has
  been banned from the room, and is no longer allowed\n  to join it until they are
  un-banned from the room (by having their\n  membership state set to a value other
  than ``ban``).\n\n- ``knock`` - This is a reserved word, which currently has no
  meaning.\n\nThe ``third_party_invite`` property will be set if this invite is an\n``invite``
  event and is the successor of an ``m.room.third_party_invite``\nevent, and absent
  otherwise.\n\nThis event may also include an ``invite_room_state`` key **outside
  the**\n``content`` **key**. If present, this contains an array of ``StrippedState``\nEvents.
  These events provide information on a subset of state events such as\nthe room name.\";s:7:\"x-title\";s:51:\"The
  current membership state of a user in the room.\";s:21:\"x-discriminator-value\";s:13:\"m.room.member\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"content\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"avatar_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:70:\"The
  avatar URL for this user, if any. This is added by the homeserver.\";s:4:\"type\";s:6:\"string\";}s:11:\"displayname\";O:8:\"stdClass\":2:{s:11:\"description\";s:72:\"The
  display name for this user, if any. This is added by the homeserver.\";s:4:\"type\";s:6:\"string\";}s:10:\"membership\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"The
  membership state of the user.\";s:4:\"enum\";a:5:{i:0;s:6:\"invite\";i:1;s:4:\"join\";i:2;s:5:\"knock\";i:3;s:5:\"leave\";i:4;s:3:\"ban\";}s:4:\"type\";s:6:\"string\";}s:9:\"is_direct\";O:8:\"stdClass\":2:{s:11:\"description\";s:129:\"Flag
  indicating if the room containing this event was created with the intention of being
  a direct chat. See `Direct Messaging`_.\";s:4:\"type\";s:7:\"boolean\";}s:18:\"third_party_invite\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"display_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:91:\"A
  name which can be displayed to represent the user instead of their third party identifier\";s:4:\"type\";s:6:\"string\";}s:6:\"signed\";O:8:\"stdClass\":5:{s:11:\"description\";s:112:\"A
  block of content which has been signed, which servers can use to verify the event.
  Clients should ignore this.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"mxid\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"The
  invited matrix user ID. Must be equal to the user_id property of the event.\";s:4:\"type\";s:6:\"string\";}s:10:\"signatures\";O:8:\"stdClass\":3:{s:11:\"description\";s:125:\"A
  single signature from the verifying server, in the format specified by the Signing
  Events section of the server-server API.\";s:5:\"title\";s:10:\"Signatures\";s:4:\"type\";s:6:\"object\";}s:5:\"token\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"The
  token property of the containing third_party_invite object.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:4:\"mxid\";i:1;s:10:\"signatures\";i:2;s:5:\"token\";}s:5:\"title\";s:6:\"signed\";s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:2:{i:0;s:12:\"display_name\";i:1;s:6:\"signed\";}s:5:\"title\";s:6:\"Invite\";s:4:\"type\";s:6:\"object\";}}s:8:\"required\";a:1:{i:0;s:10:\"membership\";}s:5:\"title\";s:12:\"EventContent\";s:4:\"type\";s:6:\"object\";}s:17:\"invite_room_state\";O:8:\"stdClass\":3:{s:11:\"description\";s:641:\"A
  subset of the state of the room at the time of the invite, if ``membership`` is
  ``invite``. Note that this state is informational, and SHOULD NOT be trusted; once
  the client has joined the room, it SHOULD fetch the live state from the server and
  discard the invite_room_state. Also, clients must not rely on any particular state
  being present here; they SHOULD behave properly (with possibly a degraded but not
  a broken experience) in the absence of any particular events here. If they are set
  on the room, at least the state for ``m.room.avatar``, ``m.room.canonical_alias``,
  ``m.room.join_rules``, and ``m.room.name`` SHOULD be included.\";s:5:\"items\";O:8:\"stdClass\":5:{s:11:\"description\";s:88:\"A
  stripped down state event, with only the ``type``, ``state_key`` and ``content``
  keys.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"content\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"The
  ``content`` for the event.\";s:5:\"title\";s:12:\"EventContent\";s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  ``state_key`` for the event.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  ``type`` for the event.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:4:\"type\";i:1;s:9:\"state_key\";i:2;s:7:\"content\";}s:5:\"title\";s:13:\"StrippedState\";s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:9:\"state_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"The
  ``user_id`` this membership event relates to.\";s:4:\"type\";s:6:\"string\";}s:10:\"membership\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  membership state of the user.\";s:4:\"enum\";a:5:{i:0;s:6:\"invite\";i:1;s:4:\"join\";i:2;s:5:\"knock\";i:3;s:5:\"leave\";i:4;s:3:\"ban\";}}}}}s:8:\"x-origin\";s:45:\"matrix-doc/event-schemas/schema/m.room.member\";}s:9:\"MPresence\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:53:\"Informs
  the client of a user's presence state change.\";s:7:\"x-title\";s:14:\"Presence
  Event\";s:21:\"x-discriminator-value\";s:10:\"m.presence\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"avatar_url\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  current avatar URL for this user, if any.\";}s:11:\"displayname\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"The
  current display name for this user, if any.\";}s:15:\"last_active_ago\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:69:\"The
  last time since this used performed some action, in milliseconds.\";}s:8:\"presence\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  presence state for this user.\";s:4:\"enum\";a:3:{i:0;s:6:\"online\";i:1;s:7:\"offline\";i:2;s:11:\"unavailable\";}}s:16:\"currently_active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:36:\"Whether
  the user is currently active\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"The
  user's ID.\";}}s:8:\"required\";a:2:{i:0;s:8:\"presence\";i:1;s:7:\"user_id\";}}s:8:\"event_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"sender\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"required\";a:3:{i:0;s:8:\"event_id\";i:1;s:4:\"type\";i:2;s:7:\"content\";}s:8:\"x-origin\";s:42:\"matrix-doc/event-schemas/schema/m.presence\";}s:11:\"PushRuleset\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:22:\"#/definitions/PushRule\";}}s:8:\"override\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:22:\"#/definitions/PushRule\";}}s:4:\"room\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:22:\"#/definitions/PushRule\";}}s:6:\"sender\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:22:\"#/definitions/PushRule\";}}s:9:\"underride\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:22:\"#/definitions/PushRule\";}}}s:8:\"x-origin\";s:77:\"matrix-doc/event-schemas/schema/core-event-schema/push-rule/push_ruleset.yaml\";}s:8:\"PushRule\";O:8:\"stdClass\":5:{s:7:\"x-title\";s:8:\"PushRule\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"actions\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:49:\"The
  actions to perform when this rule is matched.\";}s:7:\"default\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:59:\"Whether
  this is a default rule, or has been set explicitly.\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:40:\"Whether
  the push rule is enabled or not.\";}s:7:\"rule_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"The
  ID of this rule.\";}s:10:\"conditions\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/PushCondition\";}s:11:\"description\";s:193:\"The
  conditions that must hold true for an event in order for a rule to be\napplied to
  an event. A rule with no conditions always matches. Only\napplicable to ``underride``
  and ``override`` rules.\";}s:7:\"pattern\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:79:\"The
  glob-style pattern to match against.  Only applicable to ``content``\nrules.\";}}s:8:\"required\";a:4:{i:0;s:7:\"actions\";i:1;s:7:\"default\";i:2;s:7:\"enabled\";i:3;s:7:\"rule_id\";}s:8:\"x-origin\";s:74:\"matrix-doc/event-schemas/schema/core-event-schema/push-rule/push_rule.yaml\";}s:13:\"PushCondition\";O:8:\"stdClass\":5:{s:7:\"x-title\";s:13:\"PushCondition\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"kind\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:11:\"event_match\";i:1;s:21:\"contains_display_name\";i:2;s:17:\"room_member_count\";}}s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:87:\"Required
  for ``event_match`` conditions. The dot-separated field of the\nevent to match.\";s:9:\"x-example\";s:12:\"content.body\";}s:7:\"pattern\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:211:\"Required
  for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns
  with no special glob characters should be\ntreated as having asterisks prepended
  and appended when testing the\ncondition.\";}s:2:\"is\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:275:\"Required
  for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by
  one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count
  is strictly less than the given number and\nso forth. If no prefix is present, this
  parameter defaults to ==.\";}}s:8:\"required\";a:1:{i:0;s:4:\"kind\";}s:8:\"x-origin\";s:79:\"matrix-doc/event-schemas/schema/core-event-schema/push-rule/push_condition.yaml\";}s:13:\"TimelineBatch\";O:8:\"stdClass\":3:{s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/EventBatch\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"limited\";O:8:\"stdClass\":2:{s:11:\"description\";s:80:\"True
  if the number of events returned was limited by the ``limit`` on the filter\";s:4:\"type\";s:7:\"boolean\";}s:10:\"prev_batch\";O:8:\"stdClass\":2:{s:11:\"description\";s:97:\"A
  token that can be supplied to to the ``from`` parameter of the rooms/{roomId}/messages
  endpoint\";s:4:\"type\";s:6:\"string\";}}}}s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:60:\"matrix-doc/api/client-server/definitions/timeline_batch.yaml\";}s:11:\"EventFilter\";O:8:\"stdClass\":4:{s:7:\"x-title\";s:6:\"Filter\";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"limit\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"The
  maximum number of events to return.\";s:4:\"type\";s:7:\"integer\";}s:11:\"not_senders\";O:8:\"stdClass\":3:{s:11:\"description\";s:170:\"A
  list of sender IDs to exclude. If this list is absent then no senders are excluded.
  A matching sender will be excluded even if it is listed in the ``'senders'`` filter.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"not_types\";O:8:\"stdClass\":3:{s:11:\"description\";s:240:\"A
  list of event types to exclude. If this list is absent then no event types are excluded.
  A matching type will be excluded even if it is listed in the ``'types'`` filter.
  A '*' can be used as a wildcard to match any sequence of characters.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:7:\"senders\";O:8:\"stdClass\":3:{s:11:\"description\";s:87:\"A
  list of senders IDs to include. If this list is absent then all senders are included.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"types\";O:8:\"stdClass\":3:{s:11:\"description\";s:164:\"A
  list of event types to include. If this list is absent then all event types are
  included. A ``'*'`` can be used as a wildcard to match any sequence of characters.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:58:\"matrix-doc/api/client-server/definitions/event_filter.yaml\";}s:15:\"RoomEventFilter\";O:8:\"stdClass\":5:{s:5:\"allOf\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/EventFilter\";}}s:7:\"x-title\";s:15:\"RoomEventFilter\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"not_rooms\";O:8:\"stdClass\":3:{s:11:\"description\";s:162:\"A
  list of room IDs to exclude. If this list is absent then no rooms are excluded.
  A matching room will be excluded even if it is listed in the ``'rooms'`` filter.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"rooms\";O:8:\"stdClass\":3:{s:11:\"description\";s:82:\"A
  list of room IDs to include. If this list is absent then all rooms are included.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"contains_url\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:103:\"If
  ``true``, includes only events with a url key in their content. If ``false``, excludes
  those events.\";}}s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:63:\"matrix-doc/api/client-server/definitions/room_event_filter.yaml\";}s:11:\"MCallAnswer\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:67:\"This
  event is sent by the callee when they wish to answer the call.\";s:21:\"x-discriminator-value\";s:13:\"m.call.answer\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"call_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  ID of the call this event relates to.\";}s:6:\"answer\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:6:\"Answer\";s:11:\"description\";s:30:\"The
  session description object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:1:{i:0;s:6:\"answer\";}s:11:\"description\";s:32:\"The
  type of session description.\";}s:3:\"sdp\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  SDP text of the session description.\";}}s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:3:\"sdp\";}}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:0:\"\";}}s:8:\"required\";a:3:{i:0;s:7:\"call_id\";i:1;s:6:\"answer\";i:2;s:7:\"version\";}}}}}s:8:\"x-origin\";s:45:\"matrix-doc/event-schemas/schema/m.call.answer\";}s:15:\"MCallCandidates\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:183:\"This
  event is sent by callers after sending an invite and by the callee after answering.
  Its purpose is to give the other party additional ICE candidates to try using to
  communicate.\n\";s:21:\"x-discriminator-value\";s:17:\"m.call.candidates\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"call_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  ID of the call this event relates to.\";}s:10:\"candidates\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:43:\"Array
  of objects describing the candidates.\";s:5:\"items\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:9:\"Candidate\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"sdpMid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:50:\"The
  SDP media type this candidate is intended for.\";}s:13:\"sdpMLineIndex\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:61:\"The
  index of the SDP 'm' line this candidate is intended for.\";}s:9:\"candidate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"The
  SDP 'a' line of the candidate.\";}}s:8:\"required\";a:3:{i:0;s:9:\"candidate\";i:1;s:13:\"sdpMLineIndex\";i:2;s:6:\"sdpMid\";}}}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:96:\"The
  version of the VoIP specification this messages adheres to. This specification is
  version 0.\";}}s:8:\"required\";a:3:{i:0;s:7:\"call_id\";i:1;s:10:\"candidates\";i:2;s:7:\"version\";}}}}}s:8:\"x-origin\";s:49:\"matrix-doc/event-schemas/schema/m.call.candidates\";}s:11:\"MCallHangup\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:154:\"Sent
  by either party to signal their termination of the call. This can be sent either
  once the call has has been established or before to abort the call.\n\";s:21:\"x-discriminator-value\";s:13:\"m.call.hangup\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"call_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"The
  ID of the call this event relates to.\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:95:\"The
  version of the VoIP specification this message adheres to. This specification is
  version 0.\";}}s:8:\"required\";a:2:{i:0;s:7:\"call_id\";i:1;s:7:\"version\";}}}}}s:8:\"x-origin\";s:45:\"matrix-doc/event-schemas/schema/m.call.hangup\";}s:11:\"MCallInvite\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:68:\"This
  event is sent by the caller when they wish to establish a call.\";s:21:\"x-discriminator-value\";s:13:\"m.call.invite\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"call_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"A
  unique identifer for the call.\";}s:5:\"offer\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:5:\"Offer\";s:11:\"description\";s:30:\"The
  session description object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:1:{i:0;s:5:\"offer\";}s:11:\"description\";s:32:\"The
  type of session description.\";}s:3:\"sdp\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  SDP text of the session description.\";}}s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:3:\"sdp\";}}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:95:\"The
  version of the VoIP specification this message adheres to. This specification is
  version 0.\";}s:8:\"lifetime\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:195:\"The
  time in milliseconds that the invite is valid for. Once the invite age exceeds this
  value, clients should discard it. They should also no longer show the call as awaiting
  an answer in the UI.\";}}s:8:\"required\";a:4:{i:0;s:7:\"call_id\";i:1;s:5:\"offer\";i:2;s:7:\"version\";i:3;s:8:\"lifetime\";}}}}}s:8:\"x-origin\";s:45:\"matrix-doc/event-schemas/schema/m.call.invite\";}s:7:\"MDirect\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:283:\"A
  map of which rooms are considered 'direct' rooms for specific users\nis kept in
  \ ``account_data`` in an event of type ``m.direct``. The\ncontent of this event
  is an object where the keys are the user IDs\nand values are lists of room ID strings
  of the 'direct' rooms for\nthat user ID.\";s:7:\"x-title\";s:19:\"Direct Chat Mapping\";s:21:\"x-discriminator-value\";s:8:\"m.direct\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":2:{s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"title\";s:7:\"User
  ID\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}}}}s:8:\"x-origin\";s:40:\"matrix-doc/event-schemas/schema/m.direct\";}s:10:\"MPushRules\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:67:\"Push
  rules used definition of event pushing from server to consumer\";s:7:\"x-title\";s:10:\"Push
  Rules\";s:21:\"x-discriminator-value\";s:12:\"m.push_rules\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"device\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"global\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:19:\"The
  global ruleset.\";s:4:\"$ref\";s:25:\"#/definitions/PushRuleset\";}}s:8:\"required\";a:1:{i:0;s:6:\"global\";}}}}}s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:7:\"content\";}s:8:\"x-origin\";s:44:\"matrix-doc/event-schemas/schema/m.push_rules\";}s:8:\"MReceipt\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:35:\"Informs
  the client of new receipts.\";s:7:\"x-title\";s:13:\"Receipt Event\";s:21:\"x-discriminator-value\";s:9:\"m.receipt\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/MReceiptEvent\";}}s:7:\"room_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"required\";a:3:{i:0;s:7:\"room_id\";i:1;s:4:\"type\";i:2;s:7:\"content\";}s:8:\"x-origin\";s:41:\"matrix-doc/event-schemas/schema/m.receipt\";}s:12:\"MRoomAliases\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:642:\"This
  event is sent by a homeserver directly to inform of changes to the list of aliases
  it knows about for that room. The ``state_key`` for this event is set to the homeserver
  which owns the room alias. The entire set of known aliases for the room is the union
  of all the ``m.room.aliases`` events, one for each homeserver. Clients **should**
  check the validity of any room alias given in this list before presenting it to
  the user as trusted fact. The lists given by this event should be considered simply
  as advice on which aliases might exist, for which the client can perform the lookup
  to confirm whether it receives the correct room ID.\";s:7:\"x-title\";s:59:\"Informs
  the room about what room aliases it has been given.\";s:21:\"x-discriminator-value\";s:14:\"m.room.aliases\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"aliases\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  list of room aliases.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:1:{i:0;s:7:\"aliases\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:52:\"The
  homeserver domain which owns these room aliases.\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:46:\"matrix-doc/event-schemas/schema/m.room.aliases\";}s:11:\"MRoomAvatar\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:97:\"A
  picture that is associated with the room. This can be displayed alongside the room
  information.\";s:7:\"x-title\";s:10:\"RoomAvatar\";s:21:\"x-discriminator-value\";s:13:\"m.room.avatar\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"info\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/ImageInfo\";s:11:\"description\";s:48:\"Metadata
  about the image referred to in ``url``.\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  URL to the image.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:3:\"url\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:45:\"matrix-doc/event-schemas/schema/m.room.avatar\";}s:19:\"MRoomCanonicalAlias\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:373:\"This
  event is used to inform the room about which alias should be\nconsidered the canonical
  one. This could be for display purposes or as\nsuggestion to users which alias to
  use to advertise the room.\n\nA room with an ``m.room.canonical_alias`` event with
  an absent, null, or\nempty ``alias`` field should be treated the same as a room
  with no\n``m.room.canonical_alias`` event.\";s:7:\"x-title\";s:56:\"Informs the
  room as to which alias is the canonical one.\";s:21:\"x-discriminator-value\";s:22:\"m.room.canonical_alias\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"alias\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"The
  canonical alias.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:5:\"alias\";}}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:54:\"matrix-doc/event-schemas/schema/m.room.canonical_alias\";}s:11:\"MRoomCreate\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:97:\"This
  is the first event in a room and cannot be changed. It acts as the root of all other
  events.\";s:7:\"x-title\";s:28:\"The first event in the room.\";s:21:\"x-discriminator-value\";s:13:\"m.room.create\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"creator\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"The
  ``user_id`` of the room creator. This is set by the homeserver.\";s:4:\"type\";s:6:\"string\";}s:10:\"m.federate\";O:8:\"stdClass\":2:{s:11:\"description\";s:94:\"Whether
  users on other servers can join this room. Defaults to ``true`` if key does not
  exist.\";s:4:\"type\";s:7:\"boolean\";}}s:8:\"required\";a:1:{i:0;s:7:\"creator\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:45:\"matrix-doc/event-schemas/schema/m.room.create\";}s:16:\"MRoomGuestAccess\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:174:\"This
  event controls whether guest users are allowed to join rooms. If this event is absent,
  servers should act as if it is present and has the guest_access value \"forbidden\".\";s:7:\"x-title\";s:55:\"Controls
  whether guest users are allowed to join rooms.\";s:21:\"x-discriminator-value\";s:19:\"m.room.guest_access\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:12:\"guest_access\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"Whether
  guests can join the room.\";s:4:\"enum\";a:2:{i:0;s:8:\"can_join\";i:1;s:9:\"forbidden\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:12:\"guest_access\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:51:\"matrix-doc/event-schemas/schema/m.room.guest_access\";}s:22:\"MRoomHistoryVisibility\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:102:\"This
  event controls whether a user can see the events that happened in a room from before
  they joined.\";s:7:\"x-title\";s:31:\"Controls visibility of history.\";s:21:\"x-discriminator-value\";s:25:\"m.room.history_visibility\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:18:\"history_visibility\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Who
  can see the room history.\";s:4:\"enum\";a:4:{i:0;s:7:\"invited\";i:1;s:6:\"joined\";i:2;s:6:\"shared\";i:3;s:14:\"world_readable\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:18:\"history_visibility\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:57:\"matrix-doc/event-schemas/schema/m.room.history_visibility\";}s:14:\"MRoomJoinRules\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:335:\"A
  room may be ``public`` meaning anyone can join the room without any prior action.
  Alternatively, it can be ``invite`` meaning that a user who wishes to join the room
  must first receive an invite to the room from someone already inside of the room.
  Currently, ``knock`` and ``private`` are reserved keywords which are not implemented.\";s:7:\"x-title\";s:49:\"Describes
  how users are allowed to join the room.\";s:21:\"x-discriminator-value\";s:17:\"m.room.join_rules\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"join_rule\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"The
  type of rules used for users wishing to join this room.\";s:4:\"enum\";a:4:{i:0;s:6:\"public\";i:1;s:5:\"knock\";i:2;s:6:\"invite\";i:3;s:7:\"private\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:9:\"join_rule\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:49:\"matrix-doc/event-schemas/schema/m.room.join_rules\";}s:12:\"MRoomMessage\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:389:\"This
  event is used when sending messages in a room. Messages are not limited to be text.
  The ``msgtype`` key outlines the type of message, e.g. text, audio, image, video,
  etc. The ``body`` key is text and MUST be used with every kind of ``msgtype`` as
  a fallback mechanism for when a client cannot render a message. This allows clients
  to display *something* even if it is just plain text.\";s:7:\"x-title\";s:7:\"Message\";s:21:\"x-discriminator-value\";s:14:\"m.room.message\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}}}}s:8:\"x-origin\";s:46:\"matrix-doc/event-schemas/schema/m.room.message\";}s:20:\"MRoomMessageFeedback\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:454:\"**NB:
  Usage of this event is discouraged in favour of the** `receipts module`_. **Most
  clients will not recognise this event.** Feedback events are events sent to acknowledge
  a message in some way. There are two supported acknowledgements: ``delivered`` (sent
  when the event has been received) and ``read`` (sent when the event has been observed
  by the end-user). The ``target_event_id`` should reference the ``m.room.message``
  event being acknowledged.'\";s:7:\"x-title\";s:15:\"MessageFeedback\";s:21:\"x-discriminator-value\";s:23:\"m.room.message.feedback\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"target_event_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"The
  event that this feedback is related to.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"The
  type of feedback.\";s:4:\"enum\";a:2:{i:0;s:9:\"delivered\";i:1;s:4:\"read\";}s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:15:\"target_event_id\";}s:4:\"type\";s:6:\"object\";}}}}s:8:\"x-origin\";s:55:\"matrix-doc/event-schemas/schema/m.room.message.feedback\";}s:18:\"MRoomMessageMAudio\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:44:\"This
  message represents a single audio clip.\";s:7:\"x-title\";s:12:\"AudioMessage\";s:21:\"x-discriminator-value\";s:7:\"m.audio\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:138:\"A
  description of the audio e.g. 'Bee Gees - Stayin' Alive', or some kind of content
  description for accessibility e.g. 'audio attachment'.\";s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":4:{s:11:\"description\";s:51:\"Metadata
  for the audio clip referred to in ``url``.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"duration\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"The
  duration of the audio in milliseconds.\";s:4:\"type\";s:7:\"integer\";}s:8:\"mimetype\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  mimetype of the audio e.g. ``audio/aac``.\";s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  size of the audio clip in bytes.\";s:4:\"type\";s:7:\"integer\";}}s:5:\"title\";s:9:\"AudioInfo\";s:4:\"type\";s:6:\"object\";}s:7:\"msgtype\";O:8:\"stdClass\":2:{s:4:\"enum\";a:1:{i:0;s:7:\"m.audio\";}s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The
  URL to the audio clip.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";i:2;s:3:\"url\";}s:4:\"type\";s:6:\"object\";}}}}s:8:\"x-origin\";s:54:\"matrix-doc/event-schemas/schema/m.room.message#m.audio\";}s:18:\"MRoomMessageMEmote\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:317:\"This
  message is similar to ``m.text`` except that the sender is 'performing' the action
  contained in the ``body`` key, similar to ``/me`` in IRC. This message should be
  prefixed by the name of the sender. This message could also be represented in a
  different colour to distinguish it from regular ``m.text`` messages.\";s:7:\"x-title\";s:12:\"EmoteMessage\";s:21:\"x-discriminator-value\";s:7:\"m.emote\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"The
  emote action to perform.\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:54:\"matrix-doc/event-schemas/schema/m.room.message#m.emote\";}s:17:\"MRoomMessageMFile\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:39:\"This
  message represents a generic file.\";s:7:\"x-title\";s:11:\"FileMessage\";s:21:\"x-discriminator-value\";s:6:\"m.file\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:104:\"A
  human-readable description of the file. This is recommended to be the filename of
  the original upload.\";s:4:\"type\";s:6:\"string\";}s:8:\"filename\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"The
  original filename of the uploaded file.\";s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":4:{s:11:\"description\";s:50:\"Information
  about the file referred to in ``url``.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"mimetype\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"The
  mimetype of the file e.g. ``application/msword``.\";s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"The
  size of the file in bytes.\";s:4:\"type\";s:7:\"integer\";}s:13:\"thumbnail_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"The
  URL to the thumbnail of the file.\";s:4:\"type\";s:6:\"string\";}s:14:\"thumbnail_info\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ThumbnailInfo\";s:11:\"description\";s:58:\"Metadata
  about the image referred to in ``thumbnail_url``.\";}}s:5:\"title\";s:8:\"FileInfo\";s:4:\"type\";s:6:\"object\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"The
  URL to the file.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:4:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";i:2;s:3:\"url\";i:3;s:8:\"filename\";}}}s:8:\"x-origin\";s:53:\"matrix-doc/event-schemas/schema/m.room.message#m.file\";}s:18:\"MRoomMessageMImage\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:65:\"This
  message represents a single image and an optional thumbnail.\";s:7:\"x-title\";s:12:\"ImageMessage\";s:21:\"x-discriminator-value\";s:7:\"m.image\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:185:\"A
  textual representation of the image. This could be the alt text of the image, the
  filename of the image, or some kind of content description for accessibility e.g.
  'image attachment'.\";s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/ImageInfo\";s:11:\"description\";s:48:\"Metadata
  about the image referred to in ``url``.\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"The
  URL to the image.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";i:2;s:3:\"url\";}}}s:8:\"x-origin\";s:54:\"matrix-doc/event-schemas/schema/m.room.message#m.image\";}s:21:\"MRoomMessageMLocation\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:46:\"This
  message represents a real-world location.\";s:7:\"x-title\";s:15:\"LocationMessage\";s:21:\"x-discriminator-value\";s:10:\"m.location\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:139:\"A
  description of the location e.g. 'Big Ben, London, UK', or some kind of content
  description for accessibility e.g. 'location attachment'.\";s:4:\"type\";s:6:\"string\";}s:7:\"geo_uri\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"A
  geo URI representing this location.\";s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"thumbnail_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"The
  URL to a thumbnail of the location being represented.\";s:4:\"type\";s:6:\"string\";}s:14:\"thumbnail_info\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ThumbnailInfo\";s:11:\"description\";s:58:\"Metadata
  about the image referred to in ``thumbnail_url``.\";}}s:5:\"title\";s:12:\"LocationInfo\";}}s:8:\"required\";a:3:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";i:2;s:7:\"geo_uri\";}}}s:8:\"x-origin\";s:57:\"matrix-doc/event-schemas/schema/m.room.message#m.location\";}s:19:\"MRoomMessageMNotice\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:457:\"The
  ``m.notice`` type is primarily intended for responses from automated clients. An
  ``m.notice`` message must be treated the same way as a regular ``m.text`` message
  with two exceptions. Firstly, clients should present ``m.notice`` messages to users
  in a distinct manner, and secondly, ``m.notice`` messages must never be automatically
  responded to. This helps to prevent infinite-loop situations where two automated
  clients continuously exchange messages.\";s:7:\"x-title\";s:13:\"NoticeMessage\";s:21:\"x-discriminator-value\";s:8:\"m.notice\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"The
  notice text to send.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";}}}s:8:\"x-origin\";s:55:\"matrix-doc/event-schemas/schema/m.room.message#m.notice\";}s:17:\"MRoomMessageMText\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:69:\"This
  message is the most basic message and is used to represent text.\";s:7:\"x-title\";s:11:\"TextMessage\";s:21:\"x-discriminator-value\";s:6:\"m.text\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"The
  body of the message.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";}}}s:8:\"x-origin\";s:53:\"matrix-doc/event-schemas/schema/m.room.message#m.text\";}s:18:\"MRoomMessageMVideo\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:44:\"This
  message represents a single video clip.\";s:7:\"x-title\";s:12:\"VideoMessage\";s:21:\"x-discriminator-value\";s:7:\"m.video\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/MRoomMessageContent\";}i:1;O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:127:\"A
  description of the video e.g. 'Gangnam style', or some kind of content description
  for accessibility e.g. 'video attachment'.\";s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":4:{s:11:\"description\";s:53:\"Metadata
  about the video clip referred to in ``url``.\";s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"duration\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"The
  duration of the video in milliseconds.\";s:4:\"type\";s:7:\"integer\";}s:1:\"h\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"The
  height of the video in pixels.\";s:4:\"type\";s:7:\"integer\";}s:1:\"w\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  width of the video in pixels.\";s:4:\"type\";s:7:\"integer\";}s:8:\"mimetype\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"The
  mimetype of the video e.g. ``video/mp4``.\";s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  size of the video in bytes.\";s:4:\"type\";s:7:\"integer\";}s:13:\"thumbnail_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"The
  URL to an image thumbnail of the video clip.\";s:4:\"type\";s:6:\"string\";}s:14:\"thumbnail_info\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ThumbnailInfo\";s:11:\"description\";s:58:\"Metadata
  about the image referred to in ``thumbnail_url``.\";}}s:5:\"title\";s:9:\"VideoInfo\";s:4:\"type\";s:6:\"object\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"The
  URL to the video clip.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:7:\"msgtype\";i:1;s:4:\"body\";i:2;s:3:\"url\";}}}s:8:\"x-origin\";s:54:\"matrix-doc/event-schemas/schema/m.room.message#m.video\";}s:9:\"MRoomName\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:563:\"A
  room has an opaque room ID which is not human-friendly to read. A room\nalias is
  human-friendly, but not all rooms have room aliases. The room name\nis a human-friendly
  string designed to be displayed to the end-user. The\nroom name is not unique, as
  multiple rooms can have the same room name set.\n\nA room with an ``m.room.name``
  event with an absent, null, or empty\n``name`` field should be treated the same
  as a room with no ``m.room.name``\nevent.\n\nAn event of this type is automatically
  created when creating a room using\n``/createRoom`` with the ``name`` key.\";s:7:\"x-title\";s:8:\"RoomName\";s:21:\"x-discriminator-value\";s:11:\"m.room.name\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"The
  name of the room. This MUST NOT exceed 255 bytes.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:43:\"matrix-doc/event-schemas/schema/m.room.name\";}s:16:\"MRoomPowerLevels\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:1410:\"This
  event specifies the minimum level a user must have in order to perform a\ncertain
  action. It also specifies the levels of each user in the room.\n\nIf a ``user_id``
  is in the ``users`` list, then that ``user_id`` has the\nassociated power level.
  Otherwise they have the default level\n``users_default``. If ``users_default`` is
  not supplied, it is assumed to be\n0.\n\nThe level required to send a certain event
  is governed by ``events``,\n``state_default`` and ``events_default``. If an event
  type is specified in\n``events``, then the user must have at least the level specified
  in order to\nsend that event. If the event type is not supplied, it defaults to\n``events_default``
  for Message Events and ``state_default`` for State\nEvents.\n\nIf there is no ``state_default``
  in the ``m.room.power_levels`` event, the\n``state_default`` is 50. If there is
  no ``events_default`` in the\n``m.room.power_levels`` event, the ``events_default``
  is 0. If the room\ncontains no ``m.room.power_levels`` event, *both* the ``state_default``
  and\n``events_default`` are 0.\n\nThe power level required to invite a user to the
  room, kick a user from the\nroom, ban a user from the room, or redact an event,
  is defined by ``invite``,\n``kick``, ``ban``, and ``redact``, respectively. Each
  of these levels defaults\nto 50 if they are not specified in the ``m.room.power_levels``
  event, or if\nthe room contains no ``m.room.power_levels`` event.\";s:7:\"x-title\";s:59:\"Defines
  the power levels (privileges) of users in the room.\";s:21:\"x-discriminator-value\";s:19:\"m.room.power_levels\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":9:{s:3:\"ban\";O:8:\"stdClass\":2:{s:11:\"description\";s:64:\"The
  level required to ban a user. Defaults to 50 if unspecified.\";s:4:\"type\";s:6:\"number\";}s:6:\"events\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:11:\"description\";s:107:\"The
  level required to send specific event types. This is a mapping from event type to
  power level required.\";s:5:\"title\";s:18:\"Event power levels\";s:4:\"type\";s:6:\"object\";}s:14:\"events_default\";O:8:\"stdClass\":2:{s:11:\"description\";s:122:\"The
  default level required to send message events. Can be\noverridden by the ``events``
  key.  Defaults to 0 if unspecified.\";s:4:\"type\";s:6:\"number\";}s:6:\"invite\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"The
  level required to invite a user. Defaults to 50 if unspecified.\";s:4:\"type\";s:6:\"number\";}s:4:\"kick\";O:8:\"stdClass\":2:{s:11:\"description\";s:65:\"The
  level required to kick a user. Defaults to 50 if unspecified.\";s:4:\"type\";s:6:\"number\";}s:6:\"redact\";O:8:\"stdClass\":2:{s:11:\"description\";s:69:\"The
  level required to redact an event. Defaults to 50 if unspecified.\";s:4:\"type\";s:6:\"number\";}s:13:\"state_default\";O:8:\"stdClass\":2:{s:11:\"description\";s:179:\"The
  default level required to send state events. Can be overridden\nby the ``events``
  key. Defaults to 50 if unspecified, but 0 if\nthere is no ``m.room.power_levels``
  event at all.\";s:4:\"type\";s:6:\"number\";}s:5:\"users\";O:8:\"stdClass\":4:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:11:\"description\";s:101:\"The
  power levels for specific users. This is a mapping from ``user_id`` to power level
  for that user.\";s:5:\"title\";s:17:\"User power levels\";s:4:\"type\";s:6:\"object\";}s:13:\"users_default\";O:8:\"stdClass\":2:{s:11:\"description\";s:141:\"The
  default power level for every user in the room, unless their\n``user_id`` is mentioned
  in the ``users`` key. Defaults to 0 if\nunspecified.\";s:4:\"type\";s:6:\"number\";}}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:51:\"matrix-doc/event-schemas/schema/m.room.power_levels\";}s:14:\"MRoomRedaction\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:531:\"Events
  can be redacted by either room or server admins. Redacting an event means that all
  keys not required by the protocol are stripped off, allowing admins to remove offensive
  or illegal content that may have been attached to any event. This cannot be undone,
  allowing server owners to physically delete the offending data.  There is also a
  concept of a moderator hiding a message event, which can be undone, but cannot be
  applied to state events. The event that has been redacted is specified in the ``redacts``
  event level key.\";s:7:\"x-title\";s:9:\"Redaction\";s:21:\"x-discriminator-value\";s:16:\"m.room.redaction\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/RoomEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"reason\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"The
  reason for the redaction, if any.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:7:\"redacts\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"The
  event ID that was redacted.\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"required\";a:1:{i:0;s:7:\"redacts\";}s:8:\"x-origin\";s:48:\"matrix-doc/event-schemas/schema/m.room.redaction\";}s:21:\"MRoomThirdPartyInvite\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:272:\"Acts
  as an ``m.room.member`` invite event, where there isn't a target user_id to invite.
  This event contains a token and a public key whose private key must be used to sign
  the token. Any user who can present that signature may use this invitation to join
  the target room.\";s:7:\"x-title\";s:89:\"An invitation to a room issued to a third
  party identifier, rather than a matrix user ID.\";s:21:\"x-discriminator-value\";s:25:\"m.room.third_party_invite\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"display_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:238:\"A
  user-readable string which represents the user who has been invited. This should
  not contain the user's third party ID, as otherwise when the invite is accepted
  it would leak the association between the matrix ID and the third party ID.\";s:4:\"type\";s:6:\"string\";}s:16:\"key_validity_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:192:\"A
  URL which can be fetched, with querystring public_key=public_key, to validate whether
  the key has been revoked. The URL must return a JSON object containing a boolean
  property named 'valid'.\";s:4:\"type\";s:6:\"string\";}s:10:\"public_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:172:\"A
  base64-encoded ed25519 key with which token must be signed (though a signature from
  any entry in public_keys is also sufficient). This exists for backwards compatibility.\";s:4:\"type\";s:6:\"string\";}s:11:\"public_keys\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Keys
  with which the token may be signed.\";s:5:\"items\";O:8:\"stdClass\":4:{s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"key_validity_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:272:\"An
  optional URL which can be fetched, with querystring public_key=public_key, to validate
  whether the key has been revoked. The URL must return a JSON object containing a
  boolean property named 'valid'. If this URL is absent, the key must be considered
  valid indefinitely.\";s:4:\"type\";s:6:\"string\";}s:10:\"public_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:61:\"A
  base-64 encoded ed25519 key with which token may be signed.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:10:\"public_key\";}s:5:\"title\";s:10:\"PublicKeys\";s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}}s:8:\"required\";a:3:{i:0;s:12:\"display_name\";i:1;s:16:\"key_validity_url\";i:2;s:10:\"public_key\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":2:{s:11:\"description\";s:75:\"The
  token, of which a signature must be produced in order to join the room.\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:57:\"matrix-doc/event-schemas/schema/m.room.third_party_invite\";}s:10:\"MRoomTopic\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:301:\"A
  topic is a short message detailing what is currently being discussed in the room.
  \ It can also be used as a way to display extra information about the room, which
  may not be suitable for the room name. The room topic can also be set when creating
  a room using ``/createRoom`` with the ``topic`` key.\";s:7:\"x-title\";s:5:\"Topic\";s:21:\"x-discriminator-value\";s:12:\"m.room.topic\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/StateEvent\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"topic\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"The
  topic text.\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:5:\"topic\";}s:4:\"type\";s:6:\"object\";}s:9:\"state_key\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"A
  zero-length string.\";s:7:\"pattern\";s:2:\"^$\";s:4:\"type\";s:6:\"string\";}}}}s:8:\"x-origin\";s:44:\"matrix-doc/event-schemas/schema/m.room.topic\";}s:4:\"MTag\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:37:\"Informs
  the client of tags on a room.\";s:7:\"x-title\";s:9:\"Tag Event\";s:21:\"x-discriminator-value\";s:5:\"m.tag\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"tags\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:40:\"The
  tags on the room and their contents.\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:5:\"title\";s:3:\"Tag\";s:4:\"type\";s:6:\"object\";}}}}}}}s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:7:\"content\";}s:8:\"x-origin\";s:37:\"matrix-doc/event-schemas/schema/m.tag\";}s:7:\"MTyping\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:57:\"Informs
  the client of the list of users currently typing.\";s:7:\"x-title\";s:12:\"Typing
  Event\";s:21:\"x-discriminator-value\";s:8:\"m.typing\";s:5:\"allOf\";a:2:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Event\";}i:1;O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"user_ids\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:49:\"The
  list of user IDs typing in this room, if any.\";}}s:8:\"required\";a:1:{i:0;s:8:\"user_ids\";}}s:7:\"room_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"required\";a:3:{i:0;s:4:\"type\";i:1;s:7:\"room_id\";i:2;s:7:\"content\";}s:8:\"x-origin\";s:40:\"matrix-doc/event-schemas/schema/m.typing\";}s:13:\"MReceiptEvent\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:9:\"x-pattern\";s:9:\"$EVENT_ID\";s:11:\"description\";s:166:\"The
  mapping of event ID to a collection of receipts for this event ID. The event ID
  is the ID of the event being acknowledged and *not* an ID for the receipt itself.\n\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"m.read\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:5:\"Users\";s:11:\"description\";s:71:\"A
  collection of users who have sent ``m.read`` receipts for this event.\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/MReceiptUser\";}}}s:8:\"x-origin\";s:47:\"matrix-doc/event-schemas/schema/m.receipt.event\";}s:9:\"ImageInfo\";O:8:\"stdClass\":6:{s:11:\"description\";s:24:\"Metadata
  about an image.\";s:8:\"x-schema\";s:39:\"http://json-schema.org/draft-04/schema#\";s:10:\"properties\";O:8:\"stdClass\":6:{s:1:\"h\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"The
  height of the image in pixels.\";s:4:\"type\";s:7:\"integer\";}s:1:\"w\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  width of the image in pixels.\";s:4:\"type\";s:7:\"integer\";}s:8:\"mimetype\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"The
  mimetype of the image, e.g. ``image/jpeg``.\";s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Size
  of the image in bytes.\";s:4:\"type\";s:7:\"integer\";}s:13:\"thumbnail_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"The
  URL to a thumbnail of the image.\";s:4:\"type\";s:6:\"string\";}s:14:\"thumbnail_info\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/ThumbnailInfo\";s:11:\"description\";s:58:\"Metadata
  about the image referred to in ``thumbnail_url``.\";}}s:7:\"x-title\";s:9:\"ImageInfo\";s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:79:\"matrix-doc/event-schemas/schema/core-event-schema/msgtype_infos/image_info.yaml\";}s:19:\"MRoomMessageContent\";O:8:\"stdClass\":7:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:58:\"This
  message is base for different types of m.room.message\";s:7:\"x-title\";s:18:\"RoomMessageContent\";s:13:\"discriminator\";s:7:\"msgtype\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:84:\"A
  description of content, it should always contain text representation of rich media\";s:4:\"type\";s:6:\"string\";}s:7:\"msgtype\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:4:\"body\";i:1;s:7:\"msgtype\";}s:8:\"x-origin\";s:77:\"matrix-doc/event-schemas/schema/core-event-schema/m_room_message_content.yaml\";}s:13:\"ThumbnailInfo\";O:8:\"stdClass\":6:{s:11:\"description\";s:33:\"Metadata
  about a thumbnail image.\";s:8:\"x-schema\";s:39:\"http://json-schema.org/draft-04/schema#\";s:10:\"properties\";O:8:\"stdClass\":4:{s:1:\"h\";O:8:\"stdClass\":2:{s:11:\"description\";s:34:\"The
  height of the image in pixels.\";s:4:\"type\";s:7:\"integer\";}s:1:\"w\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"The
  width of the image in pixels.\";s:4:\"type\";s:7:\"integer\";}s:8:\"mimetype\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"The
  mimetype of the image, e.g. ``image/jpeg``.\";s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Size
  of the image in bytes.\";s:4:\"type\";s:7:\"integer\";}}s:7:\"x-title\";s:13:\"ThumbnailInfo\";s:4:\"type\";s:6:\"object\";s:8:\"x-origin\";s:83:\"matrix-doc/event-schemas/schema/core-event-schema/msgtype_infos/thumbnail_info.yaml\";}s:12:\"MReceiptUser\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:83:\"The
  mapping of user ID to receipt. The user ID is the entity who sent this receipt.\";s:9:\"x-pattern\";s:8:\"$USER_ID\";s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"ts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:38:\"The
  timestamp the receipt was sent at.\";}}s:8:\"x-origin\";s:46:\"matrix-doc/event-schemas/schema/m.receipt.user\";}}"
...
