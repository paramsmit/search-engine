---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:11:\"description\";s:70:\"API for Wupportal:
  An informative portal for new citizens in Wuppertal\";s:7:\"version\";s:3:\"1.0\";s:5:\"title\";s:13:\"Wupportal
  API\";s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:14:\"Wupportal Team\";s:5:\"email\";s:19:\"info@codeschluss.de\";}}"
host: localhost
basePath: /
paths:
  /activities:
    get:
      tags:
      - activity-controller
      summary: readAll
      operationId: activityControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: categories
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: suburbs
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: targetgroups
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      - name: current
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - activity-controller
      summary: create
      operationId: activityControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newActivity
        description: newActivity
        required: true
        schema:
          $ref: '#/definitions/ActivityEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activities/{activityId}:
    get:
      tags:
      - activity-controller
      summary: readOne
      operationId: activityControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abActivityEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - activity-controller
      summary: update
      operationId: activityControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newActivity
        description: newActivity
        required: true
        schema:
          $ref: '#/definitions/ActivityEntity'
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - activity-controller
      summary: delete
      operationId: activityControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /activities/{activityId}/address:
    get:
      tags:
      - activity-controller
      summary: readAddress
      operationId: activityControllerReadAddress
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - activity-controller
      summary: updateAddress
      operationId: activityControllerUpdateAddress
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - in: body
        name: addressId
        description: addressId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activities/{activityId}/blogs:
    get:
      tags:
      - activity-controller
      summary: readBlogs
      operationId: activityControllerReadBlogs
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activities/{activityId}/category:
    get:
      tags:
      - activity-controller
      summary: readCategory
      operationId: activityControllerReadCategory
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - activity-controller
      summary: updateCategory
      operationId: activityControllerUpdateCategory
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - in: body
        name: categoryId
        description: categoryId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activities/{activityId}/like:
    put:
      tags:
      - activity-controller
      summary: increaseLike
      operationId: activityControllerIncreaseLike
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activities/{activityId}/organisation:
    get:
      tags:
      - activity-controller
      summary: readOrganisation
      operationId: activityControllerReadOrganisation
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - activity-controller
      summary: updateOrganisation
      operationId: activityControllerUpdateOrganisation
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - in: body
        name: organisationId
        description: organisationId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activities/{activityId}/schedules:
    get:
      tags:
      - activity-controller
      summary: readSchedules
      operationId: activityControllerReadSchedules
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - activity-controller
      summary: addSchedules
      operationId: activityControllerAddSchedules
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - in: body
        name: schedules
        description: schedules
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ScheduleEntity'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourcesu00abobjectu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - activity-controller
      summary: deleteSchedules
      operationId: activityControllerDeleteSchedules
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: scheduleIds
        in: query
        description: scheduleIds
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /activities/{activityId}/tags:
    get:
      tags:
      - activity-controller
      summary: readTags
      operationId: activityControllerReadTags
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - activity-controller
      summary: addTags
      operationId: activityControllerAddTags
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - in: body
        name: tags
        description: tags
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/TagEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - activity-controller
      summary: deleteTags
      operationId: activityControllerDeleteTags
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: tagIds
        in: query
        description: tagIds
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /activities/{activityId}/targetgroups:
    get:
      tags:
      - activity-controller
      summary: readTargetGroups
      operationId: activityControllerReadTargetGroups
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - activity-controller
      summary: addTargetGroups
      operationId: activityControllerAddTargetGroups
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - in: body
        name: targetGroupIds
        description: targetGroupIds
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - activity-controller
      summary: deleteTargetGroups
      operationId: activityControllerDeleteTargetGroups
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      - name: targetGroupIds
        in: query
        description: targetGroupIds
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /activities/{activityId}/translations:
    get:
      tags:
      - activity-controller
      summary: readTranslations
      operationId: activityControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /addresses:
    get:
      tags:
      - address-controller
      summary: readAll
      operationId: addressControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - address-controller
      summary: create
      operationId: addressControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newAddress
        description: newAddress
        required: true
        schema:
          $ref: '#/definitions/AddressEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /addresses/{addressId}:
    get:
      tags:
      - address-controller
      summary: readOne
      operationId: addressControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: addressId
        in: path
        description: addressId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abAddressEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - address-controller
      summary: update
      operationId: addressControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newAddress
        description: newAddress
        required: true
        schema:
          $ref: '#/definitions/AddressEntity'
      - name: addressId
        in: path
        description: addressId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - address-controller
      summary: delete
      operationId: addressControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: addressId
        in: path
        description: addressId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /addresses/{addressId}/suburb:
    get:
      tags:
      - address-controller
      summary: readSuburb
      operationId: addressControllerReadSuburb
      produces:
      - '*/*'
      parameters:
      - name: addressId
        in: path
        description: addressId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abobjectu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - address-controller
      summary: updateSuburb
      operationId: addressControllerUpdateSuburb
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: addressId
        in: path
        description: addressId
        required: true
        type: string
      - in: body
        name: suburbId
        description: suburbId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abobjectu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /blogs:
    get:
      tags:
      - blog-controller
      summary: readAll
      operationId: blogControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - blog-controller
      summary: create
      operationId: blogControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newBlog
        description: newBlog
        required: true
        schema:
          $ref: '#/definitions/BlogEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /blogs/{activityId}/activity:
    put:
      tags:
      - blog-controller
      summary: updateActivity
      operationId: blogControllerUpdateActivity
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      - in: body
        name: activityId
        description: activityId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /blogs/{blogId}:
    get:
      tags:
      - blog-controller
      summary: readOne
      operationId: blogControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abBlogEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - blog-controller
      summary: update
      operationId: blogControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newBlog
        description: newBlog
        required: true
        schema:
          $ref: '#/definitions/BlogEntity'
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - blog-controller
      summary: delete
      operationId: blogControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /blogs/{blogId}/activity:
    get:
      tags:
      - blog-controller
      summary: readActivity
      operationId: blogControllerReadActivity
      produces:
      - '*/*'
      parameters:
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /blogs/{blogId}/like:
    put:
      tags:
      - blog-controller
      summary: increaseLike
      operationId: blogControllerIncreaseLike
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /blogs/{blogId}/translations:
    get:
      tags:
      - blog-controller
      summary: readTranslations
      operationId: blogControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /categories:
    get:
      tags:
      - category-controller
      summary: readAll
      operationId: categoryControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - category-controller
      summary: create
      operationId: categoryControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newCategory
        description: newCategory
        required: true
        schema:
          $ref: '#/definitions/CategoryEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /categories/{categoryId}:
    get:
      tags:
      - category-controller
      summary: readOne
      operationId: categoryControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: categoryId
        in: path
        description: categoryId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abCategoryEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - category-controller
      summary: update
      operationId: categoryControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newCategory
        description: newCategory
        required: true
        schema:
          $ref: '#/definitions/CategoryEntity'
      - name: categoryId
        in: path
        description: categoryId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - category-controller
      summary: delete
      operationId: categoryControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: categoryId
        in: path
        description: categoryId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /categories/{categoryId}/translations:
    get:
      tags:
      - category-controller
      summary: readTranslations
      operationId: categoryControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: categoryId
        in: path
        description: categoryId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /configurations:
    get:
      tags:
      - configuration-controller
      summary: readAll
      operationId: configurationControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - configuration-controller
      summary: create
      operationId: configurationControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newConfiguration
        description: newConfiguration
        required: true
        schema:
          $ref: '#/definitions/ConfigurationEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /configurations/{configurationId}:
    get:
      tags:
      - configuration-controller
      summary: readOne
      operationId: configurationControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: configurationId
        in: path
        description: configurationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abConfigurationEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - configuration-controller
      summary: update
      operationId: configurationControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newConfiguration
        description: newConfiguration
        required: true
        schema:
          $ref: '#/definitions/ConfigurationEntity'
      - name: configurationId
        in: path
        description: configurationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - configuration-controller
      summary: delete
      operationId: configurationControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: configurationId
        in: path
        description: configurationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /languages:
    get:
      tags:
      - language-controller
      summary: readAll
      operationId: languageControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - language-controller
      summary: create
      operationId: languageControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newLanguage
        description: newLanguage
        required: true
        schema:
          $ref: '#/definitions/LanguageEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /languages/{languageId}:
    get:
      tags:
      - language-controller
      summary: readOne
      operationId: languageControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: languageId
        in: path
        description: languageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abLanguageEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - language-controller
      summary: update
      operationId: languageControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newLanguage
        description: newLanguage
        required: true
        schema:
          $ref: '#/definitions/LanguageEntity'
      - name: languageId
        in: path
        description: languageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - language-controller
      summary: delete
      operationId: languageControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: languageId
        in: path
        description: languageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /news/push:
    post:
      tags:
      - news-controller
      summary: pushNews
      operationId: newsControllerPushNews
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: news
        description: news
        required: true
        schema:
          $ref: '#/definitions/News'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /news/subscribe:
    post:
      tags:
      - news-controller
      summary: subscribe
      operationId: newsControllerSubscribe
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newSubscription
        description: newSubscription
        required: true
        schema:
          $ref: '#/definitions/SubscriptionEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /news/unsubscribe/{subscriptionId}:
    delete:
      tags:
      - news-controller
      summary: unsubscribe
      operationId: newsControllerUnsubscribe
      produces:
      - '*/*'
      parameters:
      - name: subscriptionId
        in: path
        description: subscriptionId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /organisations:
    get:
      tags:
      - organisation-controller
      summary: readAll
      operationId: organisationControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      - name: approved
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - organisation-controller
      summary: create
      operationId: organisationControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newOrga
        description: newOrga
        required: true
        schema:
          $ref: '#/definitions/OrganisationEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}:
    get:
      tags:
      - organisation-controller
      summary: readOne
      operationId: organisationControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abOrganisationEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - organisation-controller
      summary: update
      operationId: organisationControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newOrga
        description: newOrga
        required: true
        schema:
          $ref: '#/definitions/OrganisationEntity'
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - organisation-controller
      summary: delete
      operationId: organisationControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /organisations/{organisationId}/activities:
    get:
      tags:
      - organisation-controller
      summary: readActivities
      operationId: organisationControllerReadActivities
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}/activities/{activityId}:
    delete:
      tags:
      - organisation-controller
      summary: deleteActivity
      operationId: organisationControllerDeleteActivity
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /organisations/{organisationId}/address:
    get:
      tags:
      - organisation-controller
      summary: readAddress
      operationId: organisationControllerReadAddress
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - organisation-controller
      summary: updateAddress
      operationId: organisationControllerUpdateAddress
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - in: body
        name: addressId
        description: addressId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}/approve:
    put:
      tags:
      - organisation-controller
      summary: grantApproval
      operationId: organisationControllerGrantApproval
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - in: body
        name: isApproved
        description: isApproved
        required: true
        schema:
          $ref: '#/definitions/BooleanPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}/images:
    get:
      tags:
      - organisation-controller
      summary: readImages
      operationId: organisationControllerReadImages
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - organisation-controller
      summary: addImage
      operationId: organisationControllerAddImage
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - in: body
        name: image
        description: image
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/OrganisationImageEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - organisation-controller
      summary: deleteImages
      operationId: organisationControllerDeleteImages
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - name: imageIds
        in: query
        description: imageIds
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /organisations/{organisationId}/translations:
    get:
      tags:
      - organisation-controller
      summary: readTranslations
      operationId: organisationControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}/users:
    get:
      tags:
      - organisation-controller
      summary: readUsers
      operationId: organisationControllerReadUsers
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}/users/{userId}:
    delete:
      tags:
      - organisation-controller
      summary: deleteUser
      operationId: organisationControllerDeleteUser
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /organisations/{organisationId}/users/{userId}/admin:
    put:
      tags:
      - organisation-controller
      summary: grantAdminRight
      operationId: organisationControllerGrantAdminRight
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - in: body
        name: isAdmin
        description: isAdmin
        required: true
        schema:
          $ref: '#/definitions/BooleanPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /organisations/{organisationId}/users/{userId}/approve:
    put:
      tags:
      - organisation-controller
      summary: approveOrRejectUser
      operationId: organisationControllerApproveOrRejectUser
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: organisationId
        in: path
        description: organisationId
        required: true
        type: string
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - in: body
        name: isApproved
        description: isApproved
        required: true
        schema:
          $ref: '#/definitions/BooleanPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /pages:
    get:
      tags:
      - page-controller
      summary: readAll
      operationId: pageControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - page-controller
      summary: create
      operationId: pageControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newPage
        description: newPage
        required: true
        schema:
          $ref: '#/definitions/PageEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /pages/{pageId}:
    get:
      tags:
      - page-controller
      summary: readOne
      operationId: pageControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: pageId
        in: path
        description: pageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abPageEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - page-controller
      summary: update
      operationId: pageControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newPage
        description: newPage
        required: true
        schema:
          $ref: '#/definitions/PageEntity'
      - name: pageId
        in: path
        description: pageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - page-controller
      summary: delete
      operationId: pageControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: pageId
        in: path
        description: pageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /pages/{pageId}/topic:
    get:
      tags:
      - page-controller
      summary: readTopic
      operationId: pageControllerReadTopic
      produces:
      - '*/*'
      parameters:
      - name: pageId
        in: path
        description: pageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - page-controller
      summary: updateTopic
      operationId: pageControllerUpdateTopic
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: pageId
        in: path
        description: pageId
        required: true
        type: string
      - in: body
        name: topicId
        description: topicId
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /pages/{pageId}/translations:
    get:
      tags:
      - page-controller
      summary: readTranslations
      operationId: pageControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: pageId
        in: path
        description: pageId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /refresh:
    get:
      tags:
      - security-controller
      summary: refreshToken
      operationId: securityControllerRefreshToken
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /suburbs:
    get:
      tags:
      - suburb-controller
      summary: readAll
      operationId: suburbControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - suburb-controller
      summary: create
      operationId: suburbControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newSuburb
        description: newSuburb
        required: true
        schema:
          $ref: '#/definitions/SuburbEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /suburbs/{surburbId}:
    get:
      tags:
      - suburb-controller
      summary: readOne
      operationId: suburbControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: surburbId
        in: path
        description: surburbId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abSuburbEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - suburb-controller
      summary: update
      operationId: suburbControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newSuburb
        description: newSuburb
        required: true
        schema:
          $ref: '#/definitions/SuburbEntity'
      - name: surburbId
        in: path
        description: surburbId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - suburb-controller
      summary: delete
      operationId: suburbControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: surburbId
        in: path
        description: surburbId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /tags:
    get:
      tags:
      - tag-controller
      summary: readAll
      operationId: tagControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - tag-controller
      summary: create
      operationId: tagControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newTag
        description: newTag
        required: true
        schema:
          $ref: '#/definitions/TagEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /tags/{tagId}:
    get:
      tags:
      - tag-controller
      summary: readOne
      operationId: tagControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abTagEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - tag-controller
      summary: update
      operationId: tagControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newTag
        description: newTag
        required: true
        schema:
          $ref: '#/definitions/TagEntity'
      - name: tagId
        in: path
        description: tagId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - tag-controller
      summary: delete
      operationId: tagControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /tags/{tagId}/translations:
    get:
      tags:
      - tag-controller
      summary: readTranslations
      operationId: tagControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /targetgroups:
    get:
      tags:
      - target-group-controller
      summary: readAll
      operationId: targetGroupControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - target-group-controller
      summary: create
      operationId: targetGroupControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newTargetGroup
        description: newTargetGroup
        required: true
        schema:
          $ref: '#/definitions/TargetGroupEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /targetgroups/{targetGroupId}:
    get:
      tags:
      - target-group-controller
      summary: readOne
      operationId: targetGroupControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: targetGroupId
        in: path
        description: targetGroupId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abTargetGroupEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - target-group-controller
      summary: update
      operationId: targetGroupControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newTargetGroup
        description: newTargetGroup
        required: true
        schema:
          $ref: '#/definitions/TargetGroupEntity'
      - name: targetGroupId
        in: path
        description: targetGroupId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - target-group-controller
      summary: delete
      operationId: targetGroupControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: targetGroupId
        in: path
        description: targetGroupId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /targetgroups/{targetGroupId}/translations:
    get:
      tags:
      - target-group-controller
      summary: readTranslations
      operationId: targetGroupControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: targetGroupId
        in: path
        description: targetGroupId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /topics:
    get:
      tags:
      - topic-controller
      summary: readAll
      operationId: topicControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - topic-controller
      summary: create
      operationId: topicControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newTopic
        description: newTopic
        required: true
        schema:
          $ref: '#/definitions/TopicEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /topics/{topicId}:
    get:
      tags:
      - topic-controller
      summary: readOne
      operationId: topicControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: topicId
        in: path
        description: topicId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abTopicEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - topic-controller
      summary: update
      operationId: topicControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newTopic
        description: newTopic
        required: true
        schema:
          $ref: '#/definitions/TopicEntity'
      - name: topicId
        in: path
        description: topicId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - topic-controller
      summary: delete
      operationId: topicControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: topicId
        in: path
        description: topicId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /topics/{topicId}/pages:
    get:
      tags:
      - topic-controller
      summary: readPages
      operationId: topicControllerReadPages
      produces:
      - '*/*'
      parameters:
      - name: topicId
        in: path
        description: topicId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /topics/{topicId}/translations:
    get:
      tags:
      - topic-controller
      summary: readTranslations
      operationId: topicControllerReadTranslations
      produces:
      - '*/*'
      parameters:
      - name: topicId
        in: path
        description: topicId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /translations/translate:
    post:
      tags:
      - translation-controller
      summary: translate
      operationId: translationControllerTranslate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: targets
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: source
        in: query
        required: false
        type: string
      - in: body
        name: labels
        description: labels
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TranslationResult'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users:
    get:
      tags:
      - user-controller
      summary: readAll
      operationId: userControllerReadAll
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - user-controller
      summary: create
      operationId: userControllerCreate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newUser
        description: newUser
        required: true
        schema:
          $ref: '#/definitions/UserEntity'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/blogapply:
    post:
      tags:
      - user-controller
      summary: applyAsBlogger
      operationId: userControllerApplyAsBlogger
      consumes:
      - application/json
      produces:
      - '*/*'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/bloggers:
    get:
      tags:
      - user-controller
      summary: readAllBloggers
      operationId: userControllerReadAllBloggers
      produces:
      - '*/*'
      parameters:
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        format: int32
      - name: size
        in: query
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/resetpassword:
    put:
      tags:
      - user-controller
      summary: resetPassword
      operationId: userControllerResetPassword
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: username
        description: username
        required: true
        schema:
          $ref: '#/definitions/StringPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userId}:
    get:
      tags:
      - user-controller
      summary: readOne
      operationId: userControllerReadOne
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resourceu00abUserEntityu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - user-controller
      summary: update
      operationId: userControllerUpdate
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newUser
        description: newUser
        required: true
        schema:
          $ref: '#/definitions/UserEntity'
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - user-controller
      summary: delete
      operationId: userControllerDelete
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /users/{userId}/activities:
    get:
      tags:
      - user-controller
      summary: readActivities
      operationId: userControllerReadActivities
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userId}/activities/{activityId}:
    delete:
      tags:
      - user-controller
      summary: deleteActivity
      operationId: userControllerDeleteActivity
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - name: activityId
        in: path
        description: activityId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /users/{userId}/blogger:
    get:
      tags:
      - user-controller
      summary: readBlogger
      operationId: userControllerReadBlogger
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - user-controller
      summary: deleteBlogger
      operationId: userControllerDeleteBlogger
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /users/{userId}/blogs:
    get:
      tags:
      - user-controller
      summary: readBlogs
      operationId: userControllerReadBlogs
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - name: sort
        in: query
        required: false
        type: string
      - name: dir
        in: query
        required: false
        type: string
      - name: embeddings
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userId}/blogs/{blogId}:
    delete:
      tags:
      - user-controller
      summary: deleteBlog
      operationId: userControllerDeleteBlog
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - name: blogId
        in: path
        description: blogId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /users/{userId}/grantblogger:
    put:
      tags:
      - user-controller
      summary: grantBloggerRight
      operationId: userControllerGrantBloggerRight
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - in: body
        name: isBlogger
        description: isBlogger
        required: true
        schema:
          $ref: '#/definitions/BooleanPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userId}/organisations:
    get:
      tags:
      - user-controller
      summary: readOrganisations
      operationId: userControllerReadOrganisations
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - user-controller
      summary: addOrganisation
      operationId: userControllerAddOrganisation
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - in: body
        name: organisationParam
        description: organisationParam
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userId}/organisations/{orgaId}:
    delete:
      tags:
      - user-controller
      summary: deleteOrganisation
      operationId: userControllerDeleteOrganisation
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - name: orgaId
        in: path
        description: orgaId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /users/{userId}/superuser:
    put:
      tags:
      - user-controller
      summary: grantSuperuserRight
      operationId: userControllerGrantSuperuserRight
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: string
      - in: body
        name: isSuperuser
        description: isSuperuser
        required: true
        schema:
          $ref: '#/definitions/BooleanPrimitive'
      responses:
        200:
          description: OK
          schema:
            type: object
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
definitions: !php/object "O:8:\"stdClass\":36:{s:14:\"ActivityEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":13:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:9:\"addressId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"categoryId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"contactName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"organisationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:14:\"ActivityEntity\";}s:13:\"AddressEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"houseNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"latitude\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:9:\"longitude\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"postalCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"street\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"suburbId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:13:\"AddressEntity\";}s:10:\"BlogEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:10:\"BlogEntity\";}s:16:\"BooleanPrimitive\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:5:\"title\";s:16:\"BooleanPrimitive\";}s:14:\"CategoryEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:5:\"color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:14:\"CategoryEntity\";}s:19:\"ConfigurationEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"item\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:19:\"ConfigurationEntity\";}s:14:\"LanguageEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"machineTranslated\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:14:\"LanguageEntity\";}s:4:\"Link\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:11:\"deprecation\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:11:\"deprecation\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}s:4:\"href\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"href\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}s:8:\"hreflang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:8:\"hreflang\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}s:5:\"media\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:5:\"media\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}s:3:\"rel\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:3:\"rel\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}s:9:\"templated\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:5:\"title\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"type\";s:9:\"attribute\";b:1;s:7:\"wrapped\";b:0;}}}s:5:\"title\";s:4:\"Link\";s:3:\"xml\";O:8:\"stdClass\":4:{s:4:\"name\";s:4:\"link\";s:9:\"namespace\";s:27:\"http://www.w3.org/2005/Atom\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}}s:4:\"News\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:4:\"News\";}s:18:\"OrganisationEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:9:\"addressId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"approved\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"videoUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:18:\"OrganisationEntity\";}s:23:\"OrganisationImageEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"caption\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"imageData\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"mimeType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}s:5:\"title\";s:23:\"OrganisationImageEntity\";}s:10:\"PageEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"topicId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:10:\"PageEntity\";}s:19:\"Resources\xABobject\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"_embedded\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:8:\"embedded\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}}s:5:\"title\";s:19:\"Resources\xABobject\xBB\";}s:26:\"Resource\xABActivityEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:9:\"addressId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"categoryId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"contactName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"organisationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:26:\"Resource\xABActivityEntity\xBB\";}s:25:\"Resource\xABAddressEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"houseNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"latitude\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:9:\"longitude\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"place\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"postalCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"street\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"suburbId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:25:\"Resource\xABAddressEntity\xBB\";}s:22:\"Resource\xABBlogEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:22:\"Resource\xABBlogEntity\xBB\";}s:26:\"Resource\xABCategoryEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:5:\"color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:26:\"Resource\xABCategoryEntity\xBB\";}s:31:\"Resource\xABConfigurationEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"item\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:31:\"Resource\xABConfigurationEntity\xBB\";}s:26:\"Resource\xABLanguageEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"locale\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"machineTranslated\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:26:\"Resource\xABLanguageEntity\xBB\";}s:30:\"Resource\xABOrganisationEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":13:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:9:\"addressId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"approved\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"mail\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"videoUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:30:\"Resource\xABOrganisationEntity\xBB\";}s:22:\"Resource\xABPageEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"topicId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:22:\"Resource\xABPageEntity\xBB\";}s:24:\"Resource\xABSuburbEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:24:\"Resource\xABSuburbEntity\xBB\";}s:21:\"Resource\xABTagEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:21:\"Resource\xABTagEntity\xBB\";}s:29:\"Resource\xABTargetGroupEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:29:\"Resource\xABTargetGroupEntity\xBB\";}s:23:\"Resource\xABTopicEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:23:\"Resource\xABTopicEntity\xBB\";}s:22:\"Resource\xABUserEntity\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}s:12:\"applyBlogger\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:25:\"organisationRegistrations\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"superuser\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:22:\"Resource\xABUserEntity\xBB\";}s:18:\"Resource\xABobject\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"_links\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"link\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}}s:5:\"title\";s:18:\"Resource\xABobject\xBB\";}s:14:\"ScheduleEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}s:5:\"title\";s:14:\"ScheduleEntity\";}s:15:\"StringPrimitive\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:15:\"StringPrimitive\";}s:18:\"SubscriptionEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"authSecret\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"endpoint\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"publicKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:18:\"SubscriptionEntity\";}s:12:\"SuburbEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:12:\"SuburbEntity\";}s:9:\"TagEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:9:\"TagEntity\";}s:17:\"TargetGroupEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:17:\"TargetGroupEntity\";}s:11:\"TopicEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:11:\"TopicEntity\";}s:17:\"TranslationResult\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"lang\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"translations\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"title\";s:17:\"TranslationResult\";}s:10:\"UserEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:9:\"_embedded\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:12:\"applyBlogger\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:25:\"organisationRegistrations\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"superuser\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:10:\"UserEntity\";}}"
...
