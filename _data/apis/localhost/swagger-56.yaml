---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:19:\"rAsPI documentation\";s:7:\"version\";s:5:\"1.0.0\";s:11:\"description\";s:119:\"rAsPI
  is meant to be a general purpose API that can be easily modified and added to for
  use with raspberry pi projects.\";}"
host: localhost:3000
basePath: /api
paths:
  /example:
    get:
      description: This is an example of how to execute a shell command that requires
        user input. The rAsPI project contains a directory called shell_scripts with
        a bash scripted called type_something.sh. When executed, it asks the user
        to type something and waits for input. Once the user types something and preses
        enter, it prints back what was typed. This endpoing shows how such a script
        can be executed via the api.
      responses:
        200:
          description: A JSON object with property a property called result which
            contains an array of returned lines.
          schema:
            type: object
            properties:
              result:
                type: array
        400:
          description: An error string
          schema:
            type: object
            properties:
              error:
                type: string
  /system:
    get:
      description: This endpoint executes an awk script in the shell_scripts directory
        which parses a file to return the rAsPI version number.
      responses:
        200:
          description: JSON object containing rAsPI version
          schema:
            type: object
            properties:
              rAsPI_version:
                type: string
        400:
          description: An error string
          schema:
            type: object
            properties:
              error:
                type: string
    post:
      description: This endpoint allows you to post an allowed command (either sysShutdown
        or reboot) to be executed by the pi.
      parameters:
      - name: command
        in: body
        schema:
          type: object
          properties:
            type: string
            description: Command to execute on the system.
            required: true
      responses:
        200:
          description: A string indicating the system status.
          schema:
            type: string
        400:
          description: An error string
          schema:
            type: object
            properties:
              error:
                type: string
schemes:
- http
...
