---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:10:\"Simple
  API\";s:11:\"description\";s:56:\"A simple API to learn how to write OpenAPI Specification\";}"
host: localhost:8080
paths:
  /movies/createToken:
    get:
      tags:
      - Create Token
      summary: createToken
      description: Returns a token
      responses:
        200:
          description: Returns a token
  /movies/top:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets top movies
      description: Returns a list containing all persons.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: category
        in: path
        description: Name of category we want to get
        required: true
        type: string
      responses:
        200:
          description: A list of top movies
  /movies/detail:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets detail movies
      description: Returns a detail movies
      parameters:
      - name: id
        in: path
        description: Id of movies which you want to see
        required: true
        type: integer
      responses:
        200:
          description: Information of movies
  /movies/category:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets category
      description: Returns a list containing all category.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: category
        in: path
        description: name of category we want to get
        required: true
        type: string
      responses:
        200:
          description: A list of category
  /movies/people:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets people
      description: Returns a list containing all people.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: id
        in: path
        description: id of person we want to get
        required: true
        type: integer
      responses:
        200:
          description: A list of people
  /movies/genres:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets genres
      description: Returns a list containing all genres.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: id
        in: path
        description: id of genres we want to get
        required: true
        type: integer
      responses:
        200:
          description: A list of genres
  /movies/search:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets results
      description: Returns a list containing all results.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: query
        in: path
        description: Query we want to get
        required: true
        type: string
      responses:
        200:
          description: A list of query
  /movies/genres/total?:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets all genres
      description: Returns a list containing all genres.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      responses:
        200:
          description: A list of genres
  /movies/related:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets related movies
      description: Returns a list containing all related movies.
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: Genres
        in: path
        description: genres we want to get
        required: true
        type: array
      - name: Peoples
        in: path
        description: people we want to get
        required: true
        type: array
      - name: idMovie
        in: path
        description: id movie we want to get
        required: true
        type: integer
      responses:
        200:
          description: A list of related movies
  /movies/history:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets history
      description: Returns history
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: key
        in: path
        description: key we want to get
        required: true
        type: integer
      responses:
        200:
          description: A list of history
  /movies/like:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets liked movies
      description: Returns movies we like
      parameters:
      - name: page
        in: path
        description: Page number we want to get
        type: integer
      - name: size
        in: path
        description: Size we want to get
        type: integer
      - name: key
        in: path
        description: key we want to get
        required: true
        type: integer
      responses:
        200:
          description: A list of movies we like
  /movies/start-stream?:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: Gets history
      description: Returns history
      parameters:
      - name: host
        in: path
        description: The host we want to get
        type: string
      responses:
        200:
          description: A list of history
  /movies/insertHistoryOrLike?:
    post:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: insert history or like
      description: post history or like
      parameters:
      - name: idMovie
        in: path
        description: id movie we want to post
        required: true
        type: integer
      - name: Key
        in: path
        description: key we want to post
        required: true
        type: integer
      - name: idUser
        in: path
        description: id user we want to post
        required: true
        type: integer
      responses:
        200:
          description: A list of history or like
  /movies/removeMovie?:
    put:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: update unlike or removeMovie
      description: update unlike or removeMovie
      parameters:
      - name: idMovie
        in: path
        description: id movie we want to unlike
        required: true
        type: integer
      - name: idUser
        in: path
        description: id user we want to unlike
        required: true
        type: integer
      - name: Key
        in: path
        description: Key = 1 History, Key = 2 Like
        required: true
        type: integer
      responses:
        200:
          description: unlike
  /movies/comment?:
    get:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: get  comment
      description: Get Comment of a movie
      parameters:
      - name: id
        in: path
        description: id movie we want to get
        required: true
        type: integer
      - name: page
        in: path
        description: page of the list
        required: true
        type: integer
      - name: size
        in: path
        description: size of the list
        required: true
        type: integer
      responses:
        200:
          description: get comment
  /movies/insertComment?:
    post:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: insertComment
      description: Insert a Comment of user
      parameters:
      - name: idMovie
        in: path
        description: id movie we want to comment
        required: true
        type: integer
      - name: idUser
        in: path
        description: id user
        required: true
        type: integer
      - name: comment
        in: path
        description: Comment of user
        required: true
        type: integer
      - name: rate
        in: path
        description: Rating of user
        required: true
        type: integer
      responses:
        200:
          description: insertComment
  /movies/removeComment?:
    put:
      tags:
      - Movies
      security:
      - Bearer: []
      summary: removeComment
      description: Remove a Comment of user
      parameters:
      - name: idMovie
        in: path
        description: id movie we want to remove
        required: true
        type: integer
      - name: idUser
        in: path
        description: id user
        required: true
        type: integer
      responses:
        200:
          description: removeComment
  /user/register?:
    post:
      tags:
      - User
      security:
      - Bearer: []
      summary: register
      parameters:
      - name: name
        in: path
        description: name user
        required: true
        type: string
      - name: email
        in: path
        description: email of user
        required: true
        type: string
      - name: password
        in: path
        description: name user
        required: true
        type: string
      responses:
        200:
          description: register sucessfully
  /user/login?:
    post:
      tags:
      - User
      security:
      - Bearer: []
      summary: register
      parameters:
      - name: email
        in: path
        description: email of user
        required: true
        type: string
      - name: password
        in: path
        description: name user
        required: true
        type: string
      responses:
        200:
          description: login sucessfully
  /user/updateInfo?:
    put:
      tags:
      - User
      security:
      - Bearer: []
      summary: register
      parameters:
      - name: name
        in: path
        description: name user
        type: string
      - name: url
        in: path
        description: link image
        type: string
      - name: phone
        in: path
        description: phone number
        type: integer
      - name: sex
        in: path
        description: gender
        type: string
      - name: email
        in: path
        description: email
        type: string
      - name: password
        in: path
        description: name user
        type: string
      - name: type
        in: path
        description: type of user
        required: true
        type: integer
      - name: id
        in: path
        description: id user
        required: true
        type: integer
      responses:
        200:
          description: update sucessfully
schemes:
- http
...
