---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"This is a test
  task\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:6:\"School\";}"
host: localhost:83
basePath: /api
paths:
  /student:
    post:
      tags:
      - student
      summary: Add a new student
      description: ""
      operationId: addStudent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Student params
        required: true
        schema:
          $ref: '#/definitions/Student'
      responses:
        201:
          description: Created success
          schema:
            type: integer
            format: int64
        400:
          description: Bad request
    get:
      tags:
      - student
      summary: Get list existing students
      description: ""
      operationId: getStudents
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: group
        in: query
        description: Filter group
        required: false
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Student'
  /student/{id}:
    put:
      tags:
      - student
      summary: Update an existing student
      description: ""
      operationId: updateStudent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of student to update
        required: true
      - in: body
        name: body
        description: New student params
        required: false
        schema:
          $ref: '#/definitions/Student'
      responses:
        200:
          description: Updated success
        404:
          description: Student not found
    get:
      tags:
      - student
      summary: Get an existing student
      description: ""
      operationId: getStudent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of student to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Student'
        404:
          description: Student not found
    delete:
      tags:
      - student
      summary: Remove an existing student
      description: ""
      operationId: removeStudent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of student to remove
        required: true
        type: integer
        format: int64
      responses:
        204:
          description: Removed success
        404:
          description: Student not found
  /classes:
    post:
      tags:
      - classes
      summary: Add a new class
      description: ""
      operationId: addClass
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Class params
        required: true
        schema:
          $ref: '#/definitions/Classes'
      responses:
        201:
          description: Created success
          schema:
            $ref: '#/definitions/Classes'
        400:
          description: Bad request
    get:
      tags:
      - classes
      summary: Get list existing classes
      description: ""
      operationId: getClasses
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: group
        in: query
        description: Filter group
        required: false
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Classes'
  /classes/{id}:
    put:
      tags:
      - classes
      summary: Update an existing class
      description: ""
      operationId: updateClass
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of class to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: New class params
        required: false
        schema:
          $ref: '#/definitions/Classes'
      responses:
        200:
          description: Updated success
        404:
          description: Class not found
    get:
      tags:
      - classes
      summary: Get an existing class
      description: ""
      operationId: getClass
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of class to return
        required: true
      responses:
        200:
          description: Success
        404:
          description: Class not found
    delete:
      tags:
      - classes
      summary: Remove an existing class
      description: ""
      operationId: removeClass
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of class to remove
        required: true
        type: integer
        format: int64
      responses:
        204:
          description: Removed success
        404:
          description: Class not found
  /teacher:
    post:
      tags:
      - teacher
      summary: Add a new teacher
      description: ""
      operationId: addTeacher
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Teacher params
        required: true
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        201:
          description: Created success
          schema:
            type: integer
            format: int64
        400:
          description: Bad request
    get:
      tags:
      - teacher
      summary: Get list existing teachers
      description: ""
      operationId: getTeachers
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Teacher'
  /teacher/{id}:
    put:
      tags:
      - teacher
      summary: Update an existing teacher
      description: ""
      operationId: updateTeacher
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of teacher to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: New teacher params
        required: false
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        200:
          description: Updated success
        404:
          description: Teacher not found
    get:
      tags:
      - teacher
      summary: Get an existing teacher
      description: ""
      operationId: getTeacher
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of teacher to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Teacher'
        404:
          description: Teacher not found
    delete:
      tags:
      - teacher
      summary: Remove an existing teacher
      description: ""
      operationId: removeTeacher
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of teacher to remove
        required: true
        type: integer
        format: int64
      responses:
        204:
          description: Removed success
        404:
          description: Teacher not found
  /job:
    post:
      tags:
      - job
      summary: Add a new job
      description: ""
      operationId: addJob
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: name
        description: Job name
        required: true
      responses:
        201:
          description: Created success
          schema:
            type: integer
            format: int64
        400:
          description: Bad request
    get:
      tags:
      - job
      summary: Get list existing jobs
      description: ""
      operationId: getJobs
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
  /job/{id}:
    put:
      tags:
      - job
      summary: Update an existing job
      description: ""
      operationId: updateJob
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of job to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: New job params
        required: false
        schema:
          $ref: '#/definitions/Job'
      responses:
        200:
          description: Updated success
        404:
          description: Job not found
    get:
      tags:
      - job
      summary: Get an existing job
      description: ""
      operationId: getJob
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of job to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Job'
        404:
          description: Job not found
    delete:
      tags:
      - job
      summary: Remove an existing job
      description: ""
      operationId: removeJob
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of job to remove
        required: true
        type: integer
        format: int64
      responses:
        204:
          description: Removed success
        404:
          description: Job not found
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":4:{s:7:\"Student\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"first_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"last_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"group\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:7:\"Classes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"day\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"room\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"start_hour\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:7:\"Teacher\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"first_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"last_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"age\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:3:\"Job\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
