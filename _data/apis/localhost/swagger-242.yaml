---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"MusicCollector
  OpenAPI documentation\n\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:15:\"Music
  Collector\";}"
host: localhost:8010
basePath: /
paths:
  /user:
    post:
      summary: Login user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user_login'
      responses:
        200:
          description: Ok credentials
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad credentials
          schema:
            $ref: '#/definitions/error'
    put:
      summary: Register user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/register'
      responses:
        200:
          description: Ok data
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/error'
  /user/{id}:
    get:
      summary: Get user with specified ID
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of user
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: User webpage
        400:
          description: Invalid user
  /user/logout:
    get:
      summary: Logout current user
      produces:
      - text/html
      responses:
        200:
          description: User webpage
  /group:
    post:
      summary: Create group
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/group'
      responses:
        200:
          description: Ok data
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/error'
  /group/{id}:
    get:
      summary: Get group with specified ID
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of group
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Group webpage
        400:
          description: Invalid group
  /group/join/{id}:
    get:
      summary: Join in specified group
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of group
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Group webpage
        400:
          description: Invalid group
  /group/leave/{id}:
    get:
      summary: Join in specified group
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of group
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Group webpage
        400:
          description: Invalid group
  /album/{id}:
    get:
      summary: Get album specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of album
        required: true
        type: string
      responses:
        200:
          description: Album webpage
        400:
          description: Invalid invalid
  /artist/{id}:
    get:
      summary: Get artist specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of album
        required: true
        type: string
      responses:
        200:
          description: Artist webpage
        400:
          description: Invalid artist
  /ticket:
    post:
      summary: Create ticket
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ticket'
      responses:
        200:
          description: Ok data
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/error'
  /ticket/{id}:
    get:
      summary: Get ticket specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of ticket
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /ticket/all/{id}:
    get:
      summary: Get ticket of user specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of ticket
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /ticket/group/{id}:
    get:
      summary: Get ticket of group specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of ticket
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /cassette:
    post:
      summary: Create cassette
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cassette'
      responses:
        200:
          description: Ok data
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/error'
  /cassette/{id}:
    get:
      summary: Get cassette specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of cassette
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /cassette/all/{id}:
    get:
      summary: Get cassette of user specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of cassette
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /cassette/group/{id}:
    get:
      summary: Get cassette of group specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of cassette
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /cd:
    post:
      summary: Create cd
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cd'
      responses:
        200:
          description: Ok data
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/error'
  /cd/{id}:
    get:
      summary: Get cd specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of cd
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /cd/all/{id}:
    get:
      summary: Get cd of user specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of cd
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /cd/group/{id}:
    get:
      summary: Get cd of group specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of cd
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /vinyl:
    post:
      summary: Create vinyl
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/vinyl'
      responses:
        200:
          description: Ok data
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/error'
  /vinyl/{id}:
    get:
      summary: Get vinyl specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of vinyl
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /vinyl/all/{id}:
    get:
      summary: Get vinyl of user specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of vinyl
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /vinyl/group/{id}:
    get:
      summary: Get vinyls of group specified by id
      produces:
      - text/html
      parameters:
      - name: id
        in: path
        description: ID of vinyl
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
  /search:
    get:
      summary: Get vinyls of group specified by id
      produces:
      - text/html
      parameters:
      - name: type
        in: query
        description: Item type
        required: true
        type: string
        enum:
        - user
        - artist
        - album
        - cd
        - vinyl
        - cassette
        - ticket
      - name: query
        in: query
        description: Item name
        required: true
        type: string
      responses:
        200:
          description: Ok request
        400:
          description: Invalid request
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":9:{s:10:\"user_login\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"remember\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"cassette\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:6:\"artist\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"duration\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"channel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"genre_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}s:2:\"cd\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"artist\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"duration\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"genre_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"msg\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"msg\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"group\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"register\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"ticket\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"event_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"location\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"genre_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"start_date\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"artist\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"price\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}s:5:\"vinyl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:3:\"rpm\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"color\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"channel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:6:\"weight\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:7:\"special\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"condition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:8:\"genre_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:6:\"artist\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
