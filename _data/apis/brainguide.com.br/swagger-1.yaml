---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:31:\"First version of
  BrainGuide API\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:14:\"BrainGuide API\";s:14:\"termsOfService\";s:89:\"https://github.com/Uniceub-Web-Development-2016-2/Jose-Eduardo-Kimura/blob/master/LICENSE\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:29:\"joseduardo.kimura@outlook.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:21:\"The
  MIT License (MIT)\";s:3:\"url\";s:41:\"https://tldrlegal.com/license/mit-license\";}}"
host: brainguide.com.br
basePath: /demo
paths:
  /ws/lom/getById/{lomId}:
    get:
      tags:
      - lom
      summary: Get a Learning Object Metadata by ID
      description: Each Learning Object Metadata (LOM) has an ID inside system's DB
        and they can be accessed by this method.
      operationId: getLOM
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: lomId
        in: path
        description: lomId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            items:
              $ref: '#/definitions/LOM'
        400:
          description: Invalid ID supplied
        404:
          description: No LOM related to this term
  /ws/lom/getAll/:
    get:
      tags:
      - lom
      summary: Get all Learning Object Metadata available in the system
      description: Get all the records from LOM table in database
      operationId: getAllLOM
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/LOM'
        404:
          description: No objects found
  /ws/lom/getByTerm/{termId}:
    get:
      tags:
      - lom
      - term
      - keyword
      summary: Get a LOM by a term in its keywords
      description: Return an array of LOM that attends the searched term
      operationId: getByTermId
      produces:
      - application/json
      parameters:
      - name: termId
        in: path
        description: ID of a specific term used in LOM keywords
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/LOM'
        400:
          description: Invalid ID supplied
        404:
          description: No LOM related to this term
  /ws/lom/getBySubject/{subjectId}:
    get:
      tags:
      - lom
      - subject
      summary: Get a LOM by a subject related to it (Math, History, English...)
      description: Return an array of LOM that attends the searched subject
      operationId: getBySubjectId
      produces:
      - application/json
      parameters:
      - name: subjectId
        in: path
        description: ID of a specific term used in LOM keywords
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/LOM'
        400:
          description: Invalid ID supplied
        404:
          description: No LOM found
      security:
      - api_key: []
  /ws/lom/insert:
    post:
      tags:
      - lom
      summary: Updates a pet in the store with form data
      description: ""
      operationId: updatePetWithForm
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: lom
        in: query
        description: LOM Json file
        required: true
        type: string
        format: json
      responses:
        200:
          description: Successful operation
        405:
          description: Invalid input
      security:
      - brainguide_auth:
        - write:lom
        - read:lom
  /ws/lom/getStudentsByClass/{classId}:
    get:
      tags:
      - lom
      - subject
      summary: Get all the student in a class
      description: Return an array of students in a specific class
      operationId: getStudentsByClass
      produces:
      - application/json
      parameters:
      - name: classId
        in: path
        description: ID of a specific class
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/STUDENT'
        400:
          description: Invalid ID supplied
        404:
          description: No student found
      security:
      - api_key: []
  /ws/lom/getStudentReport/{studentId}:
    get:
      tags:
      - lom
      - subjects
      - report
      summary: GEt
      description: Returns a student report
      operationId: Returns a student report with grades, suggested LOs and academic
        information, passing his/her id
      produces:
      - application/json
      parameters:
      - name: studentId
        in: path
        description: ID of a specific student
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/REPORT'
        400:
          description: Invalid ID supplied
        404:
          description: No student found
      security:
      - api_key: []
  /ws/student/insert:
    post:
      tags:
      - student
      summary: Insert a new student in DB
      description: Insert a new student in DB passing a json file and using the security
        settings
      operationId: insertStudent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: lom
        in: query
        description: Student Json file
        required: true
        type: string
        format: json
      responses:
        200:
          description: Successful operation
        405:
          description: Invalid input
      security:
      - brainguide_auth:
        - write:lom
        - read:lom
  /ws/student/update/{studentId}:
    post:
      tags:
      - student
      summary: Update a student in DB
      description: Updates a student in db using its ID
      operationId: updateStudent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: studentId
        in: path
        description: Student unique identification
        required: true
        type: integer
        format: int64
      - name: lom
        in: query
        description: Student Json file
        required: true
        type: string
        format: json
      responses:
        200:
          description: Successful operation
        405:
          description: Invalid input
      security:
      - brainguide_auth:
        - write:student
        - read:student
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":3:{s:3:\"LOM\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:3:\"LOM\";}}s:6:\"REPORT\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:3:\"LOM\";}}s:7:\"STUDENT\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
