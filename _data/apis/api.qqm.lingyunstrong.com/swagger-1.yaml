---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:5:\"title\";s:12:\"Swagger Test\";s:11:\"description\";s:21:\"A
  sample API for test\";s:14:\"termsOfService\";s:24:\"http://swagger.io/terms/\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:16:\"Swagger
  API Team\";s:3:\"url\";s:17:\"http://swagger.io\";s:5:\"email\";s:18:\"apiteam@swagger.io\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:33:\"http://github.com/xxx/LICENSE-MIT\";}s:7:\"version\";s:5:\"1.0.0\";}"
host: api.qqm.lingyunstrong.com
basePath: /api/v1
paths:
  /login:
    post:
      tags:
      - Auth
      summary: Login and verify account to get access token
      description: Login
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Account Info
        required: false
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                properties:
                  token:
                    type: string
                  user:
                    type: string
                type: object
              message:
                type: string
            type: object
  /posts:
    get:
      tags:
      - Post
      summary: Get a listing of the Posts.
      description: Get all Posts
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Post'
              message:
                type: string
            type: object
    post:
      tags:
      - Post
      summary: Store a newly created Post in storage
      description: Store Post
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Post that should be stored
        required: false
        schema:
          $ref: '#/definitions/Post'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
  /posts/{id}:
    get:
      tags:
      - Post
      summary: Display the specified Post
      description: Get Post
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Post
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
    put:
      tags:
      - Post
      summary: Update the specified Post in storage
      description: Update Post
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Post
        required: true
        type: integer
      - name: body
        in: body
        description: Post that should be updated
        required: false
        schema:
          $ref: '#/definitions/Post'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
    delete:
      tags:
      - Post
      summary: Remove the specified Post from storage
      description: Delete Post
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Post
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":1:{s:4:\"Post\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:5:\"title\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"title\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}}"
...
