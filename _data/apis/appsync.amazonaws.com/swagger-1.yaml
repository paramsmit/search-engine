---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":15:{s:7:\"contact\";O:8:\"stdClass\":4:{s:5:\"email\";s:23:\"mike.ralphson@gmail.com\";s:4:\"name\";s:13:\"Mike
  Ralphson\";s:3:\"url\";s:38:\"https://github.com/mermade/aws2openapi\";s:9:\"x-twitter\";s:12:\"PermittedSoc\";}s:11:\"description\";s:116:\"AWS
  AppSync provides API actions for creating and interacting with data sources using
  GraphQL from your application.\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:18:\"Apache
  2.0 License\";s:3:\"url\";s:31:\"http://www.apache.org/licenses/\";}s:14:\"termsOfService\";s:37:\"https://aws.amazon.com/service-terms/\";s:5:\"title\";s:11:\"AWS
  AppSync\";s:7:\"version\";s:10:\"2017-07-25\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:79:\"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\";}s:21:\"x-apisguru-categories\";a:1:{i:0;s:5:\"cloud\";}s:6:\"x-logo\";O:8:\"stdClass\":2:{s:15:\"backgroundColor\";s:7:\"#FFFFFF\";s:3:\"url\";s:81:\"https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:11:\"contentType\";s:16:\"application/json\";s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:38:\"https://github.com/mermade/aws2openapi\";s:7:\"version\";s:5:\"1.0.0\";}s:3:\"url\";s:91:\"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appsync-2017-07-25.normal.json\";s:17:\"x-apisguru-direct\";b:1;}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:13:\"amazonaws.com\";s:9:\"x-release\";s:2:\"v4\";s:13:\"x-serviceName\";s:7:\"appsync\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:17:\"amazonaws_appsync\";s:4:\"type\";s:7:\"openapi\";}}"
host: appsync.amazonaws.com
basePath: /
paths:
  /v1/apis:
    get:
      description: Lists your GraphQL APIs.
      operationId: ListGraphqlApis
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ListGraphqlApisRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ListGraphqlApisResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        482:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a <code>GraphqlApi</code> object.
      operationId: CreateGraphqlApi
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateGraphqlApiRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CreateGraphqlApiResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        482:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        485:
          description: ApiLimitExceededException
          schema:
            $ref: '#/definitions/ApiLimitExceededException'
  /v1/apis/{apiId}:
    delete:
      description: Deletes a <code>GraphqlApi</code> object.
      operationId: DeleteGraphqlApi
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeleteGraphqlApiRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/DeleteGraphqlApiResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    get:
      description: Retrieves a <code>GraphqlApi</code> object.
      operationId: GetGraphqlApi
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GetGraphqlApiRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetGraphqlApiResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a <code>GraphqlApi</code> object.
      operationId: UpdateGraphqlApi
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateGraphqlApiRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateGraphqlApiResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/apikeys:
    get:
      description: <p>Lists the API keys for a given API.</p> <note> <p>API keys are
        deleted automatically sometime after they expire. However, they may still
        be included in the response until they have actually been deleted. You can
        safely call <code>DeleteApiKey</code> to manually delete a key before it's
        automatically deleted.</p> </note>
      operationId: ListApiKeys
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ListApiKeysRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ListApiKeysResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a unique key that you can distribute to clients who are
        executing your API.
      operationId: CreateApiKey
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateApiKeyRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CreateApiKeyResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        485:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        486:
          description: ApiKeyLimitExceededException
          schema:
            $ref: '#/definitions/ApiKeyLimitExceededException'
        487:
          description: ApiKeyValidityOutOfBoundsException
          schema:
            $ref: '#/definitions/ApiKeyValidityOutOfBoundsException'
  /v1/apis/{apiId}/apikeys/{id}:
    delete:
      description: Deletes an API key.
      operationId: DeleteApiKey
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeleteApiKeyRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/DeleteApiKeyResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an API key.
      operationId: UpdateApiKey
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateApiKeyRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateApiKeyResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        485:
          description: ApiKeyValidityOutOfBoundsException
          schema:
            $ref: '#/definitions/ApiKeyValidityOutOfBoundsException'
  /v1/apis/{apiId}/datasources:
    get:
      description: Lists the data sources for a given API.
      operationId: ListDataSources
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ListDataSourcesRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ListDataSourcesResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a <code>DataSource</code> object.
      operationId: CreateDataSource
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateDataSourceRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CreateDataSourceResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/datasources/{name}:
    delete:
      description: Deletes a <code>DataSource</code> object.
      operationId: DeleteDataSource
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeleteDataSourceRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/DeleteDataSourceResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    get:
      description: Retrieves a <code>DataSource</code> object.
      operationId: GetDataSource
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GetDataSourceRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetDataSourceResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a <code>DataSource</code> object.
      operationId: UpdateDataSource
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateDataSourceRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataSourceResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/schema:
    get:
      description: Retrieves the introspection schema for a GraphQL API.
      operationId: GetIntrospectionSchema
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GetIntrospectionSchemaRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetIntrospectionSchemaResponse'
        480:
          description: GraphQLSchemaException
          schema:
            $ref: '#/definitions/GraphQLSchemaException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/apis/{apiId}/schemacreation:
    get:
      description: Retrieves the current status of a schema creation operation.
      operationId: GetSchemaCreationStatus
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GetSchemaCreationStatusRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetSchemaCreationStatusResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds a new schema to your GraphQL API.</p> <p>This operation
        is asynchronous. Use to determine when it has completed.</p>
      operationId: StartSchemaCreation
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/StartSchemaCreationRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StartSchemaCreationResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/types:
    get:
      description: Lists the types for a given API.
      operationId: ListTypes
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ListTypesRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ListTypesResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a <code>Type</code> object.
      operationId: CreateType
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateTypeRequest'
      - in: path
        name: apiId
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CreateTypeResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/types/{typeName}:
    delete:
      description: Deletes a <code>Type</code> object.
      operationId: DeleteType
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeleteTypeRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/DeleteTypeResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    get:
      description: Retrieves a <code>Type</code> object.
      operationId: GetType
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GetTypeRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetTypeResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a <code>Type</code> object.
      operationId: UpdateType
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateTypeRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateTypeResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        482:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        483:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        484:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/types/{typeName}/resolvers:
    get:
      description: Lists the resolvers for a given API and type.
      operationId: ListResolvers
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ListResolversRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ListResolversResponse'
        480:
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a <code>Resolver</code> object.</p> <p>A resolver converts
        incoming requests into a format that a data source can understand and converts
        the data source's responses into GraphQL.</p>
      operationId: CreateResolver
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateResolverRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CreateResolverResponse'
        480:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
  /v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}:
    delete:
      description: Deletes a <code>Resolver</code> object.
      operationId: DeleteResolver
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DeleteResolverRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      - in: path
        name: fieldName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/DeleteResolverResponse'
        480:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
    get:
      description: Retrieves a <code>Resolver</code> object.
      operationId: GetResolver
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GetResolverRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      - in: path
        name: fieldName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetResolverResponse'
        480:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
    parameters:
    - $ref: '#/parameters/Action'
    - $ref: '#/parameters/Version'
    - $ref: '#/parameters/X-Amz-Content-Sha256'
    - $ref: '#/parameters/X-Amz-Date'
    - $ref: '#/parameters/X-Amz-Algorithm'
    - $ref: '#/parameters/X-Amz-Credential'
    - $ref: '#/parameters/X-Amz-Security-Token'
    - $ref: '#/parameters/X-Amz-Signature'
    - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a <code>Resolver</code> object.
      operationId: UpdateResolver
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateResolverRequest'
      - in: path
        name: apiId
        required: true
        type: string
      - in: path
        name: typeName
        required: true
        type: string
      - in: path
        name: fieldName
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UpdateResolverResponse'
        480:
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        481:
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        482:
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        483:
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
produces:
- application/json
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":97:{s:6:\"ApiKey\";O:8:\"stdClass\":3:{s:11:\"description\";s:1718:\"<p>Describes
  an API key.</p> <p>Customers invoke AWS AppSync GraphQL APIs with API keys as an
  identity mechanism. There are two key versions:</p> <p> <b>da1</b>: This version
  was introduced at launch in November 2017. These keys always expire after 7 days.
  Key expiration is managed by DynamoDB TTL. The keys will cease to be valid after
  Feb 21, 2018 and should not be used after that date.</p> <ul> <li> <p> <code>ListApiKeys</code>
  returns the expiration time in milliseconds.</p> </li> <li> <p> <code>CreateApiKey</code>
  returns the expiration time in milliseconds.</p> </li> <li> <p> <code>UpdateApiKey</code>
  is not available for this key version.</p> </li> <li> <p> <code>DeleteApiKey</code>
  deletes the item from the table.</p> </li> <li> <p>Expiration is stored in DynamoDB
  as milliseconds. This results in a bug where keys are not automatically deleted
  because DynamoDB expects the TTL to be stored in seconds. As a one-time action,
  we will delete these keys from the table after Feb 21, 2018.</p> </li> </ul> <p>
  <b>da2</b>: This version was introduced in February 2018 when AppSync added support
  to extend key expiration.</p> <ul> <li> <p> <code>ListApiKeys</code> returns the
  expiration time in seconds.</p> </li> <li> <p> <code>CreateApiKey</code> returns
  the expiration time in seconds and accepts a user-provided expiration time in seconds.</p>
  </li> <li> <p> <code>UpdateApiKey</code> returns the expiration time in seconds
  and accepts a user-provided expiration time in seconds. Key expiration can only
  be updated while the key has not expired.</p> </li> <li> <p> <code>DeleteApiKey</code>
  deletes the item from the table.</p> </li> <li> <p>Expiration is stored in DynamoDB
  as seconds.</p> </li> </ul>\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:44:\"A
  description of the purpose of the API key.\";}s:7:\"expires\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:127:\"The
  time after which the API key expires. The date is represented as seconds since the
  epoch, rounded down to the nearest hour.\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:15:\"The
  API key ID.\";}}s:4:\"type\";s:6:\"object\";}s:28:\"ApiKeyLimitExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"The
  API key exceeded a limit. Try your request again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:34:\"ApiKeyValidityOutOfBoundsException\";O:8:\"stdClass\":3:{s:11:\"description\";s:162:\"The
  API key expiration must be set to a value between 1 and 365 days from creation (for
  <code>CreateApiKey</code>) or from update (for <code>UpdateApiKey</code>).\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:7:\"ApiKeys\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/ApiKey\";}s:4:\"type\";s:5:\"array\";}s:25:\"ApiLimitExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:57:\"The
  GraphQL API exceeded a limit. Try your request again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:18:\"AuthenticationType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:7:\"API_KEY\";i:1;s:7:\"AWS_IAM\";i:2;s:25:\"AMAZON_COGNITO_USER_POOLS\";i:3;s:14:\"OPENID_CONNECT\";}s:4:\"type\";s:6:\"string\";}s:19:\"BadRequestException\";O:8:\"stdClass\":3:{s:11:\"description\";s:135:\"The
  request is not well formed. For example, a value is invalid or a required field
  is missing. Check the field values, and try again. \";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:4:\"Blob\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"Boolean\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:31:\"ConcurrentModificationException\";O:8:\"stdClass\":3:{s:11:\"description\";s:101:\"Another
  modification is being made. That modification must complete before you can make
  your change. \";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:19:\"CreateApiKeyRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:44:\"A
  description of the purpose of the API key.\";}s:7:\"expires\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:241:\"The
  time from creation time after which the API key expires. The date is represented
  as seconds since the epoch, rounded down to the nearest hour. The default value
  for this parameter is 7 days from creation time. For more information, see .\";}}s:4:\"type\";s:6:\"object\";}s:20:\"CreateApiKeyResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"apiKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/ApiKey\";s:11:\"description\";s:12:\"The
  API key.\";}}s:4:\"type\";s:6:\"object\";}s:23:\"CreateDataSourceRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":7:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:45:\"A
  description of the <code>DataSource</code>.\";}s:14:\"dynamodbConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/DynamodbDataSourceConfig\";s:11:\"description\";s:18:\"DynamoDB
  settings.\";}s:19:\"elasticsearchConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:43:\"#/definitions/ElasticsearchDataSourceConfig\";s:11:\"description\";s:30:\"Amazon
  Elasticsearch settings.\";}s:12:\"lambdaConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/LambdaDataSourceConfig\";s:11:\"description\";s:20:\"AWS
  Lambda settings.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:53:\"A
  user-supplied name for the <code>DataSource</code>.\";}s:14:\"serviceRoleArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:106:\"The
  IAM service role ARN for the data source. The system assumes this role when accessing
  the data source.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DataSourceType\";s:11:\"description\";s:40:\"The
  type of the <code>DataSource</code>.\";}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:4:\"type\";}s:4:\"type\";s:6:\"object\";}s:24:\"CreateDataSourceResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"dataSource\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/DataSource\";s:11:\"description\";s:35:\"The
  <code>DataSource</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:23:\"CreateGraphqlApiRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:18:\"authenticationType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/AuthenticationType\";s:11:\"description\";s:68:\"The
  authentication type: API key, IAM, or Amazon Cognito User Pools.\";}s:9:\"logConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/LogConfig\";s:11:\"description\";s:41:\"The
  Amazon CloudWatch logs configuration.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:53:\"A
  user-supplied name for the <code>GraphqlApi</code>.\";}s:19:\"openIDConnectConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/OpenIDConnectConfig\";s:11:\"description\";s:48:\"The
  Open Id Connect configuration configuration.\";}s:14:\"userPoolConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/UserPoolConfig\";s:11:\"description\";s:43:\"The
  Amazon Cognito User Pool configuration.\";}}s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:18:\"authenticationType\";}s:4:\"type\";s:6:\"object\";}s:24:\"CreateGraphqlApiResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"graphqlApi\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/GraphqlApi\";s:11:\"description\";s:28:\"The
  <code>GraphqlApi</code>.\";}}s:4:\"type\";s:6:\"object\";}s:21:\"CreateResolverRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":4:{s:14:\"dataSourceName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:68:\"The
  name of the data source for which the resolver is being created.\";}s:9:\"fieldName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:48:\"The
  name of the field to attach the resolver to.\";}s:22:\"requestMappingTemplate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MappingTemplate\";s:11:\"description\";s:257:\"<p>The
  mapping template to be used for requests.</p> <p>A resolver uses a request mapping
  template to convert a GraphQL expression into a format that a data source can understand.
  Mapping templates are written in Apache Velocity Template Language (VTL).</p>\";}s:23:\"responseMappingTemplate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MappingTemplate\";s:11:\"description\";s:67:\"The
  mapping template to be used for responses from the data source.\";}}s:8:\"required\";a:3:{i:0;s:9:\"fieldName\";i:1;s:14:\"dataSourceName\";i:2;s:22:\"requestMappingTemplate\";}s:4:\"type\";s:6:\"object\";}s:22:\"CreateResolverResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"resolver\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/Resolver\";s:11:\"description\";s:33:\"The
  <code>Resolver</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"CreateTypeRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"definition\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:190:\"<p>The
  type definition, in GraphQL Schema Definition Language (SDL) format.</p> <p>For
  more information, see the <a href=\"http://graphql.org/learn/schema/\">GraphQL SDL
  documentation</a>.</p>\";}s:6:\"format\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/TypeDefinitionFormat\";s:11:\"description\";s:29:\"The
  type format: SDL or JSON.\";}}s:8:\"required\";a:2:{i:0;s:10:\"definition\";i:1;s:6:\"format\";}s:4:\"type\";s:6:\"object\";}s:18:\"CreateTypeResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Type\";s:11:\"description\";s:29:\"The
  <code>Type</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:10:\"DataSource\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Describes
  a data source.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:13:\"dataSourceArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:20:\"The
  data source ARN.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:35:\"The
  description of the data source.\";}s:14:\"dynamodbConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/DynamodbDataSourceConfig\";s:11:\"description\";s:18:\"DynamoDB
  settings.\";}s:19:\"elasticsearchConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:43:\"#/definitions/ElasticsearchDataSourceConfig\";s:11:\"description\";s:30:\"Amazon
  Elasticsearch settings.\";}s:12:\"lambdaConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/LambdaDataSourceConfig\";s:11:\"description\";s:16:\"Lambda
  settings.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:28:\"The
  name of the data source.\";}s:14:\"serviceRoleArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:106:\"The
  IAM service role ARN for the data source. The system assumes this role when accessing
  the data source.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DataSourceType\";s:11:\"description\";s:597:\"<p>The
  type of the data source.</p> <ul> <li> <p> <b>AMAZON_DYNAMODB</b>: The data source
  is an Amazon DynamoDB table.</p> </li> <li> <p> <b>AMAZON_ELASTICSEARCH</b>: The
  data source is an Amazon Elasticsearch Service domain.</p> </li> <li> <p> <b>AWS_LAMBDA</b>:
  The data source is an AWS Lambda function.</p> </li> <li> <p> <b>NONE</b>: There
  is no data source. This type is used when when you wish to invoke a GraphQL operation
  without connecting to a data source, such as performing data transformation with
  resolvers or triggering a subscription to be invoked from a mutation.</p> </li>
  </ul>\";}}s:4:\"type\";s:6:\"object\";}s:14:\"DataSourceType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:4:{i:0;s:10:\"AWS_LAMBDA\";i:1;s:15:\"AMAZON_DYNAMODB\";i:2;s:20:\"AMAZON_ELASTICSEARCH\";i:3;s:4:\"NONE\";}s:4:\"type\";s:6:\"string\";}s:11:\"DataSources\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/DataSource\";}s:4:\"type\";s:5:\"array\";}s:13:\"DefaultAction\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:5:\"ALLOW\";i:1;s:4:\"DENY\";}s:4:\"type\";s:6:\"string\";}s:19:\"DeleteApiKeyRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:20:\"DeleteApiKeyResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:23:\"DeleteDataSourceRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:24:\"DeleteDataSourceResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:23:\"DeleteGraphqlApiRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:24:\"DeleteGraphqlApiResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:21:\"DeleteResolverRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:22:\"DeleteResolverResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:17:\"DeleteTypeRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:18:\"DeleteTypeResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:24:\"DynamodbDataSourceConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:47:\"Describes
  a DynamoDB data source configuration.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"awsRegion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:15:\"The
  AWS region.\";}s:9:\"tableName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:15:\"The
  table name.\";}s:20:\"useCallerCredentials\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Boolean\";s:11:\"description\";s:68:\"Set
  to TRUE to use Amazon Cognito credentials with this data source.\";}}s:8:\"required\";a:2:{i:0;s:9:\"tableName\";i:1;s:9:\"awsRegion\";}s:4:\"type\";s:6:\"object\";}s:29:\"ElasticsearchDataSourceConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:53:\"Describes
  an Elasticsearch data source configuration.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"awsRegion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:15:\"The
  AWS region.\";}s:8:\"endpoint\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:13:\"The
  endpoint.\";}}s:8:\"required\";a:2:{i:0;s:8:\"endpoint\";i:1;s:9:\"awsRegion\";}s:4:\"type\";s:6:\"object\";}s:12:\"ErrorMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"FieldLogLevel\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:4:\"NONE\";i:1;s:5:\"ERROR\";i:2;s:3:\"ALL\";}s:4:\"type\";s:6:\"string\";}s:20:\"GetDataSourceRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:21:\"GetDataSourceResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"dataSource\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/DataSource\";s:11:\"description\";s:35:\"The
  <code>DataSource</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"GetGraphqlApiRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:21:\"GetGraphqlApiResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"graphqlApi\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/GraphqlApi\";s:11:\"description\";s:35:\"The
  <code>GraphqlApi</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:29:\"GetIntrospectionSchemaRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:30:\"GetIntrospectionSchemaResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"schema\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Blob\";s:11:\"description\";s:181:\"<p>The
  schema, in GraphQL Schema Definition Language (SDL) format.</p> <p>For more information,
  see the <a href=\"http://graphql.org/learn/schema/\">GraphQL SDL documentation</a>.</p>\";}}s:4:\"type\";s:6:\"object\";}s:18:\"GetResolverRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:19:\"GetResolverResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"resolver\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/Resolver\";s:11:\"description\";s:33:\"The
  <code>Resolver</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:30:\"GetSchemaCreationStatusRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:31:\"GetSchemaCreationStatusResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"details\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:71:\"Detailed
  information about the status of the schema creation operation.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/SchemaStatus\";s:11:\"description\";s:124:\"The
  current state of the schema (PROCESSING, ACTIVE, or DELETING). Once the schema is
  in the ACTIVE state, you can add data.\";}}s:4:\"type\";s:6:\"object\";}s:14:\"GetTypeRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:15:\"GetTypeResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Type\";s:11:\"description\";s:29:\"The
  <code>Type</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:22:\"GraphQLSchemaException\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  GraphQL schema is not valid.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ErrorMessage\";}}s:4:\"type\";s:6:\"object\";}s:10:\"GraphqlApi\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Describes
  a GraphQL API.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:5:\"apiId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:11:\"The
  API ID.\";}s:3:\"arn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:8:\"The
  ARN.\";}s:18:\"authenticationType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/AuthenticationType\";s:11:\"description\";s:24:\"The
  authentication type.\";}s:9:\"logConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/LogConfig\";s:11:\"description\";s:41:\"The
  Amazon CloudWatch Logs configuration.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:13:\"The
  API name.\";}s:19:\"openIDConnectConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/OpenIDConnectConfig\";s:11:\"description\";s:34:\"The
  Open Id Connect configuration.\";}s:4:\"uris\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/MapOfStringToString\";s:11:\"description\";s:9:\"The
  URIs.\";}s:14:\"userPoolConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/UserPoolConfig\";s:11:\"description\";s:43:\"The
  Amazon Cognito User Pool configuration.\";}}s:4:\"type\";s:6:\"object\";}s:11:\"GraphqlApis\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/GraphqlApi\";}s:4:\"type\";s:5:\"array\";}s:24:\"InternalFailureException\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"An
  internal AWS AppSync error occurred. Try your request again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:22:\"LambdaDataSourceConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:45:\"Describes
  a Lambda data source configuration.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"lambdaFunctionArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:32:\"The
  ARN for the Lambda function.\";}}s:8:\"required\";a:1:{i:0;s:17:\"lambdaFunctionArn\";}s:4:\"type\";s:6:\"object\";}s:22:\"LimitExceededException\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"The
  request exceeded a limit. Try your request again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:18:\"ListApiKeysRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:19:\"ListApiKeysResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"apiKeys\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/ApiKeys\";s:11:\"description\";s:32:\"The
  <code>ApiKey</code> objects.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PaginationToken\";s:11:\"description\";s:109:\"An
  identifier to be passed in the next request to this operation to return the next
  set of items in the list.\";}}s:4:\"type\";s:6:\"object\";}s:22:\"ListDataSourcesRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:23:\"ListDataSourcesResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"dataSources\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/DataSources\";s:11:\"description\";s:36:\"The
  <code>DataSource</code> objects.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PaginationToken\";s:11:\"description\";s:109:\"An
  identifier to be passed in the next request to this operation to return the next
  set of items in the list.\";}}s:4:\"type\";s:6:\"object\";}s:22:\"ListGraphqlApisRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:23:\"ListGraphqlApisResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"graphqlApis\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/GraphqlApis\";s:11:\"description\";s:36:\"The
  <code>GraphqlApi</code> objects.\";}s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PaginationToken\";s:11:\"description\";s:109:\"An
  identifier to be passed in the next request to this operation to return the next
  set of items in the list.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"ListResolversRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:21:\"ListResolversResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PaginationToken\";s:11:\"description\";s:109:\"An
  identifier to be passed in the next request to this operation to return the next
  set of items in the list.\";}s:9:\"resolvers\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Resolvers\";s:11:\"description\";s:34:\"The
  <code>Resolver</code> objects.\";}}s:4:\"type\";s:6:\"object\";}s:16:\"ListTypesRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:17:\"ListTypesResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"nextToken\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/PaginationToken\";s:11:\"description\";s:109:\"An
  identifier to be passed in the next request to this operation to return the next
  set of items in the list.\";}s:5:\"types\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/TypeList\";s:11:\"description\";s:30:\"The
  <code>Type</code> objects.\";}}s:4:\"type\";s:6:\"object\";}s:9:\"LogConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:34:\"The
  CloudWatch Logs configuration.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:21:\"cloudWatchLogsRoleArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:100:\"The
  service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in
  your account. \";}s:13:\"fieldLogLevel\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/FieldLogLevel\";s:11:\"description\";s:699:\"<p>The
  field logging level. Values can be NONE, ERROR, ALL. </p> <ul> <li> <p> <b>NONE</b>:
  No field-level logs are captured.</p> </li> <li> <p> <b>ERROR</b>: Logs the following
  information only for the fields that are in error:</p> <ul> <li> <p>The error section
  in the server response.</p> </li> <li> <p>Field-level errors.</p> </li> <li> <p>The
  generated request/response functions that got resolved for error fields.</p> </li>
  </ul> </li> <li> <p> <b>ALL</b>: The following information is logged for all fields
  in the query:</p> <ul> <li> <p>Field-level tracing information.</p> </li> <li> <p>The
  generated request/response functions that got resolved for each field.</p> </li>
  </ul> </li> </ul>\";}}s:8:\"required\";a:2:{i:0;s:13:\"fieldLogLevel\";i:1;s:21:\"cloudWatchLogsRoleArn\";}s:4:\"type\";s:6:\"object\";}s:4:\"Long\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:19:\"MapOfStringToString\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:15:\"MappingTemplate\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:65536;s:9:\"minLength\";i:1;s:4:\"type\";s:6:\"string\";}s:10:\"MaxResults\";O:8:\"stdClass\":3:{s:7:\"maximum\";i:25;s:7:\"minimum\";i:0;s:4:\"type\";s:7:\"integer\";}s:17:\"NotFoundException\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"The
  resource specified in the request was not found. Check the resource and try again.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:19:\"OpenIDConnectConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:43:\"Describes
  an Open Id Connect configuration.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"authTTL\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:70:\"The
  number of milliseconds a token is valid after being authenticated.\";}s:8:\"clientId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:282:\"The
  client identifier of the Relying party at the OpenID Provider. This identifier is
  typically obtained when the Relying party is registered with the OpenID Provider.
  You can specify a regular expression so the AWS AppSync can validate against multiple
  client identifiers at a time\";}s:6:\"iatTTL\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:73:\"The
  number of milliseconds a token is valid after being issued to a user.\";}s:6:\"issuer\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:135:\"The
  issuer for the open id connect configuration. The issuer returned by discovery MUST
  exactly match the value of iss in the ID Token.\";}}s:8:\"required\";a:1:{i:0;s:6:\"issuer\";}s:4:\"type\";s:6:\"object\";}s:10:\"OutputType\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:3:\"SDL\";i:1;s:4:\"JSON\";}s:4:\"type\";s:6:\"string\";}s:15:\"PaginationToken\";O:8:\"stdClass\":2:{s:7:\"pattern\";s:6:\"[\\\\S]+\";s:4:\"type\";s:6:\"string\";}s:8:\"Resolver\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"Describes
  a resolver.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:14:\"dataSourceName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:30:\"The
  resolver data source name.\";}s:9:\"fieldName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:24:\"The
  resolver field name.\";}s:22:\"requestMappingTemplate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MappingTemplate\";s:11:\"description\";s:29:\"The
  request mapping template.\";}s:11:\"resolverArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:17:\"The
  resolver ARN.\";}s:23:\"responseMappingTemplate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MappingTemplate\";s:11:\"description\";s:30:\"The
  response mapping template.\";}s:8:\"typeName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:23:\"The
  resolver type name.\";}}s:4:\"type\";s:6:\"object\";}s:9:\"Resolvers\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Resolver\";}s:4:\"type\";s:5:\"array\";}s:12:\"ResourceName\";O:8:\"stdClass\":2:{s:7:\"pattern\";s:22:\"[_A-Za-z][_0-9A-Za-z]*\";s:4:\"type\";s:6:\"string\";}s:12:\"SchemaStatus\";O:8:\"stdClass\":2:{s:4:\"enum\";a:3:{i:0;s:10:\"PROCESSING\";i:1;s:6:\"ACTIVE\";i:2;s:8:\"DELETING\";}s:4:\"type\";s:6:\"string\";}s:26:\"StartSchemaCreationRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"definition\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Blob\";s:11:\"description\";s:57:\"The
  schema definition, in GraphQL schema language format.\";}}s:8:\"required\";a:1:{i:0;s:10:\"definition\";}s:4:\"type\";s:6:\"object\";}s:27:\"StartSchemaCreationResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/SchemaStatus\";s:11:\"description\";s:124:\"The
  current state of the schema (PROCESSING, ACTIVE, or DELETING). Once the schema is
  in the ACTIVE state, you can add data.\";}}s:4:\"type\";s:6:\"object\";}s:6:\"String\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"Type\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"Describes
  a type.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:3:\"arn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:13:\"The
  type ARN.\";}s:10:\"definition\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:20:\"The
  type definition.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:21:\"The
  type description.\";}s:6:\"format\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/TypeDefinitionFormat\";s:11:\"description\";s:29:\"The
  type format: SDL or JSON.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:14:\"The
  type name.\";}}s:4:\"type\";s:6:\"object\";}s:20:\"TypeDefinitionFormat\";O:8:\"stdClass\":2:{s:4:\"enum\";a:2:{i:0;s:3:\"SDL\";i:1;s:4:\"JSON\";}s:4:\"type\";s:6:\"string\";}s:8:\"TypeList\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Type\";}s:4:\"type\";s:5:\"array\";}s:21:\"UnauthorizedException\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"You
  are not authorized to perform this operation.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/String\";}}s:4:\"type\";s:6:\"object\";}s:19:\"UpdateApiKeyRequest\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:44:\"A
  description of the purpose of the API key.\";}s:7:\"expires\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Long\";s:11:\"description\";s:138:\"The
  time from update time after which the API key expires. The date is represented as
  seconds since the epoch. For more information, see .\";}}s:4:\"type\";s:6:\"object\";}s:20:\"UpdateApiKeyResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"apiKey\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/ApiKey\";s:11:\"description\";s:12:\"The
  API key.\";}}s:4:\"type\";s:6:\"object\";}s:23:\"UpdateDataSourceRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:40:\"The
  new description for the data source.\";}s:14:\"dynamodbConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:38:\"#/definitions/DynamodbDataSourceConfig\";s:11:\"description\";s:31:\"The
  new DynamoDB configuration.\";}s:19:\"elasticsearchConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:43:\"#/definitions/ElasticsearchDataSourceConfig\";s:11:\"description\";s:36:\"The
  new Elasticsearch configuration.\";}s:12:\"lambdaConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/LambdaDataSourceConfig\";s:11:\"description\";s:29:\"The
  new Lambda configuration.\";}s:14:\"serviceRoleArn\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:45:\"The
  new service role ARN for the data source.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DataSourceType\";s:11:\"description\";s:25:\"The
  new data source type.\";}}s:8:\"required\";a:1:{i:0;s:4:\"type\";}s:4:\"type\";s:6:\"object\";}s:24:\"UpdateDataSourceResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"dataSource\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/DataSource\";s:11:\"description\";s:43:\"The
  updated <code>DataSource</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:23:\"UpdateGraphqlApiRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:18:\"authenticationType\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/AuthenticationType\";s:11:\"description\";s:67:\"The
  new authentication type for the <code>GraphqlApi</code> object.\";}s:9:\"logConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/LogConfig\";s:11:\"description\";s:80:\"The
  Amazon CloudWatch logs configuration for the <code>GraphqlApi</code> object.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:52:\"The
  new name for the <code>GraphqlApi</code> object.\";}s:19:\"openIDConnectConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/OpenIDConnectConfig\";s:11:\"description\";s:87:\"The
  Open Id Connect configuration configuration for the <code>GraphqlApi</code> object.\";}s:14:\"userPoolConfig\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/UserPoolConfig\";s:11:\"description\";s:86:\"The
  new Amazon Cognito User Pool configuration for the <code>GraphqlApi</code> object.\";}}s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";}s:24:\"UpdateGraphqlApiResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"graphqlApi\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/GraphqlApi\";s:11:\"description\";s:43:\"The
  updated <code>GraphqlApi</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:21:\"UpdateResolverRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"dataSourceName\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ResourceName\";s:11:\"description\";s:25:\"The
  new data source name.\";}s:22:\"requestMappingTemplate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MappingTemplate\";s:11:\"description\";s:33:\"The
  new request mapping template.\";}s:23:\"responseMappingTemplate\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/MappingTemplate\";s:11:\"description\";s:34:\"The
  new response mapping template.\";}}s:8:\"required\";a:2:{i:0;s:14:\"dataSourceName\";i:1;s:22:\"requestMappingTemplate\";}s:4:\"type\";s:6:\"object\";}s:22:\"UpdateResolverResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"resolver\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:22:\"#/definitions/Resolver\";s:11:\"description\";s:41:\"The
  updated <code>Resolver</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"UpdateTypeRequest\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"definition\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:19:\"The
  new definition.\";}s:6:\"format\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:34:\"#/definitions/TypeDefinitionFormat\";s:11:\"description\";s:33:\"The
  new type format: SDL or JSON.\";}}s:8:\"required\";a:1:{i:0;s:6:\"format\";}s:4:\"type\";s:6:\"object\";}s:18:\"UpdateTypeResponse\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:18:\"#/definitions/Type\";s:11:\"description\";s:37:\"The
  updated <code>Type</code> object.\";}}s:4:\"type\";s:6:\"object\";}s:14:\"UserPoolConfig\";O:8:\"stdClass\":4:{s:11:\"description\";s:52:\"Describes
  an Amazon Cognito User Pool configuration.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:16:\"appIdClientRegex\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:88:\"A
  regular expression for validating the incoming Amazon Cognito User Pool app client
  ID.\";}s:9:\"awsRegion\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:50:\"The
  AWS region in which the user pool was created.\";}s:13:\"defaultAction\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/DefaultAction\";s:11:\"description\";s:172:\"The
  action that you want your GraphQL API to take when a request that uses Amazon Cognito
  User Pool authentication doesn't match the Amazon Cognito User Pool configuration.\";}s:10:\"userPoolId\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/String\";s:11:\"description\";s:17:\"The
  user pool ID.\";}}s:8:\"required\";a:3:{i:0;s:10:\"userPoolId\";i:1;s:9:\"awsRegion\";i:2;s:13:\"defaultAction\";}s:4:\"type\";s:6:\"object\";}}"
...
