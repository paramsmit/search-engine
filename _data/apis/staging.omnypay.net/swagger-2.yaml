---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:2319:\"OmnyPay is a
  Retailer friendly white label mobile payment system that enables shoppers pay retailer
  across omnichannels and omni devices. OmnyPay version 2.0 API supports a retailer
  mobile or web commerce application to connect to Omnypay Cloud Payment Service.
  \  If you are interested in hearing more about Omnypay, please contact info@omnypay.net.
  \n* OmnyPay is our integrated, customizable, and secure mobile payment and loyalty
  platform works with a retailer to reward their loyal customers, lower payment transaction
  costs, and increase sales. OmnyPay is a retailer friendly, mobile payment system
  designed with the retailer in mind. Works seamlessly across all channels NFC equipped
  stores, non-NFC stores, e-Commerce sites, and native mobile apps.\nSupports all
  payment types such as store card, private label credit cards, debit cards, credit
  cards, and ACH.\n* OmnyPay provides these easy APIs to speed up development. A credential
  is included for quick development and integration testing. Use following key, rpw6tm0awkz-u06o0lmabgcmlik2hjb9
  for testing.\n \nTerminology\n\n\n* Retailer - Any retailer that has a brick and
  mortar or ecommerce store can avail of OmnyPay service. For our example we will
  call our retailer CoolStore.\n\n\n* Retailer Mobile App - the branded mobile application
  available  in Apple App Store or Android Play store. For our example Cool Store
  has a branded mobile app - CoolStore App \n\n\n* Customer - A shopper of CoolStore
  Store or eCommerce sites. \n\n\n* CoolPay - A mobile payment service that uses OmnyPay
  payment system to seamlessly integrate customer loyalty, rewards and promotions
  across multiple channels and steer shoppers to use Store Cards.\n\nOur Interfaces
  \ \n   Retailer Systems <-POS API->Omnypay Platform<-Mobile API-> Retailer Mobile
  App \n* Retailer Systems - The Commerce systems in the backend and the Point of
  Service systems that enable transactions in-store and on commerce sites. \n* POS
  API - Set of API between OmnyPay Platform and Retailer Systems. \n* OmnyPay Platform
  - A REST based API and platform that supports Mobile Payment for Retailers using
  their branded applications.\n* OmnyPay Mobile API -  consists of User Management
  API and Mobile transactions API. \n* Retailer Mobile App - The branded application
  used by shoppers on their mobile phone ex: Coolstore App\n\";s:7:\"version\";s:5:\"2.0.0\";s:5:\"title\";s:44:\"OmnyPay
  API - Powering OmniChannel Retailers\";s:14:\"termsOfService\";s:33:\"http://omnypay.net/api/terms.html\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:16:\"info@omnypay.net\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:15:\"Omnypay
  License\";s:3:\"url\";s:40:\"http://omnypay.net/licenses/LICENSE.html\";}}"
host: staging.omnypay.net
basePath: /v2
paths:
  /user/:
    post:
      tags:
      - User Management
      summary: Add a new user to OmnyPay
      description: ""
      operationId: addUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: appUserProfile
        description: User Info required for authentication
        required: true
        schema:
          $ref: '#/definitions/appUserProfile'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appUserRegisterResponse'
        405:
          description: Invalid input
      security:
      - api_key: []
    put:
      tags:
      - User Management
      summary: Update an existing user profile
      description: ""
      operationId: updateUserInfo
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Update an existing user
        required: true
        schema:
          $ref: '#/definitions/appChangeUserProfile'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appUserRegisterResponse'
        400:
          description: Invalid password supplied
        404:
          description: User not found
        405:
          description: Validation exception
      security:
      - api_key: []
  /users/{user_id}/card:
    post:
      tags:
      - User Management
      summary: Add a Card
      description: Adds a credit, debit, store or gift card to user account.
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: string
      - in: body
        name: status
        description: Info about card
        required: true
        schema:
          $ref: '#/definitions/appCardInfo'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appCRef'
        400:
          description: Invalid Card Data
      security:
      - api_key: []
  /user/logout:
    post:
      tags:
      - User Management
      summary: Logout a user from OmnyPay
      description: Logout of a Omnypay session
      operationId: logout
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: User Info required for authentication
        required: true
        schema:
          $ref: '#/definitions/appUserProfile'
      responses:
        200:
          description: successful operation
        400:
          description: User not logged in
      security:
      - api_key: []
  /user/login:
    post:
      tags:
      - User Management
      summary: Login a user to OmnyPay
      description: Login  a user for Omnypay session
      operationId: login
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: User Info required for authentication
        required: true
        schema:
          $ref: '#/definitions/appUserProfile'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appUserRegisterResponse'
        400:
          description: User not logged in
      security:
      - api_key: []
  /users/{user_id}/Questions:
    post:
      tags:
      - User Management
      summary: Set Security Questions
      description: Select order of security questions and set answers to each question.
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: User id
        required: true
        type: string
      - in: body
        name: profileAndQuestions
        description: User Authentication
        required: true
        schema:
          $ref: '#/definitions/appProfileAndQuestions'
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
      security:
      - api_key: []
      - omnypay_auth: []
    put:
      tags:
      - User Management
      summary: Set Security Questions
      description: Select order of security questions and set answers to each question.
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: User id
        required: true
        type: string
      - in: body
        name: profileAndQuestions
        description: User Authentication
        required: true
        schema:
          $ref: '#/definitions/appProfileAndQuestions'
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
      security:
      - api_key: []
      - omnypay_auth: []
    get:
      tags:
      - User Management
      summary: Get Security Questions
      description: Get atleast two security questions for user verification
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: User id
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appAskQuestions'
        405:
          description: Invalid input
      security:
      - api_key: []
      - omnypay_auth: []
  /users/{user_id}/answerQuestions:
    post:
      tags:
      - User Management
      summary: Answer Security Questions
      description: Answer two security questions for user verification
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: User id
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: User Validation
        required: true
        schema:
          $ref: '#/definitions/appAnswerQuestions'
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
      security:
      - api_key: []
      - omnypay_auth: []
  /password/forgot:
    post:
      tags:
      - User Management
      summary: Forgot Password, get questions to answer
      description: Forgot Password, get answers for two questions asked
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appAskQuestions'
        405:
          description: Invalid input
      security:
      - api_key: []
  /users/{user_id}/bankAcct:
    post:
      tags:
      - User Management
      summary: Add a Bank Account
      description: Adds a bank account, savings or checking to user account.
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Add Bank Info
        required: true
        schema:
          $ref: '#/definitions/appBankInfo'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appCRef'
        405:
          description: Invalid input
      security:
      - api_key: []
    delete:
      tags:
      - User Management
      summary: Delete a Account
      description: Deletes a bank, debit, credit, gift or store card account
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Add Bank Info
        required: true
        schema:
          $ref: '#/definitions/appCRef'
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
      security:
      - api_key: []
  /users/{user_id}/checkin:
    post:
      tags:
      - Mobile Transactions
      summary: Check in the user
      description: User checks into the POS
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: string
      - in: body
        name: body
        description: POS Info
        required: true
        schema:
          $ref: '#/definitions/appPOSInfo'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appCheckInResponse'
        405:
          description: Invalid input
      security:
      - api_key: []
      - clientstore_auth: []
  /users/{user_id}/AmountsAndLineItems:
    get:
      tags:
      - Mobile Transactions
      summary: Get Total Amount
      description: Called by Mobile App to get total amount
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: ID of user that is due the amount
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
  /users/{user_id}/LineItems:
    get:
      tags:
      - Mobile Transactions
      summary: Get Line Items
      description: Called by Mobile App to get line Items scanned so far
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: user_id
        description: ID of user that is due the amount
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            $ref: '#/definitions/Purchase'
  /POS/{pos_id}/postAmount:
    post:
      tags:
      - POS Transactions
      summary: Get amount from POS
      description: Get amount for transaction payment.
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: pos_id
        description: ID of POS that is posting Amount due
        required: true
        type: string
      - in: body
        name: amt
        description: POS Info
        required: true
        schema:
          $ref: '#/definitions/POSAmountRequest'
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
      security:
      - api_key: []
  /POS/{pos_id}/postItem:
    post:
      tags:
      - POS Transactions
      summary: Submit event adding a single item to OmnyPay Platform
      description: Submit event adding a single item into cart.
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: path
        name: pos_id
        description: ID of pos
        required: true
        type: string
      - in: body
        name: lineItem
        description: lineItem purchased
        required: true
        schema:
          $ref: '#/definitions/Purchase'
      responses:
        200:
          description: successful operation
        405:
          description: Invalid input
      security:
      - api_key: []
  /POS/{pos_id}/applyOffers:
    post:
      tags:
      - POS Transactions
      summary: Apply coupons to Amount
      description: Apply selected coupons for transaction
      operationId: applyCouponsAtPOS
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of POS that needs to be fetched
        name: pos_id
        required: true
        type: integer
        format: int64
      - in: body
        name: couponsToRedeem
        description: Apply coupons for a user
        required: true
        schema:
          type: array
          $ref: '#/definitions/Coupon'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /POS/{pos_id}/applyRewards:
    post:
      tags:
      - POS Transactions
      summary: Apply Rewards to Amount
      description: Apply selected rewards for transaction
      operationId: applyRewardsAtPOS
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of POS that needs to be fetched
        name: pos_id
        required: true
        type: integer
        format: int64
      - in: body
        name: couponsToRedeem
        description: Apply coupons for a user
        required: true
        schema:
          type: array
          $ref: '#/definitions/RewardRedemption'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /POS/{pos_id}/applyLoyalty:
    post:
      tags:
      - POS Transactions
      summary: Apply loyalty to Amount
      description: Apply selected coupons for transaction
      operationId: applyLoyaltyAtPOS
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of POS that needs to be fetched
        name: pos_id
        required: true
        type: integer
        format: int64
      - in: body
        name: couponsToRedeem
        description: Apply coupons for a user
        required: true
        schema:
          type: array
          $ref: '#/definitions/LoyaltyRedemption'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /POS/{pos_id}/payToken:
    post:
      tags:
      - POS Transactions
      summary: Send Pay Token to POS
      description: Send token to POS for settlement
      operationId: sendPayToken
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of POS that needs to be fetched
        name: pos_id
        required: true
        type: string
      - in: body
        name: AmountWithToken
        description: AmountWithToken
        required: true
        schema:
          type: array
          $ref: '#/definitions/POSAmountWithToken'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/offers:
    get:
      tags:
      - Mobile Transactions
      summary: Get Offers for User
      description: Fetch a list of offers for this transaction.
      operationId: getOffers
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            $ref: '#/definitions/Coupon'
        400:
          description: Invalid user
        405:
          description: Not a valid session
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/loyalty:
    get:
      tags:
      - Mobile Transactions
      summary: Get Loyalty for User
      description: Fetch a list of coupons for this transaction.
      operationId: getRewards
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Loyalty'
        400:
          description: Invalid user
        405:
          description: Not a valid session
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/rewards:
    get:
      tags:
      - Mobile Transactions
      summary: Get Rewards for User
      description: Fetch  rewards for this user.
      operationId: getLoyalty
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        name: user_id
        description: ID of user that needs to be fetched
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            $ref: '#/definitions/Reward'
        400:
          description: Invalid user
        405:
          description: Not a valid session
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/applyOffers:
    post:
      tags:
      - Mobile Transactions
      summary: Apply offers to Amount
      description: Apply selected couponss for transaction
      operationId: applyCoupons
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of user that needs to be fetched
        name: user_id
        required: true
        type: string
      - in: body
        name: couponsToRedeem
        description: Apply coupons for a user
        required: true
        schema:
          type: array
          $ref: '#/definitions/CouponRedemption'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/applyRewards:
    post:
      tags:
      - Mobile Transactions
      summary: Apply rewards to Amount
      description: Apply selected rewards for transaction
      operationId: applyRewards
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of user that needs to be fetched
        name: user_id
        required: true
        type: string
      - in: body
        name: couponsToRedeem
        description: Apply coupons for a user
        required: true
        schema:
          type: array
          $ref: '#/definitions/RewardRedemption'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/applyLoyalty:
    post:
      tags:
      - Mobile Transactions
      summary: Apply Loyalty Points to Amount
      description: Apply user loyalty for transaction
      operationId: applyLoyalty
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of user that needs to be fetched
        name: user_id
        required: true
        type: string
      - in: body
        name: loyaltyToRedeem
        description: Apply loyalty points for a user
        required: true
        schema:
          type: array
          $ref: '#/definitions/LoyaltyRedemption'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/POSAmountRequest'
        400:
          description: Invalid transaction
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
  /users/{user_id}/confirmPayment:
    post:
      tags:
      - Mobile Transactions
      summary: pay specified Amount for transaction
      description: Apply selected coupons for transaction
      operationId: payAmount
      produces:
      - application/xml
      - application/json
      parameters:
      - in: path
        description: ID of user that needs to be fetched
        name: user_id
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Pay amount for products purchase
        required: true
        schema:
          type: array
          $ref: '#/definitions/appPayAmountRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/appPayAmountResponse'
        400:
          description: Transaction declined
        404:
          description: User not recognized
      security:
      - clientstore_auth:
        - write:transactions
        - read:transactions
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":23:{s:14:\"appUserProfile\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:7:\"user_id\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"emailId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"User
  email address\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:37:\"Phone
  number beginning with area code\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:85:\"user
  Id is a id that uniquely identifies the customer or shopper in retailer's system\";}s:8:\"passcode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:68:\"Password
  atleast 8 digits with a char, number and special characters\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:11:\"UserProfile\";}}s:20:\"appChangeUserProfile\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"oldEmailId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:17:\"Old
  User email Id\";}s:10:\"newEmailId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:17:\"New
  User email Id\";}s:14:\"oldPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Old
  phone number beginning with area code\";}s:17:\"newoldPhoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"New
  phone number beginning with area code\";}s:11:\"oldPasscode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:77:\"Original
  Password atleast 8 digits with a char, number and special characters\";}s:11:\"newPasscode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:72:\"New
  Password atleast 8 digits with a char, number and special characters\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:17:\"ChangeUserProfile\";}}s:6:\"Reward\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:16:\"rewardPointTotal\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"rewardId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"merchantId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"validTo\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:6:\"Reward\";}}s:6:\"Coupon\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":20:{s:8:\"couponId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"skuId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"merchantId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"discountId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"couponTitle\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"couponIssuerName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"couponIssuerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"categoryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"isValid\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:1;}s:18:\"redemptionsAllowed\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:9:\"integer32\";}s:10:\"comboValid\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:1;}s:14:\"discountDollar\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:15:\"discountPercent\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:11:\"countryCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"redemptionChannel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"imageAsset\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:17:\"path
  of the asset\";}s:4:\"BuyX\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:7:\"GetFree\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"validFrom\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"validTo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:6:\"Coupon\";}}s:16:\"CouponRedemption\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"couponId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"qtyRequested\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:9:\"integer32\";}s:15:\"redemptionValue\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Percent
  Value or Dollar Value\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:14:\"redemptionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"0
  for percent 1 for amount\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:9:\"integer32\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:16:\"CouponRedemption\";}}s:16:\"RewardRedemption\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"rewardId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"redemptionValue\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Percent
  Value or Dollar Value\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:14:\"redemptionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"0
  for percent 1 for amount\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:9:\"integer32\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:16:\"RewardRedemption\";}}s:17:\"LoyaltyRedemption\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"LoyaltyId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"LoyaltyPoints\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Points
  earned\";s:4:\"type\";s:6:\"number\";}s:15:\"PointConversion\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"the
  conversion ratio for points to currency\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:14:\"PointsRedeemed\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"the
  points redeemed for this transaction\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:14:\"DollarRedeemed\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"the
  dollars redeemed for this transaction\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:9:\"integer32\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:17:\"LoyaltyRedemption\";}}s:7:\"Loyalty\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"LoyaltyId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"LoyaltyName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:25:\"Name
  of the loyalty level\";}s:13:\"LoyaltyPoints\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Points
  earned\";s:4:\"type\";s:6:\"number\";}s:15:\"PointConversion\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"the
  conversion ratio for points to currency\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:17:\"LoyaltyRedemption\";}}s:8:\"Purchase\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"productSKU\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"qty\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"price\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:15:\"coupon
  Discount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:9:\"itemTotal\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"Purchase\";}}s:16:\"POSAmountRequest\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:11:\"totalAmount\";i:1;s:3:\"tax\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"totalAmount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:17:\"discountsInDollar\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:3:\"tax\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:9:\"netAmount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:17:\"itemizedPurchases\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:17:\"itemizedPurchases\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Purchase\";}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:19:\"TransactPOSResponse\";}}s:19:\"appPayAmountRequest\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"total\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:7:\"cardRef\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:19:\"PayPOSAmountRequest\";}}s:20:\"appPayAmountResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"paidTotal\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:13:\"amountBalance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:11:\"cardBalance\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:20:\"PayPOSAmountResponse\";}}s:23:\"appUserRegisterResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"user_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:16:\"RegisterResponse\";}}s:18:\"appCheckInResponse\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:14:\"transaction_id\";i:1;s:4:\"type\";i:2;s:7:\"message\";i:3;s:4:\"code\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:14:\"transaction_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"txnAmount\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:15:\"CheckInResponse\";}}s:22:\"appProfileAndQuestions\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":11:{s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:20:\"Phone
  Number of User\";}s:7:\"emailId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"email
  address of User\";}s:11:\"questionId1\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 1\";}s:7:\"answer1\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"answer
  to secret question No. 1\";}s:11:\"questionId2\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 2\";}s:7:\"answer2\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"answer
  to secret question No. 2\";}s:11:\"questionId3\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 3\";}s:7:\"answer3\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"answer
  to secret question No. 3\";}s:11:\"questionId4\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 4\";}s:7:\"answer4\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"answer
  to secret question No. 5\";}s:11:\"questionId5\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 5\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:19:\"ProfileAndQuestions\";}}s:15:\"appAskQuestions\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"questionId1\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 1\";}s:11:\"questionId2\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 2\";}s:11:\"questionId3\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 3\";}s:11:\"questionId4\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 4\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:15:\"appAnsQuestions\";}}s:18:\"appAnswerQuestions\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":8:{s:11:\"questionId1\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 1\";}s:7:\"answer1\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"answer
  secret question No. 1\";}s:11:\"questionId2\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 2\";}s:7:\"answer2\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"answer
  secret question No. 2\";}s:11:\"questionId3\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 3\";}s:7:\"answer3\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"answer
  secret question No. 3\";}s:11:\"questionId4\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"secret
  question No. 4\";}s:7:\"answer4\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"answer
  secret question No. 3\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:15:\"appAnsQuestions\";}}s:11:\"appCardInfo\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"accType\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:63:\"0
  for charge card, 1 for type of acct. MC/Visa/ 2 for Gift card\";}s:11:\"accNickName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"ex:\"Citi
  MASTERCARD\",\";}s:14:\"acctHolderName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Name
  of the card holder\";}s:14:\"accCardVfcCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"Code
  at the back of card\";}s:12:\"cardNickName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"Nickname
  of the card holder\";}s:15:\"acctCardExpDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"The
  month ex:\"04\" of expiry\";}s:15:\"acctCardExpYear\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  year ex:\"17\" of expiry\";}s:6:\"acctNo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"The
  acct number of the card holder\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:20:\"Phone
  Number of User\";}s:7:\"emailId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"email
  address of User\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"CardInfo\";}}s:11:\"appBankInfo\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":13:{s:7:\"accType\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:13:\"ex:0
  for bank\";}s:11:\"accBankType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"ex:Savings
  or Checking\";}s:11:\"accBankName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:10:\"ex:\"Citi\",\";}s:14:\"acctHolderName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"Name
  of the bank acct holder\";}s:11:\"accBankRout\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"Routing
  Number of Bank Acct\";}s:10:\"accZipcode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"zipcode
  of bank\";}s:7:\"accCity\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  city where bank is registered\";}s:8:\"accState\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"The
  state where bank is registered\";}s:9:\"accStreet\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  street where bank is registered\";}s:6:\"acctNo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"The
  acct number of the card holder\";}s:6:\"imeiNo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"IMEI
  Number of User\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:20:\"Phone
  Number of User\";}s:7:\"emailId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"email
  address of User\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"BankInfo\";}}s:7:\"appCRef\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:11:\"accNickName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"nickname
  of the card or bank acct\";}s:5:\"token\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:21:\"The
  tokens associated\";s:4:\"$ref\";s:27:\"#/definitions/appCardTokens\";}s:4:\"code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:12:\"CRefResponse\";}}s:13:\"appCardTokens\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"tokenName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"tokenValue\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:10:\"CardTokens\";}}s:10:\"appPOSInfo\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"POSId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:118:\"The
  POS ID (ex:4554) or the IP address/Page Id(\"127.0.0.1;7204889ADA49DD30520E3B8766D1F980fftQ3\")
  from QR Code scanned\";}s:7:\"StoreId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"The
  store Id\";}s:8:\"CheckSum\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Unique
  checksum\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"POSInfo\";}}s:18:\"POSAmountWithToken\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"Total\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:5:\"Token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:14:\"posAmountToken\";}}}"
...
