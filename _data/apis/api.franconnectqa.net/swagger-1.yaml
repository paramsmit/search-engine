---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:41:\"FranConnect SKY
  REST API Developer Portal\";s:7:\"version\";s:3:\"1.0\";s:5:\"title\";s:24:\"FranConnect
  SKY REST API\";s:14:\"termsOfService\";s:16:\"Terms of service\";s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"name\";s:11:\"FranConnect\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:11:\"FranConnect\";s:3:\"url\";s:38:\"http://www.franconnect.com/license.txt\";}}"
host: api.franconnectqa.net:8093
basePath: /task
paths:
  /:
    get:
      tags:
      - Tasks Api
      summary: get
      description: Fetch all the task data
      operationId: get_2
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - Tasks Api
      summary: save or saveInBatch
      description: save task tuples as a single or In batch
      operationId: save or saveInBatch
      consumes:
      - application/json
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: datalist
        description: ParameterType:ArrayList<Entity>
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/Mapu00abstring,objectu00bb'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
      - Tasks Api
      summary: update
      description: Update all tasks
      operationId: update
      consumes:
      - application/json
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: datalist
        description: ParameterType:ArrayList<Entity>
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/Mapu00abstring,objectu00bb'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /batch/{id}:
    put:
      tags:
      - Tasks Api
      summary: batch
      description: Create/Update/Delete Tasks based on visit id
      operationId: batch
      consumes:
      - application/json
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: ParameterType:Integer
        required: false
        type: integer
        format: int32
        enum:
        - Integer
      - in: body
        name: tasks
        description: tasks
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Mapu00abstring,objectu00bb'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /delete:
    post:
      tags:
      - Tasks Api
      summary: delete
      description: delete the tasks based on parameters passed in batch or as a single
        entity
      operationId: delete
      consumes:
      - application/json
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: datalist
        description: ParameterType:ArrayList<Entity>
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/Mapu00abstring,objectu00bb'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /downloadFile:
    get:
      tags:
      - download-controller
      summary: getSteamingFile
      operationId: getSteamingFileUsingGET
      produces:
      - '*/*'
      parameters:
      - name: filename
        in: query
        description: filename
        required: true
        type: string
      - name: pathKey
        in: query
        description: pathKey
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /filter:
    post:
      tags:
      - Tasks Api
      summary: get
      description: Fetch all tasks data based on Task filter
      operationId: get
      consumes:
      - application/json
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: filters
        description: ParameterType:TaskFilter
        required: false
        schema:
          $ref: '#/definitions/TaskFilter'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /listmeta/{id}:
    get:
      tags:
      - Tasks Api
      summary: getListMeta
      description: provide the Summary page Meta Data like Filters Summary Headers
        and Cards with data.
      operationId: getListMeta
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: ParameterType:Integer
        required: false
        type: integer
        format: int32
        enum:
        - Integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /savedFilter:
    get:
      tags:
      - Tasks Api
      summary: savedFilter
      description: provide the Saved Filter Json Data  based on the logged User.
      operationId: getSavedFilter
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /status:
    get:
      tags:
      - Tasks Api
      summary: getStatusDropDown
      description: provide the task status dropdown
      operationId: getDropDown
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /statusHistory/{taskId}:
    get:
      tags:
      - Tasks Api
      summary: get
      description: Fetch all tasks history logs based on taskId
      operationId: get_1
      produces:
      - application/xml
      - application/json
      parameters:
      - name: taskId
        in: path
        description: ParameterType:Integer
        required: false
        type: integer
        format: int32
        enum:
        - Integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /upload:
    post:
      tags:
      - upload-controller
      summary: upload
      operationId: uploadUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/definitions/FileMetaDataBean'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /{id}:
    get:
      tags:
      - Tasks Api
      summary: getById
      description: Fetch task data based on task id
      operationId: getById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: ParameterType:Integer
        required: false
        type: integer
        format: int32
        enum:
        - Integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abobjectu00bbu00bb'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
      - Tasks Api
      summary: deleteById
      description: Delete task based on id
      operationId: deleteById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: ParameterType:Integer
        required: false
        type: integer
        format: int32
        enum:
        - Integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Responseu00abResultu00abVoidResultu00bbu00bb'
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
definitions: !php/object "O:8:\"stdClass\":11:{s:16:\"FileMetaDataBean\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:15:\"fileContentType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"fileOriginalName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"filePathKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"filename\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"previewPathKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:16:\"FileMetaDataBean\";}s:16:\"FilterConstraint\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:16:\"FilterConstraint\";s:11:\"description\";s:76:\"This
  model is used for filter-contraints having field operation and values  \";}s:4:\"Page\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"groupBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"pageId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"sort\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Sort\";}s:10:\"totalPages\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"totalRecords\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"viewAll\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:5:\"title\";s:4:\"Page\";}s:20:\"Map\xABstring,object\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"response\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/Result\xABVoidResult\xBB\";}}s:5:\"title\";s:32:\"Response\xABResult\xABVoidResult\xBB\xBB\";}s:32:\"Response\xABResult\xABVoidResult\xBB\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"response\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/Result\xABVoidResult\xBB\";}}s:5:\"title\";s:32:\"Response\xABResult\xABVoidResult\xBB\xBB\";}s:28:\"Response\xABResult\xABobject\xBB\xBB\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"response\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/Result\xABobject\xBB\";}}s:5:\"title\";s:28:\"Response\xABResult\xABobject\xBB\xBB\";}s:20:\"Result\xABVoidResult\xBB\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"data\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:4:\"$ref\";s:24:\"#/definitions/VoidResult\";}s:4:\"page\";O:8:\"stdClass\":2:{s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"page\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:4:\"$ref\";s:18:\"#/definitions/Page\";}}s:5:\"title\";s:20:\"Result\xABVoidResult\xBB\";s:11:\"description\";s:61:\"Return
  the Result of anyType along with data & Page attribute\";}s:16:\"Result\xABobject\xBB\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"data\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}}s:4:\"page\";O:8:\"stdClass\":2:{s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"page\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:4:\"$ref\";s:18:\"#/definitions/Page\";}}s:5:\"title\";s:16:\"Result\xABobject\xBB\";s:11:\"description\";s:61:\"Return
  the Result of anyType along with data & Page attribute\";}s:4:\"Sort\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"columns\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:9:\"direction\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:3:\"ASC\";i:1;s:4:\"DESC\";}}}s:5:\"title\";s:4:\"Sort\";}s:10:\"TaskFilter\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":38:{s:10:\"assignedTo\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"audtior\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"cdate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"cfromDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"completedPage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"constraints\";O:8:\"stdClass\":6:{s:4:\"type\";s:6:\"object\";s:7:\"example\";s:39:\"format:
  {db_field:{operation:dataValue}\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:11:\"constraints\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:11:\"description\";s:4:\"page\";s:15:\"allowEmptyValue\";b:0;s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/FilterConstraint\";}}s:11:\"createdDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ctoDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"date\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"descriptionchk\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"dueDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"endDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"endFromDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"endToDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"fields\";O:8:\"stdClass\":5:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:6:\"fields\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:11:\"description\";s:6:\"fields\";s:15:\"allowEmptyValue\";b:0;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:13:\"filterApplied\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:13:\"filterApplied\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}}s:6:\"formID\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"franchiseId\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"fromDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"fromSummary\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"fromWhere\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"layout\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"page\";O:8:\"stdClass\":4:{s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"page\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}s:11:\"description\";s:4:\"page\";s:15:\"allowEmptyValue\";b:0;s:4:\"$ref\";s:18:\"#/definitions/Page\";}s:8:\"priority\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"saveView\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:3:\"xml\";O:8:\"stdClass\":3:{s:4:\"name\";s:8:\"saveView\";s:9:\"attribute\";b:0;s:7:\"wrapped\";b:0;}}s:11:\"searchWords\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"startFromDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"startToDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"subject\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"subjectchk\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"taskId\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"taskchk\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"toDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"userNo\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"visitId\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:10:\"visitNoChk\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";s:10:\"TaskFilter\";s:11:\"description\";s:42:\"This
  filter is apply only for Task Service\";}s:10:\"VoidResult\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}s:5:\"title\";s:10:\"VoidResult\";}}"
...
