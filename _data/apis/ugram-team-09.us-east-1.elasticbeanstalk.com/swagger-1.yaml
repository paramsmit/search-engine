---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:9:\"Ugram
  Api\";s:11:\"description\";s:21:\"Api for Ugram Project\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:35:\"https://opensource.org/licenses/MIT\";}}"
host: ugram-team-09.us-east-1.elasticbeanstalk.com
basePath: /
paths:
  /users:
    get:
      tags:
      - Users
      summary: Get all users in system
      parameters:
      - name: page
        in: query
        required: false
        description: Get Specific page
        type: number
      - name: perPage
        in: query
        required: false
        description: number of items per page
        type: number
      - name: search
        in: query
        required: false
        description: Value of your generic search
        type: string
      responses:
        200:
          description: Request OK
          schema:
            $ref: '#/definitions/Users'
  /users/{userId}:
    parameters:
    - name: userId
      in: path
      required: true
      description: ID of user that we want to find
      type: string
    get:
      tags:
      - Users
      summary: Get user with given ID
      responses:
        200:
          description: Return user info
          schema:
            $ref: '#/definitions/User'
        404:
          description: Not found
    delete:
      description: 'Need ?access_token=XXXXXtokenXXXX in path request or Authorization:
        Bearer XXtokenXX in header'
      summary: Delete user with given ID
      tags:
      - Users
      parameters:
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      responses:
        200:
          description: User is deleted
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: Not found
      security:
      - login: []
    put:
      description: 'Need ?access_token=XXXXXtokenXXXX in path request or Authorization:
        Bearer XXtokenXX in header'
      summary: Update user with give ID
      tags:
      - Users
      parameters:
      - name: user
        in: body
        description: User with new values of properties
        schema:
          $ref: '#/definitions/User'
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      responses:
        200:
          description: User is updated
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: Not found
      security:
      - login: []
  /pictures:
    get:
      tags:
      - Pictures
      summary: Get all pictures
      parameters:
      - name: page
        in: query
        required: false
        description: Get Specific picture page
        type: number
      - name: perPage
        in: query
        required: false
        description: number of items per page
        type: number
      - name: search
        in: query
        required: false
        description: Value of your generic search
        type: string
      responses:
        200:
          description: Request OK
          schema:
            $ref: '#/definitions/Pictures'
  /users/{userId}/pictures:
    get:
      tags:
      - User Pictures API
      summary: Get all user's pictures
      parameters:
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: page
        in: query
        required: false
        description: Get Specific picture page
        type: number
      - name: perPage
        in: query
        required: false
        description: number of items per page
        type: number
      - name: search
        in: query
        required: false
        description: Value of your generic search
        type: string
      responses:
        200:
          description: Request OK
          schema:
            $ref: '#/definitions/Pictures'
        404:
          description: Not found
    post:
      description: 'Need ?access_token=XXXXXtokenXXXX in path request or Authorization:
        Bearer XXtokenXX in header'
      summary: Add picture
      tags:
      - User Pictures API
      consumes:
      - multipart/form-data
      parameters:
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: description
        in: formData
        description: Descritpion of new picture
        type: string
        required: false
      - name: tags
        in: formData
        description: 'tags of new picture ex: #a #b'
        type: array
        items:
          type: string
        required: false
      - name: mentions
        in: formData
        description: 'mention of new picture ex: @a @b'
        type: array
        items:
          type: string
        required: false
      - name: file
        in: formData
        required: true
        description: the picture to upload
        type: file
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      responses:
        200:
          description: Picture add
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User Not found
      security:
      - login: []
  /users/{userId}/notifications:
    get:
      tags:
      - User Pictures API
      summary: Get all notification of a user
      parameters:
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      responses:
        200:
          description: Request OK
          schema:
            $ref: '#/definitions/Notification'
        404:
          description: UserId Not found
    post:
      description: 'Need ?access_token=XXXXXtokenXXXX in path request or Authorization:
        Bearer XXtokenXX in header'
      summary: Add picture
      tags:
      - User Pictures API
      parameters:
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      responses:
        200:
          description: Notification read
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User Not found
      security:
      - login: []
  /users/{userId}/pictures/{pictureId}:
    get:
      tags:
      - User Pictures API
      summary: Get a single picture
      parameters:
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: pictureId
        in: path
        required: true
        description: picture id
        type: number
      responses:
        200:
          description: Request OK
          schema:
            $ref: '#/definitions/Picture'
        404:
          description: User or Picture Id Not found
    put:
      description: 'Need ?access_token=XXXXXtokenXXXX in path request or Authorization:
        Bearer XXtokenXX in header'
      summary: Edits the fields of a picture for a user
      tags:
      - User Pictures API
      parameters:
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: pictureId
        in: path
        required: true
        description: picture id
        type: number
      - name: picture
        in: body
        required: true
        description: Picture with new values of properties
        schema:
          $ref: '#/definitions/PictureEdit'
      responses:
        200:
          description: Picture is updated
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User or Picture Id Not found
      security:
      - login: []
    delete:
      description: 'Need ?access_token=XXXXXtokenXXXX in path request or Authorization:
        Bearer XXtokenXX in header'
      summary: Delete user with given ID
      tags:
      - User Pictures API
      parameters:
      - name: userId
        in: path
        required: true
        description: user id
        type: string
      - name: pictureId
        in: path
        required: true
        description: picture id
        type: number
      - name: access_token
        in: query
        required: true
        description: XXXtokenXXX
        type: string
      responses:
        200:
          description: Picture is deleted
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User or Picture Id Not found
      security:
      - login: []
  /oauth/token:
    post:
      tags:
      - Login - Register OAuth2
      summary: Login - Get new token
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: username
        in: formData
        required: true
        description: username
        type: string
      - name: password
        in: formData
        required: true
        description: password
        type: string
      - name: client_id
        in: formData
        required: true
        description: client id oauth
        type: string
        value: abc123
      - name: client_secret
        in: formData
        required: true
        description: client secret oauth
        type: string
        value: ssh-password
      - name: grant_type
        in: formData
        required: true
        description: Value of your generic search
        type: string
        value: password
      responses:
        200:
          description: Request token
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        501:
          description: Bad grand_type
      security:
      - login: []
  /oauth/register:
    post:
      tags:
      - Login - Register OAuth2
      summary: register new client
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: username
        in: formData
        required: true
        description: username
        type: string
      - name: password
        in: formData
        required: true
        description: password
        type: string
      - name: client_id
        in: formData
        required: true
        description: client id oauth
        type: string
        value: abc123
      - name: client_secret
        in: formData
        required: true
        description: client secret oauth
        type: string
        value: ssh-password
      - name: grant_type
        in: formData
        required: true
        description: Value of your generic search
        type: string
        value: password
      responses:
        200:
          description: Register new User
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - login: []
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":9:{s:4:\"User\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:5:\"email\";i:1;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"uniqueItems\";b:1;}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"pictureUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"registrationDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}s:5:\"Users\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"totalEntries\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"totalPages\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}}}}s:4:\"Like\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"userId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Picture\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:11:\"uniqueItems\";b:1;}s:11:\"createdDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"mentions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"tags\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"userId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Like\";}}s:6:\"nbLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}}}s:11:\"PictureEdit\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:5:\"email\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"mentions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"tags\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:7:\"Comment\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Notification\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Pictures\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"totalEntries\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"totalPages\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Picture\";}}}}s:5:\"Token\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"access_token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"token_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
