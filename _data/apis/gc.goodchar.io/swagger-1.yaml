---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:274:\"This is a sample
  server goodchar server.  You can find out more about Swagger at [http://goodchar.io](http://goodchar.io)
  or on [irc.freenode.net, #goodchar](http://goodchar.io/irc/).  For this sample,
  you can use the api key `special-key` to test the authorization filters.\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:8:\"GoodChar\";s:14:\"termsOfService\";s:25:\"http://goodchar.io/terms/\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:19:\"apiteam@goodchar.io\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
host: gc.goodchar.io
basePath: /gc
paths:
  /ngo/allocateVolunteer:
    post:
      tags:
      - ngo
      summary: Add a new Volunteer to the Organization
      description: ""
      operationId: allocateVolunteer
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Volunteer'
      responses:
        405:
          description: Invalid input
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /ngo/createDonationCamp:
    post:
      tags:
      - ngo
      summary: Create a new donation camp for distribution
      description: ""
      operationId: createDonationCamp
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Volunteer'
      responses:
        405:
          description: Invalid input
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /ngo/validateVolunteers:
    put:
      tags:
      - ngo
      summary: Update an existing Volunteer
      description: ""
      operationId: validateVolunteers
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Volunteer_ID
        description: Volunteer information that needs to be validated in the organization
        required: true
        schema:
          $ref: '#/definitions/Volunteer'
      responses:
        400:
          description: Invalid Volunteers ID supplied
        404:
          description: Volunteer not found
        405:
          description: Volunteers Validation exception
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /ngo/allocateAssetsToVolunteer:
    put:
      tags:
      - ngo
      summary: Allocate Asset to volunteer
      description: ""
      operationId: allocateAssetsToVolunteer
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Volunteer_ID,Asset_id
        description: Volunteer information that needs to be updated to the organization
        required: true
        schema:
          $ref: '#/definitions/Asset'
      responses:
        400:
          description: Invalid Volunteer ID / Asset ID supplied
        404:
          description: Volunteer/Asset not found
        405:
          description: Volunteer/Asset Validation exception
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /ngo/allocateLogistics:
    post:
      tags:
      - ngo
      summary: allocate logistics to donation
      description: ""
      operationId: allocateLogistics
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Asset_id, Logistic_Id
        description: Volunteer information that needs to be updated to the organization
        required: true
        schema:
          $ref: '#/definitions/Logistics'
      responses:
        400:
          description: Invalid Asset ID / Logistic allotment supplied
        404:
          description: Asset id / logistic allotment not found
        405:
          description: Asset id / logistic allotment  Validation exception
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /ngo/listProject:
    get:
      tags:
      - ngo
      summary: Finds projects listed in org
      description: Multiple projects lists
      operationId: listProject
      produces:
      - application/xml
      - application/json
      parameters:
      - name: status
        in: query
        description: Project Status values that need to be considered for filter
        required: true
        type: array
        items:
          type: string
          enum:
          - Active
          - Completed
          - To Be Tagged
          default: available
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        400:
          description: Invalid status value
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /ngo/listCauses:
    get:
      tags:
      - ngo
      summary: Finds Causes listed in org
      description: Multiple Causes lists
      operationId: listCauses
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Cause_Name
        in: query
        description: causes  values that need to be considered for filter
        required: true
        type: array
        items:
          type: string
          enum:
          - Food
          - Cloths
          - Others
          default: available
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Causes'
        400:
          description: Invalid status value
      security:
      - ngo_auth:
        - write:ngo
        - read:ngo
  /volunteer/registerSelf:
    post:
      tags:
      - Volunteer
      summary: register as new volunteer
      description: ""
      operationId: VolunteerregisterSelf
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Volunteer details to be added
        required: true
        schema:
          $ref: '#/definitions/Volunteer'
      responses:
        405:
          description: Invalid input
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/pickupAssetLot:
    post:
      tags:
      - Volunteer
      summary: pick asset & assign lot
      description: ""
      operationId: pickupAssetLot
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Asset_id
        description: Asset details to be assigned with lot#
        required: true
        schema:
          $ref: '#/definitions/Asset'
      responses:
        405:
          description: Invalid input
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/startDonationCamp:
    put:
      tags:
      - Volunteer
      summary: Start donation camp
      description: ""
      operationId: startDonationCamp
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Project_Id
        description: Donation camp id will be generated and assigned to project
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        400:
          description: Invalid project id/ camp id supplied
        404:
          description: project not found
        405:
          description: project Validation exception
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/closeDonationCamp:
    put:
      tags:
      - Volunteer
      summary: close donation camp
      description: ""
      operationId: closeDonationCamp
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Project_Id
        description: Donation camp  will be updated with status completed
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        400:
          description: Invalid project id/ camp id supplied
        404:
          description: project not found
        405:
          description: project Validation exception
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/scanAssetForDonee:
    put:
      tags:
      - Volunteer
      summary: scan asset to distribute to donee
      description: ""
      operationId: scanAssetForDonee
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Asset_id
        description: scan asset will be get QR Code and distribute to donee
        required: true
        schema:
          $ref: '#/definitions/Asset'
      responses:
        400:
          description: Invalid project id/ camp id supplied
        404:
          description: project not found
        405:
          description: project Validation exception
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/registerDonee:
    post:
      tags:
      - Volunteer
      summary: register as new donee
      description: ""
      operationId: registerDoneeByVolunteer
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Donne_id
        description: Donee details to be added
        required: true
        schema:
          $ref: '#/definitions/Donee'
      responses:
        405:
          description: Invalid input
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/scanDoneeFingerPrint:
    post:
      tags:
      - Volunteer
      summary: scan donee biometric
      description: ""
      operationId: scanDoneeFingerPrint
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Donne_id
        description: Donee biometrics to be scanned
        required: true
        schema:
          $ref: '#/definitions/Donee'
      responses:
        405:
          description: Invalid input
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /volunteer/playAudio:
    get:
      tags:
      - Volunteer
      summary: Play audio in distribution process
      description: ""
      operationId: playAudio
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Donee_id
        in: path
        description: ""
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Donee'
        400:
          description: Invalid status value
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /Donor/registerSelf:
    post:
      tags:
      - Donor
      summary: register as new Donor
      description: ""
      operationId: DonorregisterSelf
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: donor details to be added
        required: true
        schema:
          $ref: '#/definitions/Donor'
      responses:
        405:
          description: Invalid input
      security:
      - donor_auth:
        - write:donor
        - read:donor
  /Donor/donateAsset:
    put:
      tags:
      - Donor
      summary: donate Asset to ngo
      description: ""
      operationId: donateAsset
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Donor_id
        description: donate asset to ngo
        required: true
        schema:
          $ref: '#/definitions/Asset'
      responses:
        400:
          description: Invalid Donor ID / Asset ID supplied
        404:
          description: Donor/Asset not found
        405:
          description: Donor/Asset Validation exception
      security:
      - donor_auth:
        - write:donor
        - read:donor
  /Donee/registerDonee:
    post:
      tags:
      - Donee
      summary: register Donee details
      description: ""
      operationId: registerDonee
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Donee details to be added
        required: true
        schema:
          $ref: '#/definitions/Donee'
      responses:
        405:
          description: Invalid input
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /Donee/requestHelp:
    post:
      tags:
      - Donee
      summary: request Help
      description: ""
      operationId: requestHelp
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Donee_id
        description: request help
        required: true
        schema:
          $ref: '#/definitions/Donee'
      responses:
        405:
          description: Invalid input
      security:
      - donee_auth:
        - write:donee
        - read:donee
  /Donation/retrieveDonation:
    get:
      tags:
      - Donation
      summary: List donation
      description: Display donation details
      operationId: retrieveDonation
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Donation_id
        in: query
        description: list donation details
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Donation'
        400:
          description: Invalid status value
      security:
      - donor_auth:
        - write:donor
        - read:donor
  /Transactions/createTransaction:
    put:
      tags:
      - Transactions
      summary: Start transation
      description: ""
      operationId: createTransaction
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Transaction_ID
        description: start donation/distribution transaction
        required: true
        schema:
          $ref: '#/definitions/Transactions'
      responses:
        400:
          description: Invalid transaction id/ NGO/Donor/Volunteer id supplied
        404:
          description: trx id generation issue
        405:
          description: transaction Validation exception
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /Transactions/retriveTransaction:
    get:
      tags:
      - Transactions
      summary: List transactions
      description: Display transaction details
      operationId: retriveTransaction
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Transaction_ID
        in: query
        description: list transaction details
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Transactions'
        400:
          description: Invalid status value
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /Asset/registerAsset:
    post:
      tags:
      - Asset
      summary: Create a new Asset
      description: ""
      operationId: registerAsset
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Asset details will be  added to the repository
        required: true
        schema:
          $ref: '#/definitions/Asset'
      responses:
        405:
          description: Invalid input
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /Asset/assciateAssetToLot:
    put:
      tags:
      - ngo
      summary: associate Asset with lot number
      description: ""
      operationId: assciateAssetToLot
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: Asset_id
        description: Assing lot number to asset
        required: true
        schema:
          $ref: '#/definitions/Asset'
      responses:
        400:
          description: Invalid Lot  / Asset ID supplied
        404:
          description: Asset not found
        405:
          description: Asset Validation exception
      security:
      - volunteer_auth:
        - write:volunteer
        - read:volunteer
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        400:
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        default:
          description: successful operation
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":14:{s:4:\"User\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"userStatus\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:11:\"User
  Status\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"User\";}}s:8:\"Category\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"Category\";}}s:3:\"Tag\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:3:\"Tag\";}}s:3:\"NGO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"NGO_ID\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"NGO_NAME\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"NGO_poc\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"NGO_Phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"NGO_Email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"NGO_Address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:3:\"NGO\";}}s:9:\"Volunteer\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:12:\"Volunteer_ID\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"Volunteer_Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"Volunteer_Phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"Volunteer_Email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"Volunteer_Address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"Volunteer_Govt_Id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:27:\"Volunteer_Biometric_Details\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"Volunteer_photo\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"Volunteer_comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:9:\"Volunteer\";}}s:12:\"Transactions\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:14:\"Transaction_ID\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"NGO_ID\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"Donor_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"Donation_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"Volunteer_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"Donee_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"Asset_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"Cause_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"Comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:12:\"Transactions\";}}s:5:\"Donor\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"Donor_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"Donor_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"Donor_mobile_number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"Donor_email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"Donor_Address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"Donor_Govt_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:5:\"Donor\";}}s:8:\"Donation\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:11:\"Donation_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"Donation_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"Donor_cause\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"Donation_Items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"Donation_amount\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:16:\"Donation_camp_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"Comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"Donation\";}}s:5:\"Asset\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:8:\"Asset_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:15:\"Asset_Bundle_ID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:8:\"Donor_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:13:\"Asset_QR_Code\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"Asset_Status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Cause_ID\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:5:\"Asset\";}}s:5:\"Donee\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:8:\"Donee_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"Donee_name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"Donee_mobile_number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"Donee_email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"Donee_Address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"Donee_Govt_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"Donee_Received_Items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"Donee_Received_amount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:23:\"Donee_Biometric_Details\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"Donee_photo\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"Donee_comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:5:\"Donee\";}}s:6:\"Causes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"Cause_Id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"Cause_Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"Cause_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:6:\"Causes\";}}s:7:\"Project\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"Project_Id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"Project_Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"Donation_Camp_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:20:\"Donation_camp_status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Cause_Id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"Project_status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"Project\";}}s:9:\"Logistics\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"Logistics_Id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"Logistics_Name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"Logistics_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Comments\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"Asset_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:9:\"Logistics\";}}s:11:\"ApiResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
