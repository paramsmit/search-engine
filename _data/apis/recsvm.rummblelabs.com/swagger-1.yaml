---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":9:{s:11:\"description\";s:162:\"Seldon is an Open
  Predictive Platform that currently allows item recommendations and general predictive
  models to be deployed based on structured historical data.\";s:5:\"title\";s:6:\"Seldon\";s:7:\"version\";s:5:\"1.0.0\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:16:\"machine_learning\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:82:\"https://api.apis.guru/v2/cache/logo/https_twitter.com_seldon_io_profile_image.jpeg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:50:\"http://recsvm.rummblelabs.com/api-spec/seldon.json\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:15:\"rummblelabs.com\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:11:\"rummblelabs\";s:4:\"type\";s:7:\"openapi\";}}"
host: recsvm.rummblelabs.com
paths:
  /actions:
    post:
      consumes:
      - application/json
      description: ""
      operationId: postAction
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the json details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Action'
      responses:
        400:
          description: Invalid parameters
      summary: post new action between a user and an item
      tags:
      - oauth actions
  /items:
    get:
      description: ""
      operationId: getItems
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: get all attributes for item
        in: query
        name: full
        required: false
        type: boolean
      - description: keywords to match
        in: query
        name: name
        required: false
        type: string
      - description: limit items to a particular dimension
        in: query
        name: dimension
        required: false
        type: integer
      - description: limit items to a particular type
        in: query
        name: type
        required: false
        type: integer
      - description: limit number of items returned
        in: query
        name: limit
        required: false
        type: integer
      responses:
        400:
          description: Invalid parameters
      summary: get items
      tags:
      - oauth items
    post:
      consumes:
      - application/json
      description: ""
      operationId: postItem
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the json details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Item'
      responses:
        400:
          description: Invalid parameters
      summary: post new item
      tags:
      - oauth items
    put:
      consumes:
      - application/json
      description: ""
      operationId: putItem
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the json details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Item'
      responses:
        400:
          description: Invalid parameters
      summary: update item
      tags:
      - oauth items
  /items/type:
    get:
      description: ""
      operationId: getItemTypes
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      responses:
        400:
          description: Invalid parameters
      summary: get item type
      tags:
      - oauth items
  /items/{itemId}:
    get:
      description: ""
      operationId: getItem
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the item id to get
        in: path
        name: itemId
        required: true
        type: string
      - description: get all attributes for item
        in: query
        name: full
        required: false
        type: boolean
      responses:
        400:
          description: Invalid parameters
      summary: get item
      tags:
      - oauth items
  /js/action/new:
    get:
      consumes:
      - application/json
      description: ""
      operationId: addAction
      parameters:
      - default: uggyecofcz
        description: consumer key
        in: query
        name: consumer_key
        required: true
        type: string
      - description: user id
        in: query
        name: user
        required: true
        type: string
      - description: item id
        in: query
        name: item
        required: true
        type: string
      - description: type
        in: query
        name: type
        required: true
        type: string
      - description: JSONP callback
        in: query
        name: jsonpCallback
        required: true
        type: string
      - description: time
        in: query
        name: timestamp
        required: false
        type: integer
      responses:
        400:
          description: Invalid parameters
      summary: Add a user interaction
      tags:
      - js actions
  /js/recommendations:
    get:
      description: ""
      operationId: getRecommendation
      parameters:
      - default: uggyecofcz
        description: consumer key
        in: query
        name: consumer_key
        required: true
        type: string
      - description: user id
        in: query
        name: user
        required: true
        type: string
      - description: currently viewed item id
        in: query
        name: item
        required: false
        type: string
      - description: max number of recommendations to return
        in: query
        name: limit
        required: false
        type: integer
      - description: get recommendations for a particular item dimension (e.g., just
          sports articles)
        in: query
        name: dimension
        required: false
        type: integer
      - description: the fields to return
        format: command separated list
        in: query
        name: attributes
        required: false
        type: string
      - description: override default algorithms with specified algorithms
        in: query
        name: algorithms
        required: false
        type: string
      - description: JSONP callback
        in: query
        name: jsonpCallback
        required: true
        type: string
      responses:
        400:
          description: Invalid parameters
      summary: Get recommendations for a user
      tags:
      - js recommendations
  /token:
    get:
      description: ""
      operationId: getToken
      parameters:
      - description: consumer key
        in: query
        name: consumer_key
        required: true
        type: string
      - description: consumer secret
        in: query
        name: consumer_secret
        required: true
        type: string
      responses:
        400:
          description: Invalid parameters
      summary: get token
      tags:
      - token
  /users:
    get:
      description: ""
      operationId: getUsers
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: get all attributes for user
        in: query
        name: full
        required: false
        type: boolean
      - description: keywords to match
        in: query
        name: name
        required: false
        type: string
      - description: limit number of users returned
        in: query
        name: limit
        required: false
        type: integer
      responses:
        400:
          description: Invalid parameters
      summary: get users
      tags:
      - oauth users
    post:
      consumes:
      - application/json
      description: ""
      operationId: postUser
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the json details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        400:
          description: Invalid parameters
      summary: post new user
      tags:
      - oauth users
    put:
      consumes:
      - application/json
      description: ""
      operationId: updateUser
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the json details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        400:
          description: Invalid parameters
      summary: update user
      tags:
      - oauth users
  /users/{userId}:
    get:
      description: ""
      operationId: getUser
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the user id to get
        in: path
        name: userId
        required: true
        type: string
      - description: get all attributes for user
        in: query
        name: full
        required: false
        type: boolean
      responses:
        400:
          description: Invalid parameters
      summary: get a user
      tags:
      - oauth users
  /users/{userId}/actions:
    get:
      description: ""
      operationId: getUserActions
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the user id to get
        in: path
        name: userId
        required: true
        type: string
      - description: get all attributes for user
        in: query
        name: full
        required: false
        type: boolean
      - description: limit number of actions returned
        in: query
        name: limit
        required: false
        type: integer
      responses:
        400:
          description: Invalid parameters
      summary: get a user's recent actions
      tags:
      - oauth users
      - oauth actions
  /users/{userId}/recommendations:
    get:
      description: ""
      operationId: getUserRecommendations
      parameters:
      - description: oauth token
        in: query
        name: oauth_token
        required: false
        type: string
      - description: the user id to get
        in: path
        name: userId
        required: true
        type: string
      - description: get all attributes for user
        in: query
        name: full
        required: false
        type: boolean
      - description: limit number of actions returned
        in: query
        name: limit
        required: false
        type: integer
      - description: get recommendations for a particular item dimension (e.g., just
          sports articles)
        in: query
        name: dimension
        required: false
        type: integer
      - description: override default algorithms with specified algorithms
        in: query
        name: algorithms
        required: false
        type: string
      responses:
        400:
          description: Invalid parameters
      summary: get recommendations for a user
      tags:
      - oauth users
      - oauth recommendations
produces:
- application/json
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":4:{s:6:\"Action\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"item\";O:8:\"stdClass\":2:{s:7:\"example\";s:8:\"item1234\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"action
  type\";s:4:\"type\";s:7:\"integer\";}s:4:\"user\";O:8:\"stdClass\":2:{s:7:\"example\";s:8:\"user1234\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"action
  value (e.g. a rating)\";s:4:\"type\";s:6:\"number\";}}s:8:\"required\";a:3:{i:0;s:4:\"user\";i:1;s:4:\"item\";i:2;s:4:\"type\";}}s:14:\"AttributesName\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"attrName1\";O:8:\"stdClass\":2:{s:7:\"example\";s:10:\"attrValue1\";s:4:\"type\";s:6:\"string\";}s:9:\"attrName2\";O:8:\"stdClass\":2:{s:7:\"example\";s:10:\"attrValue2\";s:4:\"type\";s:6:\"string\";}}}s:4:\"Item\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"attributesName\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributesName\";}s:2:\"id\";O:8:\"stdClass\":2:{s:7:\"example\";s:8:\"myid1234\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"type
  of item\";s:7:\"example\";i:1;s:4:\"type\";s:7:\"integer\";}}s:8:\"required\";a:1:{i:0;s:2:\"id\";}}s:4:\"User\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:6:\"active\";O:8:\"stdClass\":2:{s:11:\"description\";s:22:\"whether
  user is active\";s:4:\"type\";s:7:\"boolean\";}s:14:\"attributesName\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/AttributesName\";}s:2:\"id\";O:8:\"stdClass\":2:{s:7:\"example\";s:8:\"myid1234\";s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"name
  of user\";s:7:\"example\";s:10:\"Joe Bloggs\";s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:2:\"id\";}}}"
...
