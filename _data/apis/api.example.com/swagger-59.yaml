---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"2.0.0\";s:5:\"title\";s:14:\"AI
  Manager API\";s:11:\"description\";s:5:\"<br/>\";s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"AgentIQ\";}}"
basePath: /
paths:
  /actions:
    get:
      tags:
      - Actions
      summary: GET /actions
      description: returns all entries
      parameters:
      - name: q
        description: free text search
        in: query
        required: false
        type: string
      - name: limit
        in: query
        required: false
        type: integer
      - name: offset
        in: query
        required: false
        type: integer
      responses:
        200:
          description: list of entries
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/bits.pagination'
              data:
                type: array
                items:
                  $ref: '#/definitions/Action'
    put:
      tags:
      - Actions
      summary: PUT /actions
      description: replace entire collection
      parameters:
      - name: actions
        in: body
        required: true
        schema:
          type: object
          required:
          - data
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/Action'
      responses:
        204:
          description: success
    post:
      tags:
      - Actions
      summary: POST /actions
      description: create an entry
      parameters:
      - name: action
        in: body
        required: true
        schema:
          $ref: '#/definitions/Action'
      responses:
        201:
          description: success
          schema:
            $ref: '#/definitions/Action'
  /actions/{id}:
    get:
      tags:
      - Actions
      summary: GET /actions/{id}
      description: returns one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: returns one entry
          schema:
            $ref: '#/definitions/Action'
    put:
      tags:
      - Actions
      summary: PUT /actions/{id}
      description: replace one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: action
        in: body
        required: true
        schema:
          $ref: '#/definitions/Action'
      responses:
        204:
          description: success
          schema:
            $ref: '#/definitions/Action'
    delete:
      tags:
      - Actions
      summary: DELETE /actions/{id}
      description: delete one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: success
  /building-kit:
    get:
      tags:
      - Building Kit
      summary: GET /building-kit
      description: returns matched objects
      parameters:
      - name: q
        description: free text search matched agains templates
        in: query
        required: false
        type: string
      - name: type
        in: query
        type: string
        required: false
        enum:
        - dialog
        - intent
        - workflow
        - action
        - response
      responses:
        200:
          description: list of dialogs
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/bits.pagination'
              data:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                      - dialog
                      - intent
                      - workflow
                      - action
                      - response
                    item:
                      type: object
                      properties:
                        id:
                          type: string
                          default: 123
                        name:
                          type: string
                          default: name of item
  /entities:
    get:
      tags:
      - Entities
      summary: GET /entities
      description: returns all entities
      parameters:
      - name: q
        description: free text search
        in: query
        required: false
        type: string
      - name: limit
        in: query
        required: false
        type: integer
      - name: offset
        in: query
        required: false
        type: integer
      responses:
        200:
          description: list of entities
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/bits.pagination'
              data:
                type: array
                items:
                  $ref: '#/definitions/Entity'
    put:
      tags:
      - Entities
      summary: PUT /entities
      description: replace entire collection
      parameters:
      - name: entities
        in: body
        required: true
        schema:
          $ref: '#/definitions/EntityList'
      responses:
        204:
          description: success
    post:
      tags:
      - Entities
      summary: POST /entities
      description: Create an entity
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/EntityUpdate'
      responses:
        204:
          description: success
        409:
          description: Name already exist
  /entities/{name}:
    get:
      tags:
      - Entities
      summary: GET /entities/{name}
      description: returns all entities
      parameters:
      - name: name
        in: path
        required: true
        type: string
      responses:
        200:
          description: single entity
          schema:
            $ref: '#/definitions/Entity'
    delete:
      tags:
      - Entities
      summary: DELETE /entities/{name}
      description: delete one entity
      parameters:
      - name: name
        in: path
        required: true
        type: string
      responses:
        204:
          description: success
    put:
      tags:
      - Entities
      summary: PUT /entities/{name}
      description: replace one entity
      parameters:
      - name: name
        in: path
        required: true
        type: string
      - name: entity
        in: body
        required: true
        schema:
          $ref: '#/definitions/EntityUpdate'
      responses:
        204:
          description: success
  /entities/types/product:
    put:
      tags:
      - Entities
      summary: PUT /entities/types/product
      description: Replace with new products
      parameters:
      - name: products
        in: body
        required: true
        schema:
          type: object
          properties:
            products:
              type: array
              items:
                $ref: '#/definitions/ProductEntity'
      responses:
        201:
          description: Success message
  /entity_sources:
    get:
      tags:
      - Entity Sources
      summary: GET /entity_sources
      description: returns all entity sources
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/EntitySource'
    post:
      tags:
      - Entity Sources
      summary: post /entity_sources
      description: Create a entity source used for list or regex
      parameters:
      - name: entity_source
        in: body
        schema:
          $ref: '#/definitions/EntitySource'
      responses:
        200:
          description: success
  /entity_sources/{id}:
    put:
      tags:
      - Entity Sources
      summary: PUT /entity_sources/:id
      description: Update entity source used for list or regex
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: entity_source
        in: body
        required: true
        schema:
          $ref: '#/definitions/EntitySource'
      responses:
        200:
          description: success
        404:
          description: not found
    get:
      tags:
      - Entity Sources
      summary: GET /entity_sources/:id
      description: get a single entity source
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/EntitySource'
        404:
          description: not found
  /intents:
    get:
      tags:
      - Intents
      summary: GET /intents
      description: returns all intents
      parameters:
      - name: q
        description: free text search
        in: query
        required: false
        type: string
      - name: limit
        in: query
        required: false
        type: integer
      - name: offset
        in: query
        required: false
        type: integer
      responses:
        200:
          description: list of intents
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/bits.pagination'
              data:
                type: array
                items:
                  $ref: '#/definitions/Intent'
    post:
      tags:
      - Intents
      summary: POST /intents
      description: create an entry
      parameters:
      - name: intent
        in: body
        required: true
        schema:
          $ref: '#/definitions/Intent'
      responses:
        200:
          description: returns added entry
          schema:
            $ref: '#/definitions/Intent'
    put:
      tags:
      - Intents
      summary: PUT /intents
      description: replace entire collection
      parameters:
      - name: intents
        in: body
        required: true
        schema:
          $ref: '#/definitions/IntentList'
      responses:
        204:
          description: success
  /intents/{id}:
    get:
      tags:
      - Intents
      summary: GET /intents/{id}
      description: returns one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: returns one entry
          schema:
            $ref: '#/definitions/Intent'
    put:
      tags:
      - Intents
      summary: PUT /intents/{id}
      description: replace one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: entity
        in: body
        required: true
        schema:
          $ref: '#/definitions/Intent'
      responses:
        200:
          description: returns updated entry
          schema:
            $ref: '#/definitions/Intent'
    delete:
      tags:
      - Intents
      summary: DELETE /intents/{id}
      description: delete one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: success
  /dialogs:
    get:
      tags:
      - Dialogs
      summary: GET /dialogs
      description: returns all dialogs
      parameters:
      - name: q
        description: free text search
        in: query
        required: false
        type: string
      - name: limit
        in: query
        required: false
        type: integer
      - name: offset
        in: query
        required: false
        type: integer
      responses:
        200:
          description: list of dialogs
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/bits.pagination'
              data:
                type: array
                items:
                  $ref: '#/definitions/Dialog'
    post:
      tags:
      - Dialogs
      summary: POST /dialogs
      description: create an entry
      parameters:
      - name: dialog
        in: body
        required: true
        schema:
          $ref: '#/definitions/Dialog'
      responses:
        201:
          description: success
          schema:
            $ref: '#/definitions/Dialog'
    put:
      tags:
      - Dialogs
      summary: PUT /dialogs
      description: replace entire collection
      parameters:
      - name: dialogs
        in: body
        required: true
        schema:
          $ref: '#/definitions/DialogList'
      responses:
        204:
          description: success
  /dialogs/{id}:
    get:
      tags:
      - Dialogs
      summary: GET /dialogs/{id}
      description: returns one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: returns one entry
          schema:
            $ref: '#/definitions/Dialog'
    put:
      tags:
      - Dialogs
      summary: PUT /dialogs/{id}
      description: replace one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: dialog
        in: body
        required: true
        schema:
          $ref: '#/definitions/Dialog'
      responses:
        204:
          description: success
          schema:
            $ref: '#/definitions/Dialog'
    delete:
      tags:
      - Dialogs
      summary: DELETE /dialogs/{id}
      description: delete one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: success
  /tagger:
    post:
      tags:
      - EntityTagger
      summary: POST /tagger
      description: proxy to ai-engine Entity Tagging interface from dashboard-v1
      parameters:
      - name: tagger_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaggerRequest'
      responses:
        200:
          description: response with tagging information
          schema:
            $ref: '#/definitions/TaggerResponse'
  /tracer:
    post:
      tags:
      - Tracer
      summary: POST /tracer
      description: proxy to ai-engine called from dashboard-v1 testing chat
      parameters:
      - name: tracer_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/TracerRequest'
      responses:
        200:
          description: bot response with debug information
          schema:
            $ref: '#/definitions/TracerResponse'
  /versions:
    get:
      tags:
      - Versions
      summary: GET /versions
      description: returns versions
      responses:
        200:
          description: list of versions
          schema:
            type: object
            properties:
              apply:
                $ref: '#/definitions/Version'
              applied:
                $ref: '#/definitions/Version'
              all:
                $ref: '#/definitions/Version'
              entities:
                $ref: '#/definitions/Version'
              intents:
                $ref: '#/definitions/Version'
              dialogs:
                $ref: '#/definitions/Version'
              workflows:
                $ref: '#/definitions/Version'
  /versions/{name}:
    put:
      tags:
      - Versions
      summary: PUT /versions/{name}
      description: returns versions
      parameters:
      - name: name
        in: path
        required: true
        type: string
      - name: entry
        in: body
        required: true
        schema:
          $ref: '#/definitions/Version'
      responses:
        204:
          description: success
  /workflows:
    get:
      tags:
      - Workflows
      summary: GET /workflows
      description: returns all workflows
      parameters:
      - name: q
        description: free text search
        in: query
        required: false
        type: string
      - name: limit
        in: query
        required: false
        type: integer
      - name: offset
        in: query
        required: false
        type: integer
      responses:
        200:
          description: list of workflows
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/bits.pagination'
              data:
                type: array
                items:
                  $ref: '#/definitions/Workflow'
    post:
      tags:
      - Workflows
      summary: POST /workflows
      description: create an entry
      parameters:
      - name: workflow
        in: body
        required: true
        schema:
          $ref: '#/definitions/Workflow'
      responses:
        201:
          description: success
          schema:
            $ref: '#/definitions/Workflow'
    put:
      tags:
      - Workflows
      summary: PUT /workflows
      description: replace entire collection
      parameters:
      - name: workflows
        in: body
        required: true
        schema:
          $ref: '#/definitions/WorkflowList'
      responses:
        204:
          description: success
  /workflows/{id}:
    get:
      tags:
      - Workflows
      summary: GET /workflows/{id}
      description: returns one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: returns one entry
          schema:
            $ref: '#/definitions/Workflow'
    put:
      tags:
      - Workflows
      summary: PUT /workflows/{id}
      description: replace one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: workflow
        in: body
        required: true
        schema:
          $ref: '#/definitions/Workflow'
      responses:
        204:
          description: success
          schema:
            $ref: '#/definitions/Workflow'
    delete:
      tags:
      - Workflows
      summary: DELETE /workflows/{id}
      description: delete one entry
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        204:
          description: success
produces:
- application/json
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":39:{s:15:\"bits.pagination\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"rowCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"default\";i:20;}s:9:\"pageCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"default\";i:5;}s:5:\"limit\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"default\";i:20;}s:6:\"offset\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"default\";i:40;}}}s:6:\"Action\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:29:\"conversations.messages.create\";i:1;s:11:\"actions.run\";i:2;s:8:\"bot.pass\";i:3;s:14:\"database.query\";}}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ActionPayload\";}}}s:13:\"ActionPayload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:6:\"forked\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}s:8:\"metadata\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"response_to\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:46:\"Message
  id that this message is responding to.\";}s:9:\"analytics\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:38:\"A
  object that are needed for analytics\";}}}}}s:11:\"response_to\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"custom_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"The
  command name set by the human agent.\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:91:\"The
  description of an action which can be set by the human agent if it is a custom command.\";s:4:\"type\";s:6:\"string\";}s:9:\"functions\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Functions\";}}}s:6:\"Dialog\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:27:\"^[a-zA-Z_][a-zA-Z.0-9\\s_]*$\";}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DialogPayload\";}}}s:10:\"DialogList\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"data\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Dialog\";}}}}s:13:\"DialogPayload\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:11:\"dialog_type\";i:1;s:6:\"prompt\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"dialog_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:9:\"text_type\";i:1;s:9:\"list_type\";}}s:6:\"entity\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"prompt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"reference_intent\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Intent\";}s:9:\"text_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:15:\"alternative_ask\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:22:\"alternative_ask_prompt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"alternative_ask_limit\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:7:\"integer\";s:7:\"default\";i:1;}s:10:\"always_ask\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:12:\"confirmation\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:19:\"confirmation_prompt\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"success_actions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}s:15:\"failure_actions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}}}s:9:\"list_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:15:\"response_values\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ListTypeValues\";}}}}}}s:6:\"Entity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:28:\"^[a-zA-Z_][[a-zA-Z.0-9\\s_]+$\";s:7:\"example\";s:12:\"order_number\";}s:16:\"entity_source_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:26:{i:0;s:12:\"sys.currency\";i:1;s:13:\"sys.date_time\";i:2;s:18:\"sys.date_time.date\";i:3;s:17:\"sys.date_time.day\";i:4;s:25:\"sys.date_time.day_of_week\";i:5;s:18:\"sys.date_time.hour\";i:6;s:20:\"sys.date_time.minute\";i:7;s:19:\"sys.date_time.month\";i:8;s:18:\"sys.date_time.time\";i:9;s:9:\"sys.email\";i:10;s:20:\"sys.location.address\";i:11;s:17:\"sys.location.city\";i:12;s:20:\"sys.location.country\";i:13;s:27:\"sys.location.street_address\";i:14;s:21:\"sys.location.us_state\";i:15;s:20:\"sys.location.zipcode\";i:16;s:15:\"sys.person_name\";i:17;s:26:\"sys.person_name.first_name\";i:18;s:25:\"sys.person_name.last_name\";i:19;s:27:\"sys.person_name.middle_name\";i:20;s:16:\"sys.phone_number\";i:21;s:8:\"sys.time\";i:22;s:7:\"sys.url\";i:23;s:7:\"product\";i:24;s:12:\"custom.regex\";i:25;s:11:\"custom.list\";}s:7:\"example\";s:6:\"custom\";}s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";s:7:\"example\";s:10:\"1982-01-23\";}s:9:\"validator\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";s:7:\"example\";s:30:\"#?(GIL\\d{8}[A-Z]{1,2})(?:\\W|$)\";}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";s:7:\"example\";s:16:\"Name
  of product.\";}s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:13:\"output_format\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";}s:9:\"attribute\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";}}}s:12:\"EntityUpdate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:16:\"entity_source_id\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:28:\"^[a-zA-Z_][[a-zA-Z.0-9\\s_]+$\";s:7:\"example\";s:12:\"order_number\";}s:16:\"entity_source_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:12;}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";s:7:\"example\";s:16:\"Name
  of product.\";}}}s:10:\"EntityList\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"data\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Entity\";}}}}s:12:\"EntitySource\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:32;}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:3:\"sys\";i:1;s:7:\"product\";i:2;s:4:\"user\";i:3;s:11:\"custom.list\";i:4;s:12:\"custom.regex\";}}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"product\";}s:9:\"validator\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:30:\"#?(GIL\\d{8}[A-Z]{1,2})(?:\\W|$)\";}s:13:\"output_format\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"MM/DD/YYYY\";}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";s:7:\"example\";s:11:\"System
  date\";}s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";s:7:\"example\";s:10:\"1982-01-23\";}s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:9:\"attribute\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"default\";s:0:\"\";}}}s:13:\"ProductEntity\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"name\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"Name
  of brand\";}s:7:\"example\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"Infant
  Car Seat Carrier Stroller\";}}s:7:\"example\";O:8:\"stdClass\":3:{s:4:\"name\";s:4:\"name\";s:11:\"description\";s:15:\"Name
  of product\";s:7:\"example\";s:32:\"Infant Car Seat Carrier Stroller\";}}s:9:\"Functions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:13:\"function_name\";i:1;s:12:\"command_name\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:13:\"function_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:13:{i:0;s:12:\"/alert_agent\";i:1;s:11:\"/alert_team\";i:2;s:13:\"/assign_agent\";i:3;s:12:\"/assign_team\";i:4;s:4:\"/bot\";i:5;s:11:\"/categorize\";i:6;s:9:\"/complete\";i:7;s:9:\"/escalate\";i:8;s:16:\"/indicate_typing\";i:9;s:5:\"/note\";i:10;s:13:\"/end_workflow\";i:11;s:10:\"/show_form\";i:12;s:4:\"/tag\";}}s:12:\"command_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:13:{i:0;s:12:\"agents.alert\";i:1;s:25:\"conversations.teams.alert\";i:2;s:27:\"conversations.agents.attach\";i:3;s:26:\"conversations.teams.attach\";i:4;s:31:\"conversations.categories.attach\";i:5;s:19:\"conversations.close\";i:6;s:22:\"conversations.escalate\";i:7;s:25:\"conversations.show.typing\";i:8;s:33:\"conversations.agents.notes.create\";i:9;s:13:\"workflows.end\";i:10;s:10:\"forms.show\";i:11;s:8:\"bot.pass\";i:12;s:25:\"conversations.tags.attach\";}}s:6:\"params\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"enum\";a:3:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}i:1;O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CommandWithBooleanParams\";}i:2;O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/CommandEscalate\";}}}s:11:\"alert_agent\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}s:10:\"alert_team\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}s:11:\"assign_team\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}s:3:\"bot\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CommandWithBooleanParams\";}s:10:\"categorize\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}s:8:\"complete\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CommandWithBooleanParams\";}s:8:\"escalate\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/CommandEscalate\";}s:15:\"indicate_typing\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/CommandIndicateTyping\";}s:4:\"note\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}s:12:\"end_workflow\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CommandWithBooleanParams\";}s:9:\"show_form\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}s:3:\"tag\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/CommandWithIntStringParams\";}}}}s:6:\"Intent\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:27:\"^[a-zA-Z_][a-zA-Z.0-9\\s_]*$\";}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/IntentPayload\";}s:7:\"actions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}s:11:\"expressions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/IntentExpression\";}}}}s:13:\"IntentPayload\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:8:\"entities\";i:1;s:15:\"tagged_entities\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"priority\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"default\";i:0;}s:8:\"entities\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Entity\";}s:7:\"default\";a:0:{}}s:15:\"tagged_entities\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/TaggedEntity\";}s:7:\"default\";a:0:{}}}}s:12:\"TaggedEntity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":11:{s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:28:\"^[a-zA-Z_][[a-zA-Z.0-9\\s_]+$\";s:7:\"example\";s:12:\"order_number\";}s:14:\"resolved_value\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"A12345\";}s:11:\"start_index\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:1;}s:9:\"end_index\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:10;}s:16:\"expression_index\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:0;}s:10:\"tag_source\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:5:\"human\";i:1;s:2:\"ai\";}}s:14:\"message_source\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:6:\"intent\";i:1;s:6:\"dialog\";i:2;s:3:\"tag\";i:3;s:4:\"test\";i:4;s:8:\"workflow\";}}s:9:\"dialog_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"message_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"workflow_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"extras\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"example\";O:8:\"stdClass\":1:{s:3:\"foo\";s:3:\"bar\";}}}}s:13:\"TaggerRequest\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:8:\"entities\";i:1;s:11:\"expressions\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Entity\";}}s:11:\"expressions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/IntentExpression\";}}s:15:\"tagged_entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/TaggedEntity\";}}}}s:14:\"TaggerResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:8:\"entities\";i:1;s:11:\"expressions\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Entity\";}}s:11:\"expressions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/IntentExpression\";}}s:15:\"tagged_entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/TaggedEntity\";}}}}s:13:\"TracerRequest\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:6:\"events\";i:1;s:7:\"context\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"context\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"conversation\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:8:\"entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:5:\"value\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"ai_state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:15:\"message_history\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:7:\"payload\";i:1;s:11:\"sender_type\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:11:\"sender_type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"payload\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:7:\"content\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}}}s:6:\"events\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"customer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:12:\"conversation\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"conversation_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}}}}}}s:14:\"TracerResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"commands\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"ai_state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:8:\"entities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:5:\"value\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"commands\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:7:\"payload\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}}s:5:\"debug\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}s:8:\"Workflow\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:27:\"^[a-zA-Z_][a-zA-Z.0-9\\s_]*$\";}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/WorkflowPayload\";}}}s:12:\"WorkflowList\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"data\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Workflow\";}}}}s:15:\"WorkflowPayload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"states\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}s:15:\"success_actions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}s:15:\"failure_actions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}}}s:7:\"Version\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"updated_at\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:8:\"dateTime\";s:7:\"default\";s:24:\"2017-05-15T16:20:37.586Z\";}}}s:4:\"Unit\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"unit_type\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:27:\"^[a-zA-Z_][a-zA-Z.0-9\\s_]*$\";}s:9:\"unit_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:6:\"action\";i:1;s:6:\"dialog\";i:2;s:8:\"workflow\";}}s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"enum\";a:3:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ActionPayload\";}i:1;O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/DialogPayload\";}i:2;O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/WorkflowPayload\";}}}s:4:\"rank\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:14:\"ListTypeValues\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"actions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Unit\";}}}}s:26:\"CommandWithIntStringParams\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"arguments\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:8:\"minItems\";i:1;s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:24:\"CommandWithBooleanParams\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"arguments\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:15:\"CommandEscalate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"arguments\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:4:\"high\";i:1;s:6:\"medium\";i:2;s:3:\"low\";}}}}s:21:\"CommandIndicateTyping\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"arguments\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"options\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:16:\"delay_by_seconds\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}}s:7:\"Message\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:71:\"Types
  of messages inside actions. payload varies based on message_type.\";s:10:\"properties\";O:8:\"stdClass\":8:{s:12:\"message_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:6:{i:0;s:9:\"rich_text\";i:1;s:5:\"reply\";i:2;s:7:\"replies\";i:3;s:4:\"file\";i:4;s:4:\"card\";i:5;s:5:\"asset\";}}s:7:\"content\";O:8:\"stdClass\":2:{s:11:\"description\";s:45:\"This
  type is used for backward compatibility.\";s:4:\"type\";s:6:\"string\";}s:9:\"rich_text\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/RichTextMessageType\";}s:5:\"asset\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/AssetMessageType\";}s:5:\"reply\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/ReplyMessageType\";}s:7:\"replies\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/RepliesMessageType\";}s:4:\"file\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/FileMessageType\";}s:4:\"card\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/CardMessageType\";}}s:7:\"example\";O:8:\"stdClass\":2:{s:12:\"message_type\";s:7:\"replies\";s:7:\"replies\";O:8:\"stdClass\":2:{s:7:\"content\";s:26:\"Please
  select your answer.\";s:11:\"attachments\";a:2:{i:0;O:8:\"stdClass\":2:{s:12:\"message_type\";s:5:\"reply\";s:5:\"reply\";O:8:\"stdClass\":3:{s:7:\"content\";s:3:\"Yes\";s:3:\"url\";s:13:\"/handle_reply\";s:8:\"postback\";O:8:\"stdClass\":2:{s:6:\"paylod\";s:28:\"{\"value\":
  \"yes\", \"index\": 0}\";s:8:\"reply_to\";i:133;}}}i:1;O:8:\"stdClass\":2:{s:12:\"message_type\";s:5:\"reply\";s:5:\"reply\";O:8:\"stdClass\":3:{s:7:\"content\";s:2:\"No\";s:3:\"url\";s:13:\"/handle_reply\";s:8:\"postback\";O:8:\"stdClass\":2:{s:7:\"payload\";s:27:\"{\"value\":
  \"no\", \"index\": 1}\";s:8:\"reply_to\";i:133;}}}}}}}s:19:\"RichTextMessageType\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"attachments\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:82:\"this
  is an optional field that may contains other messages that go with this text.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}s:7:\"example\";O:8:\"stdClass\":1:{s:7:\"content\";s:29:\"Hi,
  it is nice weather today!\";}}s:16:\"ReplyMessageType\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:74:\"This
  message is used when bot wants user to browse or send back a message.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"Yes\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"postback\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"payload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:28:\"{\"value\":
  \"yes\", \"index\": 1}\";}s:8:\"reply_to\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:133;}}s:11:\"description\";s:47:\"custom
  payload to send data along with request.\";}}s:7:\"example\";O:8:\"stdClass\":3:{s:7:\"content\";s:3:\"Yes\";s:3:\"url\";s:36:\"http://test.com/product/mxs-230.html\";s:8:\"postback\";O:8:\"stdClass\":2:{s:7:\"payload\";s:28:\"{\"value\":
  \"yes\", \"index\": 1}\";s:8:\"reply_to\";i:133;}}}s:18:\"RepliesMessageType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:26:\"Please
  select your answer.\";}s:11:\"attachments\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}s:7:\"example\";a:2:{i:0;O:8:\"stdClass\":3:{s:3:\"foo\";N;s:12:\"message_type\";s:5:\"reply\";s:5:\"reply\";O:8:\"stdClass\":3:{s:7:\"content\";s:3:\"Yes\";s:3:\"url\";s:13:\"/handle_reply\";s:8:\"postback\";O:8:\"stdClass\":2:{s:7:\"payload\";s:28:\"{\"value\":
  \"yes\", \"index\": 0}\";s:8:\"reply_to\";i:133;}}}i:1;O:8:\"stdClass\":3:{s:3:\"bar\";N;s:12:\"message_type\";s:5:\"reply\";s:5:\"reply\";O:8:\"stdClass\":3:{s:7:\"content\";s:2:\"No\";s:3:\"url\";s:13:\"/handle_reply\";s:8:\"postback\";O:8:\"stdClass\":2:{s:7:\"payload\";s:27:\"{\"value\":
  \"no\", \"index\": 1}\";s:8:\"reply_to\";i:133;}}}}}}}s:15:\"FileMessageType\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:60:\"A
  file that can be specified by url. Mostly used externally.\";s:8:\"required\";a:1:{i:0;s:9:\"mediaType\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"mediaUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"mediaType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:7:\"default\";i:1;s:5:\"image\";}}s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:7:\"example\";O:8:\"stdClass\":4:{s:4:\"name\";s:12:\"company
  logo\";s:8:\"mediaUrl\";s:32:\"http://test.com/company_logo.jpg\";s:9:\"mediaType\";s:5:\"image\";s:8:\"metadata\";O:8:\"stdClass\":3:{s:4:\"size\";i:347834;s:6:\"height\";i:234;s:5:\"width\";i:324;}}}s:16:\"AssetMessageType\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:63:\"Asset
  that needs to be retrieved on the fly through our service\";s:8:\"required\";a:1:{i:0;s:8:\"asset_id\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"asset_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:7:\"example\";O:8:\"stdClass\":1:{s:8:\"asset_id\";i:344;}}s:15:\"CardMessageType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"imageUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"attachments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Message\";}}}}s:12:\"IntentAction\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"payload\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}s:16:\"IntentExpression\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"template\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"template\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"source\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:8:\"iq-tools\";i:1;s:10:\"instant-ai\";}s:7:\"default\";s:8:\"iq-tools\";}s:7:\"matcher\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:7:\"default\";i:1;s:5:\"exact\";}s:7:\"default\";s:7:\"default\";}}}s:10:\"IntentList\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"data\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Intent\";}}}}}"
...
