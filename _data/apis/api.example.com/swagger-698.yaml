---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:21:\"backend/api/run.proto\";s:7:\"version\";s:15:\"version
  not set\";}"
paths: ~
produces:
- application/json
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":20:{s:45:\"ReportRunMetricsResponseReportRunMetricResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"metric_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"Output.
  The name of the metric.\";}s:14:\"metric_node_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"Output.
  The ID of the node which reports the metric.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:65:\"#/definitions/ReportRunMetricsResponseReportRunMetricResultStatus\";s:11:\"description\";s:43:\"Output.
  The status of the metric reporting.\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:59:\"Output.
  The detailed message of the error of the reporting.\";}}}s:51:\"ReportRunMetricsResponseReportRunMetricResultStatus\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:5:{i:0;s:11:\"UNSPECIFIED\";i:1;s:2:\"OK\";i:2;s:16:\"INVALID_ARGUMENT\";i:3;s:19:\"DUPLICATE_REPORTING\";i:4;s:14:\"INTERNAL_ERROR\";}s:7:\"default\";s:11:\"UNSPECIFIED\";s:11:\"description\";s:304:\"
  - UNSPECIFIED: Default value if not present.\n - OK: Indicates successful reporting.\n
  - INVALID_ARGUMENT: Indicates that the payload of the metric is invalid.\n - DUPLICATE_REPORTING:
  Indicates that the metric has been reported before.\n - INTERNAL_ERROR: Indicates
  that something went wrong in the server.\";}s:15:\"RunMetricFormat\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:11:\"UNSPECIFIED\";i:1;s:3:\"RAW\";i:2;s:10:\"PERCENTAGE\";}s:7:\"default\";s:11:\"UNSPECIFIED\";s:11:\"description\";s:137:\"
  - UNSPECIFIED: Default value if not present.\n - RAW: Display value as its raw format.\n
  - PERCENTAGE: Display value in percentage format.\";}s:15:\"RunStorageState\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:22:\"STORAGESTATE_AVAILABLE\";i:1;s:21:\"STORAGESTATE_ARCHIVED\";}s:7:\"default\";s:22:\"STORAGESTATE_AVAILABLE\";}s:19:\"apiListRunsResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"runs\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/apiRun\";}}s:15:\"next_page_token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"apiParameter\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"apiPipelineRuntime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:17:\"pipeline_manifest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:131:\"Output.
  The runtime JSON manifest of the pipeline, including the status\nof pipeline steps
  and fields need for UI visualization etc.\";}s:17:\"workflow_manifest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:117:\"Output.
  The runtime JSON manifest of the argo workflow.\nThis is deprecated after pipeline_runtime_manifest
  is in use.\";}}}s:15:\"apiPipelineSpec\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"pipeline_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:66:\"Optional
  input field. The ID of the pipeline user uploaded before.\";}s:17:\"workflow_manifest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:118:\"Optional
  input field. The marshalled raw argo JSON workflow.\nThis will be deprecated when
  pipeline_manifest is in use.\";}s:17:\"pipeline_manifest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:49:\"Optional
  input field. The raw pipeline JSON spec.\";}s:10:\"parameters\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/apiParameter\";}s:11:\"description\";s:154:\"The
  parameter user provide to inject to the pipeline JSON.\nIf a default value of a
  parameter exist in the JSON,\nthe value user provided here will replace.\";}}}s:23:\"apiReadArtifactResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"data\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";s:11:\"description\";s:34:\"The
  bytes of the artifact content.\";}}}s:15:\"apiRelationship\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:20:\"UNKNOWN_RELATIONSHIP\";i:1;s:5:\"OWNER\";i:2;s:7:\"CREATOR\";}s:7:\"default\";s:20:\"UNKNOWN_RELATIONSHIP\";}s:26:\"apiReportRunMetricsRequest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"run_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:42:\"Required.
  The parent run ID of the metric.\";}s:7:\"metrics\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/apiRunMetric\";}s:11:\"description\";s:26:\"List
  of metrics to report.\";}}}s:27:\"apiReportRunMetricsResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:59:\"#/definitions/ReportRunMetricsResponseReportRunMetricResult\";}}}}s:14:\"apiResourceKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/apiResourceType\";s:11:\"description\";s:42:\"The
  type of the resource that referred to.\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"The
  ID of the resource that referred to.\";}}}s:20:\"apiResourceReference\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/apiResourceKey\";}s:12:\"relationship\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/apiRelationship\";s:11:\"description\";s:70:\"Required
  field. The relationship from referred resource to the object.\";}}}s:15:\"apiResourceType\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:21:\"UNKNOWN_RESOURCE_TYPE\";i:1;s:10:\"EXPERIMENT\";i:2;s:3:\"JOB\";}s:7:\"default\";s:21:\"UNKNOWN_RESOURCE_TYPE\";}s:6:\"apiRun\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"Output.
  Unique run ID. Generated by API server.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:110:\"Required
  input field. Name provided by user,\nor auto generated if run is created by scheduled
  job. Not unique.\";}s:13:\"storage_state\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/RunStorageState\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:55:\"Optional
  input field. Describing the purpose of the run\";}s:13:\"pipeline_spec\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/apiPipelineSpec\";s:11:\"description\";s:94:\"Required
  input field.\nDescribing what the pipeline manifest and parameters to use for the
  run.\";}s:19:\"resource_references\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/apiResourceReference\";}s:11:\"description\";s:65:\"Optional
  input field. Specify which resource this run belongs to.\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:38:\"Output.
  The time that the run created.\";}s:12:\"scheduled_at\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:239:\"Output.
  When this run is scheduled to run. This could be different from\ncreated_at. For
  example, if a run is from a backfilling job that was\nsupposed to run 2 month ago,
  the scheduled_at is 2 month ago,\nv.s. created_at is the current time.\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:91:\"Output.
  The status of the run.\nOne of [Pending, Running, Succeeded, Skipped, Failed, Error]\";}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:203:\"In
  case any error happens retrieving a run field, only run ID\nand the error message
  is returned. Client has the flexibility of choosing\nhow to handle error. This is
  especially useful during listing call.\";}s:7:\"metrics\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/apiRunMetric\";}s:11:\"description\";s:78:\"Output.
  The metrics of the run. The metrics are reported by ReportMetrics\nAPI.\";}}}s:12:\"apiRunDetail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"run\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/apiRun\";}s:16:\"pipeline_runtime\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/apiPipelineRuntime\";}}}s:12:\"apiRunMetric\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:171:\"Required.
  The user defined name of the metric. It must between 1 and 63 characters\nlong and
  must conform to the following regular expression:\n`[a-z]([-a-z0-9]*[a-z0-9])?`.\";}s:7:\"node_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:237:\"Required.
  The runtime node ID which reports the metric. The node ID can be found in\nthe RunDetail.workflow.Status.
  Metric with same (node_id, name)\nare considerd as duplicate. Only the first reporting
  will be recorded. Max length is 128.\";}s:12:\"number_value\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:6:\"double\";s:11:\"description\";s:31:\"The
  number value of the metric.\";}s:6:\"format\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/RunMetricFormat\";s:11:\"description\";s:29:\"The
  display format of metric.\";}}}s:9:\"apiStatus\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"error\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"code\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"details\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/protobufAny\";}}}}s:11:\"protobufAny\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"type_url\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:1327:\"A
  URL/resource name that uniquely identifies the type of the serialized\nprotocol
  buffer message. This string must contain at least\none \"/\" character. The last
  segment of the URL's path must represent\nthe fully qualified name of the type (as
  in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g.,
  leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the
  binary all types that they\nexpect it to use in the context of Any. However, for
  URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set
  up a type\nserver that maps type URLs to message definitions as follows:\n\n* If
  no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield
  a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications
  are allowed to cache lookup results based on the\n  URL, or have them precompiled
  into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be
  preserved\n  on changes to types. (Use versioned type names to manage\n  breaking
  changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf
  release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes
  other than `http`, `https` (or the empty scheme) might be\nused with implementation
  specific semantics.\";}s:5:\"value\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";s:11:\"description\";s:71:\"Must
  be a valid serialized protocol buffer of the above specified type.\";}}s:11:\"description\";s:2069:\"`Any`
  contains an arbitrary serialized protocol buffer message along with a\nURL that
  describes the type of the serialized message.\n\nProtobuf library provides support
  to pack/unpack Any values in the form\nof utility functions or additional generated
  methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo
  foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))
  {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo
  foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n
  \     foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message
  in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n
  \   if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4:
  Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n
  \    ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err
  != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will
  by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods
  only use the fully qualified type name after the last '/'\nin the type URL, for
  example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe
  JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized,
  embedded message, with an\nadditional field `@type` which contains the type URL.
  Example:\n\n    package google.profile;\n    message Person {\n      string first_name
  = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n
  \     \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded
  message type is well-known and has a custom JSON\nrepresentation, that representation
  will be embedded adding a field\n`value` which holds the custom JSON in addition
  to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n
  \     \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\":
  \"1.212s\"\n    }\";}}"
...
