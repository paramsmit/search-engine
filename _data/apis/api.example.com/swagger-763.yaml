---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:5:\"title\";s:33:\"Avi ServiceEngineGroup
  Object API\";s:7:\"version\";s:6:\"18.2.4\";s:11:\"description\";s:682:\"CLI\n```\n-
  configure serviceenginegroup <key>\n- show serviceenginegroup <key>\n- redistribute
  serviceenginegroup <key>\n- clear serviceenginegroup <key>\n```\n\nExamples\n- **serviceenginegroup_example_1**:
  To create a SE group that is suitable for a production application with a HA policy
  of shared active/active with a minimum scale out of 2 SE\n  ```json\n    {u'min_scaleout_per_vs':
  2, u'ha_mode': u'HA_MODE_SHARED_PAIR', u'name': u'production-group'}\n  ```\n\n-
  **serviceenginegroup_example_2**: To create a SE group that is of best effort category
  suitable for test deployments\n  ```json\n    {u'buffer_se': 0, u'ha_mode': u'HA_MODE_SHARED',
  u'max_se': 8, u'name': u'test-group'}\n  ```\n\";s:7:\"contact\";O:8:\"stdClass\":3:{s:3:\"url\";s:34:\"https://avinetworks.com/contact-us\";s:4:\"name\";s:17:\"Avi
  Networks Inc.\";s:5:\"email\";s:23:\"support@avinetworks.com\";}}"
basePath: /api
paths:
  /serviceenginegroup:
    post:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ServiceEngineGroup'
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        in: body
        description: ServiceEngineGroup object creation
        name: body
        schema:
          $ref: '#/definitions/ServiceEngineGroup'
      consumes:
      - application/json
    get:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ServiceEngineGroupApiResponse'
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: object name
        in: query
        name: name
      - in: query
        type: string
        description: Filter to request all objects that refers to another Avi resource.
          Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services
          referring to pool p1 will be refers_to=pool:pool_p1_uuid
        name: refers_to
      - in: query
        type: string
        description: Filter to request all objects that are referred by another Avi
          resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools
          referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid
        name: referred_by
      - in: query
        type: string
        description: List of fields to be returned for the resource. Some fields like
          name, URL, uuid etc. are always returned.
        name: fields
      - required: false
        type: boolean
        description: All the Avi REST reference URIs have a name suffix as URI#name.
          It is useful to get the referenced resource name without performing get
          on that object.
        in: query
        name: include_name
      - required: false
        type: boolean
        description: Default values are not set.
        in: query
        name: skip_default
      - in: query
        type: string
        description: It automatically returns additional dependent resources like
          runtime. Eg. join_subresources=runtime.
        name: join_subresources
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - in: query
        type: string
        description: Filter to get objects that belongs to a specific cloud using
          its uuid. Eg. cloud_uuid=cloud-xyz.
        name: cloud_uuid
      - in: query
        type: string
        description: Filter to get objects that belongs to a specific cloud usings
          its name. This uses cloud name rather than uuid. Eg. cloud_ref.name=Default-Cloud.
        name: cloud_ref.name
      consumes:
      - application/json
  /serviceenginegroup/{uuid}/redistribute:
    post:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        in: body
        description: empty
        name: body
        schema:
          additionalProperties:
            type: string
          type: object
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      consumes:
      - application/json
  /serviceenginegroup/{uuid}:
    put:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ServiceEngineGroup'
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: object name
        in: query
        name: name
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        in: body
        description: ServiceEngineGroup object creation
        name: body
        schema:
          $ref: '#/definitions/ServiceEngineGroup'
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      consumes:
      - application/json
    get:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ServiceEngineGroup'
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: object name
        in: query
        name: name
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      - in: query
        type: string
        description: List of fields to be returned for the resource. Some fields like
          name, URL, uuid etc. are always returned.
        name: fields
      - required: false
        type: boolean
        description: All the Avi REST reference URIs have a name suffix as URI#name.
          It is useful to get the referenced resource name without performing get
          on that object.
        in: query
        name: include_name
      - required: false
        type: boolean
        description: Default values are not set.
        in: query
        name: skip_default
      - in: query
        type: string
        description: It automatically returns additional dependent resources like
          runtime. Eg. join_subresources=runtime.
        name: join_subresources
      consumes:
      - application/json
    patch:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ServiceEngineGroup'
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: object name
        in: query
        name: name
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        in: body
        description: ServiceEngineGroup object creation
        name: body
        schema:
          $ref: '#/definitions/ServiceEngineGroup'
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      consumes:
      - application/json
    delete:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        204:
          description: object deleted
          schema:
            type: string
        404:
          description: not found
      parameters:
      - required: false
        type: string
        description: object name
        in: query
        name: name
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      consumes:
      - application/json
  /serviceenginegroup/{uuid}/runtime/:
    get:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      consumes:
      - application/json
  /serviceenginegroup/{uuid}/clear:
    post:
      security:
      - basicAuth: []
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: log in failed
      parameters:
      - required: false
        type: string
        description: Avi Tenant Header
        in: header
        name: X-Avi-Tenant
      - required: false
        type: string
        description: Avi Tenant Header UUID
        in: header
        name: X-Avi-Tenant-UUID
      - required: true
        type: string
        description: The caller is required to set Avi Version Header to the expected
          version of configuration. The response from the controller will provide
          and accept data according to the specified version. The controller will
          reject POST and PUT requests where the data is not compatible with the specified
          version.
        in: header
        name: X-Avi-Version
      - required: false
        type: string
        description: Avi Controller may send back CSRF token in the response cookies.
          The caller should update the request headers with this token else controller
          will reject requests.
        in: header
        name: X-CSRFToken
      - required: true
        in: body
        description: empty
        name: body
        schema:
          additionalProperties:
            type: string
          type: object
      - required: true
        type: string
        description: UUID of the object to fetch
        in: path
        name: uuid
      consumes:
      - application/json
definitions: !php/object "O:8:\"stdClass\":19:{s:17:\"VipAutoscaleZones\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"subnet_uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:86:\"UUID
  of the subnet for new IP address allocation. Field introduced in 17.2.12, 18.1.2.\";}s:17:\"availability_zone\";O:8:\"stdClass\":3:{s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:11:\"description\";s:82:\"Availability
  zone associated with the subnet. Field introduced in 17.2.12, 18.1.2.\";}s:11:\"fip_capable\";O:8:\"stdClass\":3:{s:8:\"readOnly\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"Determines
  if the subnet is capable of hosting publicly accessible IP. Field introduced in
  17.2.12, 18.1.2.\";}}}s:9:\"PortRange\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:3:\"end\";i:1;s:5:\"start\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"start\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:65:\"TCP/UDP
  port range start (inclusive). Allowed values are 1-65535.\";s:6:\"format\";s:5:\"int32\";}s:3:\"end\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:63:\"TCP/UDP
  port range end (inclusive). Allowed values are 1-65535.\";s:6:\"format\";s:5:\"int32\";}}}s:12:\"IpAddrPrefix\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:7:\"ip_addr\";i:1;s:4:\"mask\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"ip_addr\";O:8:\"stdClass\":2:{s:11:\"description\";s:100:\"Placeholder
  for description of property ip_addr of obj type IpAddrPrefix field type str  type
  object\";s:4:\"$ref\";s:20:\"#/definitions/IpAddr\";}s:4:\"mask\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:15:\"Number
  of mask.\";s:6:\"format\";s:5:\"int32\";}}}s:14:\"IptableRuleSet\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:5:\"chain\";i:1;s:5:\"table\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"rules\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/IptableRule\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:100:\"Placeholder
  for description of property rules of obj type IptableRuleSet field type str  type
  object\";}s:5:\"table\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"table
  of IptableRuleSet.\";}s:5:\"chain\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"chain
  of IptableRuleSet.\";}}}s:12:\"VcenterHosts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"host_refs\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:57:\"
  It is a reference to an object of type VIMgrHostRuntime.\";}s:7:\"include\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:101:\"Placeholder
  for description of property include of obj type VcenterHosts field type str  type
  boolean\";}}}s:21:\"MetricsRealTimeUpdate\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:7:\"enabled\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"duration\";O:8:\"stdClass\":4:{s:7:\"default\";i:30;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:100:\"Real
  time metrics collection duration in minutes. 0 for infinite. Special values are
  0 - 'infinite'.\";s:6:\"format\";s:5:\"int32\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:109:\"Enables
  real time metrics collection.  When disabled, 6 hour view is the most granular the
  system will track.\";}}}s:11:\"IptableRule\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:6:\"action\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"dnat_ip\";O:8:\"stdClass\":2:{s:11:\"description\";s:99:\"Placeholder
  for description of property dnat_ip of obj type IptableRule field type str  type
  object\";s:4:\"$ref\";s:20:\"#/definitions/IpAddr\";}s:8:\"src_port\";O:8:\"stdClass\":2:{s:11:\"description\";s:100:\"Placeholder
  for description of property src_port of obj type IptableRule field type str  type
  object\";s:4:\"$ref\";s:23:\"#/definitions/PortRange\";}s:5:\"proto\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:60:\"
  Enum options - PROTO_TCP, PROTO_UDP, PROTO_ICMP, PROTO_ALL.\";}s:15:\"input_interface\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"input_interface
  of IptableRule.\";}s:16:\"output_interface\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"output_interface
  of IptableRule.\";}s:6:\"src_ip\";O:8:\"stdClass\":2:{s:11:\"description\";s:98:\"Placeholder
  for description of property src_ip of obj type IptableRule field type str  type
  object\";s:4:\"$ref\";s:26:\"#/definitions/IpAddrPrefix\";}s:3:\"tag\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"tag
  of IptableRule.\";}s:8:\"dst_port\";O:8:\"stdClass\":2:{s:11:\"description\";s:100:\"Placeholder
  for description of property dst_port of obj type IptableRule field type str  type
  object\";s:4:\"$ref\";s:23:\"#/definitions/PortRange\";}s:6:\"action\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"
  Enum options - ACCEPT, DROP, REJECT, DNAT, MASQUERADE.\";}s:6:\"dst_ip\";O:8:\"stdClass\":2:{s:11:\"description\";s:98:\"Placeholder
  for description of property dst_ip of obj type IptableRule field type str  type
  object\";s:4:\"$ref\";s:26:\"#/definitions/IpAddrPrefix\";}}}s:19:\"DosThresholdProfile\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:13:\"thresh_period\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"thresh_period\";O:8:\"stdClass\":4:{s:7:\"default\";i:5;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:119:\"Timer
  value in seconds to collect DoS attack metrics based on threshold on the Service
  Engine for this Virtual Service.\";s:6:\"format\";s:5:\"int32\";}s:11:\"thresh_info\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/DosThreshold\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:57:\"Attack
  type, min and max values for DoS attack detection.\";}}}s:12:\"DosThreshold\";O:8:\"stdClass\":3:{s:8:\"required\";a:3:{i:0;s:6:\"attack\";i:1;s:9:\"max_value\";i:2;s:9:\"min_value\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"max_value\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:104:\"Maximum
  number of packets or connections or requests in a given interval of time to be deemed
  as attack.\";s:6:\"format\";s:5:\"int32\";}s:6:\"attack\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:806:\"Attack
  type. Enum options - LAND, SMURF, ICMP_PING_FLOOD, UNKOWN_PROTOCOL, TEARDROP, IP_FRAG_OVERRUN,
  IP_FRAG_TOOSMALL, IP_FRAG_FULL, IP_FRAG_INCOMPLETE, PORT_SCAN, TCP_NON_SYN_FLOOD_OLD,
  SYN_FLOOD, BAD_RST_FLOOD, MALFORMED_FLOOD, FAKE_SESSION, ZERO_WINDOW_STRESS, SMALL_WINDOW_STRESS,
  DOS_HTTP_TIMEOUT, DOS_HTTP_ERROR, DOS_HTTP_ABORT, DOS_SSL_ERROR, DOS_APP_ERROR,
  DOS_REQ_IP_RL_DROP, DOS_REQ_URI_RL_DROP, DOS_REQ_URI_SCAN_BAD_RL_DROP, DOS_REQ_URI_SCAN_UNKNOWN_RL_DROP,
  DOS_REQ_IP_URI_RL_DROP, DOS_CONN_IP_RL_DROP, DOS_SLOW_URL, TCP_NON_SYN_FLOOD, DOS_REQ_CIP_SCAN_BAD_RL_DROP,
  DOS_REQ_CIP_SCAN_UNKNOWN_RL_DROP, DOS_REQ_IP_RL_DROP_BAD, DOS_REQ_URI_RL_DROP_BAD,
  DOS_REQ_IP_URI_RL_DROP_BAD, POLICY_DROPS, DOS_CONN_RL_DROP, DOS_REQ_RL_DROP, DOS_REQ_HDR_RL_DROP,
  DOS_REQ_CUSTOM_RL_DROP, DNS_ATTACK_REFLECTION.\";}s:9:\"min_value\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:104:\"Minimum
  number of packets or connections or requests in a given interval of time to be deemed
  as attack.\";s:6:\"format\";s:5:\"int32\";}}}s:12:\"VssPlacement\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"core_nonaffinity\";O:8:\"stdClass\":4:{s:7:\"default\";i:2;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:99:\"Degree
  of core non-affinity for VS placement. Allowed values are 1-256. Field introduced
  in 17.2.5.\";s:6:\"format\";s:5:\"int32\";}s:12:\"num_subcores\";O:8:\"stdClass\":4:{s:7:\"default\";i:4;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:99:\"Number
  of sub-cores that comprise a CPU core. Allowed values are 1-128. Field introduced
  in 17.2.5.\";s:6:\"format\";s:5:\"int32\";}}}s:29:\"ServiceEngineGroupApiResponse\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:5:\"count\";i:1;s:7:\"results\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"count\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"results\";O:8:\"stdClass\":2:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ServiceEngineGroup\";}s:4:\"type\";s:5:\"array\";}}}s:15:\"VcenterClusters\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"include\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:104:\"Placeholder
  for description of property include of obj type VcenterClusters field type str  type
  boolean\";}s:12:\"cluster_refs\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:60:\"
  It is a reference to an object of type VIMgrClusterRuntime.\";}}}s:6:\"IpAddr\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:4:\"addr\";i:1;s:4:\"type\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"
  Enum options - V4, DNS, V6.\";}s:4:\"addr\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"IP
  address.\";}}}s:18:\"ServiceEngineGroup\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":159:{s:11:\"disable_tso\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:168:\"Disable
  TCP Segmentation Offload (TSO) in DPDK poll-mode driver packet transmit path.  TSO
  is on by default on NICs that support it. Field introduced in 17.2.5, 18.1.1.\";}s:20:\"host_attribute_value\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:152:\"Value
  of a (Key, Value) pair identifying a label for a set of Nodes usually in Container
  Clouds. Needs to be specified together with host_attribute_key.\";}s:9:\"async_ssl\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:56:\"SSL
  handshakes will be handled by dedicated SSL Threads.\";}s:15:\"instance_flavor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:37:\"Instance/Flavor
  name for SE instance.\";}s:24:\"enable_gratarp_permanent\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:54:\"Enable
  GratArp for VIP_IP. Field introduced in 18.2.3.\";}s:37:\"auto_redistribute_active_standby_load\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:234:\"Redistribution
  of virtual services from the takeover SE to the replacement SE can cause momentary
  traffic loss. If the auto-redistribute load option is left in its default off state,
  any desired rebalancing requires calls to REST API.\";}s:26:\"disable_avi_securitygroups\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:325:\"By
  default, Avi creates and manages security groups along with custom sg provided by
  user. Set this to True to disallow Avi to create and manage new security groups.
  Avi will only make use of custom security groups provided by user. This option is
  only supported for AWS cloud type. Field introduced in 17.2.13,18.1.4,18.2.1.\";}s:16:\"self_se_election\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:124:\"Enable
  SEs to elect a primary amongst themselves in the absence of a connectivity to controller.
  Field introduced in 18.1.2.\";}s:14:\"free_list_size\";O:8:\"stdClass\":4:{s:7:\"default\";i:1024;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:72:\"Number
  of entries in the free list. Field introduced in 17.2.10, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:25:\"bgp_state_update_interval\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:100:\"BGP
  peer state update interval. Allowed values are 5-100. Field introduced in 17.2.14,18.1.5,18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"Unique
  object identifier of the object.\";}s:18:\"vs_scalein_timeout\";O:8:\"stdClass\":4:{s:7:\"default\";i:30;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:90:\"Time
  to wait for the scaled in SE to drain existing flows before marking the scalein
  done.\";s:6:\"format\";s:5:\"int32\";}s:16:\"se_udp_encap_ipc\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:205:\"Determines
  if SE-SE IPC messages are encapsulated in a UDP header  0  Automatically determine
  based on hypervisor type. 1  Use UDP encap unconditionally. Allowed values are 0-1.
  Field introduced in 17.1.2.\";s:6:\"format\";s:5:\"int32\";}s:13:\"min_cpu_usage\";O:8:\"stdClass\":4:{s:7:\"default\";i:30;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:249:\"When
  CPU usage on an SE falls below the minimum threshold, Virtual Services hosted on
  the SE may be consolidated onto other underutilized SEs. After consolidation, unused
  Service Engines may then be eligible for deletion. . Allowed values are 20-60.\";s:6:\"format\";s:5:\"int32\";}s:26:\"custom_securitygroups_data\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:129:\"Custom
  Security Groups to be associated with data vNics for SE instances in OpenStack and
  AWS Clouds. Field introduced in 17.1.3.\";}s:19:\"ingress_access_data\";O:8:\"stdClass\":3:{s:7:\"default\";s:21:\"SG_INGRESS_ACCESS_ALL\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:200:\"Program
  SE security group ingress rules to allow VIP data access from remote CIDR type.
  Enum options - SG_INGRESS_ACCESS_NONE, SG_INGRESS_ACCESS_ALL, SG_INGRESS_ACCESS_VPC.
  Field introduced in 17.1.5.\";}s:16:\"vcenter_clusters\";O:8:\"stdClass\":2:{s:11:\"description\";s:115:\"Placeholder
  for description of property vcenter_clusters of obj type ServiceEngineGroup field
  type str  type object\";s:4:\"$ref\";s:29:\"#/definitions/VcenterClusters\";}s:16:\"max_rules_per_lb\";O:8:\"stdClass\":4:{s:7:\"default\";i:150;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:111:\"Applicable
  to Azure platform only. Maximum number of rules per Azure LB. . Field introduced
  in 17.2.12, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:8:\"iptables\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/IptableRuleSet\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:14:\"Iptable
  Rules.\";}s:20:\"num_dispatcher_cores\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:194:\"Number
  of dispatcher cores (0,1,2,4,8 or 16). If set to 0, then number of dispatcher cores
  is deduced automatically. Allowed values are 0,1,2,4,8,16. Field introduced in 17.2.12,
  18.1.3, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:28:\"connection_memory_percentage\";O:8:\"stdClass\":4:{s:7:\"default\";i:50;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:139:\"Percentage
  of memory for connection state. This will come at the expense of memory used for
  HTTP in-memory cache. Allowed values are 10-90.\";s:6:\"format\";s:5:\"int32\";}s:18:\"service_ip_subnets\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/IpAddrPrefix\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:94:\"Subnets
  assigned to the SE group. Required for VS group placement. Field introduced in 17.1.1.\";}s:14:\"placement_mode\";O:8:\"stdClass\":3:{s:7:\"default\";s:19:\"PLACEMENT_MODE_AUTO\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:126:\"If
  placement mode is 'Auto', Virtual Services are automatically placed on Service Engines.
  Enum options - PLACEMENT_MODE_AUTO.\";}s:19:\"max_scaleout_per_vs\";O:8:\"stdClass\":4:{s:7:\"default\";i:4;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:90:\"Maximum
  number of active Service Engines for the Virtual Service. Allowed values are 1-64.\";s:6:\"format\";s:5:\"int32\";}s:14:\"enable_routing\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:44:\"Enable
  routing for this ServiceEngineGroup .\";}s:11:\"waf_mempool\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:55:\"Enable
  memory pool for WAF. Field introduced in 17.2.3.\";}s:7:\"per_app\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:196:\"Per-app
  SE mode is designed for deploying dedicated load balancers per app (VS). In this
  mode, each SE is limited to a max of 2 VSs. vCPUs in per-app SEs count towards licensing
  usage at 25% rate.\";}s:17:\"se_pcap_lookahead\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:243:\"Enables
  lookahead mode of packet receive in PCAP mode. Introduced to overcome an issue with
  hv_netvsc driver. Lookahead mode attempts to ensure that application and kernel's
  view of the receive rings are consistent. Field introduced in 18.2.3.\";}s:26:\"vcenter_datastores_include\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:126:\"Placeholder
  for description of property vcenter_datastores_include of obj type ServiceEngineGroup
  field type str  type boolean\";}s:14:\"se_name_prefix\";O:8:\"stdClass\":3:{s:7:\"default\";s:3:\"Avi\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:58:\"Prefix
  to use for virtual machine name of Service Engines.\";}s:19:\"waf_learning_memory\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:141:\"Amount
  of memory reserved on SE for WAF learning. This can be atmost 5% of SE memory. Field
  deprecated in 18.2.3. Field introduced in 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Name
  of the object.\";}s:10:\"tenant_ref\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"
  It is a reference to an object of type Tenant.\";}s:6:\"max_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:76:\"Maximum
  number of Services Engines in this group. Allowed values are 0-1000.\";s:6:\"format\";s:5:\"int32\";}s:12:\"license_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:237:\"If
  no license type is specified then default license enforcement for the cloud type
  is chosen. Enum options - LIC_BACKEND_SERVERS, LIC_SOCKETS, LIC_CORES, LIC_HOSTS,
  LIC_SE_BANDWIDTH, LIC_METERED_SE_BANDWIDTH. Field introduced in 17.2.5.\";}s:19:\"se_flow_probe_timer\";O:8:\"stdClass\":4:{s:7:\"default\";i:100;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:110:\"Timeout
  in milliseconds for flow probe entries. Allowed values are 10-200. Field introduced
  in 18.1.4, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:14:\"se_dos_profile\";O:8:\"stdClass\":2:{s:11:\"description\";s:113:\"Placeholder
  for description of property se_dos_profile of obj type ServiceEngineGroup field
  type str  type object\";s:4:\"$ref\";s:33:\"#/definitions/DosThresholdProfile\";}s:23:\"disable_se_memory_check\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:91:\"If
  set, disable the config memory check done in service engine. Field introduced in
  18.1.2.\";}s:18:\"datascript_timeout\";O:8:\"stdClass\":4:{s:7:\"default\";i:1000000;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:111:\"Number
  of instructions before datascript times out. Allowed values are 0-100000000. Field
  introduced in 18.2.3.\";s:6:\"format\";s:5:\"int64\";}s:16:\"udf_log_throttle\";O:8:\"stdClass\":4:{s:7:\"default\";i:100;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:285:\"This
  setting limits the number of UDF logs generated per second per core on this SE.
  UDF logs are generated due to the configured client log filters or the rules with
  logging enabled. Default is 100 logs per second. Set it to zero (0) to disable throttling.
  Field introduced in 17.1.3.\";s:6:\"format\";s:5:\"int32\";}s:13:\"vcenter_hosts\";O:8:\"stdClass\":2:{s:11:\"description\";s:112:\"Placeholder
  for description of property vcenter_hosts of obj type ServiceEngineGroup field type
  str  type object\";s:4:\"$ref\";s:26:\"#/definitions/VcenterHosts\";}s:12:\"vcpus_per_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:64:\"Number
  of vcpus for each of the Service Engine virtual machines.\";s:6:\"format\";s:5:\"int32\";}s:19:\"cpu_socket_affinity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:126:\"Allocate
  all the CPU cores for the Service Engine Virtual Machines  on the same CPU socket.
  Applicable only for vCenter Cloud.\";}s:19:\"realtime_se_metrics\";O:8:\"stdClass\":2:{s:11:\"description\";s:39:\"Enable
  or disable real time SE metrics.\";s:4:\"$ref\";s:35:\"#/definitions/MetricsRealTimeUpdate\";}s:26:\"config_debugs_on_all_cores\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:83:\"Enable
  config debugs on all cores of SE. Field introduced in 17.2.13,18.1.5,18.2.1.\";}s:11:\"se_dpdk_pmd\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:248:\"Determines
  if DPDK pool mode driver should be used or not   0  Automatically determine based
  on hypervisor/NIC type 1  Unconditionally use DPDK poll mode driver 2  Don't use
  DPDK poll mode driver. Allowed values are 0-2. Field introduced in 18.1.3.\";s:6:\"format\";s:5:\"int32\";}s:24:\"memory_for_config_update\";O:8:\"stdClass\":4:{s:7:\"default\";i:15;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:114:\"Indicates
  the percent of memory reserved for config updates. Allowed values are 0-100. Field
  introduced in 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:15:\"data_network_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:172:\"Subnet
  used to spin up the data nic for Service Engines, used only for Azure cloud. Overrides
  the cloud level setting for Service Engine subnet. Field introduced in 18.2.3.\";}s:10:\"custom_tag\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CustomTag\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:119:\"Custom
  tag will be used to create the tags for SE instance in AWS. Note this is not the
  same as the prefix for SE name.\";}s:14:\"_last_modified\";O:8:\"stdClass\":3:{s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:11:\"description\";s:59:\"UNIX
  time since epoch in microseconds. Units(MICROSECONDS).\";}s:25:\"shm_minimum_config_memory\";O:8:\"stdClass\":4:{s:7:\"default\";i:4;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:112:\"Minimum
  required shared memory to apply any configuration. Allowed values are 0-100. Field
  introduced in 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:26:\"extra_shared_config_memory\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:86:\"Extra
  config memory to support large Geo DB configuration. Field introduced in 17.1.1.\";s:6:\"format\";s:5:\"int32\";}s:18:\"vcenter_datastores\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/VcenterDatastore\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:117:\"Placeholder
  for description of property vcenter_datastores of obj type ServiceEngineGroup field
  type str  type object\";}s:13:\"se_sb_threads\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:104:\"Number
  of Sideband threads per SE. Allowed values are 1-128. Field introduced in 16.5.2,
  17.1.9, 17.2.3.\";s:6:\"format\";s:5:\"int32\";}s:14:\"active_standby\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:55:\"Service
  Engines in active/standby mode for HA failover.\";}s:21:\"waf_learning_interval\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:131:\"Frequency
  with which SE publishes WAF learning. Allowed values are 1-43200. Field deprecated
  in 18.2.3. Field introduced in 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:30:\"auto_rebalance_capacity_per_se\";O:8:\"stdClass\":4:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:82:\"Capacities
  of SE for auto rebalance for each criteria. Field introduced in 17.2.4.\";s:6:\"format\";s:5:\"int64\";}s:19:\"service_ip6_subnets\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/IpAddrPrefix\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:99:\"IPv6
  Subnets assigned to the SE group. Required for VS group placement. Field introduced
  in 18.1.1.\";}s:14:\"reboot_on_stop\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:75:\"Reboot
  the system if the SE is stopped. Field introduced in 17.2.16,18.2.3.\";}s:13:\"se_probe_port\";O:8:\"stdClass\":4:{s:7:\"default\";i:7;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:74:\"TCP
  port on SE where echo service will be run. Field introduced in 17.2.2.\";s:6:\"format\";s:5:\"int32\";}s:23:\"extra_config_multiplier\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"number\";s:11:\"description\";s:60:\"Multiplier
  for extra config to support large VS/Pool config.\";s:6:\"format\";s:6:\"double\";}s:30:\"distribute_load_active_standby\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:115:\"Use
  both the active and standby Service Engines for Virtual Service placement in the
  legacy active standby HA mode.\";}s:17:\"async_ssl_threads\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:63:\"Number
  of Async SSL threads per se_dp. Allowed values are 1-16.\";s:6:\"format\";s:5:\"int32\";}s:26:\"advertise_backend_networks\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:99:\"Advertise
  reach-ability of backend server networks via ADC through BGP for default gateway
  feature.\";}s:14:\"vcenter_folder\";O:8:\"stdClass\":3:{s:7:\"default\";s:11:\"AviSeFolder\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:67:\"Folder
  to place all the Service Engine virtual machines in vCenter.\";}s:16:\"floating_intf_ip\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/IpAddr\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:387:\"If
  ServiceEngineGroup is configured for Legacy 1+1 Active Standby HA Mode, Floating
  IP's will be advertised only by the Active SE in the Pair. Virtual Services in this
  group must be disabled/enabled for any changes to the Floating IP's to take effect.
  Only active SE hosting VS tagged with Active Standby SE 1 Tag will advertise this
  floating IP when manual load distribution is enabled.\";}s:26:\"heap_minimum_config_memory\";O:8:\"stdClass\":4:{s:7:\"default\";i:8;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:110:\"Minimum
  required heap memory to apply any configuration. Allowed values are 0-100. Field
  introduced in 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:22:\"max_memory_per_mempool\";O:8:\"stdClass\":4:{s:7:\"default\";i:64;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:80:\"Max
  bytes that can be allocated in a single mempool. Field introduced in 18.1.5.\";s:6:\"format\";s:5:\"int32\";}s:27:\"ssl_preprocess_sni_hostname\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:224:\"(Beta)
  Preprocess SSL Client Hello for SNI hostname extension.If set to True, this will
  apply SNI child's SSL protocol(s), if they are different from SNI Parent's allowed
  SSL protocol(s). Field introduced in 17.2.12, 18.1.3.\";}s:11:\"allow_burst\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:72:\"Allow
  SEs to be created using burst license. Field introduced in 17.2.5.\";}s:13:\"max_cpu_usage\";O:8:\"stdClass\":4:{s:7:\"default\";i:80;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:204:\"When
  CPU usage on an SE exceeds this threshold, Virtual Services hosted on this SE may
  be rebalanced to other SEs to reduce load. A new SE may be created as part of this
  process. Allowed values are 40-90.\";s:6:\"format\";s:5:\"int32\";}s:19:\"min_scaleout_per_vs\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:90:\"Minimum
  number of active Service Engines for the Virtual Service. Allowed values are 1-64.\";s:6:\"format\";s:5:\"int32\";}s:13:\"vss_placement\";O:8:\"stdClass\":2:{s:11:\"description\";s:104:\"Parameters
  to place Virtual Services on only a subset of the cores of an SE. Field introduced
  in 17.2.5.\";s:4:\"$ref\";s:26:\"#/definitions/VssPlacement\";}s:9:\"buffer_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:59:\"Excess
  Service Engine capacity provisioned for HA failover.\";s:6:\"format\";s:5:\"int32\";}s:11:\"mem_reserve\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:111:\"Placeholder
  for description of property mem_reserve of obj type ServiceEngineGroup field type
  str  type boolean\";}s:22:\"vcenter_datastore_mode\";O:8:\"stdClass\":3:{s:7:\"default\";s:21:\"VCENTER_DATASTORE_ANY\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:89:\"
  Enum options - VCENTER_DATASTORE_ANY, VCENTER_DATASTORE_LOCAL, VCENTER_DATASTORE_SHARED.\";}s:18:\"enable_hsm_priming\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:179:\"(This
  is a beta feature). Enable HSM key priming. If enabled, key handles on the hsm will
  be synced to SE before processing client connections. Field introduced in 17.2.7,
  18.1.1.\";}s:23:\"auto_rebalance_criteria\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:204:\"Set
  of criteria for SE Auto Rebalance. Enum options - SE_AUTO_REBALANCE_CPU, SE_AUTO_REBALANCE_PPS,
  SE_AUTO_REBALANCE_MBPS, SE_AUTO_REBALANCE_OPEN_CONNS, SE_AUTO_REBALANCE_CPS. Field
  introduced in 17.2.3.\";}s:25:\"least_load_core_selection\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:41:\"Select
  core with least load for new flow.\";}s:28:\"aggressive_failure_detection\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:48:\"Enable
  aggressive failover configuration for ha.\";}s:24:\"significant_log_throttle\";O:8:\"stdClass\":4:{s:7:\"default\";i:100;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:194:\"This
  setting limits the number of significant logs generated per second per core on this
  SE. Default is 100 logs per second. Set it to zero (0) to disable throttling. Field
  introduced in 17.1.3.\";s:6:\"format\";s:5:\"int32\";}s:17:\"se_bandwidth_type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:195:\"Select
  the SE bandwidth for the bandwidth license. Enum options - SE_BANDWIDTH_UNLIMITED,
  SE_BANDWIDTH_25M, SE_BANDWIDTH_200M, SE_BANDWIDTH_1000M, SE_BANDWIDTH_10000M. Field
  introduced in 17.2.5.\";}s:24:\"additional_config_memory\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:144:\"Indicates
  the percent of config memory used for config updates. Allowed values are 0-90. Field
  deprecated in 18.1.2. Field introduced in 18.1.1.\";s:6:\"format\";s:5:\"int32\";}s:35:\"vs_se_scaleout_additional_wait_time\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:288:\"Wait
  time for sending scaleout ready notification after Virtual Service is marked UP.
  In certain deployments, there may be an additional delay to accept traffic. For
  example, for BGP, some time is needed for route advertisement. Allowed values are
  0-20. Field introduced in 18.1.5,18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:21:\"max_public_ips_per_lb\";O:8:\"stdClass\":4:{s:7:\"default\";i:30;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:116:\"Applicable
  to Azure platform only. Maximum number of public IPs per Azure LB. . Field introduced
  in 17.2.12, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:22:\"accelerated_networking\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:214:\"Enable
  accelerated networking option for Azure SE. Accelerated networking enables single
  root I/O virtualization (SR-IOV) to a SE VM. This improves networking performance.
  Field introduced in 17.2.14,18.1.5,18.2.1.\";}s:28:\"enable_vip_on_all_interfaces\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:63:\"Enable
  VIP on all interfaces of SE. Field introduced in 17.1.1.\";}s:10:\"se_routing\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:210:\"Enable
  routing via Service Engine Datapath. When disabled, routing is done by the Linux
  kernel. IP Routing needs to be enabled in Service Engine Group for SE Routing to
  be effective. Field introduced in 18.2.3.\";}s:14:\"auto_rebalance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:190:\"If
  set, Virtual Services will be automatically migrated when load on an SE is less
  than minimum or more than maximum thresholds. Only Alerts are generated when the
  auto_rebalance is not set.\";}s:29:\"gratarp_permanent_periodicity\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:84:\"GratArp
  periodicity for VIP-IP. Allowed values are 5-30. Field introduced in 18.2.3.\";s:6:\"format\";s:5:\"int32\";}s:6:\"min_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:156:\"Minimum
  number of Services Engines in this group (relevant for SE AutoRebalance only). Allowed
  values are 0-1000. Field introduced in 17.2.13,18.1.3,18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:14:\"se_tunnel_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:221:\"Determines
  if DSR from secondary SE is active or not  0  Automatically determine based on hypervisor
  type. 1  Disable DSR unconditionally. 2  Enable DSR unconditionally. Allowed values
  are 0-2. Field introduced in 17.1.1.\";s:6:\"format\";s:5:\"int32\";}s:13:\"memory_per_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:2048;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:65:\"Amount
  of memory for each of the Service Engine virtual machines.\";s:6:\"format\";s:5:\"int32\";}s:18:\"se_tunnel_udp_port\";O:8:\"stdClass\":4:{s:7:\"default\";i:1550;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:109:\"UDP
  Port for tunneled packets from secondary to primary SE in Docker bridge mode. Field
  introduced in 17.1.3.\";s:6:\"format\";s:5:\"int32\";}s:11:\"disable_gro\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:240:\"Disable
  Generic Receive Offload (GRO) in DPDK poll-mode driver packet receive path.  GRO
  is on by default on NICs that do not support LRO (Large Receive Offload) or do not
  gain performance boost from LRO. Field introduced in 17.2.5, 18.1.1.\";}s:19:\"vs_scaleout_timeout\";O:8:\"stdClass\":4:{s:7:\"default\";i:600;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:84:\"Time
  to wait for the scaled out SE to become ready before marking the scaleout done.\";s:6:\"format\";s:5:\"int32\";}s:21:\"se_flow_probe_retries\";O:8:\"stdClass\":4:{s:7:\"default\";i:2;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:110:\"Flow
  probe retry count if no replies are received. Allowed values are 0-5. Field introduced
  in 18.1.4, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:23:\"ephemeral_portrange_end\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:102:\"End
  local ephemeral port number for outbound connections. Field introduced in 17.2.13,
  18.1.5, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:7:\"ha_mode\";O:8:\"stdClass\":3:{s:7:\"default\";s:14:\"HA_MODE_SHARED\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:167:\"High
  Availability mode for all the Virtual Services using this Service Engine group.
  Enum options - HA_MODE_SHARED_PAIR, HA_MODE_SHARED, HA_MODE_LEGACY_ACTIVE_STANDBY.\";}s:23:\"se_remote_punt_udp_port\";O:8:\"stdClass\":4:{s:7:\"default\";i:1501;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:78:\"UDP
  Port for punted packets in Docker bridge mode. Field introduced in 17.1.2.\";s:6:\"format\";s:5:\"int32\";}s:19:\"ingress_access_mgmt\";O:8:\"stdClass\":3:{s:7:\"default\";s:21:\"SG_INGRESS_ACCESS_ALL\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:211:\"Program
  SE security group ingress rules to allow SSH/ICMP management access from remote
  CIDR type. Enum options - SG_INGRESS_ACCESS_NONE, SG_INGRESS_ACCESS_ALL, SG_INGRESS_ACCESS_VPC.
  Field introduced in 17.1.5.\";}s:11:\"disk_per_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:69:\"Amount
  of disk space for each of the Service Engine virtual machines.\";s:6:\"format\";s:5:\"int32\";}s:28:\"vs_se_scaleout_ready_timeout\";O:8:\"stdClass\":4:{s:7:\"default\";i:25;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:154:\"Timeout
  in seconds for Service Engine to sendScaleout Ready notification of a Virtual Service.
  Allowed values are 0-60. Field introduced in 18.1.5,18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:17:\"archive_shm_limit\";O:8:\"stdClass\":4:{s:7:\"default\";i:8;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:109:\"Amount
  of SE memory in GB until which shared memory is collected in core archive. Field
  introduced in 17.1.3.\";s:6:\"format\";s:5:\"int32\";}s:13:\"max_vs_per_se\";O:8:\"stdClass\":4:{s:7:\"default\";i:10;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:165:\"Maximum
  number of Virtual Services that can be placed on a single Service Engine. East West
  Virtual Services are excluded from this limit. Allowed values are 1-1000.\";s:6:\"format\";s:5:\"int32\";}s:27:\"app_learning_memory_percent\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:179:\"A
  percent value of total SE memory reserved for Application learning. This is an SE
  bootup property and requires SE restart. Allowed values are 0 - 10. Field introduced
  in 18.2.3.\";s:6:\"format\";s:5:\"int32\";}s:15:\"enable_multi_lb\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:189:\"Applicable
  only for Azure cloud with Basic SKU LB. If set, additional Azure LBs will be automatically
  created if resources in existing LB are exhausted. Field introduced in 17.2.10,
  18.1.2.\";}s:27:\"openstack_mgmt_network_uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"Management
  network UUID.\";}s:23:\"n_log_streaming_threads\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:106:\"Number
  of threads to use for log streaming. Allowed values are 1-100. Field introduced
  in 17.2.12, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:16:\"use_standard_alb\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:172:\"Use
  Standard SKU Azure Load Balancer. By default cloud level flag is set. If not set,
  it inherits/uses the use_standard_alb flag from the cloud. Field introduced in 18.2.3.\";}s:26:\"se_vs_hb_max_pkts_in_batch\";O:8:\"stdClass\":4:{s:7:\"default\";i:64;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:123:\"Maximum
  number of aggregated vs heartbeat packets to send in a batch. Allowed values are
  1-256. Field introduced in 17.1.1.\";s:6:\"format\";s:5:\"int32\";}s:17:\"app_cache_percent\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:212:\"A
  percent value of total SE memory reserved for application caching. This is an SE
  bootup property and requires SE restart. Allowed values are 0 - 100. Special values
  are 0- 'disable'. Field introduced in 18.2.3.\";s:6:\"format\";s:5:\"int32\";}s:20:\"se_sb_dedicated_core\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:97:\"Sideband
  traffic will be handled by a dedicated core. Field introduced in 16.5.2, 17.1.9,
  17.2.3.\";}s:18:\"host_attribute_key\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:664:\"Key
  of a (Key, Value) pair identifying a label for a set of Nodes usually in Container
  Clouds. Needs to be specified together with host_attribute_value. SEs can be configured
  differently including HA modes across different SE Groups. May also be used for
  isolation between different classes of VirtualServices. VirtualServices' SE Group
  may be specified via annotations/labels. A OpenShift/Kubernetes namespace maybe
  annotated with a matching SE Group label as openshift.io/node-selector  apptype=prod.
  When multiple SE Groups are used in a Cloud with host attributes specified,just
  a single SE Group can exist as a match-all SE Group without a host_attribute_key.\";}s:15:\"se_ipc_udp_port\";O:8:\"stdClass\":4:{s:7:\"default\";i:1500;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:73:\"UDP
  Port for SE_DP IPC in Docker bridge mode. Field introduced in 17.1.2.\";s:6:\"format\";s:5:\"int32\";}s:10:\"hypervisor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:87:\"Override
  default hypervisor. Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN.\";}s:11:\"cpu_reserve\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:111:\"Placeholder
  for description of property cpu_reserve of obj type ServiceEngineGroup field type
  str  type boolean\";}s:26:\"custom_securitygroups_mgmt\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:134:\"Custom
  Security Groups to be associated with management vNic for SE instances in OpenStack
  and AWS Clouds. Field introduced in 17.1.3.\";}s:11:\"enable_vmac\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:82:\"Use
  Virtual MAC address for interfaces on which floating interface IPs are placed.\";}s:27:\"openstack_mgmt_network_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"Avi
  Management network name.\";}s:24:\"se_pcap_reinit_threshold\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:253:\"Threshold
  for input packet receive errors in PCAP mode exceeding which a PCAP reinit is triggered.
  If not set, an unconditional reinit is performed. This value is checked every pcap_reinit_frequency
  interval. Field introduced in 17.2.13, 18.1.3, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:13:\"hm_on_standby\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:84:\"Enable
  active health monitoring from the standby SE for all placed virtual services.\";}s:17:\"distribute_queues\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:111:\"Distributes
  queue ownership among cores so multiple cores handle dispatcher duties. Field introduced
  in 17.2.8.\";}s:31:\"hardwaresecuritymodulegroup_ref\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:68:\"
  It is a reference to an object of type HardwareSecurityModuleGroup.\";}s:30:\"minimum_required_config_memory\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:141:\"Required
  available config memory to apply any configuration. Allowed values are 0-90. Field
  deprecated in 18.1.2. Field introduced in 18.1.1.\";s:6:\"format\";s:5:\"int32\";}s:25:\"ephemeral_portrange_start\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:104:\"Start
  local ephemeral port number for outbound connections. Field introduced in 17.2.13,
  18.1.5, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:21:\"se_tracert_port_range\";O:8:\"stdClass\":2:{s:11:\"description\";s:50:\"Traceroute
  port range. Field introduced in 17.2.8.\";s:4:\"$ref\";s:23:\"#/definitions/PortRange\";}s:21:\"floating_intf_ip_se_2\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/IpAddr\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:387:\"If
  ServiceEngineGroup is configured for Legacy 1+1 Active Standby HA Mode, Floating
  IP's will be advertised only by the Active SE in the Pair. Virtual Services in this
  group must be disabled/enabled for any changes to the Floating IP's to take effect.
  Only active SE hosting VS tagged with Active Standby SE 2 Tag will advertise this
  floating IP when manual load distribution is enabled.\";}s:10:\"log_disksz\";O:8:\"stdClass\":4:{s:7:\"default\";i:10000;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:104:\"Maximum
  disk capacity (in MB) to be allocated to an SE. This is exclusively used for debug
  and log data.\";s:6:\"format\";s:5:\"int32\";}s:11:\"se_use_dpdk\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:208:\"Determines
  if DPDK library should be used or not   0  Automatically determine based on hypervisor
  type 1  Use DPDK if PCAP is not enabled 2  Don't use DPDK. Allowed values are 0-2.
  Field introduced in 18.1.3.\";s:6:\"format\";s:5:\"int32\";}s:27:\"openstack_availability_zone\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"
  Field deprecated in 17.1.1.\";}s:23:\"auto_rebalance_interval\";O:8:\"stdClass\":4:{s:7:\"default\";i:300;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:55:\"Frequency
  of rebalance, if 'Auto rebalance' is enabled.\";s:6:\"format\";s:5:\"int32\";}s:7:\"vip_asg\";O:8:\"stdClass\":2:{s:11:\"description\";s:181:\"When
  vip_asg is set, Vip configuration will be managed by Avi.User will be able to configure
  vip_asg or Vips individually at the time of create. Field introduced in 17.2.12,
  18.1.2.\";s:4:\"$ref\";s:31:\"#/definitions/VipAutoscaleGroup\";}s:20:\"ignore_rtt_threshold\";O:8:\"stdClass\":4:{s:7:\"default\";i:5000;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:79:\"Ignore
  RTT samples if it is above threshold. Field introduced in 17.1.6,17.2.2.\";s:6:\"format\";s:5:\"int32\";}s:28:\"openstack_availability_zones\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:28:\"
  Field introduced in 17.1.1.\";}s:21:\"disable_csum_offloads\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:105:\"Stop
  using TCP/UDP and IP checksum offload features of NICs. Field introduced in 17.1.14,
  17.2.5, 18.1.1.\";}s:36:\"num_flow_cores_sum_changes_to_ignore\";O:8:\"stdClass\":4:{s:7:\"default\";i:8;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:50:\"Number
  of changes in num flow cores sum to ignore.\";s:6:\"format\";s:5:\"int32\";}s:4:\"algo\";O:8:\"stdClass\":3:{s:7:\"default\";s:21:\"PLACEMENT_ALGO_PACKED\";s:4:\"type\";s:6:\"string\";s:11:\"description\";s:169:\"In
  compact placement, Virtual Services are placed on existing SEs until max_vs_per_se
  limit is reached. Enum options - PLACEMENT_ALGO_PACKED, PLACEMENT_ALGO_DISTRIBUTED.\";}s:18:\"os_reserved_memory\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:90:\"Amount
  of extra memory to be reserved for use by the Operating System on a Service Engine.\";s:6:\"format\";s:5:\"int32\";}s:24:\"se_pcap_reinit_frequency\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:307:\"Frequency
  in seconds at which periodically a PCAP reinit check is triggered. May be used in
  conjunction with the configuration pcap_reinit_threshold. (Valid range   15 mins
  - 12 hours, 0 - disables). Allowed values are 900-43200. Special values are 0- 'disable'.
  Field introduced in 17.2.13, 18.1.3, 18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:40:\"User
  defined description for the object.\";}s:30:\"vs_scalein_timeout_for_upgrade\";O:8:\"stdClass\":4:{s:7:\"default\";i:30;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:109:\"During
  SE upgrade, Time to wait for the scaled-in SE to drain existing flows before marking
  the scalein done.\";s:6:\"format\";s:5:\"int32\";}s:20:\"se_deprovision_delay\";O:8:\"stdClass\":4:{s:7:\"default\";i:120;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:372:\"Duration
  to preserve unused Service Engine virtual machines before deleting them. If traffic
  to a Virtual Service were to spike up abruptly, this SE would still be available
  to be utilized again rather than creating a new SE. If this value is set to 0, Controller
  will never delete any SEs and administrator has to manually cleanup unused SEs.
  Allowed values are 0-525600.\";s:6:\"format\";s:5:\"int32\";}s:22:\"se_vs_hb_max_vs_in_pkt\";O:8:\"stdClass\":4:{s:7:\"default\";i:256;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:147:\"Maximum
  number of virtualservices for which heartbeat messages are aggregated in one packet.
  Allowed values are 1-1024. Field introduced in 17.1.1.\";s:6:\"format\";s:5:\"int32\";}s:25:\"minimum_connection_memory\";O:8:\"stdClass\":4:{s:7:\"default\";i:20;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:111:\"Indicates
  the percent of memory reserved for connections. Allowed values are 0-100. Field
  introduced in 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:16:\"mgmt_network_ref\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"Management
  network to use for Avi Service Engines. It is a reference to an object of type Network.\";}s:28:\"non_significant_log_throttle\";O:8:\"stdClass\":4:{s:7:\"default\";i:100;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:198:\"This
  setting limits the number of non-significant logs generated per second per core
  on this SE. Default is 100 logs per second. Set it to zero (0) to disable throttling.
  Field introduced in 17.1.3.\";s:6:\"format\";s:5:\"int32\";}s:12:\"license_tier\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:173:\"Specifies
  the license tier which would be used. This field by default inherits the value from
  cloud. Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5.\";}s:30:\"flow_table_new_syn_max_entries\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:117:\"Maximum
  number of flow table entries that have not completed TCP three-way handshake yet.
  Field introduced in 17.2.5.\";s:6:\"format\";s:5:\"int32\";}s:20:\"host_gateway_monitor\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:133:\"Enable
  the host gateway monitor when service engine is deployed as docker container. Disabled
  by default. Field introduced in 17.2.4.\";}s:3:\"url\";O:8:\"stdClass\":3:{s:8:\"readOnly\";b:1;s:4:\"type\";s:6:\"string\";s:11:\"description\";s:3:\"url\";}s:9:\"cloud_ref\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:46:\"
  It is a reference to an object of type Cloud.\";}s:21:\"vs_switchover_timeout\";O:8:\"stdClass\":4:{s:7:\"default\";i:300;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:184:\"During
  SE upgrade in a legacy active/standby segroup, Time to wait for the new primary
  SE to accept flows before marking the switchover done. Field introduced in 17.2.13,18.1.4,18.2.1.\";s:6:\"format\";s:5:\"int32\";}s:20:\"se_thread_multiplier\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:65:\"Multiplier
  for SE threads based on vCPU. Allowed values are 1-10.\";s:6:\"format\";s:5:\"int32\";}s:16:\"waf_mempool_size\";O:8:\"stdClass\":4:{s:7:\"default\";i:64;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:58:\"Memory
  pool size used for WAF. Field introduced in 17.2.3.\";s:6:\"format\";s:5:\"int32\";}s:25:\"dedicated_dispatcher_core\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:148:\"Dedicate
  the core that handles packet receive/transmit from the network to just the dispatching
  function. Don't use it for TCP/IP and SSL functions.\";}s:11:\"mgmt_subnet\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Management
  subnet to use for Avi Service Engines.\";s:4:\"$ref\";s:26:\"#/definitions/IpAddrPrefix\";}s:18:\"vs_host_redundancy\";O:8:\"stdClass\":3:{s:7:\"default\";b:1;s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:86:\"Ensure
  primary and secondary Service Engines are deployed on different physical hosts.\";}s:21:\"vss_placement_enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:107:\"If
  set, Virtual Services will be placed on only a subset of the cores of an SE. Field
  introduced in 18.1.1.\";}}}s:25:\"VipAutoscaleConfiguration\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"zones\";O:8:\"stdClass\":3:{s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/VipAutoscaleZones\";}s:4:\"type\";s:5:\"array\";s:11:\"description\";s:97:\"This
  is the list of AZ+Subnet in which Vips will be spawned. Field introduced in 17.2.12,
  18.1.2.\";}}}s:18:\"VipAutoscalePolicy\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"min_size\";O:8:\"stdClass\":4:{s:7:\"default\";i:1;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:67:\"The
  minimum size of the group. Field introduced in 17.2.12, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:7:\"suspend\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:68:\"When
  set, scaling is suspended. Field introduced in 17.2.12, 18.1.2.\";}s:8:\"max_size\";O:8:\"stdClass\":4:{s:7:\"default\";i:5;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:67:\"The
  maximum size of the group. Field introduced in 17.2.12, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}s:12:\"dns_cooldown\";O:8:\"stdClass\":4:{s:7:\"default\";i:60;s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:126:\"The
  amount of time, in seconds, when a Vip is withdrawn before a scaling activity starts.
  Field introduced in 17.2.12, 18.1.2.\";s:6:\"format\";s:5:\"int32\";}}}s:16:\"VcenterDatastore\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:14:\"datastore_name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"datastore_name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"datastore_name
  of VcenterDatastore.\";}}}s:9:\"CustomTag\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:7:\"tag_key\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"tag_val\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"tag_val
  of CustomTag.\";}s:7:\"tag_key\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"tag_key
  of CustomTag.\";}}}s:17:\"VipAutoscaleGroup\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"policy\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"
  Field introduced in 17.2.12, 18.1.2.\";s:4:\"$ref\";s:32:\"#/definitions/VipAutoscalePolicy\";}s:13:\"configuration\";O:8:\"stdClass\":2:{s:11:\"description\";s:37:\"
  Field introduced in 17.2.12, 18.1.2.\";s:4:\"$ref\";s:39:\"#/definitions/VipAutoscaleConfiguration\";}}}}"
...
