---
openapi: 3.0.0
info: !php/object "O:8:\"stdClass\":6:{s:5:\"title\";s:31:\"Leegality Documentation
  Gateway\";s:11:\"description\";s:9105:\"Welcome to the reference for the Leegality
  REST API!\n\nYou can use our API for creating, editing and deleting Signing invitations;
  for fetching Documents, Audit Trails and other details for existing invitations;
  and for searching documents based on your custom query.\n\nThe API is based on REST
  principles, and is a JSON-backed interface.\n## Integration Flow\nIn terms of the
  flow-\n\n1. The first step is to create a Sign Invitation by making a POST call
  to the Create API from your back-end server.      \n\n    a. One Sign Invitation
  can be used to get a single PDF file eSigned.\n\n    b. You can add any number of
  signers to an invitation. A signer is called an invitee. By default, a signer order
  is assigned to the request as per which the invitations of subsequent invitees are
  only activated on successful eSigning by the previous invitees. You can also deactivate
  Signing order if your use case so requires.\n\n    c. You need to mandatorily pass
  the Name, email and/or phone number of the invitee to create an invitation for the
  invitee.\n\n    d.  You also need to pass the PDF file to be signed in Base64 format,
  or pass a Template ID along with the Template Key Values after obtaining the same
  from your Dashboard.\n\n    e. You can configure the signature type and other configurations
  for every invitee while create the invitation.\n\n    f. In case you want to use
  a Stamp Paper for a document, you need to pass the relevant Stamp Series ID after
  obtaining the same from your Dashboard. Please note that you need to pre-purchase
  a particular number of Stamps from your Dashboard to be able to use this functionality.\n\n2.
  In response to a successful call in the previous step, you will receive a Document
  ID and Signing URL in reponse.\n\n    Signing URL is a unique user-specific URL
  created for every request. The user can sign the document from this URL. You have
  various ways of sending the user to this URL to eSign the document.    \n\n    a.
  You can use our Front-end Web and Mobile SDKs to open the URL from within your application.\n\n
  \   b. You can redirect the user to the URL and have him redirected back to the
  redirection URL set by you on completion or error.\n\n    c. You can set that the
  URLs created be automatically sent to their email/phone to complete the process
  outside your application.\n3. On successful signing, a notification with the updated
  document is sent to the Success Webhook set by you for every particular invitee.
  In case of error, the notification is sent to a separate Error Webhook provided
  by you.\n\n    Alternatively, you can also make a GET call to the Details API with
  the relvant Document ID to check the status of the invitation and/or to fetch the
  document.    \n\n    a. Once a document is successfully signed by all assigned invitees,
  it is considered as completed and an audit trail is generated for the particular
  document. The Audit Trail is sent to the success Webhook on successful signing by
  the last invitee, and can also alternatively be fetched by calling the Details API
  once the document has been completed.    \n\n    b. Completed documents are also
  saved in your Dashboard by default. By enforcing the Delete on Complete functionality
  from the Dashboard or while create the Signing Request , you can program the documents
  to automatically get deleted from your Dashboard after 7 days of completion.    \n\n
  \   c.  A URL of the signed document is also sent to all the signers by default
  for them to view, download or delete the signed document. In case, Delete on Complete
  functionality is turned on, the URL automatically expires after 7 days of completion
  unless express saved by the user in his Leegality Account.\n    \n## Account Authentication\n1.
  You need to obtain an \u201CAuth Token\u201D from the API Settings Tab from your
  Leegality dashboard to be able to interact with our API.\n2. You can also optionally
  whitelist the IPs from where you want to interact with our APIs. The same can be
  done from the API Settings Tab as well. It is highly recommended that you do so
  before going live.\n3. To verify Webhook calls, you can verify the value of the
  MAC key in Webhook calls. The value of mac is calculated by applying HMAC-SHA1 algorithm
  on documentId with your Private Salt provided in your API Settings Tab. You can
  use it to ensure that the calls are coming from our servers.\n## Types of eSign\n1.
  Essential Plan customers can use Aadhaar eSign (OTP and Biometric), VirtualSign
  and DSC.\n2. Business and Corporate Plan customers in addition can also use Document
  Signer Certificate and Automated Signer using Virtual Sign or Document Signer Certificate.\n\n
  \  ### Aadhaar eSign\n   \n    Aadhaar eSign is an Aadhaar authentication based
  digital signature which can be carried out using the Aadhaar OTP or Aadhaar Biometric
  verification method. For Aadhaar biometric, you need to procure a Aadhaar registered
  Biometric Device. The same can be either used from a Windows PC or a Android Device
  (using our Android Biometric SDK)\n    \n   ### Virtual Sign \n    \n    Virtual
  Sign is an Mobile/Email OTP based authentication for approval of a document.\n\n
  \  ### DSC \n   \n    DSC is a USB-dongle based technique of digitally signing a
  document. The signer needs to install Leegality's USB Signing Utility in their PC
  and need to possess a USB Dongle with a valid Digital Signature Certificate issued
  by a Certifying Authority.\n\n   ### Document Signer Certificate \n   \n    Document
  Signer Certificate is a certificate issued to an Organisation for server based signing
  of documents. To use the same, you need to place a validly issued Document Signer
  Certificate on your server along with Leegality's Document Signer Utility, and then
  configure the same from your Dashboard.\n    \n   ### Automated Signer \n   \n    Automated
  Signing can be carried out either using a Document Signer Certificate or a Virtual
  Signature pre-configured with any user in your organisational account with Leegality.\n\n##
  Branding\n  \n1. You can upload your Organisational Logo under \u2018Branding Logo\u2019
  in your Settings Page to replace the Leegality Default Logo on all signing pages.\n2.
  You can update your organisation\u2019s name under \u2018Branding Name\u2019 in
  your Settings Page to be used in email and phone communication to your users.\n3.
  Corporate and Business users can also use a custom sub-domain and custom color for
  their Organisation.\n## Templates\nYou can create a Template from your Dashboard
  from the in-built Word Processor, setup custom fields and then use the same to automically
  generate a PDF file for eSigning.You can obtain a Template ID and sample JSON with
  the Field Keys to use while create an eSigning Request.\n\n## Stamps\nIn case you
  want to use Stamp Papers for your Documents, you need to purchase the desired number
  of Stamp Papers for the desired State from your Dashboard. Once a request is placed,
  you can obtain the Stamp Series ID and pass the same while create the Signing Request.
  We will automatically use the latest available Stamp Paper from the Series and merge
  the same with your Document.\n## Expiry\nEvery signing Request has an expiry period
  within which the document must be signed. If the document is not signed by the invitees
  within the expiry period, the invitation is cancelled and the transaction is reversed.
  If the invitation is signed by one invitee before the expiry period but has more
  pending invitations even after the expiry period, the invitaion remains in Sent
  state and need to be manually activated again- either from the Dashboard or calling
  the edit API. Error Webhooks are called on expiry of every invitation.\n## Wallet
  usage\nOn successful request creation, the respective transaction charge is reserved
  from your Wallet. Once the signature is actually carried out the reserved balance
  is used. If the invitation expires, the balance reserved for the expired invitations
  is moved back. In case of a Stamped document, the Stamp Paper is reversed in case
  no invitee signed the document. If even a single invitee successfully signed the
  document, the Stamp Paper cannot be reused.\n## Updates and Notifications\nYou can
  subscribe to the receive updates on the changes made to this API reference from
  your Notifications Tab in your Production Dashboard.\nFor more details, access our
  FAQs page.\n## Resources\n\n  Web SDK (Front-end) - https://gitlab.leegality.com/leegality-public/web-sdk/tree/v4\n\n
  \ Android SDK (Front-end) - https://gitlab.leegality.com/leegality-public/android-sdk/tree/v4\n\n
  \ Android Biometric SDK (APK file for Front-end Integration) - https://gitlab.leegality.com/leegality-public/leegality-helper
  \n\n  iOS SDK (Front end) - https://gitlab.leegality.com/leegality-public/ios-sdk
  \n\n  Document Signer Server Utility (Backend) - https://gitlab.leegality.com/leegality-public/docsigner
  \n\n  USB Dongle Utility (Windows and Mac Desktop Utility) - https://gitlab.leegality.com/leegality-public/dsc-utility\n\n
  \ Sandbox Dashboard - https://sandbox.leegality.com \n\n  Sandbox Base URL - https://sandbox.leegality.com/api/v2.1
  \n\n  Production Dashboard - https://app.leegality.com \n\n  Production Base URL
  - https://app.leegality.com/api/v2.1\";s:14:\"termsOfService\";s:30:\"https://leegality.com/tnc.html\";s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:17:\"Leegality
  Support\";s:5:\"email\";s:21:\"contact@leegality.com\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:73:\"https://raw.githubusercontent.com/prakharmittal/test-docs/master/logo.png\";}s:7:\"version\";s:3:\"2.1\";}"
paths: []
...
