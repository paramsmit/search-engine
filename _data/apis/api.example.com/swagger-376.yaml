---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:17:\"deviceQueue.proto\";s:7:\"version\";s:15:\"version
  not set\";}"
paths:
  /api/devices/{dev_eui}/queue:
    get:
      summary: List lists the items in the device-queue.
      operationId: List
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/apiListDeviceQueueItemsResponse'
      parameters:
      - name: dev_eui
        in: path
        required: true
        type: string
      tags:
      - DeviceQueueService
    delete:
      summary: Flush flushes the downlink device-queue.
      operationId: Flush
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/protobufEmpty'
      parameters:
      - name: dev_eui
        in: path
        required: true
        type: string
      tags:
      - DeviceQueueService
  /api/devices/{device_queue_item.dev_eui}/queue:
    post:
      summary: Enqueue adds the given item to the device-queue.
      operationId: Enqueue
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/apiEnqueueDeviceQueueItemResponse'
      parameters:
      - name: device_queue_item.dev_eui
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/apiEnqueueDeviceQueueItemRequest'
      tags:
      - DeviceQueueService
produces:
- application/json
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":5:{s:18:\"apiDeviceQueueItem\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"dev_eui\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:25:\"Device
  EUI (HEX encoded).\";}s:9:\"confirmed\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:6:\"format\";s:7:\"boolean\";s:11:\"description\";s:133:\"Set
  this to true when an acknowledgement from the device is required.\nPlease note that
  this must not be used to guarantee a delivery.\";}s:5:\"f_cnt\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:65:\"Downlink
  frame-counter.\nThis will be automatically set on enquue.\";}s:6:\"f_port\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:5:\"title\";s:24:\"FPort
  used (must be > 0)\";}s:4:\"data\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";s:11:\"description\";s:96:\"Base64
  encoded data.\nOr use the json_object field when an application codec has been configured.\";}s:11:\"json_object\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:128:\"JSON
  object (string).\nOnly use this when an application codec has been configured that
  can convert\nthis object into binary form.\";}}}s:32:\"apiEnqueueDeviceQueueItemRequest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:17:\"device_queue_item\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:32:\"#/definitions/apiDeviceQueueItem\";s:11:\"description\";s:29:\"Queue-item
  object to enqueue.\";}}}s:33:\"apiEnqueueDeviceQueueItemResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"f_cnt\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:39:\"Frame-counter
  for the enqueued payload.\";}}}s:31:\"apiListDeviceQueueItemsResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:18:\"device_queue_items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/apiDeviceQueueItem\";}}}}s:13:\"protobufEmpty\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:153:\"service
  Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe
  JSON representation for `Empty` is empty JSON object `{}`.\";s:5:\"title\";s:200:\"A
  generic empty message that you can re-use to avoid defining duplicated\nempty messages
  in your APIs. A typical example is to use it as the request\nor the response type
  of an API method. For instance:\";}}"
...
