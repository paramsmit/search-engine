---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"This is the API-documentation
  \";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:19:\"Menus Documentation\";}"
host: ""
basePath: ""
paths:
  /restaurant:
    post:
      tags:
      - Restaurant
      summary: Create Restaurant
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      responses:
        200:
          description: Creating the Restaurant's
          schema:
            $ref: '#/definitions/Restaurant'
        400:
          description: Invalid user supplied
    patch:
      tags:
      - Restaurant
      summary: Update Restaurant
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      responses:
        200:
          description: Updating the Restaurant's Attributes
          schema:
            $ref: '#/definitions/Restaurant'
        400:
          description: Invalid user supplied
        404:
          description: Restaurant not found
  /restaurant/:id:
    get:
      tags:
      - Restaurant
      summary: Get restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: Fetching a Restaurant's Attributes
          schema:
            $ref: '#/definitions/Restaurant'
        400:
          description: Invalid user supplied
        404:
          description: Restaurant not found
  /restaurant/upload/:id:
    post:
      tags:
      - Restaurant
      summary: Upload Images to  Restaurant
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      responses:
        200:
          description: Upload Complete
          schema:
            $ref: '#/definitions/Restaurant'
        400:
          description: Invalid user supplied
        404:
          description: Restaurant not found
  /plate:
    post:
      tags:
      - Plate
      summary: Create Plate
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      responses:
        200:
          description: Creating the Plate's Attributes
          schema:
            $ref: '#/definitions/Plate'
        400:
          description: Invalid user supplied
        404:
          description: Plate not found
  /plate/:id:
    get:
      tags:
      - Plate
      summary: Get plate by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: Fetching the Plate's Attributes
          schema:
            $ref: '#/definitions/Plate'
        400:
          description: Invalid user supplied
        404:
          description: Plate not found
    patch:
      tags:
      - Plate
      summary: Updated plate
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      responses:
        200:
          description: Editing the Plate's Attributes
          schema:
            $ref: '#/definitions/Plate'
        400:
          description: Invalid user supplied
        404:
          description: Plate not found
  /user:
    post:
      tags:
      - User
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      responses:
        200:
          description: Creating a User
          schema:
            $ref: '#/definitions/Profile'
        400:
          description: Invalid user supplied
    patch:
      tags:
      - User
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      responses:
        200:
          description: Editing the User's Attributes
          schema:
            $ref: '#/definitions/Profile'
        400:
          description: Invalid user supplied
        404:
          description: User not found
  /signUp:
    post:
      tags:
      - Auth
      summary: SignUp into the system
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: Signing Up
          schema:
            $ref: '#/definitions/User'
  /login:
    post:
      tags:
      - Auth
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
      - application/json
      responses:
        200:
          description: Logging In successful
          schema:
            $ref: '#/definitions/User'
  /logout:
    get:
      tags:
      - Auth
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      produces:
      - application/json
      parameters: []
  /user/:id:
    get:
      tags:
      - User
      summary: Get user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: Fetching the Users's Attributes
          schema:
            $ref: '#/definitions/Profile'
        400:
          description: Invalid user supplied
        404:
          description: User not found
  /search:
    get:
      tags:
      - Search
      summary: Searching for users/restaurants
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            oneOf:
            - $ref: '#/definitions/Profile'
            - $ref: '#/definitions/Restaurant'
        400:
          description: Invalid username supplied
        404:
          description: User/Restaurant not found
  /search/restaurant:
    get:
      tags:
      - Search
      summary: Advanced Searching in restaurants
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Restaurants'
        400:
          description: Invalid Place/Category supplied
        404:
          description: No Restaurants Found
  /block:
    post:
      tags:
      - Block
      summary: Block user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
  /block/:id:
    get:
      tags:
      - Block
      summary: Get blocks of user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Profile'
  /report/:id:
    post:
      tags:
      - Report
      summary: Report user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
    get:
      tags:
      - Report
      summary: Get reports on user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Profile'
  /review/:id:
    post:
      tags:
      - Review
      summary: Review on restaurant/plate
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: Plate/Restaurant not found
    get:
      tags:
      - Review
      summary: Get reviews by review_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Reviews'
  /comment/:id:
    post:
      tags:
      - Comment
      summary: Comment on a review/comment
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: Plate/Restaurant not found
    get:
      tags:
      - Comment
      summary: Get comment by target_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Comments'
  /follow/:id:
    post:
      tags:
      - Follower
      summary: Followe user
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              followings:
                type: array
                items:
                  $ref: '#/definitions/Followings'
    get:
      tags:
      - Follower
      summary: Get Followers by target_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              followings:
                type: array
                items:
                  $ref: '#/definitions/Followings'
    delete:
      tags:
      - Follower
      summary: Unfollow user by collection_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
  /favorite/:id:
    post:
      tags:
      - Favorite
      summary: Favorite restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
    get:
      tags:
      - Favorite
      summary: Get Favorite by user_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              favorites:
                type: array
                items:
                  $ref: '#/definitions/Favorites'
  /bucketlist:
    post:
      tags:
      - Bucketlist
      summary: Bucketlist restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              bucketlist:
                type: object
                items:
                  $ref: '#/definitions/BucketList'
        404:
          description: User not found
  /bucketlist/:id:
    get:
      tags:
      - Bucketlist
      summary: Get Bucketlist by user_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              bucketlist:
                type: array
                items:
                  $ref: '#/definitions/BucketList'
        404:
          description: User not found
  /checkin:
    post:
      tags:
      - Checkin
      summary: Checkin restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              checkedin:
                type: object
                items:
                  $ref: '#/definitions/CheckedIn'
        404:
          description: User not found
  /checkin/:id:
    get:
      tags:
      - Checkin
      summary: Get Bucketlist by user_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              checked-in:
                type: array
                items:
                  $ref: '#/definitions/CheckedIn'
        404:
          description: User not found
  /like/:id:
    post:
      tags:
      - Like
      summary: Like a review by id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
    get:
      tags:
      - Like
      summary: Get likes on target_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
    delete:
      tags:
      - Like
      summary: Unlike by target_id
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        404:
          description: User not found
  /order:
    post:
      tags:
      - Order
      summary: Make an order
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              order:
                type: object
                items:
                  $ref: '#/definitions/Order'
        404:
          description: User not found
    get:
      tags:
      - Order
      summary: Orders made by a user
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              orders:
                type: object
                items:
                  $ref: '#/definitions/Order'
        404:
          description: Order not found
  /order/:id:
    get:
      tags:
      - Order
      summary: Get an order
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              orders:
                type: array
                items:
                  $ref: '#/definitions/Order'
        404:
          description: User not found
    patch:
      tags:
      - Order
      summary: Make an order
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              order:
                type: array
                items:
                  $ref: '#/definitions/Order'
        404:
          description: User not found
  /question:
    post:
      tags:
      - Question
      summary: Send question to restaurant
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              question:
                type: object
                items:
                  $ref: '#/definitions/Question'
        404:
          description: Restaurant not found
  /question/:id:
    patch:
      tags:
      - Question
      summary: Send question to restaurant
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              question:
                type: object
                items:
                  $ref: '#/definitions/Question'
        404:
          description: Restaurant not found
  /chat/:roomId:
    post:
      tags:
      - Chat
      summary: Send message to chat-room
      description: ""
      operationId: ""
      produces:
      - application/json
    get:
      tags:
      - Chat
      summary: Fetch room messages
      description: ""
      operationId: ""
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              messages:
                type: array
                items:
                  type: object
                  properties:
                    from:
                      type: integer
                    message:
                      type: string
        404:
          description: User not found
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":15:{s:4:\"User\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"Guns
  N' Roses\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"user_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:9:\"User
  Type\";s:4:\"enum\";a:2:{i:0;s:7:\"Visitor\";i:1;s:10:\"Restaurant\";}}}}s:10:\"Restaurant\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"Guns
  N' Roses\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"Guns\";}}}s:7:\"Profile\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"Ahmed
  Kamal\";}}}s:5:\"Plate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:13:\"restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"promotion\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:9:\"isOffered\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:6:\"prices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"size\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"price\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}}}s:5:\"Order\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"plates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Plate\";}}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"status\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"Order
  Status\";s:4:\"enum\";a:3:{i:0;s:6:\"placed\";i:1;s:8:\"approved\";i:2;s:9:\"delivered\";}}}}s:4:\"Room\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"members\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:8:\"messages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"from\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:8:\"Question\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"isAnon\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"replies\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"from\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:7:\"Reviews\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:19:\"plate/restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"Review
  Type\";s:4:\"enum\";a:2:{i:0;s:5:\"Plate\";i:1;s:10:\"Restaurant\";}}s:6:\"rating\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"review\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:8:\"Comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"review/comment_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"Comment
  Type\";s:4:\"enum\";a:2:{i:0;s:7:\"Comment\";i:1;s:6:\"Review\";}}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:13:\"Notifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"to\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:10:\"Followings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"followers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:9:\"following\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:10:\"BucketList\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"restaurants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:9:\"Favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"restaurants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:9:\"CheckedIn\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"restaurants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:8:\"Branches\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"branches\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"phone_numbers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:14:\"branch_address\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"working_hrs\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}}}}"
...
