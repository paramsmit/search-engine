---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:25:\"MultiVIM
  Service rest API\";}"
basePath: /openoapi/multivim/v1/
paths:
  /{vimid}/{tenantid}/networks:
    post:
      tags:
      - vim networks
      summary: create a network
      description: create a network
      operationId: create_vim_network
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vimid
        in: path
        description: vim instance id
        required: true
        type: string
      - name: tenantid
        in: path
        description: tenant UUID
        required: true
        type: string
      - in: body
        name: body
        description: create vim network request param
        required: true
        schema:
          $ref: '#/definitions/CreateVimNetwork'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/VimNetworkInfo'
        404:
          description: the vim id or tenant UUID is wrong
        500:
          description: the vim network is not accessable
    get:
      tags:
      - vim networks
      summary: query vim networks list
      description: query vim networks list
      operationId: query_vim_networks
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vimid
        in: path
        description: vim instance id
        required: true
        type: string
      - name: tenantid
        in: path
        description: tenant UUID
        required: true
        type: string
      - name: name
        in: query
        description: network name to filter list
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/VimNetworksInfo'
        404:
          description: the vim id or tenant UUID is wrong
        500:
          description: the vim network is not accessable
  /{vimid}/{tenantid}/networks/{networkid}:
    delete:
      tags:
      - vim networks
      summary: delete specific vim network
      description: delete specific vim network
      operationId: delete_vim_network
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vimid
        in: path
        description: vim instance id
        required: true
        type: string
      - name: tenantid
        in: path
        description: tenant UUID
        required: true
        type: string
      - name: networkid
        in: path
        description: vim network id
        required: true
        type: string
      responses:
        204:
          description: successful operation
        404:
          description: the vim id or tenant UUID is wrong
        500:
          description: the network is not accessable
    get:
      tags:
      - vim networks
      summary: query specific vim network
      description: query specific vim network
      operationId: query_vim_network
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vimid
        in: path
        description: vim instance id
        required: true
        type: string
      - name: tenantid
        in: path
        description: tenant UUID
        required: true
        type: string
      - name: networkid
        in: path
        description: vim network id
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/VimNetworkInfo'
        404:
          description: the vim id or tenant UUID is wrong
        500:
          description: the vim network is not accessable
definitions: !php/object "O:8:\"stdClass\":3:{s:16:\"CreateVimNetwork\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:11:\"networkType\";i:1;s:4:\"name\";i:2;s:6:\"shared\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"network
  name\";}s:11:\"networkType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"network
  type\";}s:15:\"physicalNetwork\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"physical
  network name\";}s:14:\"segmentationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:35:\"segmentation
  ID of physical network\";}s:15:\"vlanTransparent\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:16:\"vlan
  transparent\";}s:6:\"shared\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:32:\"network
  is shared across tenants\";}s:14:\"routerExternal\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:45:\"network
  can provide floating IPs via a router\";}}}s:15:\"VimNetworksInfo\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:5:\"vimId\";i:1;s:8:\"tenantId\";i:2;s:8:\"networks\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"vimId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"vimName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"tenantId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"tenant
  UUID\";}s:8:\"networks\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"description\";s:19:\"network
  information\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/VimNetworkInfo\";}}}}s:14:\"VimNetworkInfo\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:6:\"status\";i:2;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":13:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"network
  name\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"network
  UUID\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"network
  status\";}s:11:\"networkType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"network
  type\";}s:15:\"physicalNetwork\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"physical
  network name\";}s:14:\"segmentationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:34:\"segmentationId
  of physical network\";}s:15:\"vlanTransparent\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:16:\"vlan
  transparent\";}s:6:\"shared\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:32:\"network
  is shared across tenants\";}s:14:\"routerExternal\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:45:\"network
  can provide floating IPs via a router\";}s:5:\"vimId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"vimName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"tenantId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"tenant
  UUID\";}s:10:\"returnCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:33:\"0:
  Already exist 1: Newly created\";}}}}"
...
