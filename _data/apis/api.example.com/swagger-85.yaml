---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:22:\"Laravel Generator APIs\";s:7:\"version\";s:5:\"1.0.0\";}"
basePath: /api/v1
paths:
  /comments:
    get:
      tags:
      - Comment
      summary: Get a listing of the Comments.
      description: Get all Comments
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Comment'
              message:
                type: string
            type: object
    post:
      tags:
      - Comment
      summary: Store a newly created Comment in storage
      description: Store Comment
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Comment that should be stored
        required: false
        schema:
          $ref: '#/definitions/Comment'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Comment'
              message:
                type: string
            type: object
  /comments/{id}:
    get:
      tags:
      - Comment
      summary: Display the specified Comment
      description: Get Comment
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Comment
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Comment'
              message:
                type: string
            type: object
    put:
      tags:
      - Comment
      summary: Update the specified Comment in storage
      description: Update Comment
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Comment
        required: true
        type: integer
      - name: body
        in: body
        description: Comment that should be updated
        required: false
        schema:
          $ref: '#/definitions/Comment'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Comment'
              message:
                type: string
            type: object
    delete:
      tags:
      - Comment
      summary: Remove the specified Comment from storage
      description: Delete Comment
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Comment
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /darasas:
    get:
      tags:
      - Darasa
      summary: Get a listing of the Darasas.
      description: Get all Darasas
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Darasa'
              message:
                type: string
            type: object
    post:
      tags:
      - Darasa
      summary: Store a newly created Darasa in storage
      description: Store Darasa
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Darasa that should be stored
        required: false
        schema:
          $ref: '#/definitions/Darasa'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Darasa'
              message:
                type: string
            type: object
  /darasas/{id}:
    get:
      tags:
      - Darasa
      summary: Display the specified Darasa
      description: Get Darasa
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Darasa
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Darasa'
              message:
                type: string
            type: object
    put:
      tags:
      - Darasa
      summary: Update the specified Darasa in storage
      description: Update Darasa
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Darasa
        required: true
        type: integer
      - name: body
        in: body
        description: Darasa that should be updated
        required: false
        schema:
          $ref: '#/definitions/Darasa'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Darasa'
              message:
                type: string
            type: object
    delete:
      tags:
      - Darasa
      summary: Remove the specified Darasa from storage
      description: Delete Darasa
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Darasa
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /feedback:
    get:
      tags:
      - Feedback
      summary: Get a listing of the Feedback.
      description: Get all Feedback
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Feedback'
              message:
                type: string
            type: object
    post:
      tags:
      - Feedback
      summary: Store a newly created Feedback in storage
      description: Store Feedback
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Feedback that should be stored
        required: false
        schema:
          $ref: '#/definitions/Feedback'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Feedback'
              message:
                type: string
            type: object
  /feedback/{id}:
    get:
      tags:
      - Feedback
      summary: Display the specified Feedback
      description: Get Feedback
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Feedback
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Feedback'
              message:
                type: string
            type: object
    put:
      tags:
      - Feedback
      summary: Update the specified Feedback in storage
      description: Update Feedback
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Feedback
        required: true
        type: integer
      - name: body
        in: body
        description: Feedback that should be updated
        required: false
        schema:
          $ref: '#/definitions/Feedback'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Feedback'
              message:
                type: string
            type: object
    delete:
      tags:
      - Feedback
      summary: Remove the specified Feedback from storage
      description: Delete Feedback
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Feedback
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /foods:
    get:
      tags:
      - Food
      summary: Get a listing of the Foods.
      description: Get all Foods
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Food'
              message:
                type: string
            type: object
    post:
      tags:
      - Food
      summary: Store a newly created Food in storage
      description: Store Food
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Food that should be stored
        required: false
        schema:
          $ref: '#/definitions/Food'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Food'
              message:
                type: string
            type: object
  /foods/{id}:
    get:
      tags:
      - Food
      summary: Display the specified Food
      description: Get Food
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Food
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Food'
              message:
                type: string
            type: object
    put:
      tags:
      - Food
      summary: Update the specified Food in storage
      description: Update Food
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Food
        required: true
        type: integer
      - name: body
        in: body
        description: Food that should be updated
        required: false
        schema:
          $ref: '#/definitions/Food'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Food'
              message:
                type: string
            type: object
    delete:
      tags:
      - Food
      summary: Remove the specified Food from storage
      description: Delete Food
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Food
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /images:
    get:
      tags:
      - Image
      summary: Get a listing of the Images.
      description: Get all Images
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Image'
              message:
                type: string
            type: object
    post:
      tags:
      - Image
      summary: Store a newly created Image in storage
      description: Store Image
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Image that should be stored
        required: false
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Image'
              message:
                type: string
            type: object
  /images/{id}:
    get:
      tags:
      - Image
      summary: Display the specified Image
      description: Get Image
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Image
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Image'
              message:
                type: string
            type: object
    put:
      tags:
      - Image
      summary: Update the specified Image in storage
      description: Update Image
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Image
        required: true
        type: integer
      - name: body
        in: body
        description: Image that should be updated
        required: false
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Image'
              message:
                type: string
            type: object
    delete:
      tags:
      - Image
      summary: Remove the specified Image from storage
      description: Delete Image
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Image
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /passwordRessets:
    get:
      tags:
      - PasswordResset
      summary: Get a listing of the PasswordRessets.
      description: Get all PasswordRessets
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PasswordResset'
              message:
                type: string
            type: object
    post:
      tags:
      - PasswordResset
      summary: Store a newly created PasswordResset in storage
      description: Store PasswordResset
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PasswordResset that should be stored
        required: false
        schema:
          $ref: '#/definitions/PasswordResset'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PasswordResset'
              message:
                type: string
            type: object
  /passwordRessets/{id}:
    get:
      tags:
      - PasswordResset
      summary: Display the specified PasswordResset
      description: Get PasswordResset
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PasswordResset
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PasswordResset'
              message:
                type: string
            type: object
    put:
      tags:
      - PasswordResset
      summary: Update the specified PasswordResset in storage
      description: Update PasswordResset
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PasswordResset
        required: true
        type: integer
      - name: body
        in: body
        description: PasswordResset that should be updated
        required: false
        schema:
          $ref: '#/definitions/PasswordResset'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PasswordResset'
              message:
                type: string
            type: object
    delete:
      tags:
      - PasswordResset
      summary: Remove the specified PasswordResset from storage
      description: Delete PasswordResset
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PasswordResset
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /posts:
    get:
      tags:
      - Post
      summary: Get a listing of the Posts.
      description: Get all Posts
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Post'
              message:
                type: string
            type: object
    post:
      tags:
      - Post
      summary: Store a newly created Post in storage
      description: Store Post
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Post that should be stored
        required: false
        schema:
          $ref: '#/definitions/Post'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
  /search/{title}:
    get:
      tags:
      - Post
      summary: Display the specified Post
      description: Get Post
      produces:
      - application/json
      parameters:
      - name: title
        in: path
        description: title of Post
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
  /posts/{id}:
    get:
      tags:
      - Post
      summary: Display the specified Post
      description: Get Post
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Post
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
    put:
      tags:
      - Post
      summary: Update the specified Post in storage
      description: Update Post
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Post
        required: true
        type: integer
      - name: body
        in: body
        description: Post that should be updated
        required: false
        schema:
          $ref: '#/definitions/Post'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Post'
              message:
                type: string
            type: object
    delete:
      tags:
      - Post
      summary: Remove the specified Post from storage
      description: Delete Post
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Post
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /subscribers:
    get:
      tags:
      - Subscriber
      summary: Get a listing of the Subscribers.
      description: Get all Subscribers
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Subscriber'
              message:
                type: string
            type: object
    post:
      tags:
      - Subscriber
      summary: Store a newly created Subscriber in storage
      description: Store Subscriber
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Subscriber that should be stored
        required: false
        schema:
          $ref: '#/definitions/Subscriber'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Subscriber'
              message:
                type: string
            type: object
  /subscribers/{id}:
    get:
      tags:
      - Subscriber
      summary: Display the specified Subscriber
      description: Get Subscriber
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Subscriber
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Subscriber'
              message:
                type: string
            type: object
    put:
      tags:
      - Subscriber
      summary: Update the specified Subscriber in storage
      description: Update Subscriber
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Subscriber
        required: true
        type: integer
      - name: body
        in: body
        description: Subscriber that should be updated
        required: false
        schema:
          $ref: '#/definitions/Subscriber'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Subscriber'
              message:
                type: string
            type: object
    delete:
      tags:
      - Subscriber
      summary: Remove the specified Subscriber from storage
      description: Delete Subscriber
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Subscriber
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /teachers:
    get:
      tags:
      - Teacher
      summary: Get a listing of the Teachers.
      description: Get all Teachers
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Teacher'
              message:
                type: string
            type: object
    post:
      tags:
      - Teacher
      summary: Store a newly created Teacher in storage
      description: Store Teacher
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Teacher that should be stored
        required: false
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Teacher'
              message:
                type: string
            type: object
  /teachers/{id}:
    get:
      tags:
      - Teacher
      summary: Display the specified Teacher
      description: Get Teacher
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Teacher
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Teacher'
              message:
                type: string
            type: object
    put:
      tags:
      - Teacher
      summary: Update the specified Teacher in storage
      description: Update Teacher
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Teacher
        required: true
        type: integer
      - name: body
        in: body
        description: Teacher that should be updated
        required: false
        schema:
          $ref: '#/definitions/Teacher'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Teacher'
              message:
                type: string
            type: object
    delete:
      tags:
      - Teacher
      summary: Remove the specified Teacher from storage
      description: Delete Teacher
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Teacher
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /topics:
    get:
      tags:
      - Topic
      summary: Get a listing of the Topics.
      description: Get all Topics
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Topic'
              message:
                type: string
            type: object
    post:
      tags:
      - Topic
      summary: Store a newly created Topic in storage
      description: Store Topic
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Topic that should be stored
        required: false
        schema:
          $ref: '#/definitions/Topic'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Topic'
              message:
                type: string
            type: object
  /topics/{id}:
    get:
      tags:
      - Topic
      summary: Display the specified Topic
      description: Get Topic
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Topic
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Topic'
              message:
                type: string
            type: object
    put:
      tags:
      - Topic
      summary: Update the specified Topic in storage
      description: Update Topic
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Topic
        required: true
        type: integer
      - name: body
        in: body
        description: Topic that should be updated
        required: false
        schema:
          $ref: '#/definitions/Topic'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Topic'
              message:
                type: string
            type: object
    delete:
      tags:
      - Topic
      summary: Remove the specified Topic from storage
      description: Delete Topic
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Topic
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /topicCategories:
    get:
      tags:
      - TopicCategory
      summary: Get a listing of the TopicCategories.
      description: Get all TopicCategories
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/TopicCategory'
              message:
                type: string
            type: object
    post:
      tags:
      - TopicCategory
      summary: Store a newly created TopicCategory in storage
      description: Store TopicCategory
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: TopicCategory that should be stored
        required: false
        schema:
          $ref: '#/definitions/TopicCategory'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/TopicCategory'
              message:
                type: string
            type: object
  /topicCategories/{id}:
    get:
      tags:
      - TopicCategory
      summary: Display the specified TopicCategory
      description: Get TopicCategory
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of TopicCategory
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/TopicCategory'
              message:
                type: string
            type: object
    put:
      tags:
      - TopicCategory
      summary: Update the specified TopicCategory in storage
      description: Update TopicCategory
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of TopicCategory
        required: true
        type: integer
      - name: body
        in: body
        description: TopicCategory that should be updated
        required: false
        schema:
          $ref: '#/definitions/TopicCategory'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/TopicCategory'
              message:
                type: string
            type: object
    delete:
      tags:
      - TopicCategory
      summary: Remove the specified TopicCategory from storage
      description: Delete TopicCategory
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of TopicCategory
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /topicsByCategory/{id}:
    get:
      tags:
      - TopicCategory
      summary: Display all topics by category id
      description: Get topics by category id
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of TopicCategory
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/TopicCategory'
              message:
                type: string
            type: object
  /users:
    get:
      tags:
      - User
      summary: Get a listing of the Users.
      description: Get all Users
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/User'
              message:
                type: string
            type: object
    post:
      tags:
      - User
      summary: Store a newly created User in storage
      description: Store User
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: User that should be stored
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/User'
              message:
                type: string
            type: object
  /users/{id}:
    get:
      tags:
      - User
      summary: Display the specified User
      description: Get User
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of User
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/User'
              message:
                type: string
            type: object
    put:
      tags:
      - User
      summary: Update the specified User in storage
      description: Update User
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of User
        required: true
        type: integer
      - name: body
        in: body
        description: User that should be updated
        required: false
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/User'
              message:
                type: string
            type: object
    delete:
      tags:
      - User
      summary: Remove the specified User from storage
      description: Delete User
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of User
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /wazazis:
    get:
      tags:
      - Wazazi
      summary: Get a listing of the Wazazis.
      description: Get all Wazazis
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Wazazi'
              message:
                type: string
            type: object
    post:
      tags:
      - Wazazi
      summary: Store a newly created Wazazi in storage
      description: Store Wazazi
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Wazazi that should be stored
        required: false
        schema:
          $ref: '#/definitions/Wazazi'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Wazazi'
              message:
                type: string
            type: object
  /wazazis/{id}:
    get:
      tags:
      - Wazazi
      summary: Display the specified Wazazi
      description: Get Wazazi
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Wazazi
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Wazazi'
              message:
                type: string
            type: object
    put:
      tags:
      - Wazazi
      summary: Update the specified Wazazi in storage
      description: Update Wazazi
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Wazazi
        required: true
        type: integer
      - name: body
        in: body
        description: Wazazi that should be updated
        required: false
        schema:
          $ref: '#/definitions/Wazazi'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Wazazi'
              message:
                type: string
            type: object
    delete:
      tags:
      - Wazazi
      summary: Remove the specified Wazazi from storage
      description: Delete Wazazi
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Wazazi
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
definitions: !php/object "O:8:\"stdClass\":13:{s:7:\"Comment\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"body\";s:4:\"type\";s:6:\"string\";}s:9:\"parent_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"parent_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"post_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"post_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:6:\"Darasa\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:10:\"childs_age\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"childs_age\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"teacher_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"teacher_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"topic_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"topic_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"parent_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"parent_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:8:\"Feedback\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"body\";s:4:\"type\";s:6:\"string\";}s:9:\"darasa_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"darasa_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"parent_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"parent_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:4:\"Food\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:9:\"food_type\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"food_type\";s:4:\"type\";s:6:\"string\";}s:10:\"teacher_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"teacher_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:5:\"Image\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"image_url\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"image_url\";s:4:\"type\";s:6:\"string\";}s:10:\"teacher_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"teacher_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:14:\"PasswordResset\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"token\";s:4:\"type\";s:6:\"string\";}}}s:4:\"Post\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"title\";s:4:\"type\";s:6:\"string\";}s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"body\";s:4:\"type\";s:6:\"string\";}s:8:\"image_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"image_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"topic_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"topic_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:10:\"Subscriber\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"phone_number\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"phone_number\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:10:\"teacher_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"teacher_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:7:\"Teacher\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"first_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"first_name\";s:4:\"type\";s:6:\"string\";}s:11:\"middle_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"middle_name\";s:4:\"type\";s:6:\"string\";}s:9:\"last_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"last_name\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"password\";s:4:\"type\";s:6:\"string\";}}}s:5:\"Topic\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"title\";s:4:\"type\";s:6:\"string\";}s:4:\"body\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"body\";s:4:\"type\";s:6:\"string\";}s:10:\"teacher_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"teacher_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"food_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"food_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"topic_category_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"topic_category_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"image_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"image_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:13:\"TopicCategory\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:13:\"category_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"category_name\";s:4:\"type\";s:6:\"string\";}}}s:4:\"User\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"password\";s:4:\"type\";s:6:\"string\";}s:14:\"remember_token\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"remember_token\";s:4:\"type\";s:6:\"string\";}}}s:6:\"Wazazi\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"phone_number\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"phone_number\";s:4:\"type\";s:6:\"string\";}s:10:\"first_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"first_name\";s:4:\"type\";s:6:\"string\";}s:7:\"surname\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"surname\";s:4:\"type\";s:6:\"string\";}s:10:\"childs_age\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"childs_age\";s:4:\"type\";s:7:\"integer\";}}}}"
...
