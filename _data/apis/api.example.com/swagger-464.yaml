---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:7:\"version\";s:6:\"v0.0.1\";s:5:\"title\";s:18:\"Smart
  contract API\";s:11:\"description\";s:273:\"To perform any operation, you will need
  to first generate an access token. \n Tokens are generated by invoking the `/auth`
  API. \n The response is as follows, `Bearer <access-token>`. \n Copy the response
  and append it to all subsequent APIs where `Authorization` is required.\";}"
paths:
  /api/roles:
    post:
      summary: This endpoint will add the roles into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getToken'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/auth
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
      parameters:
      - schema:
          $ref: '#/definitions/addRole'
        required: true
        description: Add user json.
        name: body
        in: body
      tags:
      - Roles
    get:
      summary: This endpoint will get all roles from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getToken'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/roles
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Roles
    put:
      summary: This endpoint will update the roles and store it into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/updateRules'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/roles
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Roles
    delete:
      summary: This endpoint will delete the roles from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/deleteRoles'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/roles
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Roles
  /api/properties:
    post:
      summary: This endpoint will add properties into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getToken'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/properties
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
      parameters:
      - schema:
          $ref: '#/definitions/addProperties'
        required: true
        description: Add user json.
        name: body
        in: body
      tags:
      - Properties
    get:
      summary: This endpoint will get all properties from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getProperties'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/properties
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Properties
    put:
      summary: This endpoint will update properties and add it into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/updateProperties'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/properties
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Properties
    delete:
      summary: This endpoint will delete properties from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/deleteProperties'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/properties
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Properties
  /api/rights:
    post:
      summary: This endpoint will add rights into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getToken'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rights
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
      parameters:
      - schema:
          $ref: '#/definitions/addRights'
        required: true
        description: Add user json.
        name: body
        in: body
      tags:
      - Rights
    get:
      summary: This endpoint will get rights from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getRights'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rights
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Rights
    put:
      summary: This endpoint will update rights and add it into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/updateRights'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rights
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Rights
    delete:
      summary: This endpoint will delete rights from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/deleteRights'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rights
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Rights
  /api/rules:
    post:
      summary: This endpoint will add rules into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getToken'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rules
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http
      parameters:
      - schema:
          $ref: '#/definitions/addRules'
        required: true
        description: Add user json.
        name: body
        in: body
      tags:
      - Rules
    get:
      summary: This endpoint will get rules from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/getRules'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rules
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Rules
    put:
      summary: This endpoint will update and add it into the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/updateRules'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rules
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Rules
    delete:
      summary: This endpoint will delete the roles from the database.
      produces:
      - application/json
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/responses/deleteRules'
          headers:
            Access-Control-Allow-Origin:
              type: string
              description: URI that may access the resource
        400:
          description: Validation error
        500:
          description: Internal server error.
      security:
      - access_token: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.emailId: method.request.querystring.emailId
        uri: https://localhost/api/rules
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http
      parameters: []
      tags:
      - Rules
definitions: !php/object "O:8:\"stdClass\":5:{s:7:\"addRole\";O:8:\"stdClass\":2:{s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"Enter
  key and value.\";s:6:\"format\";s:6:\"string\";}}}s:7:\"Account\";O:8:\"stdClass\":2:{s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"userName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"your
  unique username.\";s:6:\"format\";s:6:\"string\";}s:11:\"accountName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"your
  full name.\";s:6:\"format\";s:6:\"string\";}s:11:\"accountRole\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:63:\"account
  role should be 'Borrower' or 'Lender' or 'Credit Node' \";s:6:\"format\";s:6:\"string\";}}}s:13:\"addProperties\";O:8:\"stdClass\":2:{s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"add
  key and value.\";s:6:\"format\";s:6:\"string\";}}}s:9:\"addRights\";O:8:\"stdClass\":2:{s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"add
  key and value.\";s:6:\"format\";s:6:\"string\";}}}s:8:\"addRules\";O:8:\"stdClass\":2:{s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"add
  key and value.\";s:6:\"format\";s:6:\"string\";}}}}"
...
