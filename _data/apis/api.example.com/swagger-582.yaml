---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:10:\"Kubernetes\";s:7:\"version\";s:6:\"v1.9.0\";}"
paths: []
definitions: !php/object "O:8:\"stdClass\":14:{s:28:\"io.k8s.api.core.v1.Container\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"A
  single application container that you want to run within a pod.\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:5:\"image\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"image\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"Docker
  image name. More info: https://kubernetes.io/docs/concepts/containers/images\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:127:\"Name
  of the container specified as a DNS_LABEL. Each container in a pod must have a unique
  name (DNS_LABEL). Cannot be updated.\";s:4:\"type\";s:6:\"string\";}s:5:\"ports\";O:8:\"stdClass\":5:{s:11:\"description\";s:394:\"List
  of ports to expose from the container. Exposing a port here gives the system additional
  information about the network connections a container uses, but is primarily informational.
  Not specifying a port here DOES NOT prevent that port from being exposed. Any port
  which is listening on the default \"0.0.0.0\" address inside a container will be
  accessible from the network. Cannot be updated.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/io.k8s.api.core.v1.ContainerPort\";}s:28:\"x-kubernetes-patch-merge-key\";s:22:\"containerPort,protocol\";s:27:\"x-kubernetes-patch-strategy\";s:5:\"merge\";}}}s:32:\"io.k8s.api.core.v1.ContainerPort\";O:8:\"stdClass\":3:{s:11:\"description\";s:62:\"ContainerPort
  represents a network port in a single container.\";s:8:\"required\";a:1:{i:0;s:13:\"containerPort\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:13:\"containerPort\";O:8:\"stdClass\":3:{s:11:\"description\";s:98:\"Number
  of port to expose on the pod's IP address. This must be a valid port number, 0 <
  x < 65536.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"hostIP\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"What
  host IP to bind the external port to.\";s:4:\"type\";s:6:\"string\";}s:8:\"hostPort\";O:8:\"stdClass\":3:{s:11:\"description\";s:194:\"Number
  of port to expose on the host. If specified, this must be a valid port number, 0
  < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers
  do not need this.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:175:\"If
  specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port
  in a pod must have a unique name. Name for the port that can be referred to by services.\";s:4:\"type\";s:6:\"string\";}s:8:\"protocol\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"Protocol
  for port. Must be UDP or TCP. Defaults to \"TCP\".\";s:4:\"type\";s:6:\"string\";}}}s:29:\"io.k8s.api.apps.v1.Deployment\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Deployment
  enables declarative updates for Pods and ReplicaSets.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"apiVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:272:\"APIVersion
  defines the versioned schema of this representation of an object. Servers should
  convert recognized schemas to the latest internal value, and may reject unrecognized
  values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:11:\"description\";s:273:\"Kind
  is a string value representing the REST resource this object represents. Servers
  may infer this from the endpoint the client submits requests to. Cannot be updated.
  In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\";s:4:\"type\";s:6:\"string\";}s:8:\"metadata\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Standard
  object metadata.\";s:4:\"$ref\";s:61:\"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\";}s:4:\"spec\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"Specification
  of the desired behavior of the Deployment.\";s:4:\"$ref\";s:47:\"#/definitions/io.k8s.api.apps.v1.DeploymentSpec\";}}s:31:\"x-kubernetes-group-version-kind\";a:1:{i:0;O:8:\"stdClass\":3:{s:5:\"group\";s:4:\"apps\";s:4:\"kind\";s:10:\"Deployment\";s:7:\"version\";s:2:\"v1\";}}}s:33:\"io.k8s.api.apps.v1.DeploymentSpec\";O:8:\"stdClass\":3:{s:11:\"description\";s:78:\"DeploymentSpec
  is the specification of the desired behavior of the Deployment.\";s:8:\"required\";a:2:{i:0;s:8:\"selector\";i:1;s:8:\"template\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:15:\"minReadySeconds\";O:8:\"stdClass\":3:{s:11:\"description\";s:217:\"Minimum
  number of seconds for which a newly created pod should be ready without any of its
  container crashing, for it to be considered available. Defaults to 0 (pod will be
  considered available as soon as it is ready)\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"paused\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Indicates
  that the deployment is paused.\";s:4:\"type\";s:7:\"boolean\";}s:23:\"progressDeadlineSeconds\";O:8:\"stdClass\":3:{s:11:\"description\";s:366:\"The
  maximum time in seconds for a deployment to make progress before it is considered
  to be failed. The deployment controller will continue to process failed deployments
  and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment
  status. Note that progress will not be estimated during the time a deployment is
  paused. Defaults to 600s.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"replicas\";O:8:\"stdClass\":3:{s:11:\"description\";s:112:\"Number
  of desired pods. This is a pointer to distinguish between explicit zero and not
  specified. Defaults to 1.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:20:\"revisionHistoryLimit\";O:8:\"stdClass\":3:{s:11:\"description\";s:148:\"The
  number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish
  between explicit zero and not specified. Defaults to 10.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"selector\";O:8:\"stdClass\":2:{s:11:\"description\";s:164:\"Label
  selector for pods. Existing ReplicaSets whose pods are selected by this will be
  the ones affected by this deployment. It must match the pod template's labels.\";s:4:\"$ref\";s:64:\"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector\";}s:8:\"strategy\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"The
  deployment strategy to use to replace existing pods with new ones.\";s:27:\"x-kubernetes-patch-strategy\";s:10:\"retainKeys\";s:4:\"$ref\";s:51:\"#/definitions/io.k8s.api.apps.v1.DeploymentStrategy\";}s:8:\"template\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Template
  describes the pods that will be created.\";s:4:\"$ref\";s:48:\"#/definitions/io.k8s.api.core.v1.PodTemplateSpec\";}}}s:37:\"io.k8s.api.apps.v1.DeploymentStrategy\";O:8:\"stdClass\":2:{s:11:\"description\";s:72:\"DeploymentStrategy
  describes how to replace existing pods with new ones.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"rollingUpdate\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"Rolling
  update config params. Present only if DeploymentStrategyType = RollingUpdate.\";s:4:\"$ref\";s:56:\"#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment\";}s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"Type
  of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.\";s:4:\"type\";s:6:\"string\";}}}s:42:\"io.k8s.api.apps.v1.RollingUpdateDeployment\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"Spec
  to control the desired behavior of rolling update.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"maxSurge\";O:8:\"stdClass\":2:{s:11:\"description\";s:662:\"The
  maximum number of pods that can be scheduled above the desired number of pods. Value
  can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This
  can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage
  by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet
  can be scaled up immediately when the rolling update starts, such that the total
  number of old and new pods do not exceed 130% of desired pods. Once old pods have
  been killed, new ReplicaSet can be scaled up further, ensuring that total number
  of pods running at any time during the update is at most 130% of desired pods.\";s:4:\"$ref\";s:61:\"#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString\";}s:14:\"maxUnavailable\";O:8:\"stdClass\":2:{s:11:\"description\";s:632:\"The
  maximum number of pods that can be unavailable during the update. Value can be an
  absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number
  is calculated from percentage by rounding down. This can not be 0 if MaxSurge is
  0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be
  scaled down to 70% of desired pods immediately when the rolling update starts. Once
  new pods are ready, old ReplicaSet can be scaled down further, followed by scaling
  up the new ReplicaSet, ensuring that the total number of pods available at all times
  during the update is at least 70% of desired pods.\";s:4:\"$ref\";s:61:\"#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString\";}}}s:47:\"io.k8s.apimachinery.pkg.util.intstr.IntOrString\";O:8:\"stdClass\":3:{s:11:\"description\";s:241:\"IntOrString
  is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling
  and unmarshalling, it produces or consumes the inner type.  This allows you to have,
  for example, a JSON field that can accept a name or number.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:13:\"int-or-string\";}s:47:\"io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\";O:8:\"stdClass\":2:{s:11:\"description\";s:108:\"ObjectMeta
  is metadata that all persisted resources must have, which includes all objects users
  must create.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"annotations\";O:8:\"stdClass\":3:{s:11:\"description\";s:274:\"Annotations
  is an unstructured key value map stored with a resource that may be set by external
  tools to store and retrieve arbitrary metadata. They are not queryable and should
  be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\";s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"labels\";O:8:\"stdClass\":3:{s:11:\"description\";s:217:\"Map
  of string keys and values that can be used to organize and categorize (scope and
  select) objects. May match selectors of replication controllers and services. More
  info: http://kubernetes.io/docs/user-guide/labels\";s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:350:\"Name
  must be unique within a namespace. Is required when creating resources, although
  some resources may allow a client to request the generation of an appropriate name
  automatically. Name is primarily intended for creation idempotence and configuration
  definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\";s:4:\"type\";s:6:\"string\";}s:9:\"namespace\";O:8:\"stdClass\":2:{s:11:\"description\";s:384:\"Namespace
  defines the space within each name must be unique. An empty namespace is equivalent
  to the \"default\" namespace, but \"default\" is the canonical representation. Not
  all objects are required to be scoped to a namespace - the value of this field for
  those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info:
  http://kubernetes.io/docs/user-guide/namespaces\";s:4:\"type\";s:6:\"string\";}}}s:34:\"io.k8s.api.core.v1.PodTemplateSpec\";O:8:\"stdClass\":2:{s:11:\"description\";s:81:\"PodTemplateSpec
  describes the data a pod should have when created from a template\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"metadata\";O:8:\"stdClass\":2:{s:11:\"description\";s:114:\"Standard
  object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\";s:4:\"$ref\";s:61:\"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\";}s:4:\"spec\";O:8:\"stdClass\":2:{s:11:\"description\";s:143:\"Specification
  of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\";s:4:\"$ref\";s:40:\"#/definitions/io.k8s.api.core.v1.PodSpec\";}}}s:26:\"io.k8s.api.core.v1.PodSpec\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"PodSpec
  is a description of a pod.\";s:8:\"required\";a:1:{i:0;s:10:\"containers\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"containers\";O:8:\"stdClass\":5:{s:11:\"description\";s:155:\"List
  of containers belonging to the pod. Containers cannot currently be added or removed.
  There must be at least one container in a Pod. Cannot be updated.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/io.k8s.api.core.v1.Container\";}s:28:\"x-kubernetes-patch-merge-key\";s:4:\"name\";s:27:\"x-kubernetes-patch-strategy\";s:5:\"merge\";}}}s:29:\"io.k8s.api.apps.v1.ReplicaSet\";O:8:\"stdClass\":3:{s:11:\"description\";s:89:\"ReplicaSet
  ensures that a specified number of pod replicas are running at any given time.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"apiVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:272:\"APIVersion
  defines the versioned schema of this representation of an object. Servers should
  convert recognized schemas to the latest internal value, and may reject unrecognized
  values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\";s:4:\"type\";s:6:\"string\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:11:\"description\";s:273:\"Kind
  is a string value representing the REST resource this object represents. Servers
  may infer this from the endpoint the client submits requests to. Cannot be updated.
  In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\";s:4:\"type\";s:6:\"string\";}s:8:\"metadata\";O:8:\"stdClass\":2:{s:11:\"description\";s:232:\"If
  the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s)
  that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\";s:4:\"$ref\";s:61:\"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\";}s:4:\"spec\";O:8:\"stdClass\":2:{s:11:\"description\";s:167:\"Spec
  defines the specification of the desired behavior of the ReplicaSet. More info:
  https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\";s:4:\"$ref\";s:47:\"#/definitions/io.k8s.api.apps.v1.ReplicaSetSpec\";}}s:31:\"x-kubernetes-group-version-kind\";a:1:{i:0;O:8:\"stdClass\":3:{s:5:\"group\";s:4:\"apps\";s:4:\"kind\";s:10:\"ReplicaSet\";s:7:\"version\";s:2:\"v1\";}}}s:33:\"io.k8s.api.apps.v1.ReplicaSetSpec\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"ReplicaSetSpec
  is the specification of a ReplicaSet.\";s:8:\"required\";a:1:{i:0;s:8:\"selector\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:15:\"minReadySeconds\";O:8:\"stdClass\":3:{s:11:\"description\";s:217:\"Minimum
  number of seconds for which a newly created pod should be ready without any of its
  container crashing, for it to be considered available. Defaults to 0 (pod will be
  considered available as soon as it is ready)\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"replicas\";O:8:\"stdClass\":3:{s:11:\"description\";s:254:\"Replicas
  is the number of desired replicas. This is a pointer to distinguish between explicit
  zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"selector\";O:8:\"stdClass\":2:{s:11:\"description\";s:299:\"Selector
  is a label query over pods that should match the replica count. Label keys and values
  that must match in order to be controlled by this replica set. It must match the
  pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\";s:4:\"$ref\";s:64:\"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector\";}s:8:\"template\";O:8:\"stdClass\":2:{s:11:\"description\";s:209:\"Template
  is the object that describes the pod that will be created if insufficient replicas
  are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template\";s:4:\"$ref\";s:48:\"#/definitions/io.k8s.api.core.v1.PodTemplateSpec\";}}}s:50:\"io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector\";O:8:\"stdClass\":2:{s:11:\"description\";s:203:\"A
  label selector is a label query over a set of resources. The result of matchLabels
  and matchExpressions are ANDed. An empty label selector matches all objects. A null
  label selector matches no objects.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"matchExpressions\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"matchExpressions
  is a list of label selector requirements. The requirements are ANDed.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:75:\"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement\";}}s:11:\"matchLabels\";O:8:\"stdClass\":3:{s:11:\"description\";s:255:\"matchLabels
  is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent
  to an element of matchExpressions, whose key field is \"key\", the operator is \"In\",
  and the values array contains only \"value\". The requirements are ANDed.\";s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:61:\"io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement\";O:8:\"stdClass\":3:{s:11:\"description\";s:120:\"A
  label selector requirement is a selector that contains values, a key, and an operator
  that relates the key and values.\";s:8:\"required\";a:2:{i:0;s:3:\"key\";i:1;s:8:\"operator\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"key\";O:8:\"stdClass\":4:{s:11:\"description\";s:50:\"key
  is the label key that the selector applies to.\";s:4:\"type\";s:6:\"string\";s:28:\"x-kubernetes-patch-merge-key\";s:3:\"key\";s:27:\"x-kubernetes-patch-strategy\";s:5:\"merge\";}s:8:\"operator\";O:8:\"stdClass\":2:{s:11:\"description\";s:116:\"operator
  represents a key's relationship to a set of values. Valid operators are In, NotIn,
  Exists and DoesNotExist.\";s:4:\"type\";s:6:\"string\";}s:6:\"values\";O:8:\"stdClass\":3:{s:11:\"description\";s:234:\"values
  is an array of string values. If the operator is In or NotIn, the values array must
  be non-empty. If the operator is Exists or DoesNotExist, the values array must be
  empty. This array is replaced during a strategic merge patch.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}"
...
