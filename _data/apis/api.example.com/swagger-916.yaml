---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:3:\"0.1\";s:5:\"title\";s:12:\"Kontrolletti\";s:11:\"description\";s:191:\"Kontrolletti
  is a service that aggregates and stores information from Github and Stash for historical
  and auditing purposes and serves this information through a REST API in a unified
  model.\n\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:8:\"Automata\";s:3:\"url\";s:39:\"https://zalando.github.io/kontrolletti/\";s:5:\"email\";s:24:\"automata-team@zalando.de\";}}"
paths:
  /api/repos/{repository-url}:
    head:
      description: 'Fetches meta information about the specified repository (repository-url).
        This operation can be used to normalize repository-url''s, ie:  n  - a request
        with `git@github.com:zalando/kontrolletti.git` as repository-url will end
        up redirecting to  n  `/api/repos/{normalized-repository-url}`.n  - a request
        with `https://stash.zalando.net/projects/CD/repos/ansible-playbooks/browse`
        as repository-url will end up redirecting `/api/repos/{normalized-repository-url}`.n'
      produces:
      - application/problem+json
      - application/x.zalando.repository+json
      parameters:
      - name: repository-url
        in: path
        description: URL of the repository
        required: true
        type: string
        format: uri
      responses:
        200:
          description: The `repository-url` is normalized and was found.
          headers:
            X-Normalized-Repository-URL:
              type: string
              description: Normalized URL of the Repository
        301:
          description: The `repository-url` is not normalized, follow the redirect
            for to its normalized URI.
          headers:
            X-Normalized-Repository-URL:
              type: string
              description: Normalized URL of the Repository
        400:
          description: Request could not be understood, due to malformed syntax.
        404:
          description: The `repository-url` is normalized, but its resource cannot
            be found.
        500:
          description: Internal Server error.
    get:
      description: Fetches the `Repository` object for the specified URI.n
      produces:
      - application/problem+json
      - application/x.zalando.repository+json
      parameters:
      - name: repository-url
        in: path
        description: URL of the repository
        required: true
        type: string
        format: uri
      responses:
        200:
          description: Retrieved the object successfully.
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/Repository'
              _links:
                type: array
                items:
                  $ref: '#/definitions/Link'
        400:
          description: Request could not be understood, due to malformed syntax.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: No objects could be found matching the specified parameters.
        500:
          description: Internal Server error.
          schema:
            $ref: '#/definitions/Error'
  /api/hosts/{host}/projects/{project}/repos/{repository}/commits:
    get:
      description: Fetches all `Commit` objects for the specified parameters.n
      produces:
      - application/problem+json
      - application/x.zalando.commit+json
      parameters:
      - name: host
        in: path
        description: Hostname of the server of the project/repository
        required: true
        type: string
      - name: project
        in: path
        description: Project which may contain multiple repositories
        required: true
        type: string
      - name: repository
        in: path
        description: Name of the repository
        required: true
        type: string
      - name: since
        in: query
        description: Only commits made after this commitId will be returned.
        required: false
        type: string
      - name: until
        in: query
        description: Only commits made before this commitId will be returned.
        required: false
        type: string
      - name: is_valid
        in: query
        description: Only commits with a valid(`true`)/unvalid(`false`) commmit-message
          will be returned.
        required: false
        type: boolean
      - name: page
        in: query
        required: false
        type: integer
        description: Page number to be returned. Default = `1`.
      - name: per_page
        in: query
        required: false
        type: integer
        description: Maximal number of `Commits` to return per page. Default = `50`
          and maximum = `500`.
      - name: from_date
        in: query
        required: false
        description: Only commits made after this timestamp (ISO-8601) will be returned
        type: string
        format: date-time
      - name: to_date
        in: query
        required: false
        description: Only commits made before this timestamp (ISO-8601) will be returned
        type: string
        format: date-time
      responses:
        200:
          description: Retrieved the objects successfully.
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/Commit'
              _links:
                type: array
                items:
                  $ref: '#/definitions/Link'
        404:
          description: No objects could be found matching the specified parameters.
        500:
          description: Internal Server error.
          schema:
            $ref: '#/definitions/Error'
  /api/hosts/{host}/projects/{project}/repos/{repository}/commits/{id}:
    get:
      description: Fetches the `Commit` object for the specified commitId in the specified
        repository.n
      produces:
      - application/problem+json
      - application/x.zalando.commit+json
      parameters:
      - name: host
        in: path
        description: Host of the server of the project/repository
        required: true
        type: string
      - name: project
        in: path
        description: Project which may contain multiple repositories
        required: true
        type: string
      - name: repository
        in: path
        description: Name of the repository
        required: true
        type: string
      - name: id
        in: path
        description: CommitId of the `Commit` to be fetched
        required: true
        type: string
      responses:
        200:
          description: Retrieved the object successfully.
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/Commit'
              _links:
                type: array
                items:
                  $ref: '#/definitions/Link'
        404:
          description: No objects could be found matching the specified parameters.
        500:
          description: Internal Server error.
  /api/hosts/{host}/projects/{project}/repos/{repository}/tickets:
    get:
      description: Fetches all the `Ticket` objects for the specified repository.n
      produces:
      - application/problem+json
      - application/x.zalando.ticket+json
      parameters:
      - name: host
        in: path
        description: Hostname of the server of the project/repository
        required: true
        type: string
      - name: project
        in: path
        description: Project which may contain multiple repositories
        required: true
        type: string
      - name: repository
        in: path
        description: Name of the repository
        required: true
        type: string
      - name: since
        in: query
        description: Return tickets registered after this commitId
        required: false
        type: string
      - name: until
        in: query
        description: Return tickets registered until this commitId
        required: false
        type: string
      - name: page
        in: query
        required: false
        type: integer
        description: Page number to be returned. Default = `1`.
      - name: per_page
        in: query
        required: false
        type: integer
        description: Maximal number of `Tickets` to return per page. Default = `50`
          and maximum = `500`.
      - name: from_date
        in: query
        required: false
        description: Only commits made after this timestamp (ISO-8601) will be returned
        type: string
        format: date-time
      - name: to_date
        in: query
        required: false
        description: Only commits made before this timestamp (ISO-8601) will be returned
        type: string
        format: date-time
      responses:
        200:
          description: Retrieved the objects successfully.
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/Ticket'
              _links:
                type: array
                items:
                  $ref: '#/definitions/Link'
        404:
          description: No objects could be found for the specified parameters.
        500:
          description: Internal Server error.
  /api/hosts/{host}/projects/{project}/repos/{repository}/diff/{source}...{target}:
    get:
      description: Fetches the diff, as a redirect, between the two commitId's on
        the same repository.n
      produces:
      - application/problem+json
      parameters:
      - name: host
        in: path
        description: Hostname of the server of the project/repository
        required: true
        type: string
      - name: project
        in: path
        description: Project which may contain multiple repositories
        required: true
        type: string
      - name: repository
        in: path
        description: Name of the repository
        required: true
        type: string
      - name: source
        in: path
        type: string
        required: true
        description: Source (commit-id) from where to compare from
      - name: target
        in: path
        type: string
        required: true
        description: Target (commit-id) to where to compare to
      responses:
        303:
          description: The diff can be found at the specified `Location`.
        404:
          description: No objects could be found matching the specified parameters.
        500:
          description: Internal Server error.
          schema:
            $ref: '#/definitions/Error'
definitions: !php/object "O:8:\"stdClass\":6:{s:4:\"Link\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:3:\"rel\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:72:\"Link
  relation that describes how this link relates to the previous call.\";}s:6:\"method\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:46:\"The
  HTTP method required for the related call.\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"The
  predefined relation type\";}s:4:\"href\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:11:\"description\";s:44:\"URI
  which is needed for the specified action\";}}}s:5:\"Error\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:11:\"description\";s:37:\"URL
  pointing to the error description\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:11:\"description\";s:16:\"HTTP
  status code\";}s:6:\"detail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"A
  detailed error description\";}}}s:6:\"Author\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}}}s:6:\"Commit\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Author\";}s:7:\"parents\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"tickets\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Ticket\";}}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}}}s:6:\"Ticket\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:11:\"description\";s:34:\"URI
  to the detailed specification.\";}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}}}s:10:\"Repository\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:3:\"url\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:4:\"host\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"project\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"repository\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Link\";}}}}}"
...
