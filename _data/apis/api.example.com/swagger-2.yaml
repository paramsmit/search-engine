---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:22:\"Laravel Generator APIs\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:25:\"sergio.barrios@upr.edu.cu\";}s:7:\"version\";s:5:\"1.0.0\";}"
basePath: /iroko/public/api
paths:
  /accessRights:
    get:
      tags:
      - AccessRights
      summary: Get a listing of the AccessRights.
      description: Get all AccessRights
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/AccessRights'
              message:
                type: string
            type: object
    post:
      tags:
      - AccessRights
      summary: Store a newly created AccessRights in storage
      description: Store AccessRights
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: AccessRights that should be stored
        required: false
        schema:
          $ref: '#/definitions/AccessRights'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/AccessRights'
              message:
                type: string
            type: object
  /accessRights/{id}:
    get:
      tags:
      - AccessRights
      summary: Display the specified AccessRights
      description: Get AccessRights
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of AccessRights
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/AccessRights'
              message:
                type: string
            type: object
    put:
      tags:
      - AccessRights
      summary: Update the specified AccessRights in storage
      description: Update AccessRights
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of AccessRights
        required: true
        type: integer
      - name: body
        in: body
        description: AccessRights that should be updated
        required: false
        schema:
          $ref: '#/definitions/AccessRights'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/AccessRights'
              message:
                type: string
            type: object
    delete:
      tags:
      - AccessRights
      summary: Remove the specified AccessRights from storage
      description: Delete AccessRights
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of AccessRights
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /addresses:
    get:
      tags:
      - Address
      summary: Get a listing of the Addresses.
      description: Get all Addresses
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Address'
              message:
                type: string
            type: object
    post:
      tags:
      - Address
      summary: Store a newly created Address in storage
      description: Store Address
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Address that should be stored
        required: false
        schema:
          $ref: '#/definitions/Address'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Address'
              message:
                type: string
            type: object
  /addresses/{id}:
    get:
      tags:
      - Address
      summary: Display the specified Address
      description: Get Address
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Address
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Address'
              message:
                type: string
            type: object
    put:
      tags:
      - Address
      summary: Update the specified Address in storage
      description: Update Address
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Address
        required: true
        type: integer
      - name: body
        in: body
        description: Address that should be updated
        required: false
        schema:
          $ref: '#/definitions/Address'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Address'
              message:
                type: string
            type: object
    delete:
      tags:
      - Address
      summary: Remove the specified Address from storage
      description: Delete Address
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Address
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /contacts:
    get:
      tags:
      - Contact
      summary: Get a listing of the Contacts.
      description: Get all Contacts
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Contact'
              message:
                type: string
            type: object
    post:
      tags:
      - Contact
      summary: Store a newly created Contact in storage
      description: Store Contact
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Contact that should be stored
        required: false
        schema:
          $ref: '#/definitions/Contact'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Contact'
              message:
                type: string
            type: object
  /contacts/{id}:
    get:
      tags:
      - Contact
      summary: Display the specified Contact
      description: Get Contact
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Contact
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Contact'
              message:
                type: string
            type: object
    put:
      tags:
      - Contact
      summary: Update the specified Contact in storage
      description: Update Contact
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Contact
        required: true
        type: integer
      - name: body
        in: body
        description: Contact that should be updated
        required: false
        schema:
          $ref: '#/definitions/Contact'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Contact'
              message:
                type: string
            type: object
    delete:
      tags:
      - Contact
      summary: Remove the specified Contact from storage
      description: Delete Contact
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Contact
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /institutions:
    get:
      tags:
      - Institution
      summary: Get a listing of the Institutions.
      description: Get all Institutions
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Institution'
              message:
                type: string
            type: object
    post:
      tags:
      - Institution
      summary: Store a newly created Institution in storage
      description: Store Institution
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Institution that should be stored
        required: false
        schema:
          $ref: '#/definitions/Institution'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Institution'
              message:
                type: string
            type: object
  /institutions/{id}:
    get:
      tags:
      - Institution
      summary: Display the specified Institution
      description: Get Institution
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Institution
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Institution'
              message:
                type: string
            type: object
    put:
      tags:
      - Institution
      summary: Update the specified Institution in storage
      description: Update Institution
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Institution
        required: true
        type: integer
      - name: body
        in: body
        description: Institution that should be updated
        required: false
        schema:
          $ref: '#/definitions/Institution'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Institution'
              message:
                type: string
            type: object
    delete:
      tags:
      - Institution
      summary: Remove the specified Institution from storage
      description: Delete Institution
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Institution
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /institutionTypes:
    get:
      tags:
      - InstitutionType
      summary: Get a listing of the InstitutionTypes.
      description: Get all InstitutionTypes
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/InstitutionType'
              message:
                type: string
            type: object
    post:
      tags:
      - InstitutionType
      summary: Store a newly created InstitutionType in storage
      description: Store InstitutionType
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: InstitutionType that should be stored
        required: false
        schema:
          $ref: '#/definitions/InstitutionType'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/InstitutionType'
              message:
                type: string
            type: object
  /institutionTypes/{id}:
    get:
      tags:
      - InstitutionType
      summary: Display the specified InstitutionType
      description: Get InstitutionType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of InstitutionType
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/InstitutionType'
              message:
                type: string
            type: object
    put:
      tags:
      - InstitutionType
      summary: Update the specified InstitutionType in storage
      description: Update InstitutionType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of InstitutionType
        required: true
        type: integer
      - name: body
        in: body
        description: InstitutionType that should be updated
        required: false
        schema:
          $ref: '#/definitions/InstitutionType'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/InstitutionType'
              message:
                type: string
            type: object
    delete:
      tags:
      - InstitutionType
      summary: Remove the specified InstitutionType from storage
      description: Delete InstitutionType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of InstitutionType
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /interests:
    get:
      tags:
      - Interest
      summary: Get a listing of the Interests.
      description: Get all Interests
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Interest'
              message:
                type: string
            type: object
    post:
      tags:
      - Interest
      summary: Store a newly created Interest in storage
      description: Store Interest
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Interest that should be stored
        required: false
        schema:
          $ref: '#/definitions/Interest'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Interest'
              message:
                type: string
            type: object
  /interests/{id}:
    get:
      tags:
      - Interest
      summary: Display the specified Interest
      description: Get Interest
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Interest
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Interest'
              message:
                type: string
            type: object
    put:
      tags:
      - Interest
      summary: Update the specified Interest in storage
      description: Update Interest
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Interest
        required: true
        type: integer
      - name: body
        in: body
        description: Interest that should be updated
        required: false
        schema:
          $ref: '#/definitions/Interest'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Interest'
              message:
                type: string
            type: object
    delete:
      tags:
      - Interest
      summary: Remove the specified Interest from storage
      description: Delete Interest
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Interest
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journals:
    get:
      tags:
      - Journal
      summary: Get a listing of the Journals.
      description: Get all Journals
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Journal'
              message:
                type: string
            type: object
    post:
      tags:
      - Journal
      summary: Store a newly created Journal in storage
      description: Store Journal
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Journal that should be stored
        required: false
        schema:
          $ref: '#/definitions/Journal'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Journal'
              message:
                type: string
            type: object
  /journals/{id}:
    get:
      tags:
      - Journal
      summary: Display the specified Journal
      description: Get Journal
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Journal
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Journal'
              message:
                type: string
            type: object
    put:
      tags:
      - Journal
      summary: Update the specified Journal in storage
      description: Update Journal
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Journal
        required: true
        type: integer
      - name: body
        in: body
        description: Journal that should be updated
        required: false
        schema:
          $ref: '#/definitions/Journal'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Journal'
              message:
                type: string
            type: object
    delete:
      tags:
      - Journal
      summary: Remove the specified Journal from storage
      description: Delete Journal
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Journal
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journalClassifs:
    get:
      tags:
      - JournalClassif
      summary: Get a listing of the JournalClassifs.
      description: Get all JournalClassifs
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/JournalClassif'
              message:
                type: string
            type: object
    post:
      tags:
      - JournalClassif
      summary: Store a newly created JournalClassif in storage
      description: Store JournalClassif
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: JournalClassif that should be stored
        required: false
        schema:
          $ref: '#/definitions/JournalClassif'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalClassif'
              message:
                type: string
            type: object
  /journalClassifs/{id}:
    get:
      tags:
      - JournalClassif
      summary: Display the specified JournalClassif
      description: Get JournalClassif
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalClassif
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalClassif'
              message:
                type: string
            type: object
    put:
      tags:
      - JournalClassif
      summary: Update the specified JournalClassif in storage
      description: Update JournalClassif
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalClassif
        required: true
        type: integer
      - name: body
        in: body
        description: JournalClassif that should be updated
        required: false
        schema:
          $ref: '#/definitions/JournalClassif'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalClassif'
              message:
                type: string
            type: object
    delete:
      tags:
      - JournalClassif
      summary: Remove the specified JournalClassif from storage
      description: Delete JournalClassif
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalClassif
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journalInformations:
    get:
      tags:
      - JournalInformation
      summary: Get a listing of the JournalInformations.
      description: Get all JournalInformations
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/JournalInformation'
              message:
                type: string
            type: object
    post:
      tags:
      - JournalInformation
      summary: Store a newly created JournalInformation in storage
      description: Store JournalInformation
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: JournalInformation that should be stored
        required: false
        schema:
          $ref: '#/definitions/JournalInformation'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalInformation'
              message:
                type: string
            type: object
  /journalInformations/{id}:
    get:
      tags:
      - JournalInformation
      summary: Display the specified JournalInformation
      description: Get JournalInformation
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalInformation
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalInformation'
              message:
                type: string
            type: object
    put:
      tags:
      - JournalInformation
      summary: Update the specified JournalInformation in storage
      description: Update JournalInformation
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalInformation
        required: true
        type: integer
      - name: body
        in: body
        description: JournalInformation that should be updated
        required: false
        schema:
          $ref: '#/definitions/JournalInformation'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalInformation'
              message:
                type: string
            type: object
    delete:
      tags:
      - JournalInformation
      summary: Remove the specified JournalInformation from storage
      description: Delete JournalInformation
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalInformation
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journalInstitutionTs:
    get:
      tags:
      - JournalInstitutionT
      summary: Get a listing of the JournalInstitutionTs.
      description: Get all JournalInstitutionTs
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/JournalInstitutionT'
              message:
                type: string
            type: object
    post:
      tags:
      - JournalInstitutionT
      summary: Store a newly created JournalInstitutionT in storage
      description: Store JournalInstitutionT
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: JournalInstitutionT that should be stored
        required: false
        schema:
          $ref: '#/definitions/JournalInstitutionT'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalInstitutionT'
              message:
                type: string
            type: object
  /journalInstitutionTs/{id}:
    get:
      tags:
      - JournalInstitutionT
      summary: Display the specified JournalInstitutionT
      description: Get JournalInstitutionT
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalInstitutionT
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalInstitutionT'
              message:
                type: string
            type: object
    put:
      tags:
      - JournalInstitutionT
      summary: Update the specified JournalInstitutionT in storage
      description: Update JournalInstitutionT
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalInstitutionT
        required: true
        type: integer
      - name: body
        in: body
        description: JournalInstitutionT that should be updated
        required: false
        schema:
          $ref: '#/definitions/JournalInstitutionT'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalInstitutionT'
              message:
                type: string
            type: object
    delete:
      tags:
      - JournalInstitutionT
      summary: Remove the specified JournalInstitutionT from storage
      description: Delete JournalInstitutionT
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalInstitutionT
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journalManagements:
    get:
      tags:
      - JournalManagement
      summary: Get a listing of the JournalManagements.
      description: Get all JournalManagements
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/JournalManagement'
              message:
                type: string
            type: object
    post:
      tags:
      - JournalManagement
      summary: Store a newly created JournalManagement in storage
      description: Store JournalManagement
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: JournalManagement that should be stored
        required: false
        schema:
          $ref: '#/definitions/JournalManagement'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalManagement'
              message:
                type: string
            type: object
  /journalManagements/{id}:
    get:
      tags:
      - JournalManagement
      summary: Display the specified JournalManagement
      description: Get JournalManagement
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalManagement
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalManagement'
              message:
                type: string
            type: object
    put:
      tags:
      - JournalManagement
      summary: Update the specified JournalManagement in storage
      description: Update JournalManagement
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalManagement
        required: true
        type: integer
      - name: body
        in: body
        description: JournalManagement that should be updated
        required: false
        schema:
          $ref: '#/definitions/JournalManagement'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalManagement'
              message:
                type: string
            type: object
    delete:
      tags:
      - JournalManagement
      summary: Remove the specified JournalManagement from storage
      description: Delete JournalManagement
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalManagement
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journalReferences:
    get:
      tags:
      - JournalReference
      summary: Get a listing of the JournalReferences.
      description: Get all JournalReferences
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/JournalReference'
              message:
                type: string
            type: object
    post:
      tags:
      - JournalReference
      summary: Store a newly created JournalReference in storage
      description: Store JournalReference
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: JournalReference that should be stored
        required: false
        schema:
          $ref: '#/definitions/JournalReference'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalReference'
              message:
                type: string
            type: object
  /journalReferences/{id}:
    get:
      tags:
      - JournalReference
      summary: Display the specified JournalReference
      description: Get JournalReference
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalReference
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalReference'
              message:
                type: string
            type: object
    put:
      tags:
      - JournalReference
      summary: Update the specified JournalReference in storage
      description: Update JournalReference
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalReference
        required: true
        type: integer
      - name: body
        in: body
        description: JournalReference that should be updated
        required: false
        schema:
          $ref: '#/definitions/JournalReference'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalReference'
              message:
                type: string
            type: object
    delete:
      tags:
      - JournalReference
      summary: Remove the specified JournalReference from storage
      description: Delete JournalReference
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalReference
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /journalVocabTs:
    get:
      tags:
      - JournalVocabT
      summary: Get a listing of the JournalVocabTs.
      description: Get all JournalVocabTs
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/JournalVocabT'
              message:
                type: string
            type: object
    post:
      tags:
      - JournalVocabT
      summary: Store a newly created JournalVocabT in storage
      description: Store JournalVocabT
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: JournalVocabT that should be stored
        required: false
        schema:
          $ref: '#/definitions/JournalVocabT'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalVocabT'
              message:
                type: string
            type: object
  /journalVocabTs/{id}:
    get:
      tags:
      - JournalVocabT
      summary: Display the specified JournalVocabT
      description: Get JournalVocabT
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalVocabT
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalVocabT'
              message:
                type: string
            type: object
    put:
      tags:
      - JournalVocabT
      summary: Update the specified JournalVocabT in storage
      description: Update JournalVocabT
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalVocabT
        required: true
        type: integer
      - name: body
        in: body
        description: JournalVocabT that should be updated
        required: false
        schema:
          $ref: '#/definitions/JournalVocabT'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/JournalVocabT'
              message:
                type: string
            type: object
    delete:
      tags:
      - JournalVocabT
      summary: Remove the specified JournalVocabT from storage
      description: Delete JournalVocabT
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of JournalVocabT
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /locksses:
    get:
      tags:
      - Lockss
      summary: Get a listing of the Locksses.
      description: Get all Locksses
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Lockss'
              message:
                type: string
            type: object
    post:
      tags:
      - Lockss
      summary: Store a newly created Lockss in storage
      description: Store Lockss
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Lockss that should be stored
        required: false
        schema:
          $ref: '#/definitions/Lockss'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Lockss'
              message:
                type: string
            type: object
  /locksses/{id}:
    get:
      tags:
      - Lockss
      summary: Display the specified Lockss
      description: Get Lockss
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Lockss
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Lockss'
              message:
                type: string
            type: object
    put:
      tags:
      - Lockss
      summary: Update the specified Lockss in storage
      description: Update Lockss
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Lockss
        required: true
        type: integer
      - name: body
        in: body
        description: Lockss that should be updated
        required: false
        schema:
          $ref: '#/definitions/Lockss'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Lockss'
              message:
                type: string
            type: object
    delete:
      tags:
      - Lockss
      summary: Remove the specified Lockss from storage
      description: Delete Lockss
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Lockss
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /people:
    get:
      tags:
      - People
      summary: Get a listing of the People.
      description: Get all People
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/People'
              message:
                type: string
            type: object
    post:
      tags:
      - People
      summary: Store a newly created People in storage
      description: Store People
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: People that should be stored
        required: false
        schema:
          $ref: '#/definitions/People'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/People'
              message:
                type: string
            type: object
  /people/{id}:
    get:
      tags:
      - People
      summary: Display the specified People
      description: Get People
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of People
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/People'
              message:
                type: string
            type: object
    put:
      tags:
      - People
      summary: Update the specified People in storage
      description: Update People
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of People
        required: true
        type: integer
      - name: body
        in: body
        description: People that should be updated
        required: false
        schema:
          $ref: '#/definitions/People'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/People'
              message:
                type: string
            type: object
    delete:
      tags:
      - People
      summary: Remove the specified People from storage
      description: Delete People
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of People
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /periods:
    get:
      tags:
      - Period
      summary: Get a listing of the Periods.
      description: Get all Periods
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Period'
              message:
                type: string
            type: object
    post:
      tags:
      - Period
      summary: Store a newly created Period in storage
      description: Store Period
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Period that should be stored
        required: false
        schema:
          $ref: '#/definitions/Period'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Period'
              message:
                type: string
            type: object
  /periods/{id}:
    get:
      tags:
      - Period
      summary: Display the specified Period
      description: Get Period
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Period
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Period'
              message:
                type: string
            type: object
    put:
      tags:
      - Period
      summary: Update the specified Period in storage
      description: Update Period
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Period
        required: true
        type: integer
      - name: body
        in: body
        description: Period that should be updated
        required: false
        schema:
          $ref: '#/definitions/Period'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Period'
              message:
                type: string
            type: object
    delete:
      tags:
      - Period
      summary: Remove the specified Period from storage
      description: Delete Period
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Period
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /references:
    get:
      tags:
      - Reference
      summary: Get a listing of the References.
      description: Get all References
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Reference'
              message:
                type: string
            type: object
    post:
      tags:
      - Reference
      summary: Store a newly created Reference in storage
      description: Store Reference
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Reference that should be stored
        required: false
        schema:
          $ref: '#/definitions/Reference'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Reference'
              message:
                type: string
            type: object
  /references/{id}:
    get:
      tags:
      - Reference
      summary: Display the specified Reference
      description: Get Reference
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Reference
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Reference'
              message:
                type: string
            type: object
    put:
      tags:
      - Reference
      summary: Update the specified Reference in storage
      description: Update Reference
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Reference
        required: true
        type: integer
      - name: body
        in: body
        description: Reference that should be updated
        required: false
        schema:
          $ref: '#/definitions/Reference'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Reference'
              message:
                type: string
            type: object
    delete:
      tags:
      - Reference
      summary: Remove the specified Reference from storage
      description: Delete Reference
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Reference
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /reviewers:
    get:
      tags:
      - Reviewer
      summary: Get a listing of the Reviewers.
      description: Get all Reviewers
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Reviewer'
              message:
                type: string
            type: object
    post:
      tags:
      - Reviewer
      summary: Store a newly created Reviewer in storage
      description: Store Reviewer
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Reviewer that should be stored
        required: false
        schema:
          $ref: '#/definitions/Reviewer'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Reviewer'
              message:
                type: string
            type: object
  /reviewers/{id}:
    get:
      tags:
      - Reviewer
      summary: Display the specified Reviewer
      description: Get Reviewer
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Reviewer
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Reviewer'
              message:
                type: string
            type: object
    put:
      tags:
      - Reviewer
      summary: Update the specified Reviewer in storage
      description: Update Reviewer
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Reviewer
        required: true
        type: integer
      - name: body
        in: body
        description: Reviewer that should be updated
        required: false
        schema:
          $ref: '#/definitions/Reviewer'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Reviewer'
              message:
                type: string
            type: object
    delete:
      tags:
      - Reviewer
      summary: Remove the specified Reviewer from storage
      description: Delete Reviewer
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Reviewer
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /revisions:
    get:
      tags:
      - Revision
      summary: Get a listing of the Revisions.
      description: Get all Revisions
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Revision'
              message:
                type: string
            type: object
    post:
      tags:
      - Revision
      summary: Store a newly created Revision in storage
      description: Store Revision
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Revision that should be stored
        required: false
        schema:
          $ref: '#/definitions/Revision'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Revision'
              message:
                type: string
            type: object
  /revisions/{id}:
    get:
      tags:
      - Revision
      summary: Display the specified Revision
      description: Get Revision
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Revision
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Revision'
              message:
                type: string
            type: object
    put:
      tags:
      - Revision
      summary: Update the specified Revision in storage
      description: Update Revision
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Revision
        required: true
        type: integer
      - name: body
        in: body
        description: Revision that should be updated
        required: false
        schema:
          $ref: '#/definitions/Revision'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Revision'
              message:
                type: string
            type: object
    delete:
      tags:
      - Revision
      summary: Remove the specified Revision from storage
      description: Delete Revision
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Revision
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /roles:
    get:
      tags:
      - Role
      summary: Get a listing of the Roles.
      description: Get all Roles
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Role'
              message:
                type: string
            type: object
    post:
      tags:
      - Role
      summary: Store a newly created Role in storage
      description: Store Role
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Role that should be stored
        required: false
        schema:
          $ref: '#/definitions/Role'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Role'
              message:
                type: string
            type: object
  /roles/{id}:
    get:
      tags:
      - Role
      summary: Display the specified Role
      description: Get Role
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Role
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Role'
              message:
                type: string
            type: object
    put:
      tags:
      - Role
      summary: Update the specified Role in storage
      description: Update Role
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Role
        required: true
        type: integer
      - name: body
        in: body
        description: Role that should be updated
        required: false
        schema:
          $ref: '#/definitions/Role'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Role'
              message:
                type: string
            type: object
    delete:
      tags:
      - Role
      summary: Remove the specified Role from storage
      description: Delete Role
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Role
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /staff:
    get:
      tags:
      - Staff
      summary: Get a listing of the Staff.
      description: Get all Staff
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Staff'
              message:
                type: string
            type: object
    post:
      tags:
      - Staff
      summary: Store a newly created Staff in storage
      description: Store Staff
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Staff that should be stored
        required: false
        schema:
          $ref: '#/definitions/Staff'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Staff'
              message:
                type: string
            type: object
  /staff/{id}:
    get:
      tags:
      - Staff
      summary: Display the specified Staff
      description: Get Staff
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Staff
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Staff'
              message:
                type: string
            type: object
    put:
      tags:
      - Staff
      summary: Update the specified Staff in storage
      description: Update Staff
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Staff
        required: true
        type: integer
      - name: body
        in: body
        description: Staff that should be updated
        required: false
        schema:
          $ref: '#/definitions/Staff'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Staff'
              message:
                type: string
            type: object
    delete:
      tags:
      - Staff
      summary: Remove the specified Staff from storage
      description: Delete Staff
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Staff
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /vocabularies:
    get:
      tags:
      - Vocabulary
      summary: Get a listing of the Vocabularies.
      description: Get all Vocabularies
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Vocabulary'
              message:
                type: string
            type: object
    post:
      tags:
      - Vocabulary
      summary: Store a newly created Vocabulary in storage
      description: Store Vocabulary
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Vocabulary that should be stored
        required: false
        schema:
          $ref: '#/definitions/Vocabulary'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Vocabulary'
              message:
                type: string
            type: object
  /vocabularies/{id}:
    get:
      tags:
      - Vocabulary
      summary: Display the specified Vocabulary
      description: Get Vocabulary
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Vocabulary
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Vocabulary'
              message:
                type: string
            type: object
    put:
      tags:
      - Vocabulary
      summary: Update the specified Vocabulary in storage
      description: Update Vocabulary
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Vocabulary
        required: true
        type: integer
      - name: body
        in: body
        description: Vocabulary that should be updated
        required: false
        schema:
          $ref: '#/definitions/Vocabulary'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Vocabulary'
              message:
                type: string
            type: object
    delete:
      tags:
      - Vocabulary
      summary: Remove the specified Vocabulary from storage
      description: Delete Vocabulary
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Vocabulary
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /vocabularyTypes:
    get:
      tags:
      - VocabularyType
      summary: Get a listing of the VocabularyTypes.
      description: Get all VocabularyTypes
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/VocabularyType'
              message:
                type: string
            type: object
    post:
      tags:
      - VocabularyType
      summary: Store a newly created VocabularyType in storage
      description: Store VocabularyType
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: VocabularyType that should be stored
        required: false
        schema:
          $ref: '#/definitions/VocabularyType'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/VocabularyType'
              message:
                type: string
            type: object
  /vocabularyTypes/{id}:
    get:
      tags:
      - VocabularyType
      summary: Display the specified VocabularyType
      description: Get VocabularyType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of VocabularyType
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/VocabularyType'
              message:
                type: string
            type: object
    put:
      tags:
      - VocabularyType
      summary: Update the specified VocabularyType in storage
      description: Update VocabularyType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of VocabularyType
        required: true
        type: integer
      - name: body
        in: body
        description: VocabularyType that should be updated
        required: false
        schema:
          $ref: '#/definitions/VocabularyType'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/VocabularyType'
              message:
                type: string
            type: object
    delete:
      tags:
      - VocabularyType
      summary: Remove the specified VocabularyType from storage
      description: Delete VocabularyType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of VocabularyType
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /classifications:
    get:
      tags:
      - classification
      summary: Get a listing of the classifications.
      description: Get all classifications
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/classification'
              message:
                type: string
            type: object
    post:
      tags:
      - classification
      summary: Store a newly created classification in storage
      description: Store classification
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: classification that should be stored
        required: false
        schema:
          $ref: '#/definitions/classification'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/classification'
              message:
                type: string
            type: object
  /classifications/{id}:
    get:
      tags:
      - classification
      summary: Display the specified classification
      description: Get classification
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of classification
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/classification'
              message:
                type: string
            type: object
    put:
      tags:
      - classification
      summary: Update the specified classification in storage
      description: Update classification
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of classification
        required: true
        type: integer
      - name: body
        in: body
        description: classification that should be updated
        required: false
        schema:
          $ref: '#/definitions/classification'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/classification'
              message:
                type: string
            type: object
    delete:
      tags:
      - classification
      summary: Remove the specified classification from storage
      description: Delete classification
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of classification
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
definitions: !php/object "O:8:\"stdClass\":24:{s:12:\"AccessRights\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"journal_id\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"license\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"license\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"url\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:7:\"Address\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"journal_id\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"street\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"street\";s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"number\";s:4:\"type\";s:6:\"string\";}s:4:\"city\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"city\";s:4:\"type\";s:6:\"string\";}s:8:\"province\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"province\";s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"country\";s:4:\"type\";s:6:\"string\";}s:8:\"raw_data\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"raw_data\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:7:\"Contact\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"journal_id\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"phone\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:11:\"Institution\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":13:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"url\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"phone\";s:4:\"type\";s:6:\"string\";}s:6:\"street\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"street\";s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"number\";s:4:\"type\";s:6:\"string\";}s:4:\"city\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"city\";s:4:\"type\";s:6:\"string\";}s:8:\"province\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"province\";s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"country\";s:4:\"type\";s:6:\"string\";}s:8:\"raw_data\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"raw_data\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:15:\"InstitutionType\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:8:\"Interest\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:12:\"reviewers_id\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"reviewers_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"reviewers_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:7:\"Journal\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"tocoID\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"tocoID\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:14:\"JournalClassif\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:10:\"journal_id\";i:1;s:17:\"classification_id\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"classification_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"classification_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"startdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"startdate\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:7:\"enddate\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"enddate\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:18:\"JournalInformation\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"journal_id\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"title\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"title\";s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"subtitle\";s:4:\"type\";s:6:\"string\";}s:9:\"shortname\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"shortname\";s:4:\"type\";s:6:\"string\";}s:6:\"p-issn\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"p-issn\";s:4:\"type\";s:6:\"string\";}s:6:\"e-issn\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"e-issn\";s:4:\"type\";s:6:\"string\";}s:6:\"l-issn\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"l-issn\";s:4:\"type\";s:6:\"string\";}s:4:\"rnps\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"rnps\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"url\";s:4:\"type\";s:6:\"string\";}s:4:\"logo\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"logo\";s:4:\"type\";s:6:\"string\";}s:7:\"purpose\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"purpose\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"description\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:19:\"JournalInstitutionT\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:10:\"journal_id\";i:1;s:15:\"institutions_id\";i:2;s:15:\"institutionType\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"institutions_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"institutions_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"institutionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"institutionType\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:17:\"JournalManagement\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":11:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:16:\"copyrightArticle\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"copyrightArticle\";s:4:\"type\";s:6:\"string\";}s:6:\"access\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"access\";s:4:\"type\";s:6:\"string\";}s:12:\"revisionData\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"revisionData\";s:4:\"type\";s:6:\"string\";}s:17:\"revisorEvaluation\";O:8:\"stdClass\":3:{s:11:\"description\";s:17:\"revisorEvaluation\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:19:\"anonymousEvaluation\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"anonymousEvaluation\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:16:\"referencesFormat\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"referencesFormat\";s:4:\"type\";s:6:\"string\";}s:18:\"publishingPlanning\";O:8:\"stdClass\":2:{s:11:\"description\";s:18:\"publishingPlanning\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:16:\"JournalReference\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:10:\"journal_id\";i:1;s:12:\"reference_id\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"reference_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"reference_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"startdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"startdate\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:7:\"enddate\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"enddate\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"url\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:13:\"JournalVocabT\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:10:\"journal_id\";i:1;s:8:\"vocab_id\";i:2;s:7:\"type_id\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"vocab_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"vocab_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"type_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"type_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:6:\"Lockss\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"journal_id\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"isLockss\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"isLockss\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"lockssInfo\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"lockssInfo\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:6:\"People\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:14:\"institution_id\";}s:10:\"properties\";O:8:\"stdClass\":20:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"institution_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"institution_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:10:\"secondName\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"secondName\";s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"lastName\";s:4:\"type\";s:6:\"string\";}s:3:\"sex\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"sex\";s:4:\"type\";s:6:\"string\";}s:12:\"inicialsName\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"inicialsName\";s:4:\"type\";s:6:\"string\";}s:8:\"userName\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"userName\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:5:\"orcid\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"orcid\";s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"phone\";s:4:\"type\";s:6:\"string\";}s:3:\"bio\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"bio\";s:4:\"type\";s:6:\"string\";}s:6:\"street\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"street\";s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"number\";s:4:\"type\";s:6:\"string\";}s:4:\"city\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"city\";s:4:\"type\";s:6:\"string\";}s:8:\"province\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"province\";s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"country\";s:4:\"type\";s:6:\"string\";}s:8:\"raw_data\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"raw_data\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:6:\"Period\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:10:\"journal_id\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:10:\"start-date\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"start-date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:8:\"end-date\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"end-date\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:9:\"Reference\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:8:\"Reviewer\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:10:\"journal_id\";i:1;s:9:\"people_id\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"people_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"people_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:8:\"Revision\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:12:\"reviewers_id\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"reviewers_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"reviewers_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"keywords\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"keywords\";s:4:\"type\";s:6:\"string\";}s:8:\"abstract\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"abstract\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:4:\"Role\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:5:\"Staff\";O:8:\"stdClass\":2:{s:8:\"required\";a:3:{i:0;s:10:\"journal_id\";i:1;s:7:\"role_id\";i:2;s:9:\"people_id\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"journal_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"journal_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"role_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"role_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"people_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"people_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"startDate\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:7:\"endDate\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"endDate\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"date\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:10:\"Vocabulary\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:14:\"VocabularyType\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:14:\"classification\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:10:\"created_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"created_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"updated_at\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"updated_at\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}}"
...
