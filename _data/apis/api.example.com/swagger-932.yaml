---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:16:\"Together Api Doc\";s:11:\"description\";s:8:\"Api
  Docs\";s:7:\"version\";s:4:\"0.1.\";}"
basePath: /api
paths:
  /friend/add:
    post:
      tags:
      - user
      - friend
      summary: Add Friend
      description: Add User by id to friend
      operationId: addToFriend
      parameters:
      - name: userFriend
        in: body
        description: User Friend Post Data
        required: true
        schema:
          $ref: '#/definitions/UserFriend'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /friend/remove:
    post:
      tags:
      - user
      - friend
      summary: Remove Friend
      description: Remove Friend by id
      operationId: removeFromFriend
      parameters:
      - name: userFriend
        in: body
        description: User Friend Post Data
        required: true
        schema:
          $ref: '#/definitions/UserFriend'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /friend/list:
    get:
      tags:
      - user
      - friend
      summary: Show List
      description: Show Friend list
      operationId: friendsList
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/FriendsList'
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /post/get:
    get:
      tags:
      - post
      summary: Get All Posts
      description: Get All Posts
      operationId: Get All posts
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /post/get/{post_id}:
    get:
      tags:
      - post
      summary: Post information
      description: Get post
      operationId: getPostInfo
      parameters:
      - name: post_id
        in: path
        description: ID of Post
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /post/update/{post_id}:
    post:
      tags:
      - post
      summary: Update Post information
      description: Update Post
      operationId: post update
      parameters:
      - name: post_id
        in: path
        description: ID of Post
        required: true
        type: integer
        format: int64
      - name: postUpdate
        in: body
        description: Post Data
        required: true
        schema:
          $ref: '#/definitions/PostUpdate'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /post/create:
    post:
      tags:
      - post
      summary: Create new Post
      description: Create Post
      operationId: Post create
      parameters:
      - name: postUpdate
        in: body
        description: Create Post Data
        required: true
        schema:
          $ref: '#/definitions/PostUpdate'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /post/categories:
    get:
      tags:
      - post
      summary: Get All posts category
      description: Get All posts category
      operationId: Get All posts category
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /auth/registration:
    post:
      tags:
      - auth
      summary: User registration
      description: Register user with token
      operationId: registration
      parameters:
      - name: user
        in: body
        description: Post Data
        required: true
        schema:
          $ref: '#/definitions/UserAuth'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
  /auth/login:
    post:
      tags:
      - auth
      summary: User login
      description: Login user by password
      operationId: login
      parameters:
      - name: user
        in: body
        description: Post Data
        required: true
        schema:
          $ref: '#/definitions/UserAuth'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
  /auth/soc:
    post:
      tags:
      - auth
      summary: Social User Twitter/Facebook auth
      description: Social user Twitter/Facebook auth
      operationId: Social Twitter/Facebook auth
      parameters:
      - name: user
        in: body
        description: Post Data
        required: true
        schema:
          $ref: '#/definitions/AuthSoc'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
  /user:
    get:
      tags:
      - user
      summary: User information
      description: Get user
      operationId: getUserInfo
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
    post:
      tags:
      - user
      summary: Update User information
      description: Update user
      operationId: updateUserInfo
      parameters:
      - name: userUpdate
        in: body
        description: User Post Data
        required: true
        schema:
          $ref: '#/definitions/UserUpdate'
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
      security:
      - X-Api-Token: []
  /user/filter:
    post:
      tags:
      - user
      summary: Search users by name or/and age or/and sex
      description: Search users
      operationId: filterUser
      parameters:
      - name: filter
        in: body
        description: User Post Data
        required: false
        schema:
          $ref: '#/definitions/filter'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserList'
        400:
          description: Bad request
      security:
      - X-Api-Token: []
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":15:{s:10:\"UserFriend\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"friend_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:11:\"FriendsList\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/UserShortInfo\";}}}}s:10:\"PostUpdate\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":13:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"info\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"cover\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"file\";}s:9:\"date_from\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"date_to\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"time_from\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"time_to\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"category_id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:10:\"is_private\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:20:\"number_extra_tickets\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:3:\"lat\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"lng\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"UserAuth\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:5:\"email\";i:1;s:8:\"password\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"AuthSoc\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:4:\"type\";i:1;s:12:\"access_token\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:2:{i:0;s:2:\"fb\";i:1;s:2:\"tw\";}}s:12:\"access_token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"UserUpdate\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"cover\";O:8:\"stdClass\":1:{s:4:\"type\";s:4:\"file\";}}}s:8:\"UserInfo\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"sex\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"age\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:5:\"cover\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"filter\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"age\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:3:\"sex\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:2:\"Id\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:6:\"UserId\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:5:\"Email\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"email\";O:8:\"stdClass\":5:{s:11:\"description\";s:30:\"must
  be a valid email address.\";s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"email\";s:9:\"maxLength\";i:255;s:7:\"example\";s:19:\"example@example.com\";}}}s:5:\"Phone\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"phone\";O:8:\"stdClass\":4:{s:11:\"description\";s:103:\"[Validation
  Rule Details](https://regex101.com/r/iD1kP5/1), [Discussion](https://trello.com/c/n4Xqa2W5)\";s:4:\"type\";s:6:\"string\";s:7:\"pattern\";s:18:\"^\\d{1,4},\\d{5,10}$\";s:7:\"example\";s:11:\"1,123456789\";}}}s:6:\"Avatar\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"avatar\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Cover\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"cover\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Location\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"lat\";O:8:\"stdClass\":6:{s:11:\"description\";s:19:\"min:
  -90f, max: 90f\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";s:7:\"maximum\";i:90;s:7:\"minimum\";i:-90;s:7:\"example\";d:45.516950000000001;}s:3:\"lng\";O:8:\"stdClass\":6:{s:11:\"description\";s:21:\"min:
  -180f, max: 180f\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";s:7:\"maximum\";i:180;s:7:\"minimum\";i:-180;s:7:\"example\";d:-73.554810000000003;}}}}"
...
