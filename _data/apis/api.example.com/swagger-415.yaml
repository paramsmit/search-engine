---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:9:\"Slyce
  API\";s:11:\"description\";s:0:\"\";s:14:\"termsOfService\";s:17:\"Use with caution!\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:14:\"admin@slyce.it\";}s:7:\"license\";O:8:\"stdClass\":2:{s:5:\"email\";N;s:3:\"url\";N;}}"
paths:
  /accounts/:
    post:
      operationId: Accounts.create_account
      summary: Create a new account
      description: Create a new account.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Accounts
      parameters:
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/NewAccountDoc'
      responses:
        409:
          description: An account with that name already exists.
        400:
          description: Bad request.
        202:
          description: Processing request.
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: Accounts.create_account
      summary: List the accounts
      description: Get a list of all accounts in the system.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Accounts
      parameters:
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/AccountDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}:
    patch:
      operationId: Accounts.update_account
      summary: Update an account
      description: Update an existing account.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Accounts
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/UpdateAccountDoc'
      responses:
        400:
          description: Bad request.
        202:
          description: Processing request.
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: Accounts.update_account
      summary: Get information about an account
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Accounts
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/analytics/events/:
    post:
      operationId: Analytics.analytics_event_tracking
      summary: Track event
      description: Accepts events with a proper schema for analytics tracking
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Analytics
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/AnalyticsEventTrackingDoc'
      responses:
        404:
          description: The schema is not valid
        202:
          description: Processing request.
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/api-keys/:
    post:
      operationId: API Keys.create_api_key
      summary: Create a new API key
      description: Create a new API key with a name and access control options.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - API Keys
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/NewAPIKeyDoc'
      responses:
        409:
          description: API Key Already Exists
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: API Keys.create_api_key
      summary: List the API keys
      description: Get a list of all API keys associated with the account.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - API Keys
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/APIKeyDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/api-keys/{api_key}:
    patch:
      operationId: API Keys.update_api_key
      summary: Update an api key
      description: Update the name and permissions of an API key.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - API Keys
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: api_key
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/PatchAPIKeyDoc'
      responses:
        404:
          description: API Key Not Found
        400:
          description: Bad Request
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/APIKeyDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: API Keys.update_api_key
      summary: Delete an API key
      description: Remove an api key entirely, revoking it.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - API Keys
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: api_key
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    head:
      operationId: API Keys.update_api_key
      summary: Check if an API key exists
      description: Check if an API key exists.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - API Keys
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: api_key
      responses:
        404:
          description: Not found
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: API Keys.update_api_key
      summary: Get information about an API key
      description: Get name and permissions associated with an API key.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - API Keys
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: api_key
      responses:
        404:
          description: Not found
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/APIKeyDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/datasets/:
    post:
      operationId: Datasets.create_dataset
      summary: Create a new dataset
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/NewDatasetDoc'
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: Datasets.create_dataset
      summary: List datasets
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        400:
          description: Bad Request
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/DatasetDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/datasets/external:
    post:
      operationId: Datasets.create_external_dataset
      summary: Create a new external dataset
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/NewExternalDatasetDoc'
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/datasets/{dataset_id}:
    delete:
      operationId: Datasets.delete_dataset
      summary: Delete a dataset
      description: Remove a dataset entirely.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    patch:
      operationId: Datasets.delete_dataset
      summary: Update a dataset
      description: Update an existing dataset.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/UpdateDatasetDoc'
      responses:
        400:
          description: Bad request.
        202:
          description: Processing request.
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: Datasets.delete_dataset
      summary: Get information about a dataset
      description: Get information about a specific dataset.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      responses:
        404:
          description: Not found
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/DatasetDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/datasets/{dataset_id}/items/:
    get:
      operationId: Datasets.list_items_by_dataset
      summary: List items by dataset
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/DatasetItemDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    post:
      operationId: Datasets.list_items_by_dataset
      summary: Import Items
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      - type: array
        items:
          type: object
          $ref: '#/definitions/NewDatasetItemDoc'
        description: ~
        required: true
        in: body
        name: body
      responses:
        400:
          description: Bad Request
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: Datasets.list_items_by_dataset
      summary: Clear a dataset's items
      description: Remove all data items from a dataset.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/datasets/{dataset_id}/items/csv:
    post:
      operationId: Datasets.import_csv_items
      summary: Import Items With CSV
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Datasets
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: dataset_id
      - type: file
        name: csv
        description: file to upload
        required: true
        in: formData
      responses:
        400:
          description: Bad Request
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/images/ugc/{image_id}:
    get:
      operationId: Images.get_ugc_image
      summary: View a user-generated image.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Images
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: image_id
      responses:
        200: []
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/jobs/:
    get:
      operationId: Jobs.list_jobs
      summary: List the jobs
      description: Get a list of all jobs in the system.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Jobs
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/NewJobDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/jobs/{job_id}:
    get:
      operationId: Jobs.get_job
      summary: Get the status of a job
      description: Get the status of a job by its id.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Jobs
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: job_id
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/layers/:
    get:
      operationId: Layers.list_layers
      summary: List the layers
      description: Get a list of all layers in a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/LayerDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    post:
      operationId: Layers.list_layers
      summary: Create a new layer.
      description: Create a new layer in a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: source_layer_id
        required: ~
        in: query
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/CreateLayerDoc'
      responses:
        409:
          description: Layer Already Exists
        202:
          description: Layer Created
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/layers/{layer_id}:
    get:
      operationId: Layers.get_layer
      summary: Get a layer
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: layer_id
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/LayerDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    patch:
      operationId: Layers.get_layer
      summary: Update a layer.
      description: Update a layer in a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: layer_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/UpdateLayerDoc'
      responses:
        404:
          description: Layer Not Found
        202:
          description: Layer Updated
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: Layers.get_layer
      summary: Delete a layer in a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: layer_id
      responses:
        202:
          description: Layer Updated
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/layers/{layer_id}/mappings/{dataset_id}:
    patch:
      operationId: Layers.update_layer
      summary: Update a layer mapping.
      description: Update a mapping on a layer.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: layer_id
      - type: string
        required: true
        in: path
        name: dataset_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/UpdateLayerMappingDoc'
      responses:
        404:
          description: Layer or Dataset Not Found
        202:
          description: Layer Mapping Updated
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: Layers.update_layer
      summary: Delete a mapping from a layer.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Layers
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: layer_id
      - type: string
        required: true
        in: path
        name: dataset_id
      responses:
        202:
          description: Layer Mapping Deleted
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/:
    post:
      operationId: Spaces.create_space
      summary: Create a new space
      description: Create a new space with a name.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Spaces
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/NewSpaceDoc'
      responses:
        409:
          description: Space Already Exists
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: Spaces.create_space
      summary: List the spaces
      description: Get a list of all spaces associated with the account.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Spaces
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/SpaceDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}:
    patch:
      operationId: Spaces.update_space
      summary: Update a space
      description: Update attributes concerning a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Spaces
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/PatchSpaceDoc'
      responses:
        404:
          description: Space Not Found
        400:
          description: Bad Request
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/SpaceDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: Spaces.update_space
      summary: Delete a space
      description: Remove a space entirely.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Spaces
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    head:
      operationId: Spaces.update_space
      summary: Check if a space exists
      description: Check if a space exists.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Spaces
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      responses:
        404:
          description: Not found
        200:
          description: Space exists
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    get:
      operationId: Spaces.update_space
      summary: Get information about a space
      description: Get information about a specific space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Spaces
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      responses:
        404:
          description: Not found
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/SpaceDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/sdk/config/:
    get:
      operationId: SDK.get_sdk_config
      summary: Get the config for the Mobile SDK
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - SDK
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      responses:
        200: []
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/ClassifyColors:
    post:
      operationId: Services.ClassifyColors
      summary: Classify Colors
      description: Determines the most prominent colors in the image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseClassifierConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: ClassfiyColors
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The item value
                      example: blue
                    confidence:
                      type: integer
                      format: int64
                      description: The item confidence
                      example: 0.800000
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/ClassifyHardware:
    post:
      operationId: Services.ClassifyHardware
      summary: Classify Hardware
      description: Determines the most prominent hardware in the image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseClassifierConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: ClassfiyHardware
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The item value
                      example: pvc elbow
                    confidence:
                      type: integer
                      format: int64
                      description: The item confidence
                      example: 0.800000
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/ClassifyPatterns:
    post:
      operationId: Services.ClassifyPatterns
      summary: Classify Patterns
      description: Determines the most prominent patterns in the image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseClassifierConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: ClassfiyPatterns
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The item value
                      example: plaid
                    confidence:
                      type: integer
                      format: int64
                      description: The item confidence
                      example: 0.800000
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/DetectApparel:
    post:
      operationId: Services.DetectApparel
      summary: Detect Apparel
      description: Detects apparel in the image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseDetectorConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: DetectApparel
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The item value
                      example: shirt
                    confidence:
                      type: integer
                      format: int64
                      description: The item confidence
                      example: 0.800000
                    anchor_distance:
                      type: integer
                      format: int64
                      description: The relative distance from the detected apparel
                        and the anchor
                      example: 0.900000
                    coordinates:
                      type: array
                      items: []
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/DetectBarcodes:
    post:
      operationId: Services.DetectBarcodes
      summary: Detect Barcodes
      description: Detects barcodes in the image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseDetectorConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: DetectBarcodes
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The item value
                      example: shirt
                    confidence:
                      type: integer
                      format: int64
                      description: The item confidence
                      example: 0.800000
                    anchor_distance:
                      type: integer
                      format: int64
                      description: The relative distance from the detected barcodes
                        and the anchor
                      example: 0.900000
                    coordinates:
                      type: array
                      items: []
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/DetectLogos:
    post:
      operationId: Services.DetectLogos
      summary: Detect Logos
      description: Detects logos in the image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseDetectorConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: DetectLogos
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The item value
                      example: shirt
                    confidence:
                      type: integer
                      format: int64
                      description: The item confidence
                      example: 0.800000
                    anchor_distance:
                      type: integer
                      format: int64
                      description: The relative distance from the detected logos and
                        the anchor
                      example: 0.900000
                    coordinates:
                      type: array
                      items: []
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/DetectReferenceImages:
    post:
      operationId: Services.DetectReferenceImages
      summary: Detect Reference Images
      description: Attempts to find an exact a dataset and image_ids based on an image
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/DetectReferenceImagesConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: Detectreferenceimages
              items:
                type: array
                items:
                  type: object
                  properties:
                    dataset_id:
                      type: integer
                      format: int64
                      description: dataset id
                      example: WQsIG5vdCBvbmx5IGJ5
                    item_ids:
                      type: array
                      items:
                        type: string
                        description: item id
                        example: "1234567"
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/TextSearch:
    post:
      operationId: Services.TextSearch
      summary: Text Search
      description: text Search with settings
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/BaseSearchConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: TextSearch
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: item title
                      example: Really Cool Thing
                    description:
                      type: string
                      description: item description
                      example: This is a really cool thing you should buy
                    url:
                      type: string
                      description: item url
                      example: https://buy.com/really-cool-thing
                    image_url:
                      type: string
                      description: item image url
                      example: https://cdn.buy.com/images/1234567
                    price:
                      type: integer
                      format: int64
                      description: item price
                      example: 50
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 24
              cursor:
                type: string
                description: The cursor for paging the items
                example: https://api.slyce.it/WQsIG5vdCBvbmx5IGJ5
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/services/VisualSearch:
    post:
      operationId: Services.VisualSearch
      summary: Visual Search
      description: visual Search with settings
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Services
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: limit
        example: 25
        required: ~
        in: query
      - type: object
        required: true
        in: body
        name: body
        schema:
          $ref: '#/definitions/VisualSearchConsumes'
      responses:
        404:
          description: Server not found
        400:
          description: Invalid request
        204:
          description: Successful request no results found
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              type:
                type: string
                description: The response type
                example: VisualSearch
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: item title
                      example: Really Cool Thing
                    description:
                      type: string
                      description: item description
                      example: This is a really cool thing you should buy
                    url:
                      type: string
                      description: item url
                      example: https://buy.com/really-cool-thing
                    image_url:
                      type: string
                      description: item image url
                      example: https://cdn.buy.com/images/1234567
                    price:
                      type: integer
                      format: int64
                      description: item price
                      example: 50
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 24
              cursor:
                type: string
                description: The cursor for paging the items
                example: https://api.slyce.it/WQsIG5vdCBvbmx5IGJ5
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/workflows/:
    get:
      operationId: Workflows.list_workflows
      summary: List the workflows
      description: Get a list of all workflows in a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Workflows
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/WorkflowDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    post:
      operationId: Workflows.list_workflows
      summary: Create a new workflow.
      description: Create a new workflow using Operations and Operators to build out
        the execution. To copy a workflow add source_workflow_id to the query string
        and only pass the workflow_name in the body.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Workflows
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: source_workflow_id
        required: ~
        in: query
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/CreateWorkflowDoc'
      responses:
        409:
          description: Workflow Already Exists
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/workflows/{workflow_id}:
    get:
      operationId: Workflows.get_workflow
      summary: Get a workflow
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Workflows
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: workflow_id
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/WorkflowDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    patch:
      operationId: Workflows.get_workflow
      summary: Update a workflow.
      description: Update a new workflow using Operations and Operators to build out
        the execution.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Workflows
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: workflow_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/UpdateWorkflowDoc'
      responses:
        409:
          description: Workflow Already Exists
        404:
          description: Workflow Not Found
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: Workflows.get_workflow
      summary: Delete a workflow.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Workflows
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: workflow_id
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    post:
      operationId: Workflows.get_workflow
      summary: Execute a workflow.
      description: There are two options for this method. You can upload an image
        or pass an image URL. To upload an image use 'text/plain' as the 'Content-Type'
        and upload the image. To pass the image URL use 'application/json' as the
        'Content-Type' and pass 'image_url' as a param on the body.  If passed, 'workflow_options'
        must be valid JSON.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Workflows
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: workflow_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/ExecuteWorkflowDoc'
      responses:
        202:
          description: Executing Workflow
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/lenses/:
    get:
      operationId: Lenses.list_lenses
      summary: List the lenses
      description: Get a list of all lenses in a space.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Lenses
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: integer
        format: int64
        description: The page number to get
        default: 1
        example: 1
        required: false
        in: query
        name: page_number
      - type: integer
        format: int64
        description: The number of items to return
        default: 20
        example: 20
        required: false
        in: query
        name: page_size
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/LensDoc'
              page_number:
                type: integer
                format: int64
                description: The current page number
                example: 1
              page_size:
                type: integer
                format: int64
                description: The number of items returned
                example: 20
              total_pages:
                type: integer
                format: int64
                description: The total number of pages available
                example: 1
              total_items:
                type: integer
                format: int64
                description: The total number of items available
                example: 1
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    post:
      operationId: Lenses.list_lenses
      summary: Create a new lens.
      description: Create a new lens. To copy a lens add source_lens_id to the query
        string and only pass the lens_name in the body.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Lenses
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        name: source_lens_id
        required: ~
        in: query
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/CreateLensDoc'
      responses:
        409:
          description: Lens Already Exists
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /accounts/{account_id}/spaces/{space_id}/lenses/{lens_id}:
    get:
      operationId: Lenses.get_lens
      summary: Get a lens
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Lenses
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: lens_id
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/LensDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    patch:
      operationId: Lenses.get_lens
      summary: Update a lens.
      description: Update a lens.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Lenses
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: lens_id
      - type: object
        name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/UpdateLensDoc'
      responses:
        409:
          description: Lens Already Exists
        404:
          description: Lens Not Found
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
    delete:
      operationId: Lenses.get_lens
      summary: Delete a lens.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Lenses
      parameters:
      - type: string
        required: true
        in: path
        name: account_id
      - type: string
        required: true
        in: path
        name: space_id
      - type: string
        required: true
        in: path
        name: lens_id
      responses:
        200:
          description: Successful Operation
          schema:
            type: object
            $ref: '#/definitions/NewJobDoc'
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /api_keys/mine:
    get:
      operationId: api_keys_mine
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /validate_weld:
    post:
      operationId: validate_weld
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
  /weld_highlighter:
    get:
      operationId: weld_highlighter
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Successful Operation
      security:
      - slyce-account-id: []
      - slyce-api-key: []
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":45:{s:22:\"AnalyticsEventTracking\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":15:{s:8:\"slyce_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"Unique
  Slyce id for this session\";s:7:\"example\";s:15:\"slyce_so_cool99\";}s:18:\"slyce_sdk_platform\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Slyce
  platform name\";s:7:\"example\";s:13:\"Slyce SDK iOS\";}s:17:\"slyce_sdk_version\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"Slyce
  SDK version used for this session\";s:7:\"example\";s:3:\"3.8\";}s:7:\"user_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  current user's id\";s:7:\"example\";s:11:\"123asdf4445\";}s:16:\"app_launch_count\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:40:\"How
  many times the app has been launched\";s:7:\"example\";i:1;}s:15:\"client_app_name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:36:\"Name
  of the Client App using the SDK\";s:7:\"example\";s:15:\"Client App Name\";}s:18:\"client_app_version\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:39:\"Version
  of the client app using the SDK\";s:7:\"example\";s:3:\"2.2\";}s:5:\"ad_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  current device id\";s:7:\"example\";s:18:\"12343546sfgdhsrteh\";}s:15:\"device_category\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"The
  category of device\";s:7:\"example\";s:6:\"mobile\";}s:12:\"installer_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"The
  Installer id\";s:7:\"example\";s:19:\"aetq3t45q5yt44y5ggg\";}s:19:\"mobile_device_model\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:36:\"The
  type of mobile device being used\";s:7:\"example\";s:10:\"HTC One M8\";}s:16:\"operating_system\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Operating
  system of the device being used\";s:7:\"example\";s:7:\"Android\";}s:24:\"operating_system_version\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  version of the operating system\";s:7:\"example\";s:3:\"6.0\";}s:17:\"screen_resolution\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:31:\"Screen
  resolution of the device\";s:7:\"example\";s:11:\"1920 x 1080\";}s:13:\"user_location\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"The
  location of the device\";s:7:\"example\";s:17:\"41.40338, 2.17403\";}}}s:14:\"AnalyticsEvent\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"event_action\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:25:\"The
  action for the event.\";s:7:\"example\";s:30:\"Slyce Initialization - success\";}s:14:\"event_category\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"The
  general event category.\";s:7:\"example\";s:14:\"Initialization\";}s:11:\"event_label\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:36:\"An
  optional descriptor for the event\";s:7:\"example\";s:0:\"\";}s:10:\"hit_number\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:43:\"Count
  of events in a sequence starting at 1\";s:7:\"example\";i:1;}s:13:\"hit_timestamp\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:46:\"The
  recorded time at which the event occurred.\";s:7:\"example\";s:23:\"2018-02-12 20:28:32.113\";}}}s:16:\"ProcessStatusDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"status\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:25:\"The
  current job status id\";s:7:\"example\";i:1;}s:7:\"display\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:27:\"The
  current job status text\";s:7:\"example\";s:6:\"Queued\";}}}s:9:\"ImageSize\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"width\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:15:\"The
  image width\";s:7:\"example\";i:200;}s:6:\"height\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:16:\"The
  image height\";s:7:\"example\";i:200;}}}s:5:\"Image\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"The
  image id\";s:7:\"example\";s:19:\"WQsIG5vdCBvbmx5IGJ5\";}s:5:\"bytes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:38:\"The
  base64 encoded string of the image\";s:7:\"example\";s:18:\"5hbCBwbGVhc3VyZS4=\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:23:\"#/definitions/ImageSize\";}}}s:18:\"ClassifierSettings\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"classes\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";a:0:{}s:11:\"description\";s:38:\"A
  list of classes to return if precent\";s:8:\"required\";N;}s:10:\"confidence\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:49:\"The
  minimum confidence for a class to be returned\";}}}s:6:\"Anchor\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:1:\"x\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:36:\"The
  X coordinate of the anchor point\";s:7:\"example\";i:100;}s:1:\"y\";O:8:\"stdClass\":4:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:36:\"The
  X coordinate of the anchor point\";s:7:\"example\";i:100;}}}s:16:\"DetectorSettings\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"classes\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";a:0:{}s:11:\"description\";s:38:\"A
  list of classes to return if precent\";s:8:\"required\";N;}s:10:\"confidence\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:49:\"The
  minimum confidence for a class to be returned\";}s:15:\"anchor_distance\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:11:\"description\";s:51:\"The
  minimum distance for a detection to be returned\";}}}s:5:\"Facet\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"value\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"A
  facet value\";s:7:\"example\";s:4:\"male\";}s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"A
  facet key\";s:7:\"example\";s:6:\"gender\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"A
  facet operator\";s:7:\"example\";s:2:\"==\";}}}s:14:\"SearchSettings\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:10:\"dataset_id\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"dataset_id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:32:\"The
  dataset id to search against\";s:8:\"required\";b:1;s:7:\"example\";s:22:\"CQEBAQENCAMLDgQABAAAAw\";}s:12:\"search_terms\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:13:\"A
  search term\";s:7:\"example\";s:7:\"pvc tee\";}s:11:\"description\";N;s:8:\"required\";N;}s:6:\"facets\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:19:\"#/definitions/Facet\";}s:11:\"description\";N;s:8:\"required\";N;}}}s:18:\"BaseSearchSettings\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"dataset_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:37:\"Optional
  dataset id to search against\";s:7:\"example\";s:22:\"CQEBAQENCAMLDgQABAAAAw\";}}}s:20:\"VisualSearchSettings\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"dataset_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:37:\"Optional
  dataset id to search against\";s:7:\"example\";s:22:\"CQEBAQENCAMLDgQABAAAAw\";}s:4:\"tags\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";a:0:{}s:11:\"description\";N;s:8:\"required\";N;}}}s:13:\"NewAccountDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:57:\"The
  url safe id for the account (this cannot be changed).\";s:8:\"required\";b:1;s:7:\"example\";s:8:\"test_inc\";}s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:46:\"The
  name of the account (this can be changed).\";s:8:\"required\";b:1;s:7:\"example\";s:10:\"Test,
  Inc.\";}}s:4:\"name\";s:4:\"body\";}s:9:\"NewJobDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":8:{s:5:\"topic\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:3:\"???\";s:7:\"example\";s:15:\"fg01-evt-global\";}s:8:\"msg_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"The
  type of message\";s:7:\"example\";s:11:\"job-created\";}s:10:\"account_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  account id related to the job\";s:7:\"example\";s:8:\"test_inc\";}s:7:\"task_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"The
  task id\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:15:\"Task
  created by\";s:7:\"example\";s:6:\"system\";}s:6:\"job_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:10:\"The
  job id\";s:7:\"example\";s:22:\"XyGHrrSB9GqrMfvzQdJShA\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"The
  name of the job\";s:7:\"example\";s:8:\"job-name\";}s:14:\"process_status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:30:\"#/definitions/ProcessStatusDoc\";}}}s:16:\"UpdateAccountDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"is_active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:23:\"The
  name of the account\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  name of the account\";s:7:\"example\";s:10:\"Test, Inc.\";}}s:4:\"name\";s:4:\"body\";}s:12:\"NewAPIKeyDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  name of the API key\";s:8:\"required\";b:1;s:7:\"example\";s:10:\"DemoAPIKey\";}s:3:\"acl\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:105:\"The
  access control list as an object with the operation as the key and the permission
  status as a boolean\";s:7:\"example\";O:8:\"stdClass\":57:{s:14:\"create-account\";b:0;s:14:\"update-account\";b:0;s:13:\"list-accounts\";b:0;s:22:\"track-analytics-events\";b:1;s:14:\"create-api-key\";b:0;s:14:\"update-api-key\";b:0;s:14:\"delete-api-key\";b:0;s:11:\"get-api-key\";b:0;s:13:\"list-api-keys\";b:0;s:12:\"copy-dataset\";b:0;s:14:\"create-dataset\";b:0;s:14:\"delete-dataset\";b:0;s:14:\"update-dataset\";b:0;s:13:\"list-datasets\";b:0;s:17:\"get-dataset-by-id\";b:0;s:12:\"import-items\";b:0;s:26:\"list-data-items-by-dataset\";b:0;s:17:\"delete-data-items\";b:0;s:13:\"get-job-by-id\";b:0;s:9:\"list-jobs\";b:0;s:12:\"create-layer\";b:0;s:10:\"copy-layer\";b:0;s:12:\"update-layer\";b:0;s:12:\"delete-layer\";b:0;s:20:\"update-layer-mapping\";b:0;s:20:\"delete-layer-mapping\";b:0;s:11:\"list-layers\";b:0;s:9:\"get-layer\";b:0;s:11:\"create-lens\";b:0;s:9:\"copy-lens\";b:0;s:11:\"update-lens\";b:0;s:11:\"delete-lens\";b:0;s:11:\"list-lenses\";b:0;s:8:\"get-lens\";b:0;s:12:\"create-space\";b:0;s:12:\"update-space\";b:0;s:12:\"delete-space\";b:0;s:15:\"get-space-by-id\";b:0;s:11:\"list-spaces\";b:0;s:15:\"create-workflow\";b:0;s:13:\"copy-workflow\";b:0;s:15:\"update-workflow\";b:0;s:15:\"delete-workflow\";b:0;s:16:\"execute-workflow\";b:1;s:12:\"get-workflow\";b:0;s:14:\"list-workflows\";b:0;s:15:\"classify-colors\";b:0;s:17:\"classify-hardware\";b:0;s:17:\"classify-patterns\";b:0;s:14:\"detect-apparel\";b:0;s:15:\"detect-barcodes\";b:0;s:12:\"detect-logos\";b:0;s:23:\"detect-reference-images\";b:0;s:11:\"text-search\";b:0;s:13:\"visual-search\";b:0;s:14:\"get-ugc-images\";b:0;s:14:\"get-sdk-config\";b:1;}}}s:4:\"name\";s:4:\"body\";}s:14:\"PatchAPIKeyDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  name of the API key\";s:8:\"required\";b:1;s:7:\"example\";s:13:\"StagingAPIKey\";}s:3:\"acl\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:105:\"The
  access control list as an object with the operation as the key and the permission
  status as a boolean\";s:7:\"example\";O:8:\"stdClass\":57:{s:14:\"create-account\";b:1;s:14:\"update-account\";b:1;s:13:\"list-accounts\";b:1;s:22:\"track-analytics-events\";b:1;s:14:\"create-api-key\";b:1;s:14:\"update-api-key\";b:1;s:14:\"delete-api-key\";b:1;s:11:\"get-api-key\";b:1;s:13:\"list-api-keys\";b:1;s:12:\"copy-dataset\";b:1;s:14:\"create-dataset\";b:1;s:14:\"delete-dataset\";b:1;s:14:\"update-dataset\";b:1;s:13:\"list-datasets\";b:1;s:17:\"get-dataset-by-id\";b:1;s:12:\"import-items\";b:1;s:26:\"list-data-items-by-dataset\";b:1;s:17:\"delete-data-items\";b:1;s:13:\"get-job-by-id\";b:1;s:9:\"list-jobs\";b:1;s:12:\"create-layer\";b:1;s:10:\"copy-layer\";b:1;s:12:\"update-layer\";b:1;s:12:\"delete-layer\";b:1;s:20:\"update-layer-mapping\";b:1;s:20:\"delete-layer-mapping\";b:1;s:11:\"list-layers\";b:1;s:9:\"get-layer\";b:1;s:11:\"create-lens\";b:1;s:9:\"copy-lens\";b:1;s:11:\"update-lens\";b:1;s:11:\"delete-lens\";b:1;s:11:\"list-lenses\";b:1;s:8:\"get-lens\";b:1;s:12:\"create-space\";b:1;s:12:\"update-space\";b:1;s:12:\"delete-space\";b:1;s:15:\"get-space-by-id\";b:1;s:11:\"list-spaces\";b:1;s:15:\"create-workflow\";b:1;s:13:\"copy-workflow\";b:1;s:15:\"update-workflow\";b:1;s:15:\"delete-workflow\";b:1;s:16:\"execute-workflow\";b:1;s:12:\"get-workflow\";b:1;s:14:\"list-workflows\";b:1;s:15:\"classify-colors\";b:1;s:17:\"classify-hardware\";b:1;s:17:\"classify-patterns\";b:1;s:14:\"detect-apparel\";b:1;s:15:\"detect-barcodes\";b:1;s:12:\"detect-logos\";b:1;s:23:\"detect-reference-images\";b:1;s:11:\"text-search\";b:1;s:13:\"visual-search\";b:1;s:14:\"get-ugc-images\";b:1;s:14:\"get-sdk-config\";b:1;}}}s:4:\"name\";s:4:\"body\";}s:9:\"APIKeyDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:3:\"key\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:3:\"key\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"The
  API key itself\";s:8:\"required\";b:1;s:7:\"example\";s:43:\"LO-DfZCX54jykipJXOx0Ik_mXKE86q2Vfit0ysC_660\";}s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  name of the API key\";s:8:\"required\";b:1;s:7:\"example\";s:10:\"DemoAPIKey\";}s:3:\"acl\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:105:\"The
  access control list as an object with the operation as the key and the permission
  status as a boolean\";s:7:\"example\";O:8:\"stdClass\":57:{s:14:\"create-account\";b:0;s:14:\"update-account\";b:0;s:13:\"list-accounts\";b:0;s:22:\"track-analytics-events\";b:1;s:14:\"create-api-key\";b:0;s:14:\"update-api-key\";b:0;s:14:\"delete-api-key\";b:0;s:11:\"get-api-key\";b:0;s:13:\"list-api-keys\";b:0;s:12:\"copy-dataset\";b:0;s:14:\"create-dataset\";b:0;s:14:\"delete-dataset\";b:0;s:14:\"update-dataset\";b:0;s:13:\"list-datasets\";b:0;s:17:\"get-dataset-by-id\";b:0;s:12:\"import-items\";b:0;s:26:\"list-data-items-by-dataset\";b:0;s:17:\"delete-data-items\";b:0;s:13:\"get-job-by-id\";b:0;s:9:\"list-jobs\";b:0;s:12:\"create-layer\";b:0;s:10:\"copy-layer\";b:0;s:12:\"update-layer\";b:0;s:12:\"delete-layer\";b:0;s:20:\"update-layer-mapping\";b:0;s:20:\"delete-layer-mapping\";b:0;s:11:\"list-layers\";b:0;s:9:\"get-layer\";b:0;s:11:\"create-lens\";b:0;s:9:\"copy-lens\";b:0;s:11:\"update-lens\";b:0;s:11:\"delete-lens\";b:0;s:11:\"list-lenses\";b:0;s:8:\"get-lens\";b:0;s:12:\"create-space\";b:0;s:12:\"update-space\";b:0;s:12:\"delete-space\";b:0;s:15:\"get-space-by-id\";b:0;s:11:\"list-spaces\";b:0;s:15:\"create-workflow\";b:0;s:13:\"copy-workflow\";b:0;s:15:\"update-workflow\";b:0;s:15:\"delete-workflow\";b:0;s:16:\"execute-workflow\";b:1;s:12:\"get-workflow\";b:0;s:14:\"list-workflows\";b:0;s:15:\"classify-colors\";b:0;s:17:\"classify-hardware\";b:0;s:17:\"classify-patterns\";b:0;s:14:\"detect-apparel\";b:0;s:15:\"detect-barcodes\";b:0;s:12:\"detect-logos\";b:0;s:23:\"detect-reference-images\";b:0;s:11:\"text-search\";b:0;s:13:\"visual-search\";b:0;s:14:\"get-ugc-images\";b:0;s:14:\"get-sdk-config\";b:1;}}}}s:13:\"NewDatasetDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:12:\"dataset_type\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"dataset_type\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  type of the dataset.\";s:8:\"required\";b:1;s:7:\"example\";s:7:\"dataset\";}s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  name of the dataset.\";s:8:\"required\";b:1;s:7:\"example\";s:11:\"DemoDataset\";}s:14:\"image_url_keys\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"imageURL\";}s:11:\"description\";s:61:\"The
  keys of the fields containing image_urls for the dataset.\";s:8:\"required\";N;}s:9:\"copy_from\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:90:\"The
  name of another dataset from which settings and items should be copied (if necessary).\";s:8:\"required\";b:0;s:7:\"example\";s:4:\"none\";}}s:4:\"name\";s:4:\"body\";}s:21:\"NewExternalDatasetDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:4:\"name\";i:1;s:8:\"base_url\";i:2;s:7:\"request\";i:3;s:7:\"returns\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  name of the dataset.\";s:8:\"required\";b:1;s:7:\"example\";s:19:\"DemoExternalDataset\";}s:8:\"base_url\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"The
  base url for the dataset\";s:8:\"required\";b:1;s:7:\"example\";s:25:\"https://example.com/test/\";}s:7:\"request\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:22:\"The
  request parameters\";s:8:\"required\";b:1;s:7:\"example\";O:8:\"stdClass\":4:{s:6:\"method\";s:3:\"GET\";s:7:\"headers\";O:8:\"stdClass\":1:{s:7:\"api-key\";s:4:\"x123\";}s:5:\"query\";O:8:\"stdClass\":1:{s:1:\"q\";s:2:\"$q\";}s:4:\"body\";N;}}s:7:\"returns\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:56:\"The
  object to transfroms the response from the api call.\";s:8:\"required\";b:1;s:7:\"example\";O:8:\"stdClass\":2:{s:5:\"items\";s:8:\"products\";s:10:\"transforms\";O:8:\"stdClass\":3:{s:7:\"prepend\";a:1:{i:0;O:8:\"stdClass\":2:{s:3:\"key\";s:11:\"product_url\";s:5:\"value\";s:15:\"wwww.google.com\";}}s:6:\"append\";a:1:{i:0;O:8:\"stdClass\":2:{s:3:\"key\";s:11:\"product_url\";s:5:\"value\";s:18:\"?tracking=0&mode=1\";}}s:7:\"replace\";a:1:{i:0;O:8:\"stdClass\":3:{s:3:\"key\";s:11:\"product_url\";s:5:\"value\";s:3:\"200\";s:5:\"match\";s:6:\"<SIZE>\";}}}}}}s:4:\"name\";s:4:\"body\";}s:16:\"UpdateDatasetDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  name of the dataset\";s:8:\"required\";b:0;s:7:\"example\";s:11:\"DemoDataset\";}s:14:\"image_url_keys\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"imageURL\";}s:11:\"description\";s:61:\"The
  keys of the fields containing image_urls for the dataset.\";s:8:\"required\";N;}}s:4:\"name\";s:4:\"body\";}s:10:\"DatasetDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:4:\"type\";i:1;s:2:\"id\";i:2;s:4:\"name\";i:3;s:14:\"image_url_keys\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:4:\"type\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  type of the dataset.\";s:8:\"required\";b:1;s:7:\"example\";s:7:\"dataset\";}s:2:\"id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"The
  dataset id\";s:8:\"required\";b:1;s:7:\"example\";s:22:\"MHbdr6BiZdCRtLmCYF7swT\";}s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  name of the dataset.\";s:8:\"required\";b:1;s:7:\"example\";s:11:\"DemoDataset\";}s:14:\"image_url_keys\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"imageURL\";}s:11:\"description\";s:61:\"The
  keys of the fields containing image_urls for the dataset.\";s:8:\"required\";b:1;}}}s:14:\"CreateLayerDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:10:\"layer_name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"layer_name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  name of the layer\";s:8:\"required\";b:1;s:7:\"example\";s:10:\"test_layer\";}s:12:\"layer_fields\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:39:\"A
  list of the fields used by this layer\";s:7:\"example\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"image_url\";}}}s:4:\"name\";s:4:\"body\";}s:14:\"UpdateLayerDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:10:\"layer_name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"layer_name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  name of the layer\";s:8:\"required\";b:1;s:7:\"example\";s:13:\"updated_layer\";}s:12:\"layer_fields\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:39:\"A
  list of the fields used by this layer\";s:7:\"example\";a:2:{i:0;s:12:\"updated_name\";i:1;s:17:\"updated_image_url\";}}}s:4:\"name\";s:4:\"body\";}s:21:\"UpdateLayerMappingDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"field_mappings\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:58:\"Layer
  field to dataset field mappings keyed by dataset id.\";s:7:\"example\";O:8:\"stdClass\":1:{s:4:\"name\";s:11:\"productName\";}}}s:4:\"name\";s:4:\"body\";}s:11:\"NewSpaceDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  name of the space\";s:8:\"required\";b:1;s:7:\"example\";s:9:\"DemoSpace\";}}s:4:\"name\";s:4:\"body\";}s:13:\"PatchSpaceDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  name of the space\";s:8:\"required\";b:1;s:7:\"example\";s:12:\"Updated Name\";}s:9:\"is_active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:33:\"Whether
  a space is active or not.\";}}s:4:\"name\";s:4:\"body\";}s:8:\"SpaceDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:10:\"account_id\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:2:\"id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"The
  space id\";s:8:\"required\";b:1;s:7:\"example\";s:22:\"rCTSndt6ExsekyCP75rEPc\";}s:4:\"name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  name of the space\";s:8:\"required\";b:1;s:7:\"example\";s:9:\"DemoSpace\";}s:10:\"account_id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:34:\"The
  account id that owns the space\";s:8:\"required\";b:1;s:7:\"example\";s:8:\"test_inc\";}}}s:17:\"CreateWorkflowDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:13:\"workflow_name\";i:1;s:23:\"workflow_weld_statement\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"workflow_name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  name of the workflow\";s:8:\"required\";b:1;s:7:\"example\";s:13:\"test_workflow\";}s:23:\"workflow_weld_statement\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"The
  combination of operations and operators\";s:8:\"required\";b:1;s:7:\"example\";s:94:\"SOME(DetectLogos,
  ClassifyPatterns) THEN TextSearch WITH(dataset_id=\"4AAQSkZJRgABAQAAAQABAAD\")\";}}s:4:\"name\";s:4:\"body\";}s:17:\"UpdateWorkflowDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"workflow_name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  name of the workflow\";s:7:\"example\";s:16:\"updated_workflow\";}s:23:\"workflow_weld_statement\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"The
  combination of operations and operators\";s:7:\"example\";s:99:\"ALL(DetectBarcodes,
  ClassifyColors) OTHERWISE TextSearch WITH(dataset_id=\"4AAQSkZJRgABAQAAAQABAAD\")\";}}s:4:\"name\";s:4:\"body\";}s:18:\"ExecuteWorkflowDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"image_bytes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:45:\"The
  base64 encoded string of the image bytes.\";s:7:\"example\";s:28:\"4AAQSkZJRgABAQAAAQABAAD.....\";}s:9:\"image_url\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  url of the image.\";s:7:\"example\";s:82:\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png\";}s:16:\"workflow_options\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:47:\"Any
  options for the workflow to use at runtime.\";s:7:\"example\";O:8:\"stdClass\":1:{s:6:\"gender\";s:6:\"female\";}}s:9:\"demo_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:52:\"Return
  data without actually running the operations.\";s:7:\"example\";b:0;}}s:4:\"name\";s:4:\"body\";}s:13:\"CreateLensDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:9:\"lens_name\";i:1;s:15:\"local_detectors\";i:2;s:8:\"template\";i:3;s:11:\"workflow_id\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"lens_name\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"The
  name of the lens\";s:8:\"required\";b:1;s:7:\"example\";s:9:\"test_lens\";}s:12:\"capture_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"The
  capture mode of the lens\";s:7:\"example\";s:10:\"continuous\";}s:15:\"local_detectors\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"2D\";}s:11:\"description\";s:21:\"An
  array of detectors\";s:8:\"required\";b:1;}s:8:\"template\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  template to be used\";s:8:\"required\";b:1;s:7:\"example\";s:8:\"slyce.2d\";}s:11:\"workflow_id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  id of the associated workflow\";s:8:\"required\";b:1;s:7:\"example\";s:22:\"2r4aRUk6xTyoCgMz9sGfa3\";}}s:4:\"name\";s:4:\"body\";}s:13:\"UpdateLensDoc\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":5:{s:9:\"lens_name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:73:\"optional
  to update the name of the lens. Do not include to leave the same\";s:7:\"example\";s:12:\"updated_lens\";}s:12:\"capture_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:81:\"optional
  to update the capture mode of the lens. Do not include to leave the same\";s:7:\"example\";s:11:\"tapToSearch\";}s:15:\"local_detectors\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"2D\";}s:11:\"description\";s:84:\"optional
  to update the local detectors of the lens. Do not include to leave the same\";s:8:\"required\";N;}s:8:\"template\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:77:\"optional
  to update the template of the lens. Do not include to leave the same\";s:7:\"example\";s:8:\"slyce.2d\";}s:11:\"workflow_id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:77:\"optional
  to update the workflow of the lens. Do not include to leave the same\";s:7:\"example\";s:22:\"2r4aRUk6xTyoCgMz9sGfa3\";}}s:4:\"name\";s:4:\"body\";}s:10:\"AccountDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:14:\"The
  account id\";s:7:\"example\";s:8:\"test_inc\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  name of the account\";s:7:\"example\";s:10:\"Test, Inc.\";}s:9:\"is_active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:36:\"Whether
  an account is active or not.\";}}}s:25:\"AnalyticsEventTrackingDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"sessionData\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:36:\"#/definitions/AnalyticsEventTracking\";}s:10:\"eventQueue\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:28:\"#/definitions/AnalyticsEvent\";}s:11:\"description\";N;s:8:\"required\";N;}}}s:14:\"DatasetItemDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"imageURL\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:8:\"imageURL\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:53:\"A
  field mapped to the image_url_keys for this dataset\";s:8:\"required\";b:1;s:7:\"example\";s:63:\"https://upload.wikimedia.org/wikipedia/en/d/d4/Mickey_Mouse.png\";}s:5:\"title\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Other
  field example\";s:8:\"required\";b:0;s:7:\"example\";s:12:\"Mickey Mouse\";}}}s:17:\"NewDatasetItemDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:8:\"imageURL\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"imageURL\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:53:\"A
  field mapped to the image_url_keys for this dataset\";s:8:\"required\";b:1;s:7:\"example\";s:63:\"https://upload.wikimedia.org/wikipedia/en/d/d4/Mickey_Mouse.png\";}s:5:\"title\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Other
  field example\";s:8:\"required\";b:0;s:7:\"example\";s:12:\"Mickey Mouse\";}}}s:8:\"LayerDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":8:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"The
  id of the layer\";s:7:\"example\";s:22:\"2r4aRUk6xTyoCgMz9sGfa3\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:21:\"The
  name of the layer\";s:7:\"example\";s:10:\"test_layer\";}s:6:\"fields\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";a:0:{}s:11:\"description\";s:39:\"A
  list of the fields used by this layer\";s:8:\"required\";N;}s:8:\"mappings\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:11:\"description\";s:58:\"Layer
  field to dataset field mappings keyed by dataset id.\";s:7:\"example\";O:8:\"stdClass\":1:{s:22:\"3s5bSVl7yUzpDhN0atHgb4\";O:8:\"stdClass\":1:{s:4:\"name\";s:11:\"productName\";}}}}}s:22:\"BaseClassifierConsumes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"demo_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Used
  to toggle demo mode\";s:7:\"example\";b:1;}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:19:\"#/definitions/Image\";}s:8:\"settings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:32:\"#/definitions/ClassifierSettings\";}}}s:20:\"BaseDetectorConsumes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"demo_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Used
  to toggle demo mode\";s:7:\"example\";b:1;}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:19:\"#/definitions/Image\";}s:6:\"anchor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:20:\"#/definitions/Anchor\";}s:8:\"settings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:30:\"#/definitions/DetectorSettings\";}}}s:29:\"DetectReferenceImagesConsumes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"demo_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Used
  to toggle demo mode\";s:7:\"example\";b:1;}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:19:\"#/definitions/Image\";}s:8:\"settings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:32:\"#/definitions/BaseSearchSettings\";}}}s:18:\"BaseSearchConsumes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"demo_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Used
  to toggle demo mode\";s:7:\"example\";b:1;}s:8:\"settings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:28:\"#/definitions/SearchSettings\";}}}s:20:\"VisualSearchConsumes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"demo_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:24:\"Used
  to toggle demo mode\";s:7:\"example\";b:1;}s:8:\"settings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:34:\"#/definitions/VisualSearchSettings\";}s:5:\"image\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:19:\"#/definitions/Image\";}s:6:\"anchor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:4:\"$ref\";s:20:\"#/definitions/Anchor\";}}}s:11:\"WorkflowDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:0:{}s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:22:\"The
  id of the workflow\";s:7:\"example\";s:22:\"2r4aRUk6xTyoCgMz9sGfa3\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:24:\"The
  name of the workflow\";s:7:\"example\";s:13:\"test_workflow\";}s:14:\"weld_statement\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:43:\"The
  combination of operations and operators\";s:7:\"example\";s:94:\"SOME(DetectLogos,
  ClassifyPatterns) THEN TextSearch WITH(dataset_id=\"4AAQSkZJRgABAQAAAQABAAD\")\";}}}s:7:\"LensDoc\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:15:\"local_detectors\";i:1;s:8:\"template\";i:2;s:11:\"workflow_id\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:10:\"created_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:34:\"The
  timestamp the item was created\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"created_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:30:\"The
  user that created the item\";s:7:\"example\";s:6:\"system\";}s:10:\"updated_at\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:39:\"The
  timestamp the item was last updated\";s:7:\"example\";s:31:\"2018-01-04T20:13:55.373557+0000\";}s:10:\"updated_by\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:35:\"The
  user that last updated the item\";s:7:\"example\";s:6:\"system\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:18:\"The
  id of the lens\";s:7:\"example\";s:22:\"2r4aRUk6xTyoCgMz9sGfa3\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"The
  name of the lens\";s:7:\"example\";s:5:\"Lens1\";}s:12:\"capture_mode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:28:\"The
  capture mode of the lens\";s:7:\"example\";s:10:\"continuous\";}s:15:\"local_detectors\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"2D\";}s:11:\"description\";s:21:\"An
  array of detectors\";s:8:\"required\";b:1;}s:8:\"template\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"The
  template to be used\";s:8:\"required\";b:1;s:7:\"example\";s:8:\"slyce.2d\";}s:11:\"workflow_id\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"The
  id of the associated workflow\";s:8:\"required\";b:1;s:7:\"example\";s:22:\"2r4aRUk6xTyoCgMz9sGfa3\";}}}}"
...
