---
openapi: 3.0.0
info: !php/object "O:8:\"stdClass\":11:{s:7:\"contact\";O:8:\"stdClass\":2:{s:5:\"email\";s:28:\"support@targetvalidation.org\";s:4:\"name\";s:26:\"Open
  Targets Platform team\";}s:11:\"description\";s:3760:\"### The Open Targets Platform
  REST API\n\nThe Open Targets Platform API ('Application Programming Interface')\nallows
  programmatic retrieval of our data via a set of\n[REST](https://en.wikipedia.org/wiki/Representational_state_transfer)\nservices.\n\nYou
  can make calls to the latest version of our API using the base URL\n`https://api.opentargets.io/v3/platform`.
  Please make sure you use `https`\ninstead of the unencrypted `http` calls, which
  we do not accept.\n\nContinue reading below or [try query in the interactive interface](https://api.opentargets.io/v3/platform/docs/swagger-ui)\n\nNote
  that we only serve the latest version of the API. If you are interested in querying
  an\nold version, please [get in touch](mailto:support@targetvalidation.org) so that\nwe
  can help.\n\nWe list below the methods available for you to query our data directly
  from the API. These methods will be\nautomatically generated from our Swagger UI.
  For every request you create, the interface will display a [curl](https://curl.haxx.se/)
  command\nthat you can copy and paste directly to a shell to obtain the same results
  without using an internet browser.\n\nCheck our [API blog posts](https://blog.opentargets.org/tag/api),
  for tutorials and additional\ninformation on how to access of our data programmatically.\n\n###
  Available Methods\n\nThe available methods can be grouped in four types:\n\n* __public__
  - Methods that serve the core set of our data. These are stable and we fully supported
  them.\n* __private__ - Methods used by the web app to serve additional data not
  specific to our platform. These methods\nmay change without notice and should be
  used with caution.\n* __utils__ - Methods to get statistics and technical data about
  our API.\n\n### Supported formats\n\nThe four methods above are all available via
  a `GET` request, and will serve outputs as `JSON`.\nAlternative output formats such
  `xml`, `csv` and `tab` are also available for some of the methods.\nPlease note
  that alternative output formats are not supported in this interactive page. The
  response here will always be in `json` format.\n\nIf you have complex queries with
  large number of parameters, you should\nuse a `POST` request instead of  `GET`.
  `POST` methods require a body encoded as `json`.\nWhen querying for a specific disease
  using the latest version of the API, your call would look like the example below:\n\n```sh\ncurl
  -X POST -d '{\"disease\":[\"EFO_0000253\"]}' --header 'Content-Type: application/json'
  https://api.opentargets.io/v3/platform/public/evidence/filter\n```\n### How to interpret
  a response\n\nEach HTTP response will serve data in headers and body.\nThe headers
  will give you details about your query, such as how long it took to run, and how
  much usage you have left (See the 'Fair Usage\nand API keys' section below for more
  details).\n\nIn the body of the response, you will find the data you have requested
  for in a `json` format. The\n[jq](https://stedolan.github.io/jq/) program is a useful
  tool to parse the json response while on the command line.\n\n```sh\ncurl https://api.opentargets.io/v3/platform/public/association/filter\\?target\\=ENSG00000157764
  | jq\n```\n\nWe do not analyse the nature of any specific API queries except for
  the purposes of improving the performance of our API.\nRead more in our [privacy
  section](https://www.targetvalidation.org/terms_of_use#privacy).\n\nHow can we make
  the Open Targets Platform API more useful to you? Would you like additional methods
  to be implemented?\nPlease [get in touch](mailto:support@targetvalidation.org) and
  send your suggestions.\n\n### More examples\nCheck our [Getting started tutorial](https://blog.opentargets.org/api-getting-started-1)
  for more\nexamples on how to use the API and for some code snippets, which can be
  used to construct more complex queries.\n\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}s:14:\"termsOfService\";s:135:\"Fair
  usage is enforced with limits to the api calls. Consistently exceeding the fair
  usage limits will trigger at\nleast a 24 hour ban.\n\";s:5:\"title\";s:21:\"Open
  Targets Platform\";s:7:\"version\";s:5:\"3.0.2\";s:21:\"x-apisguru-categories\";a:1:{i:0;s:9:\"open_data\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:98:\"https://api.apis.guru/v2/cache/logo/https_www.targetvalidation.org_imgs_logo_ot_logo_webheader.svg\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":3:{s:6:\"format\";s:7:\"swagger\";s:3:\"url\";s:45:\"http://api.opentargets.io/v3/platform/swagger\";s:7:\"version\";s:3:\"2.0\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"opentargets.io\";}"
paths: []
...
