---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:5:\"title\";s:12:\"ToDo service\";s:7:\"version\";s:3:\"1.0\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:27:\"grpc-todo-rest-microservice\";s:3:\"url\";s:54:\"https://github.com/jiangew/grpc-todo-rest-microservice\";s:5:\"email\";s:18:\"jiangew@aliyun.com\";}}"
paths:
  /v1/todo:
    post:
      summary: Create new todo task
      operationId: Create
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateResponse'
        404:
          description: Returned when the resource does not exist.
          schema:
            format: string
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1CreateRequest'
      tags:
      - ToDoService
  /v1/todo/all:
    get:
      summary: Read all todo tasks
      operationId: ReadAll
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ReadAllResponse'
        404:
          description: Returned when the resource does not exist.
          schema:
            format: string
      parameters:
      - name: api
        description: 'API versioning: it is my best practice to specify version explicitly.'
        in: query
        required: false
        type: string
      tags:
      - ToDoService
  /v1/todo/{id}:
    get:
      summary: Read todo task
      operationId: Read
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ReadResponse'
        404:
          description: Returned when the resource does not exist.
          schema:
            format: string
      parameters:
      - name: id
        description: Unique integer identifier of the todo task
        in: path
        required: true
        type: string
        format: int64
      - name: api
        description: 'API versioning: it is my best practice to specify version explicitly.'
        in: query
        required: false
        type: string
      tags:
      - ToDoService
    delete:
      summary: Delete todo task
      operationId: Delete
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteResponse'
        404:
          description: Returned when the resource does not exist.
          schema:
            format: string
      parameters:
      - name: id
        description: Unique integer identifier of the todo task to delete
        in: path
        required: true
        type: string
        format: int64
      - name: api
        description: 'API versioning: it is my best practice to specify version explicitly.'
        in: query
        required: false
        type: string
      tags:
      - ToDoService
  /v1/todo/{toDo.id}:
    put:
      summary: Update todo task
      operationId: Update
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateResponse'
        404:
          description: Returned when the resource does not exist.
          schema:
            format: string
      parameters:
      - name: toDo.id
        description: Unique integer identifier of the todo task
        in: path
        required: true
        type: string
        format: int64
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1UpdateRequest'
      tags:
      - ToDoService
    patch:
      summary: Update todo task
      operationId: Update2
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateResponse'
        404:
          description: Returned when the resource does not exist.
          schema:
            format: string
      parameters:
      - name: toDo.id
        description: Unique integer identifier of the todo task
        in: path
        required: true
        type: string
        format: int64
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1UpdateRequest'
      tags:
      - ToDoService
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":8:{s:15:\"v1CreateRequest\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:4:\"toDo\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/v1ToDo\";s:5:\"title\";s:18:\"Task
  entity to add\";}}s:5:\"title\";s:36:\"Request data to create new todo task\";}s:16:\"v1CreateResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"int64\";s:5:\"title\";s:18:\"ID
  of created task\";}}s:5:\"title\";s:34:\"Contains data of created todo task\";}s:16:\"v1DeleteResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:7:\"deleted\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"int64\";s:5:\"title\";s:83:\"Contains
  number of entities have beed deleted\nEquals 1 in case of succesfull delete\";}}s:5:\"title\";s:35:\"Contains
  status of delete operation\";}s:17:\"v1ReadAllResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:5:\"toDos\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/v1ToDo\";}s:5:\"title\";s:22:\"List
  of all todo tasks\";}}s:5:\"title\";s:31:\"Contains list of all todo tasks\";}s:14:\"v1ReadResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:4:\"toDo\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/v1ToDo\";s:5:\"title\";s:22:\"Task
  entity read by ID\";}}s:5:\"title\";s:50:\"Contains todo task data specified in
  by ID request\";}s:6:\"v1ToDo\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"int64\";s:5:\"title\";s:42:\"Unique
  integer identifier of the todo task\";}s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:17:\"Title
  of the task\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:35:\"Detail
  description of the todo task\";}s:8:\"reminder\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:5:\"title\";s:37:\"Date
  and time to remind the todo task\";}}s:5:\"title\";s:18:\"Task we have to do\";}s:15:\"v1UpdateRequest\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:4:\"toDo\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/v1ToDo\";s:5:\"title\";s:21:\"Task
  entity to update\";}}s:5:\"title\";s:32:\"Request data to update todo task\";}s:16:\"v1UpdateResponse\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"api\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:68:\"API
  versioning: it is my best practice to specify version explicitly\";}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:5:\"int64\";s:5:\"title\";s:83:\"Contains
  number of entities have beed updated\nEquals 1 in case of succesfull update\";}}s:5:\"title\";s:35:\"Contains
  status of update operation\";}}"
...
