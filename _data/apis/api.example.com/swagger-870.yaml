---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:7:\"version\";s:2:\"v1\";s:5:\"title\";s:13:\"GiveNTake.API\";}"
paths:
  /api/Account/register:
    post:
      tags:
      - Account
      operationId: Register
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: registration
        in: body
        required: false
        schema:
          $ref: '#/definitions/RegisterUserDTO'
      responses:
        200:
          description: Success
  /api/Account/login:
    post:
      tags:
      - Account
      operationId: Login
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: login
        in: body
        required: false
        schema:
          $ref: '#/definitions/LoginUserDTO'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessfulLoginResult'
  /api/Account/Email:
    get:
      tags:
      - Account
      operationId: GetEmail
      consumes: []
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Success
          schema:
            type: string
  /api/Products/all:
    get:
      tags:
      - Products
      operationId: GetProducts
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters: []
      responses:
        200:
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ProductDTO'
  /api/Products:
    get:
      tags:
      - Products
      operationId: GetProducts
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters: []
      responses:
        200:
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ProductDTO'
    post:
      tags:
      - Products
      operationId: AddNewProduct
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - text/plain
      - application/json
      - text/json
      parameters:
      - name: newProduct
        in: body
        required: false
        schema:
          $ref: '#/definitions/NewProductDTO'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ProductDTO'
  /api/Products/categories:
    get:
      tags:
      - Products
      operationId: GetCategories
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters: []
      responses:
        200:
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/CategoryDTO'
    post:
      tags:
      - Products
      operationId: AddCategory
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: newCategory
        in: body
        required: false
        schema:
          $ref: '#/definitions/NewCategoryDTO'
      responses:
        200:
          description: Success
  /api/Products/cities:
    get:
      tags:
      - Products
      operationId: GetCities
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters: []
      responses:
        200:
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              type: string
  /api/Products/search/{keyword}:
    get:
      tags:
      - Products
      operationId: SearchProducts
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters:
      - name: keyword
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ProductDTO'
  /api/Products/{id}:
    get:
      tags:
      - Products
      operationId: GetProduct
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ProductDTO'
  /api/Products/searchcategory/{category}/{subcategory}:
    get:
      tags:
      - Products
      operationId: SearchByCategory
      consumes: []
      produces:
      - text/plain
      - application/json
      - text/json
      parameters:
      - name: category
        in: path
        required: true
        type: string
      - name: subcategory
        in: query
        required: false
        type: string
      - name: location
        in: query
        required: false
        type: string
        default: all
      - name: imageOnly
        in: query
        required: false
        type: boolean
        default: false
      responses:
        200:
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ProductDTO'
  /api/Products/categories2:
    post:
      tags:
      - Products
      operationId: AddCategory2
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: newCategory
        in: body
        required: false
        schema:
          $ref: '#/definitions/NewCategoryDTO'
      responses:
        200:
          description: Success
  /api/Products/error:
    get:
      tags:
      - Products
      operationId: ThrowError
      consumes: []
      produces: []
      parameters: []
      responses:
        200:
          description: Success
definitions: !php/object "O:8:\"stdClass\":11:{s:15:\"RegisterUserDTO\";O:8:\"stdClass\":3:{s:8:\"required\";a:2:{i:0;s:5:\"email\";i:1;s:8:\"password\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":4:{s:6:\"format\";s:8:\"password\";s:9:\"maxLength\";i:100;s:9:\"minLength\";i:6;s:4:\"type\";s:6:\"string\";}s:15:\"confirmPassword\";O:8:\"stdClass\":2:{s:6:\"format\";s:8:\"password\";s:4:\"type\";s:6:\"string\";}}}s:12:\"LoginUserDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"SuccessfulLoginResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"ProductDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:9:\"productId\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/OwnerDTO\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"subcategory\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"city\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/CityDTO\";}s:5:\"media\";O:8:\"stdClass\":3:{s:11:\"uniqueItems\";b:0;s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/MediaDTO\";}}}}s:8:\"OwnerDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"CityDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"MediaDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"NewProductDTO\";O:8:\"stdClass\":3:{s:8:\"required\";a:4:{i:0;s:5:\"title\";i:1;s:8:\"category\";i:2;s:11:\"subcategory\";i:3;s:4:\"city\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"title\";O:8:\"stdClass\":3:{s:9:\"maxLength\";i:50;s:9:\"minLength\";i:3;s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:9:\"maxLength\";i:50;s:4:\"type\";s:6:\"string\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"subcategory\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"city\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"CategoryDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"subcategories\";O:8:\"stdClass\":3:{s:11:\"uniqueItems\";b:0;s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/SubCategoryDTO\";}}}}s:14:\"SubCategoryDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"NewCategoryDTO\";O:8:\"stdClass\":3:{s:8:\"required\";a:1:{i:0;s:12:\"categoryName\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"categoryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"subcategoryName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
