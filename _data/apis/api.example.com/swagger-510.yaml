---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:45:\"Kubernetes /apis/authorization.k8s.io/v1beta1\";s:7:\"version\";s:11:\"unversioned\";}"
paths:
  /apis/authorization.k8s.io/v1beta1/:
    get:
      description: get available resources
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      schemes:
      - https
      operationId: getAPIResources
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/unversioned.APIResourceList'
        401:
          description: Unauthorized
  /apis/authorization.k8s.io/v1beta1/namespaces/{namespace}/localsubjectaccessreviews:
    post:
      description: create a LocalSubjectAccessReview
      consumes:
      - '*/*'
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      schemes:
      - https
      operationId: createNamespacedLocalSubjectAccessReview
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/v1beta1.LocalSubjectAccessReview'
        401:
          description: Unauthorized
    parameters:
    - name: body
      in: body
      required: true
      schema:
        $ref: '#/definitions/v1beta1.LocalSubjectAccessReview'
    - uniqueItems: true
      type: string
      description: object name and auth scope, such as for teams and projects
      name: namespace
      in: path
      required: true
    - uniqueItems: true
      type: string
      description: If 'true', then the output is pretty printed.
      name: pretty
      in: query
  /apis/authorization.k8s.io/v1beta1/selfsubjectaccessreviews:
    post:
      description: create a SelfSubjectAccessReview
      consumes:
      - '*/*'
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      schemes:
      - https
      operationId: createSelfSubjectAccessReview
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/v1beta1.SelfSubjectAccessReview'
        401:
          description: Unauthorized
    parameters:
    - name: body
      in: body
      required: true
      schema:
        $ref: '#/definitions/v1beta1.SelfSubjectAccessReview'
    - uniqueItems: true
      type: string
      description: If 'true', then the output is pretty printed.
      name: pretty
      in: query
  /apis/authorization.k8s.io/v1beta1/subjectaccessreviews:
    post:
      description: create a SubjectAccessReview
      consumes:
      - '*/*'
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      schemes:
      - https
      operationId: createSubjectAccessReview
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/v1beta1.SubjectAccessReview'
        401:
          description: Unauthorized
    parameters:
    - name: body
      in: body
      required: true
      schema:
        $ref: '#/definitions/v1beta1.SubjectAccessReview'
    - uniqueItems: true
      type: string
      description: If 'true', then the output is pretty printed.
      name: pretty
      in: query
definitions: !php/object "O:8:\"stdClass\":13:{s:23:\"unversioned.APIResource\";O:8:\"stdClass\":3:{s:11:\"description\";s:74:\"APIResource
  specifies the name of a resource and whether it is namespaced.\";s:8:\"required\";a:3:{i:0;s:4:\"name\";i:1;s:10:\"namespaced\";i:2;s:4:\"kind\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"kind\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"kind
  is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"name
  is the name of the resource.\";s:4:\"type\";s:6:\"string\";}s:10:\"namespaced\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"namespaced
  indicates if a resource is namespaced or not.\";s:4:\"type\";s:7:\"boolean\";}}}s:27:\"unversioned.APIResourceList\";O:8:\"stdClass\":3:{s:11:\"description\";s:166:\"APIResourceList
  is a list of APIResource, it is used to expose the name of the resources supported
  in a specific group and version, and if the resource is namespaced.\";s:8:\"required\";a:2:{i:0;s:12:\"groupVersion\";i:1;s:9:\"resources\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:12:\"groupVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:66:\"groupVersion
  is the group and version this APIResourceList is for.\";s:4:\"type\";s:6:\"string\";}s:9:\"resources\";O:8:\"stdClass\":3:{s:11:\"description\";s:72:\"resources
  contains the name of the resources and if they are namespaced.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/unversioned.APIResource\";}}}}s:16:\"unversioned.Time\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"v1.ObjectMeta\";O:8:\"stdClass\":2:{s:11:\"description\";s:108:\"ObjectMeta
  is metadata that all persisted resources must have, which includes all objects users
  must create.\";s:10:\"properties\";O:8:\"stdClass\":15:{s:11:\"annotations\";O:8:\"stdClass\":3:{s:11:\"description\";s:274:\"Annotations
  is an unstructured key value map stored with a resource that may be set by external
  tools to store and retrieve arbitrary metadata. They are not queryable and should
  be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\";s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"clusterName\";O:8:\"stdClass\":2:{s:11:\"description\";s:255:\"The
  name of the cluster which the object belongs to. This is used to distinguish resources
  with same name and namespace in different clusters. This field is not set anywhere
  right now and apiserver is going to ignore it if set in create or update request.\";s:4:\"type\";s:6:\"string\";}s:17:\"creationTimestamp\";O:8:\"stdClass\":2:{s:11:\"description\";s:386:\"CreationTimestamp
  is a timestamp representing the server time when this object was created. It is
  not guaranteed to be set in happens-before order across separate operations. Clients
  may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated
  by the system. Read-only. Null for lists. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata\";s:4:\"$ref\";s:30:\"#/definitions/unversioned.Time\";}s:26:\"deletionGracePeriodSeconds\";O:8:\"stdClass\":3:{s:11:\"description\";s:187:\"Number
  of seconds allowed for this object to gracefully terminate before it will be removed
  from the system. Only set when deletionTimestamp is also set. May only be shortened.
  Read-only.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"deletionTimestamp\";O:8:\"stdClass\":2:{s:11:\"description\";s:978:\"DeletionTimestamp
  is RFC 3339 date and time at which this resource will be deleted. This field is
  set by the server when a graceful deletion is requested by the user, and is not
  directly settable by a client. The resource will be deleted (no longer visible from
  resource lists, and not reachable by name) after the time in this field. Once set,
  this value may not be unset or be set further into the future, although it may be
  shortened or the resource may be deleted prior to this time. For example, a user
  may request that a pod is deleted in 30 seconds. The Kubelet will react by sending
  a graceful termination signal to the containers in the pod. Once the resource is
  deleted in the API, the Kubelet will send a hard termination signal to the container.
  If not set, graceful deletion of the object has not been requested.\n\nPopulated
  by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata\";s:4:\"$ref\";s:30:\"#/definitions/unversioned.Time\";}s:10:\"finalizers\";O:8:\"stdClass\":3:{s:11:\"description\";s:254:\"Must
  be empty before the object is deleted from the registry. Each entry is an identifier
  for the responsible component that will remove the entry from the list. If the deletionTimestamp
  of the object is non-nil, entries in this list can only be removed.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"generateName\";O:8:\"stdClass\":2:{s:11:\"description\";s:893:\"GenerateName
  is an optional prefix, used by the server, to generate a unique name ONLY IF the
  Name field has not been provided. If this field is used, the name returned to the
  client will be different than the name passed. This value will also be combined
  with a unique suffix. The provided value has the same validation rules as the Name
  field, and may be truncated by the length of the suffix required to make the value
  unique on the server.\n\nIf this field is specified and the generated name exists,
  the server will NOT return a 409 - instead, it will either return 201 Created or
  500 with Reason ServerTimeout indicating a unique name could not be found in the
  time allotted, and the client should retry (optionally after the time indicated
  in the Retry-After header).\n\nApplied only if Name is not specified. More info:
  http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency\";s:4:\"type\";s:6:\"string\";}s:10:\"generation\";O:8:\"stdClass\":3:{s:11:\"description\";s:110:\"A
  sequence number representing a specific generation of the desired state. Populated
  by the system. Read-only.\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"labels\";O:8:\"stdClass\":3:{s:11:\"description\";s:217:\"Map
  of string keys and values that can be used to organize and categorize (scope and
  select) objects. May match selectors of replication controllers and services. More
  info: http://kubernetes.io/docs/user-guide/labels\";s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:350:\"Name
  must be unique within a namespace. Is required when creating resources, although
  some resources may allow a client to request the generation of an appropriate name
  automatically. Name is primarily intended for creation idempotence and configuration
  definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\";s:4:\"type\";s:6:\"string\";}s:9:\"namespace\";O:8:\"stdClass\":2:{s:11:\"description\";s:384:\"Namespace
  defines the space within each name must be unique. An empty namespace is equivalent
  to the \"default\" namespace, but \"default\" is the canonical representation. Not
  all objects are required to be scoped to a namespace - the value of this field for
  those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info:
  http://kubernetes.io/docs/user-guide/namespaces\";s:4:\"type\";s:6:\"string\";}s:15:\"ownerReferences\";O:8:\"stdClass\":3:{s:11:\"description\";s:316:\"List
  of objects depended by this object. If ALL objects in the list have been deleted,
  this object will be garbage collected. If this object is managed by a controller,
  then an entry in this list will point to this controller, with the controller field
  set to true. There cannot be more than one managing controller.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/v1.OwnerReference\";}}s:15:\"resourceVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:597:\"An
  opaque value that represents the internal version of this object that can be used
  by clients to determine when objects have changed. May be used for optimistic concurrency,
  change detection, and the watch operation on a resource or set of resources. Clients
  must treat these values as opaque and passed unmodified back to the server. They
  may only be valid for a particular resource or set of resources.\n\nPopulated by
  the system. Read-only. Value must be treated as opaque by clients and . More info:
  http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency\";s:4:\"type\";s:6:\"string\";}s:8:\"selfLink\";O:8:\"stdClass\":2:{s:11:\"description\";s:79:\"SelfLink
  is a URL representing this object. Populated by the system. Read-only.\";s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":2:{s:11:\"description\";s:285:\"UID
  is the unique in time and space value for this object. It is typically generated
  by the server on successful creation of a resource and is not allowed to change
  on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\";s:4:\"type\";s:6:\"string\";}}}s:17:\"v1.OwnerReference\";O:8:\"stdClass\":3:{s:11:\"description\";s:171:\"OwnerReference
  contains enough information to let you identify an owning object. Currently, an
  owning object must be in the same namespace, so there is no namespace field.\";s:8:\"required\";a:4:{i:0;s:10:\"apiVersion\";i:1;s:4:\"kind\";i:2;s:4:\"name\";i:3;s:3:\"uid\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:10:\"apiVersion\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"API
  version of the referent.\";s:4:\"type\";s:6:\"string\";}s:10:\"controller\";O:8:\"stdClass\":2:{s:11:\"description\";s:58:\"If
  true, this reference points to the managing controller.\";s:4:\"type\";s:7:\"boolean\";}s:4:\"kind\";O:8:\"stdClass\":2:{s:11:\"description\";s:102:\"Kind
  of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:87:\"Name
  of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\";s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"UID
  of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\";s:4:\"type\";s:6:\"string\";}}}s:32:\"v1beta1.LocalSubjectAccessReview\";O:8:\"stdClass\":3:{s:11:\"description\";s:231:\"LocalSubjectAccessReview
  checks whether or not a user or group can perform an action in a given namespace.
  Having a namespace scoped resource makes it much easier to grant namespace scoped
  policy that includes permissions checking.\";s:8:\"required\";a:1:{i:0;s:4:\"spec\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/v1.ObjectMeta\";}s:4:\"spec\";O:8:\"stdClass\":2:{s:11:\"description\";s:162:\"Spec
  holds information about the request being evaluated.  spec.namespace must be equal
  to the namespace you made the request against.  If empty, it is defaulted.\";s:4:\"$ref\";s:45:\"#/definitions/v1beta1.SubjectAccessReviewSpec\";}s:6:\"status\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"Status
  is filled in by the server and indicates whether the request is allowed or not\";s:4:\"$ref\";s:47:\"#/definitions/v1beta1.SubjectAccessReviewStatus\";}}}s:29:\"v1beta1.NonResourceAttributes\";O:8:\"stdClass\":2:{s:11:\"description\";s:123:\"NonResourceAttributes
  includes the authorization attributes available for non-resource requests to the
  Authorizer interface\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"path\";O:8:\"stdClass\":2:{s:11:\"description\";s:35:\"Path
  is the URL path of the request\";s:4:\"type\";s:6:\"string\";}s:4:\"verb\";O:8:\"stdClass\":2:{s:11:\"description\";s:30:\"Verb
  is the standard HTTP verb\";s:4:\"type\";s:6:\"string\";}}}s:26:\"v1beta1.ResourceAttributes\";O:8:\"stdClass\":2:{s:11:\"description\";s:116:\"ResourceAttributes
  includes the authorization attributes available for resource requests to the Authorizer
  interface\";s:10:\"properties\";O:8:\"stdClass\":7:{s:5:\"group\";O:8:\"stdClass\":2:{s:11:\"description\";s:55:\"Group
  is the API Group of the Resource.  \"*\" means all.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:109:\"Name
  is the name of the resource being requested for a \"get\" or deleted for a \"delete\".
  \"\" (empty) means all.\";s:4:\"type\";s:6:\"string\";}s:9:\"namespace\";O:8:\"stdClass\":2:{s:11:\"description\";s:344:\"Namespace
  is the namespace of the action being requested.  Currently, there is no distinction
  between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews
  \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for
  namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview\";s:4:\"type\";s:6:\"string\";}s:8:\"resource\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"Resource
  is one of the existing resource types.  \"*\" means all.\";s:4:\"type\";s:6:\"string\";}s:11:\"subresource\";O:8:\"stdClass\":2:{s:11:\"description\";s:66:\"Subresource
  is one of the existing resource types.  \"\" means none.\";s:4:\"type\";s:6:\"string\";}s:4:\"verb\";O:8:\"stdClass\":2:{s:11:\"description\";s:110:\"Verb
  is a kubernetes resource API verb, like: get, list, watch, create, update, delete,
  proxy.  \"*\" means all.\";s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":2:{s:11:\"description\";s:59:\"Version
  is the API Version of the Resource.  \"*\" means all.\";s:4:\"type\";s:6:\"string\";}}}s:31:\"v1beta1.SelfSubjectAccessReview\";O:8:\"stdClass\":3:{s:11:\"description\";s:246:\"SelfSubjectAccessReview
  checks whether or the current user can perform an action.  Not filling in a spec.namespace
  means \"in all namespaces\".  Self is a special case, because users should always
  be able to check whether they can perform an action\";s:8:\"required\";a:1:{i:0;s:4:\"spec\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/v1.ObjectMeta\";}s:4:\"spec\";O:8:\"stdClass\":2:{s:11:\"description\";s:88:\"Spec
  holds information about the request being evaluated.  user and groups must be empty\";s:4:\"$ref\";s:49:\"#/definitions/v1beta1.SelfSubjectAccessReviewSpec\";}s:6:\"status\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"Status
  is filled in by the server and indicates whether the request is allowed or not\";s:4:\"$ref\";s:47:\"#/definitions/v1beta1.SubjectAccessReviewStatus\";}}}s:35:\"v1beta1.SelfSubjectAccessReviewSpec\";O:8:\"stdClass\":2:{s:11:\"description\";s:166:\"SelfSubjectAccessReviewSpec
  is a description of the access request.  Exactly one of ResourceAuthorizationAttributes
  and NonResourceAuthorizationAttributes must be set\";s:10:\"properties\";O:8:\"stdClass\":2:{s:21:\"nonResourceAttributes\";O:8:\"stdClass\":2:{s:11:\"description\";s:77:\"NonResourceAttributes
  describes information for a non-resource access request\";s:4:\"$ref\";s:43:\"#/definitions/v1beta1.NonResourceAttributes\";}s:18:\"resourceAttributes\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"ResourceAuthorizationAttributes
  describes information for a resource access request\";s:4:\"$ref\";s:40:\"#/definitions/v1beta1.ResourceAttributes\";}}}s:27:\"v1beta1.SubjectAccessReview\";O:8:\"stdClass\":3:{s:11:\"description\";s:80:\"SubjectAccessReview
  checks whether or not a user or group can perform an action.\";s:8:\"required\";a:1:{i:0;s:4:\"spec\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"metadata\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/v1.ObjectMeta\";}s:4:\"spec\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"Spec
  holds information about the request being evaluated\";s:4:\"$ref\";s:45:\"#/definitions/v1beta1.SubjectAccessReviewSpec\";}s:6:\"status\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"Status
  is filled in by the server and indicates whether the request is allowed or not\";s:4:\"$ref\";s:47:\"#/definitions/v1beta1.SubjectAccessReviewStatus\";}}}s:31:\"v1beta1.SubjectAccessReviewSpec\";O:8:\"stdClass\":2:{s:11:\"description\";s:162:\"SubjectAccessReviewSpec
  is a description of the access request.  Exactly one of ResourceAuthorizationAttributes
  and NonResourceAuthorizationAttributes must be set\";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"extra\";O:8:\"stdClass\":3:{s:11:\"description\";s:143:\"Extra
  corresponds to the user.Info.GetExtra() method from the authenticator.  Since that
  is input to the authorizer it needs a reflection here.\";s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"group\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Groups
  is the groups you're testing for.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:21:\"nonResourceAttributes\";O:8:\"stdClass\":2:{s:11:\"description\";s:77:\"NonResourceAttributes
  describes information for a non-resource access request\";s:4:\"$ref\";s:43:\"#/definitions/v1beta1.NonResourceAttributes\";}s:18:\"resourceAttributes\";O:8:\"stdClass\":2:{s:11:\"description\";s:83:\"ResourceAuthorizationAttributes
  describes information for a resource access request\";s:4:\"$ref\";s:40:\"#/definitions/v1beta1.ResourceAttributes\";}s:4:\"user\";O:8:\"stdClass\":2:{s:11:\"description\";s:147:\"User
  is the user you're testing for. If you specify \"User\" but not \"Group\", then
  is it interpreted as \"What if User were not a member of any groups\";s:4:\"type\";s:6:\"string\";}}}s:33:\"v1beta1.SubjectAccessReviewStatus\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"SubjectAccessReviewStatus\";s:8:\"required\";a:1:{i:0;s:7:\"allowed\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"allowed\";O:8:\"stdClass\":2:{s:11:\"description\";s:75:\"Allowed
  is required.  True if the action would be allowed, false otherwise.\";s:4:\"type\";s:7:\"boolean\";}s:15:\"evaluationError\";O:8:\"stdClass\":2:{s:11:\"description\";s:316:\"EvaluationError
  is an indication that some error occurred during the authorization check. It is
  entirely possible to get an error and be able to continue determine authorization
  status in spite of it. For instance, RBAC can be missing a role, but enough roles
  are still present and bound to reason about the request.\";s:4:\"type\";s:6:\"string\";}s:6:\"reason\";O:8:\"stdClass\":2:{s:11:\"description\";s:70:\"Reason
  is optional.  It indicates why a request was allowed or denied.\";s:4:\"type\";s:6:\"string\";}}}}"
...
