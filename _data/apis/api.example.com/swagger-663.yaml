---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:11:\"description\";s:17:\"Navigation helper\";s:5:\"title\";s:46:\"Electrode
  Native generic navigation api (V2.0)\";}"
paths:
  /navigate:
    post:
      tags:
      - EnNavigation
      operationId: navigate
      parameters:
      - name: route
        in: body
        description: Route object that details where to navigate next
        required: true
        schema:
          $ref: '#/definitions/ErnRoute'
  /update:
    post:
      tags:
      - EnNavigation
      operationId: update
      parameters:
      - name: updatedRoute
        in: body
        description: Updated route object. This API expectes that the path of the
          update call is unchanged from the last navigate call. It is likely that
          the native implementation will reject your update call if the path is different
          from the last navigate call.
        required: true
        schema:
          $ref: '#/definitions/ErnRoute'
  /finish:
    post:
      tags:
      - EnNavigation
      operationId: finish
      parameters:
      - name: finalPayload
        in: body
        description: Optional json string payload to pass when a flow is completed.
          Use this to pass in any info needed by the RN view host on the native side
        required: false
        schema:
          type: string
  /back:
    post:
      tags:
      - EnNavigation
      operationId: back
      parameters:
      - name: route
        in: body
        description: Route object that details where to navigate next. Use this when
          you want to go back to a previous screen, it could be any previous screen
          in a given flow. If the given route is not found on the stack, native layer
          may push a new screen on top.
        required: true
        schema:
          $ref: '#/definitions/ErnRoute'
  /events:
    event:
      tags:
      - EnNavigation
      description: Fire this event when a navigation bar button is clicked
      operationId: OnNavButtonClick
      parameters:
      - name: buttonId
        in: path
        description: Id of the button that is being clicked
        required: true
        type: string
produces:
- application/json
definitions: !php/object "O:8:\"stdClass\":3:{s:8:\"ErnRoute\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"path\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:183:\"Path
  of the Route. Mostly the name of the container(defined by the native app) or the
  miniapp name. The content of the path is mainly determined by the native implemenation
  of the API\";}s:11:\"jsonPayload\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:98:\"Optional
  Payload (respresented as JSON String) needed by the screen you are trying to navigate
  to.\";}s:13:\"navigationBar\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/NavigationBar\";}}s:8:\"required\";a:1:{i:0;s:4:\"path\";}}s:19:\"NavigationBarButton\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":6:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:20:\"Button
  title if any.\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:55:\"Icon
  resource identifier that can be used find the icon\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:100:\"Id
  of the button, this namespace will be used as an identifier when a button click
  event is emitted.\";}s:8:\"location\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:26:\"Allowed
  enums: left, right\";}s:8:\"disabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:75:\"Default
  to false. If set to true the button will be disabled(non-clickable)\";}s:8:\"adaLabel\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"Accessibility
  label\";}}s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:8:\"location\";}}s:13:\"NavigationBar\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:16:\"Title
  of Nav Bar\";}s:4:\"hide\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:11:\"description\";s:31:\"Use
  to hide the navigation bar.\";}s:7:\"buttons\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/NavigationBarButton\";}s:11:\"description\";s:23:\"Right
  button properties\";}}s:8:\"required\";a:1:{i:0;s:5:\"title\";}}}"
...
