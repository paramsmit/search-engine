---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:5:\"title\";s:15:\"swgg-github-git\";s:7:\"version\";s:15:\"2018.3.26-alpha\";s:18:\"x-swgg-description\";s:129:\"this
  zero-dependency package will provide a (nodejs-compatible) swagger-client for github-git's
  web-apis, with a working web-demo\";s:15:\"x-swgg-homepage\";s:49:\"https://github.com/kaizhu256/node-swgg-github-git\";}"
basePath: /
paths:
  /repos/{owner}/{repo}/git/blobs:
    post:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_20POST
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3.raw
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_20POST.body'
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Blobs](https://developer.github.com/v3/git/blobs/#create-a-blob) - Create
        a Blob'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Blobs](https://developer.github.com/v3/git/blobs/#create-a-blob)
        - Create a Blob'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/blobs/{sha}:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_2F_7Bsha_7D_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3.raw
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Blobs](https://developer.github.com/v3/git/blobs/#get-a-blob) - Get
        a Blob'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Blobs](https://developer.github.com/v3/git/blobs/#get-a-blob)
        - Get a Blob'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/commits:
    post:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body'
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Commits](https://developer.github.com/v3/git/commits/#create-a-commit)
        - Create a Commit'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Commits](https://developer.github.com/v3/git/commits/#create-a-commit)
        - Create a Commit'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/commits/{sha}:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_2F_7Bsha_7D_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Commits](https://developer.github.com/v3/git/commits/#get-a-commit)
        - Get a Commit'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Commits](https://developer.github.com/v3/git/commits/#get-a-commit)
        - Get a Commit'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/commits/{sha}#1:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_2F_7Bsha_7D_231_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      - in: query
        name: verified
        type: boolean
        x-swgg-descriptionLineList:
        - Does GitHub consider the signature in this commit to be verified?
      - in: query
        name: reason
        type: string
        x-swgg-descriptionLineList:
        - The reason for ```verified``` value. Possible values and their meanings
          are enumerated in the table below.
      - in: query
        name: signature
        type: string
        x-swgg-descriptionLineList:
        - The signature that was extracted from the commit.
      - in: query
        name: payload
        type: string
        x-swgg-descriptionLineList:
        - The value that was signed.
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Commits](https://developer.github.com/v3/git/commits/#commit-signature-verification)
        - Commit signature verification'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Commits](https://developer.github.com/v3/git/commits/#commit-signature-verification)
        - Commit signature verification'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/refs:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Refs](https://developer.github.com/v3/git/refs/#get-all-references)
        - Get all References'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Refs](https://developer.github.com/v3/git/refs/#get-all-references)
        - Get all References'
      x-swgg-tags0: github-git
    post:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20POST
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20POST.body'
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Refs](https://developer.github.com/v3/git/refs/#create-a-reference)
        - Create a Reference'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Refs](https://developer.github.com/v3/git/refs/#create-a-reference)
        - Create a Reference'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/refs/{ref}:
    delete:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20DELETE
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: ref
        in: path
        name: ref
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Refs](https://developer.github.com/v3/git/refs/#delete-a-reference)
        - Delete a Reference'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Refs](https://developer.github.com/v3/git/refs/#delete-a-reference)
        - Delete a Reference'
      x-swgg-tags0: github-git
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: ref
        in: path
        name: ref
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Refs](https://developer.github.com/v3/git/refs/#get-a-reference) - Get
        a Reference'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Refs](https://developer.github.com/v3/git/refs/#get-a-reference)
        - Get a Reference'
      x-swgg-tags0: github-git
    patch:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20PATCH
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: ref
        in: path
        name: ref
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20PATCH.body'
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Refs](https://developer.github.com/v3/git/refs/#update-a-reference)
        - Update a Reference'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Refs](https://developer.github.com/v3/git/refs/#update-a-reference)
        - Update a Reference'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/tags:
    post:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body'
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Tags](https://developer.github.com/v3/git/tags/#create-a-tag-object)
        - Create a Tag Object'
      - ""
      - Note that creating a tag object does not create the reference that makes a
        tag in Git.  If you want to create an annotated tag in Git, you have to do
        this call to create the tag object, and then [create](https://developer.github.com/v3/git/refs/#create-a-reference)
        the ```refs/tags/[tag]``` reference. If you want to create a lightweight tag,
        you only have to [create](https://developer.github.com/v3/git/refs/#create-a-reference)
        the tag reference - this call would be unnecessary.
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Tags](https://developer.github.com/v3/git/tags/#create-a-tag-object)
        - Create a Tag Object'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/tags/{sha}:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_2F_7Bsha_7D_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Tags](https://developer.github.com/v3/git/tags/#get-a-tag) - Get a Tag'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Tags](https://developer.github.com/v3/git/tags/#get-a-tag)
        - Get a Tag'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/tags/{sha}#1:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_2F_7Bsha_7D_231_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        default:
        - application/vnd.github.jean-grey-preview+json
        enum:
        - application/vnd.github.jean-grey-preview+json
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        required: true
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      - in: query
        name: verified
        type: boolean
        x-swgg-descriptionLineList:
        - Does GitHub consider the signature in this tag to be verified?
      - in: query
        name: reason
        type: string
        x-swgg-descriptionLineList:
        - The reason for ```verified``` value. Possible values and their meanings
          are enumerated in the table below.
      - in: query
        name: signature
        type: string
        x-swgg-descriptionLineList:
        - The signature that was extracted from the tag.
      - in: query
        name: payload
        type: string
        x-swgg-descriptionLineList:
        - The value that was signed.
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Tags](https://developer.github.com/v3/git/tags/#tag-signature-verification)
        - Tag signature verification'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Tags](https://developer.github.com/v3/git/tags/#tag-signature-verification)
        - Tag signature verification'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/trees:
    post:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        enum:
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body'
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Trees](https://developer.github.com/v3/git/trees/#create-a-tree) - Create
        a Tree'
      - ""
      - The tree creation API will take nested entries as well. If both a tree and
        a nested path modifying that tree are specified, it will overwrite the contents
        of that tree with the new path contents and write a new tree out.
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Trees](https://developer.github.com/v3/git/trees/#create-a-tree)
        - Create a Tree'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/trees/{sha}:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_2F_7Bsha_7D_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        enum:
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree) - Get
        a Tree'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree)
        - Get a Tree'
      x-swgg-tags0: github-git
  /repos/{owner}/{repo}/git/trees/{sha}#1:
    get:
      operationId: _2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_2F_7Bsha_7D_231_20GET
      parameters:
      - $ref: '#/parameters/github-all.key'
      - $ref: '#/parameters/github-all.user-agent'
      - collectionFormat: csv
        enum:
        - application/vnd.github.v3+json
        in: header
        items:
          type: string
        name: accept
        type: array
        x-swgg-descriptionLineList:
        - https://developer.github.com/v3/media/
        - ""
        - Custom media types are used in the API to let consumers choose the format
          of the data they wish to receive. This is done by adding one or more of
          the following types to the ```Accept``` header when you make a request.
          Media types are specific to resources, allowing them to change independently
          and support formats that other resources don't.
      - default: owner
        in: path
        name: owner
        required: true
        type: string
      - default: repo
        in: path
        name: repo
        required: true
        type: string
      - default: sha
        in: path
        name: sha
        required: true
        type: string
      - default: "1"
        in: query
        name: recursive
        type: string
      responses:
        default:
          description: default response
      tags:
      - github-git
      x-swgg-descriptionLineList:
      - '[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree-recursively)
        - Get a Tree Recursively'
      x-swgg-host: api.github.com
      x-swgg-schemes:
      - https
      x-swgg-sortValue: '[Git Trees](https://developer.github.com/v3/git/trees/#get-a-tree-recursively)
        - Get a Tree Recursively'
      x-swgg-tags0: github-git
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":9:{s:61:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fblobs_20POST.body\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":3:{s:7:\"default\";s:19:\"Content
  of the blob\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:37:\"**Required**.
  The new blob's content.\";}}s:8:\"encoding\";O:8:\"stdClass\":3:{s:7:\"default\";s:5:\"utf-8\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:113:\"The
  encoding used for ```content```. Currently, ```utf-8``` and ```base64``` are supported.
  Default: ```utf-8```.\";}}}s:8:\"required\";a:1:{i:0;s:7:\"content\";}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:63:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":5:{s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:84:\"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body.author\";}s:7:\"message\";O:8:\"stdClass\":3:{s:7:\"default\";s:17:\"my
  commit message\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:32:\"**Required**.
  The commit message\";}}s:7:\"parents\";O:8:\"stdClass\":3:{s:7:\"default\";a:1:{i:0;s:40:\"7d1b31e74ee336d15cbd21741bc88a537ed063a0\";}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"signature\";O:8:\"stdClass\":2:{s:7:\"default\";s:833:\"-----BEGIN
  PGP SIGNATURE-----\n\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\n=5Io4\n-----END
  PGP SIGNATURE-----\n\";s:4:\"type\";s:6:\"string\";}s:4:\"tree\";O:8:\"stdClass\":3:{s:7:\"default\";s:40:\"827efc6d56897b048c772eb4087f854f46256132\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:62:\"**Required**.
  The SHA of the tree object this commit points to\";}}}s:8:\"required\";a:2:{i:0;s:7:\"message\";i:1;s:4:\"tree\";}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:70:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Fcommits_20POST.body.author\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"date\";O:8:\"stdClass\":2:{s:7:\"default\";s:25:\"2008-07-09T16:13:30+12:00\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:7:\"default\";s:17:\"schacon@gmail.com\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:7:\"default\";s:12:\"Scott
  Chacon\";s:4:\"type\";s:6:\"string\";}}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:60:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_20POST.body\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"ref\";O:8:\"stdClass\":3:{s:7:\"default\";s:19:\"refs/heads/featureA\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:170:\"**Required**.
  The name of the fully qualified reference (ie: ```refs/heads/master```). If it doesn't
  start with 'refs' and have at least two slashes, it will be rejected.\";}}s:3:\"sha\";O:8:\"stdClass\":3:{s:7:\"default\";s:40:\"aa218f56b14c9653891f9e74264a383fa43fefbd\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:53:\"**Required**.
  The SHA1 value to set this reference to\";}}}s:8:\"required\";a:2:{i:0;s:3:\"ref\";i:1;s:3:\"sha\";}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:73:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Frefs_2F_7Bref_7D_20PATCH.body\";O:8:\"stdClass\":3:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"force\";O:8:\"stdClass\":3:{s:7:\"default\";b:0;s:4:\"type\";s:7:\"boolean\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:201:\"Indicates
  whether to force the update or to make sure the update is a fast-forward update.
  Leaving this out or setting it to ```false``` will make sure you're not overwriting
  work. Default: ```false```\";}}s:3:\"sha\";O:8:\"stdClass\":3:{s:7:\"default\";s:40:\"aa218f56b14c9653891f9e74264a383fa43fefbd\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:53:\"**Required**.
  The SHA1 value to set this reference to\";}}}s:8:\"required\";a:1:{i:0;s:3:\"sha\";}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:60:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"message\";O:8:\"stdClass\":3:{s:7:\"default\";s:16:\"initial
  version\n\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:15:\"The
  tag message\";}}s:6:\"object\";O:8:\"stdClass\":3:{s:7:\"default\";s:40:\"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:41:\"The
  SHA of the git object this is tagging\";}}s:3:\"tag\";O:8:\"stdClass\":3:{s:7:\"default\";s:6:\"v0.0.1\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:7:\"The
  tag\";}}s:6:\"tagger\";O:8:\"stdClass\":3:{s:4:\"$ref\";s:81:\"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body.tagger\";s:4:\"type\";s:6:\"object\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:65:\"An
  object with information about the individual creating the tag.\";}}s:4:\"type\";O:8:\"stdClass\":3:{s:7:\"default\";s:6:\"commit\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:118:\"The
  type of the object we're tagging. Normally this is a ```commit``` but it can also
  be a ```tree``` or a ```blob```.\";}}}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:67:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftags_20POST.body.tagger\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"date\";O:8:\"stdClass\":2:{s:7:\"default\";s:25:\"2011-06-17T14:53:35-07:00\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:7:\"default\";s:17:\"schacon@gmail.com\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:7:\"default\";s:12:\"Scott
  Chacon\";s:4:\"type\";s:6:\"string\";}}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:61:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"base_tree\";O:8:\"stdClass\":3:{s:7:\"default\";s:40:\"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\";s:4:\"type\";s:6:\"string\";s:26:\"x-swgg-descriptionLineList\";a:1:{i:0;s:217:\"The
  SHA1 of the tree you want to update with new data. If you don't set this, the commit
  will be created on top of everything; however, it will only contain your change,
  the rest of your files will show up as deleted.\";}}s:4:\"tree\";O:8:\"stdClass\":3:{s:7:\"default\";a:1:{i:0;O:8:\"stdClass\":4:{s:4:\"mode\";s:6:\"100644\";s:4:\"path\";s:7:\"file.rb\";s:3:\"sha\";s:40:\"44b4fc6d56897b048c772eb4087f854f46256132\";s:4:\"type\";s:4:\"blob\";}}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:80:\"#/definitions/_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body.tree\";}s:4:\"type\";s:5:\"array\";}}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}s:66:\"_2Frepos_2F_7Bowner_7D_2F_7Brepo_7D_2Fgit_2Ftrees_20POST.body.tree\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"mode\";O:8:\"stdClass\":2:{s:7:\"default\";s:6:\"100644\";s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":2:{s:7:\"default\";s:7:\"file.rb\";s:4:\"type\";s:6:\"string\";}s:3:\"sha\";O:8:\"stdClass\":2:{s:7:\"default\";s:40:\"44b4fc6d56897b048c772eb4087f854f46256132\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:7:\"default\";s:4:\"blob\";s:4:\"type\";s:6:\"string\";}}s:12:\"x-swgg-tags0\";s:10:\"github-git\";}}"
...
