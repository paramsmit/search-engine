---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:22:\"Laravel Generator APIs\";s:7:\"version\";s:5:\"1.0.0\";}"
basePath: /api/v1
paths:
  /menuses:
    get:
      tags:
      - Menus
      summary: Get a listing of the Menuses.
      description: Get all Menuses
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Menus'
              message:
                type: string
            type: object
    post:
      tags:
      - Menus
      summary: Store a newly created Menus in storage
      description: Store Menus
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Menus that should be stored
        required: false
        schema:
          $ref: '#/definitions/Menus'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Menus'
              message:
                type: string
            type: object
  /menuses/{id}:
    get:
      tags:
      - Menus
      summary: Display the specified Menus
      description: Get Menus
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Menus
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Menus'
              message:
                type: string
            type: object
    put:
      tags:
      - Menus
      summary: Update the specified Menus in storage
      description: Update Menus
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Menus
        required: true
        type: integer
      - name: body
        in: body
        description: Menus that should be updated
        required: false
        schema:
          $ref: '#/definitions/Menus'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Menus'
              message:
                type: string
            type: object
    delete:
      tags:
      - Menus
      summary: Remove the specified Menus from storage
      description: Delete Menus
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Menus
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /photoCats:
    get:
      tags:
      - PhotoCat
      summary: Get a listing of the PhotoCats.
      description: Get all PhotoCats
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PhotoCat'
              message:
                type: string
            type: object
    post:
      tags:
      - PhotoCat
      summary: Store a newly created PhotoCat in storage
      description: Store PhotoCat
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PhotoCat that should be stored
        required: false
        schema:
          $ref: '#/definitions/PhotoCat'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoCat'
              message:
                type: string
            type: object
  /photoCats/{id}:
    get:
      tags:
      - PhotoCat
      summary: Display the specified PhotoCat
      description: Get PhotoCat
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoCat
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoCat'
              message:
                type: string
            type: object
    put:
      tags:
      - PhotoCat
      summary: Update the specified PhotoCat in storage
      description: Update PhotoCat
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoCat
        required: true
        type: integer
      - name: body
        in: body
        description: PhotoCat that should be updated
        required: false
        schema:
          $ref: '#/definitions/PhotoCat'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoCat'
              message:
                type: string
            type: object
    delete:
      tags:
      - PhotoCat
      summary: Remove the specified PhotoCat from storage
      description: Delete PhotoCat
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoCat
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /photoFaces:
    get:
      tags:
      - PhotoFace
      summary: Get a listing of the PhotoFaces.
      description: Get all PhotoFaces
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PhotoFace'
              message:
                type: string
            type: object
    post:
      tags:
      - PhotoFace
      summary: Store a newly created PhotoFace in storage
      description: Store PhotoFace
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PhotoFace that should be stored
        required: false
        schema:
          $ref: '#/definitions/PhotoFace'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoFace'
              message:
                type: string
            type: object
  /photoFaces/{id}:
    get:
      tags:
      - PhotoFace
      summary: Display the specified PhotoFace
      description: Get PhotoFace
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoFace
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoFace'
              message:
                type: string
            type: object
    put:
      tags:
      - PhotoFace
      summary: Update the specified PhotoFace in storage
      description: Update PhotoFace
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoFace
        required: true
        type: integer
      - name: body
        in: body
        description: PhotoFace that should be updated
        required: false
        schema:
          $ref: '#/definitions/PhotoFace'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoFace'
              message:
                type: string
            type: object
    delete:
      tags:
      - PhotoFace
      summary: Remove the specified PhotoFace from storage
      description: Delete PhotoFace
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoFace
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /photoLabels:
    get:
      tags:
      - PhotoLabel
      summary: Get a listing of the PhotoLabels.
      description: Get all PhotoLabels
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PhotoLabel'
              message:
                type: string
            type: object
    post:
      tags:
      - PhotoLabel
      summary: Store a newly created PhotoLabel in storage
      description: Store PhotoLabel
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PhotoLabel that should be stored
        required: false
        schema:
          $ref: '#/definitions/PhotoLabel'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoLabel'
              message:
                type: string
            type: object
  /photoLabels/{id}:
    get:
      tags:
      - PhotoLabel
      summary: Display the specified PhotoLabel
      description: Get PhotoLabel
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoLabel
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoLabel'
              message:
                type: string
            type: object
    put:
      tags:
      - PhotoLabel
      summary: Update the specified PhotoLabel in storage
      description: Update PhotoLabel
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoLabel
        required: true
        type: integer
      - name: body
        in: body
        description: PhotoLabel that should be updated
        required: false
        schema:
          $ref: '#/definitions/PhotoLabel'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PhotoLabel'
              message:
                type: string
            type: object
    delete:
      tags:
      - PhotoLabel
      summary: Remove the specified PhotoLabel from storage
      description: Delete PhotoLabel
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PhotoLabel
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /photos:
    get:
      tags:
      - Photos
      summary: Get a listing of the Photos.
      description: Get all Photos
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Photos'
              message:
                type: string
            type: object
    post:
      tags:
      - Photos
      summary: Store a newly created Photos in storage
      description: Store Photos
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Photos that should be stored
        required: false
        schema:
          $ref: '#/definitions/Photos'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Photos'
              message:
                type: string
            type: object
  /photos/{id}:
    get:
      tags:
      - Photos
      summary: Display the specified Photos
      description: Get Photos
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Photos
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Photos'
              message:
                type: string
            type: object
    put:
      tags:
      - Photos
      summary: Update the specified Photos in storage
      description: Update Photos
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Photos
        required: true
        type: integer
      - name: body
        in: body
        description: Photos that should be updated
        required: false
        schema:
          $ref: '#/definitions/Photos'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Photos'
              message:
                type: string
            type: object
    delete:
      tags:
      - Photos
      summary: Remove the specified Photos from storage
      description: Delete Photos
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Photos
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /places/search:
    get:
      tags:
      - Place
      summary: Get a listing of the Places with filters.
      description: Get all Places
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Place'
              message:
                type: string
            type: object
  /places:
    get:
      tags:
      - Place
      summary: Get a listing of the Places.
      description: Get all Places
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Place'
              message:
                type: string
            type: object
    post:
      tags:
      - Place
      summary: Store a newly created Place in storage
      description: Store Place
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Place that should be stored
        required: false
        schema:
          $ref: '#/definitions/Place'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Place'
              message:
                type: string
            type: object
  /places/{id}:
    get:
      tags:
      - Place
      summary: Display the specified Place
      description: Get Place
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Place
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Place'
              message:
                type: string
            type: object
    put:
      tags:
      - Place
      summary: Update the specified Place in storage
      description: Update Place
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Place
        required: true
        type: integer
      - name: body
        in: body
        description: Place that should be updated
        required: false
        schema:
          $ref: '#/definitions/Place'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Place'
              message:
                type: string
            type: object
    delete:
      tags:
      - Place
      summary: Remove the specified Place from storage
      description: Delete Place
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Place
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /places/{id}/details:
    get:
      tags:
      - Place
      summary: Display the specified Place with details
      description: Get Place and its details
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Place
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Place'
              message:
                type: string
            type: object
  /places/{id}/reviews:
    get:
      tags:
      - Place
      summary: Display the specified Place with reviews
      description: Get Place and its reviews
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Place
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Place'
              message:
                type: string
            type: object
  /placeImages:
    get:
      tags:
      - PlaceImage
      summary: Get a listing of the PlaceImages.
      description: Get all PlaceImages
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceImage'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceImage
      summary: Store a newly created PlaceImage in storage
      description: Store PlaceImage
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceImage that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceImage'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceImage'
              message:
                type: string
            type: object
  /placeImages/{id}:
    get:
      tags:
      - PlaceImage
      summary: Display the specified PlaceImage
      description: Get PlaceImage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceImage
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceImage'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceImage
      summary: Update the specified PlaceImage in storage
      description: Update PlaceImage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceImage
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceImage that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceImage'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceImage'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceImage
      summary: Remove the specified PlaceImage from storage
      description: Delete PlaceImage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceImage
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /placeMetas:
    get:
      tags:
      - PlaceMeta
      summary: Get a listing of the PlaceMetas.
      description: Get all PlaceMetas
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceMeta'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceMeta
      summary: Store a newly created PlaceMeta in storage
      description: Store PlaceMeta
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceMeta that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceMeta'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceMeta'
              message:
                type: string
            type: object
  /placeMetas/{id}:
    get:
      tags:
      - PlaceMeta
      summary: Display the specified PlaceMeta
      description: Get PlaceMeta
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceMeta
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceMeta'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceMeta
      summary: Update the specified PlaceMeta in storage
      description: Update PlaceMeta
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceMeta
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceMeta that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceMeta'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceMeta'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceMeta
      summary: Remove the specified PlaceMeta from storage
      description: Delete PlaceMeta
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceMeta
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /placeMetaDatas:
    get:
      tags:
      - PlaceMetaData
      summary: Get a listing of the PlaceMetaDatas.
      description: Get all PlaceMetaDatas
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceMetaData'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceMetaData
      summary: Store a newly created PlaceMetaData in storage
      description: Store PlaceMetaData
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceMetaData that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceMetaData'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceMetaData'
              message:
                type: string
            type: object
  /placeMetaDatas/{id}:
    get:
      tags:
      - PlaceMetaData
      summary: Display the specified PlaceMetaData
      description: Get PlaceMetaData
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceMetaData
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceMetaData'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceMetaData
      summary: Update the specified PlaceMetaData in storage
      description: Update PlaceMetaData
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceMetaData
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceMetaData that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceMetaData'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceMetaData'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceMetaData
      summary: Remove the specified PlaceMetaData from storage
      description: Delete PlaceMetaData
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceMetaData
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /placeNLUs:
    get:
      tags:
      - PlaceNLU
      summary: Get a listing of the PlaceNLUs.
      description: Get all PlaceNLUs
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceNLU'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceNLU
      summary: Store a newly created PlaceNLU in storage
      description: Store PlaceNLU
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceNLU that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceNLU'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceNLU'
              message:
                type: string
            type: object
  /placeNLUs/{id}:
    get:
      tags:
      - PlaceNLU
      summary: Display the specified PlaceNLU
      description: Get PlaceNLU
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceNLU
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceNLU'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceNLU
      summary: Update the specified PlaceNLU in storage
      description: Update PlaceNLU
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceNLU
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceNLU that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceNLU'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceNLU'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceNLU
      summary: Remove the specified PlaceNLU from storage
      description: Delete PlaceNLU
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceNLU
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /placeReviews:
    get:
      tags:
      - PlaceReview
      summary: Get a listing of the PlaceReviews.
      description: Get all PlaceReviews
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceReview'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceReview
      summary: Store a newly created PlaceReview in storage
      description: Store PlaceReview
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceReview that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceReview'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReview'
              message:
                type: string
            type: object
  /placeReviews/{id}:
    get:
      tags:
      - PlaceReview
      summary: Display the specified PlaceReview
      description: Get PlaceReview
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReview
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReview'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceReview
      summary: Update the specified PlaceReview in storage
      description: Update PlaceReview
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReview
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceReview that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceReview'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReview'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceReview
      summary: Remove the specified PlaceReview from storage
      description: Delete PlaceReview
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReview
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /placeReviewImages:
    get:
      tags:
      - PlaceReviewImage
      summary: Get a listing of the PlaceReviewImages.
      description: Get all PlaceReviewImages
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceReviewImage'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceReviewImage
      summary: Store a newly created PlaceReviewImage in storage
      description: Store PlaceReviewImage
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceReviewImage that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceReviewImage'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReviewImage'
              message:
                type: string
            type: object
  /placeReviewImages/{id}:
    get:
      tags:
      - PlaceReviewImage
      summary: Display the specified PlaceReviewImage
      description: Get PlaceReviewImage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReviewImage
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReviewImage'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceReviewImage
      summary: Update the specified PlaceReviewImage in storage
      description: Update PlaceReviewImage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReviewImage
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceReviewImage that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceReviewImage'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReviewImage'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceReviewImage
      summary: Remove the specified PlaceReviewImage from storage
      description: Delete PlaceReviewImage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReviewImage
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /placeReviewMetas:
    get:
      tags:
      - PlaceReviewMeta
      summary: Get a listing of the PlaceReviewMetas.
      description: Get all PlaceReviewMetas
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/PlaceReviewMeta'
              message:
                type: string
            type: object
    post:
      tags:
      - PlaceReviewMeta
      summary: Store a newly created PlaceReviewMeta in storage
      description: Store PlaceReviewMeta
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: PlaceReviewMeta that should be stored
        required: false
        schema:
          $ref: '#/definitions/PlaceReviewMeta'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReviewMeta'
              message:
                type: string
            type: object
  /placeReviewMetas/{id}:
    get:
      tags:
      - PlaceReviewMeta
      summary: Display the specified PlaceReviewMeta
      description: Get PlaceReviewMeta
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReviewMeta
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReviewMeta'
              message:
                type: string
            type: object
    put:
      tags:
      - PlaceReviewMeta
      summary: Update the specified PlaceReviewMeta in storage
      description: Update PlaceReviewMeta
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReviewMeta
        required: true
        type: integer
      - name: body
        in: body
        description: PlaceReviewMeta that should be updated
        required: false
        schema:
          $ref: '#/definitions/PlaceReviewMeta'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/PlaceReviewMeta'
              message:
                type: string
            type: object
    delete:
      tags:
      - PlaceReviewMeta
      summary: Remove the specified PlaceReviewMeta from storage
      description: Delete PlaceReviewMeta
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of PlaceReviewMeta
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
  /users:
    get:
      tags:
      - Users
      summary: Get a listing of the Users.
      description: Get all Users
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Users'
              message:
                type: string
            type: object
    post:
      tags:
      - Users
      summary: Store a newly created Users in storage
      description: Store Users
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        description: Users that should be stored
        required: false
        schema:
          $ref: '#/definitions/Users'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Users'
              message:
                type: string
            type: object
  /users/{id}:
    get:
      tags:
      - Users
      summary: Display the specified Users
      description: Get Users
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Users
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Users'
              message:
                type: string
            type: object
    put:
      tags:
      - Users
      summary: Update the specified Users in storage
      description: Update Users
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Users
        required: true
        type: integer
      - name: body
        in: body
        description: Users that should be updated
        required: false
        schema:
          $ref: '#/definitions/Users'
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/Users'
              message:
                type: string
            type: object
    delete:
      tags:
      - Users
      summary: Remove the specified Users from storage
      description: Delete Users
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id of Users
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                type: string
              message:
                type: string
            type: object
definitions: !php/object "O:8:\"stdClass\":16:{s:5:\"Menus\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"parent_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"parent_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:9:\"tool_tips\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"tool_tips\";s:4:\"type\";s:6:\"string\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"icon\";s:4:\"type\";s:6:\"string\";}s:9:\"view_name\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"view_name\";s:4:\"type\";s:6:\"string\";}s:12:\"order_number\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"order_number\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:8:\"PhotoCat\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":12:{s:12:\"photo_cat_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"photo_cat_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"photo_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"photo_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"label\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"label\";s:4:\"type\";s:6:\"string\";}s:10:\"confidence\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"confidence\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"cat_0\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_0\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_1\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_1\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_2\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_2\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_3\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_3\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_4\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_4\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_5\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_5\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_6\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_6\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_7\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_7\";s:4:\"type\";s:6:\"string\";}}}s:9:\"PhotoFace\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"photo_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"photo_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"face_recognized\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"face_recognized\";s:4:\"type\";s:7:\"boolean\";}s:4:\"data\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"data\";s:4:\"type\";s:6:\"string\";}}}s:10:\"PhotoLabel\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":11:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"photo_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"photo_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"label\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"label\";s:4:\"type\";s:6:\"string\";}s:3:\"src\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"src\";s:4:\"type\";s:6:\"string\";}s:10:\"confidence\";O:8:\"stdClass\":3:{s:11:\"description\";s:10:\"confidence\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:5:\"cat_2\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_2\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_3\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_3\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_4\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_4\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_5\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_5\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_6\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_6\";s:4:\"type\";s:6:\"string\";}s:5:\"cat_7\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"cat_7\";s:4:\"type\";s:6:\"string\";}}}s:6:\"Photos\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"path\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"path\";s:4:\"type\";s:6:\"string\";}s:3:\"src\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"src\";s:4:\"type\";s:6:\"string\";}s:4:\"link\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"link\";s:4:\"type\";s:6:\"string\";}s:12:\"aws_indexing\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"aws_indexing\";s:4:\"type\";s:7:\"boolean\";}s:8:\"aws_done\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"aws_done\";s:4:\"type\";s:7:\"boolean\";}s:8:\"src_done\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"src_done\";s:4:\"type\";s:7:\"boolean\";}s:11:\"watson_done\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"watson_done\";s:4:\"type\";s:7:\"boolean\";}s:5:\"valid\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"valid\";s:4:\"type\";s:7:\"boolean\";}s:16:\"watson_cats_done\";O:8:\"stdClass\":2:{s:11:\"description\";s:16:\"watson_cats_done\";s:4:\"type\";s:7:\"boolean\";}}}s:5:\"Place\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:3:\"lat\";O:8:\"stdClass\":3:{s:11:\"description\";s:3:\"lat\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:3:\"lng\";O:8:\"stdClass\":3:{s:11:\"description\";s:3:\"lng\";s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:6:\"jsg_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"jsg_id\";s:4:\"type\";s:6:\"string\";}s:7:\"jsfa_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"jsfa_id\";s:4:\"type\";s:6:\"string\";}s:7:\"jsfs_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"jsfs_id\";s:4:\"type\";s:6:\"string\";}s:9:\"jsyelp_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"jsyelp_id\";s:4:\"type\";s:6:\"string\";}s:7:\"jsta_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"jsta_id\";s:4:\"type\";s:6:\"string\";}s:6:\"domain\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"domain\";s:4:\"type\";s:6:\"string\";}s:14:\"domain_indexed\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"domain_indexed\";s:4:\"type\";s:7:\"boolean\";}s:7:\"url_src\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"url_src\";s:4:\"type\";s:6:\"string\";}s:9:\"url_redir\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"url_redir\";s:4:\"type\";s:6:\"string\";}s:11:\"domain_path\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"domain_path\";s:4:\"type\";s:6:\"string\";}s:14:\"merge_complete\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"merge_complete\";s:4:\"type\";s:7:\"boolean\";}s:14:\"place_analyzed\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"place_analyzed\";s:4:\"type\";s:7:\"boolean\";}}}s:10:\"PlaceImage\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:14:\"place_image_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"place_image_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"place_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"place_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"path\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"path\";s:4:\"type\";s:6:\"string\";}s:3:\"sid\";O:8:\"stdClass\":3:{s:11:\"description\";s:3:\"sid\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"analyzed\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"analyzed\";s:4:\"type\";s:7:\"boolean\";}s:8:\"is_photo\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"is_photo\";s:4:\"type\";s:7:\"boolean\";}s:6:\"colors\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"colors\";s:4:\"type\";s:6:\"string\";}}}s:9:\"PlaceMeta\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"type\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"type\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:9:\"asset_src\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"asset_src\";s:4:\"type\";s:6:\"string\";}s:8:\"asset_dl\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"asset_dl\";s:4:\"type\";s:7:\"boolean\";}}}s:13:\"PlaceMetaData\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"key\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"key\";s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"value\";s:4:\"type\";s:6:\"string\";}s:10:\"value_long\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"value_long\";s:4:\"type\";s:6:\"string\";}}}s:8:\"PlaceNLU\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"place_nlu_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:12:\"place_nlu_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"place_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"place_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:3:\"nlu\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"nlu\";s:4:\"type\";s:6:\"string\";}s:6:\"photos\";O:8:\"stdClass\":2:{s:11:\"description\";s:6:\"photos\";s:4:\"type\";s:6:\"string\";}}}s:11:\"PlaceReview\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:9:\"timestamp\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"timestamp\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"user_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"user_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"mode\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"mode\";s:4:\"type\";s:7:\"boolean\";}s:4:\"code\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"code\";s:4:\"type\";s:7:\"boolean\";}s:7:\"comment\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"comment\";s:4:\"type\";s:6:\"string\";}s:5:\"_meta\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"_meta\";s:4:\"type\";s:6:\"string\";}s:9:\"_has_meta\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"_has_meta\";s:4:\"type\";s:7:\"boolean\";}s:15:\"watson_indexing\";O:8:\"stdClass\":2:{s:11:\"description\";s:15:\"watson_indexing\";s:4:\"type\";s:7:\"boolean\";}s:14:\"watson_indexed\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"watson_indexed\";s:4:\"type\";s:7:\"boolean\";}s:14:\"_has_rev_photo\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"_has_rev_photo\";s:4:\"type\";s:7:\"boolean\";}}}s:16:\"PlaceReviewImage\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:21:\"place_review_image_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"place_review_image_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"place_review_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"place_review_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"place_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"place_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"text\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"text\";s:4:\"type\";s:6:\"string\";}s:4:\"path\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"path\";s:4:\"type\";s:6:\"string\";}s:3:\"src\";O:8:\"stdClass\":2:{s:11:\"description\";s:3:\"src\";s:4:\"type\";s:6:\"string\";}}}s:15:\"PlaceReviewMeta\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:20:\"place_review_meta_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"place_review_meta_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"place_review_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"place_review_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"place_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:8:\"place_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"data\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"data\";s:4:\"type\";s:6:\"string\";}}}s:8:\"RoleUser\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"role_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"role_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"user_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:7:\"user_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"granted\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"granted\";s:4:\"type\";s:7:\"boolean\";}}}s:5:\"Roles\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:4:\"slug\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"slug\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:11:\"description\";s:4:\"type\";s:6:\"string\";}s:9:\"parent_id\";O:8:\"stdClass\":3:{s:11:\"description\";s:9:\"parent_id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:5:\"Users\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:0:\"\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:2:\"id\";O:8:\"stdClass\":3:{s:11:\"description\";s:2:\"id\";s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:4:\"name\";s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":2:{s:11:\"description\";s:5:\"email\";s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":2:{s:11:\"description\";s:8:\"password\";s:4:\"type\";s:6:\"string\";}s:14:\"remember_token\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"remember_token\";s:4:\"type\";s:6:\"string\";}s:9:\"stripe_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:9:\"stripe_id\";s:4:\"type\";s:6:\"string\";}s:12:\"braintree_id\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"braintree_id\";s:4:\"type\";s:6:\"string\";}s:12:\"paypal_email\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"paypal_email\";s:4:\"type\";s:6:\"string\";}s:10:\"card_brand\";O:8:\"stdClass\":2:{s:11:\"description\";s:10:\"card_brand\";s:4:\"type\";s:6:\"string\";}s:14:\"card_last_four\";O:8:\"stdClass\":2:{s:11:\"description\";s:14:\"card_last_four\";s:4:\"type\";s:6:\"string\";}}}}"
...
