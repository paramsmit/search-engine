---
swagger: !php/object "O:8:\"stdClass\":11:{s:7:\"swagger\";s:3:\"2.0\";s:7:\"schemes\";a:1:{i:0;s:5:\"https\";}s:4:\"host\";s:33:\"analyticsreporting.googleapis.com\";s:8:\"basePath\";s:1:\"/\";s:4:\"info\";O:8:\"stdClass\":10:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";}s:11:\"description\";s:31:\"Accesses
  Analytics report data.\";s:5:\"title\";s:26:\"Google Analytics Reporting\";s:7:\"version\";s:2:\"v4\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:116:\"https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\";}s:8:\"x-origin\";O:8:\"stdClass\":3:{s:6:\"format\";s:6:\"google\";s:3:\"url\";s:68:\"https://analyticsreporting.googleapis.com/$discovery/rest?version=v4\";s:7:\"version\";s:2:\"v1\";}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:18:\"analyticsreporting\";}s:12:\"externalDocs\";O:8:\"stdClass\":1:{s:3:\"url\";s:68:\"https://developers.google.com/analytics/devguides/reporting/core/v4/\";}s:19:\"securityDefinitions\";O:8:\"stdClass\":1:{s:6:\"Oauth2\";O:8:\"stdClass\":5:{s:16:\"authorizationUrl\";s:41:\"https://accounts.google.com/o/oauth2/auth\";s:11:\"description\";s:24:\"Oauth
  2.0 authentication\";s:4:\"flow\";s:8:\"implicit\";s:6:\"scopes\";O:8:\"stdClass\":2:{s:41:\"https://www.googleapis.com/auth/analytics\";s:42:\"View
  and manage your Google Analytics data\";s:50:\"https://www.googleapis.com/auth/analytics.readonly\";s:31:\"View
  your Google Analytics data\";}s:4:\"type\";s:6:\"oauth2\";}}s:10:\"parameters\";O:8:\"stdClass\":13:{s:7:\"$.xgafv\";O:8:\"stdClass\":5:{s:11:\"description\";s:16:\"V1
  error format.\";s:4:\"enum\";a:2:{i:0;s:1:\"1\";i:1;s:1:\"2\";}s:2:\"in\";s:5:\"query\";s:4:\"name\";s:7:\"$.xgafv\";s:4:\"type\";s:6:\"string\";}s:12:\"access_token\";O:8:\"stdClass\":4:{s:11:\"description\";s:19:\"OAuth
  access token.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:12:\"access_token\";s:4:\"type\";s:6:\"string\";}s:3:\"alt\";O:8:\"stdClass\":6:{s:7:\"default\";s:4:\"json\";s:11:\"description\";s:25:\"Data
  format for response.\";s:4:\"enum\";a:3:{i:0;s:4:\"json\";i:1;s:5:\"media\";i:2;s:5:\"proto\";}s:2:\"in\";s:5:\"query\";s:4:\"name\";s:3:\"alt\";s:4:\"type\";s:6:\"string\";}s:12:\"bearer_token\";O:8:\"stdClass\":4:{s:11:\"description\";s:19:\"OAuth
  bearer token.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:12:\"bearer_token\";s:4:\"type\";s:6:\"string\";}s:8:\"callback\";O:8:\"stdClass\":4:{s:11:\"description\";s:5:\"JSONP\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:8:\"callback\";s:4:\"type\";s:6:\"string\";}s:6:\"fields\";O:8:\"stdClass\":4:{s:11:\"description\";s:66:\"Selector
  specifying which fields to include in a partial response.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:6:\"fields\";s:4:\"type\";s:6:\"string\";}s:3:\"key\";O:8:\"stdClass\":4:{s:11:\"description\";s:147:\"API
  key. Your API key identifies your project and provides you with API access, quota,
  and reports. Required unless you provide an OAuth 2.0 token.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:3:\"key\";s:4:\"type\";s:6:\"string\";}s:11:\"oauth_token\";O:8:\"stdClass\":4:{s:11:\"description\";s:37:\"OAuth
  2.0 token for the current user.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:11:\"oauth_token\";s:4:\"type\";s:6:\"string\";}s:2:\"pp\";O:8:\"stdClass\":5:{s:7:\"default\";b:1;s:11:\"description\";s:22:\"Pretty-print
  response.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:2:\"pp\";s:4:\"type\";s:7:\"boolean\";}s:11:\"prettyPrint\";O:8:\"stdClass\":5:{s:7:\"default\";b:1;s:11:\"description\";s:51:\"Returns
  response with indentations and line breaks.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:11:\"prettyPrint\";s:4:\"type\";s:7:\"boolean\";}s:9:\"quotaUser\";O:8:\"stdClass\":4:{s:11:\"description\";s:150:\"Available
  to use for quota purposes for server-side applications. Can be any arbitrary string
  assigned to a user, but should not exceed 40 characters.\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:9:\"quotaUser\";s:4:\"type\";s:6:\"string\";}s:10:\"uploadType\";O:8:\"stdClass\":4:{s:11:\"description\";s:61:\"Legacy
  upload protocol for media (e.g. \"media\", \"multipart\").\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:10:\"uploadType\";s:4:\"type\";s:6:\"string\";}s:15:\"upload_protocol\";O:8:\"stdClass\":4:{s:11:\"description\";s:52:\"Upload
  protocol for media (e.g. \"raw\", \"multipart\").\";s:2:\"in\";s:5:\"query\";s:4:\"name\";s:15:\"upload_protocol\";s:4:\"type\";s:6:\"string\";}}s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"reports\";}}s:5:\"paths\";O:8:\"stdClass\":1:{s:20:\"/v4/reports:batchGet\";O:8:\"stdClass\":2:{s:10:\"parameters\";a:13:{i:0;O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/parameters/access_token\";}i:1;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/parameters/prettyPrint\";}i:2;O:8:\"stdClass\":1:{s:4:\"$ref\";s:16:\"#/parameters/key\";}i:3;O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/parameters/quotaUser\";}i:4;O:8:\"stdClass\":1:{s:4:\"$ref\";s:15:\"#/parameters/pp\";}i:5;O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/parameters/fields\";}i:6;O:8:\"stdClass\":1:{s:4:\"$ref\";s:16:\"#/parameters/alt\";}i:7;O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/parameters/$.xgafv\";}i:8;O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/parameters/callback\";}i:9;O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/parameters/oauth_token\";}i:10;O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/parameters/uploadType\";}i:11;O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/parameters/bearer_token\";}i:12;O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/parameters/upload_protocol\";}}s:4:\"post\";O:8:\"stdClass\":6:{s:11:\"description\";s:27:\"Returns
  the Analytics data.\";s:11:\"operationId\";s:35:\"analyticsreporting.reports.batchGet\";s:10:\"parameters\";a:1:{i:0;O:8:\"stdClass\":3:{s:2:\"in\";s:4:\"body\";s:4:\"name\";s:4:\"body\";s:6:\"schema\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/GetReportsRequest\";}}}s:9:\"responses\";O:8:\"stdClass\":1:{s:3:\"200\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Successful
  response\";s:6:\"schema\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/GetReportsResponse\";}}}s:8:\"security\";a:2:{i:0;O:8:\"stdClass\":1:{s:6:\"Oauth2\";a:1:{i:0;s:41:\"https://www.googleapis.com/auth/analytics\";}}i:1;O:8:\"stdClass\":1:{s:6:\"Oauth2\";a:1:{i:0;s:50:\"https://www.googleapis.com/auth/analytics.readonly\";}}}s:4:\"tags\";a:1:{i:0;s:7:\"reports\";}}}}s:11:\"definitions\";O:8:\"stdClass\":35:{s:6:\"Cohort\";O:8:\"stdClass\":3:{s:11:\"description\";s:162:\"Defines
  a cohort. A cohort is a group of users who share a common\ncharacteristic. For example,
  all users with the same acquisition date\nbelong to the same cohort.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"dateRange\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/DateRange\";s:11:\"description\";s:660:\"This
  is used for `FIRST_VISIT_DATE` cohort, the cohort selects users\nwhose first visit
  date is between start date and end date defined in the\nDateRange. The date ranges
  should be aligned for cohort requests. If the\nrequest contains `ga:cohortNthDay`
  it should be exactly one day long,\nif `ga:cohortNthWeek` it should be aligned to
  the week boundary (starting\nat Sunday and ending Saturday), and for `ga:cohortNthMonth`
  the date range\nshould be aligned to the month (starting at the first and ending
  on the\nlast day of the month).\nFor LTV requests there are no such restrictions.\nYou
  do not need to supply a date range for the\n`reportsRequest.dateRanges` field.\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:102:\"A
  unique name for the cohort. If not defined name will be auto-generated\nwith values
  cohort_[1234...].\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:162:\"Type
  of the cohort. The only supported type as of now is\n`FIRST_VISIT_DATE`. If this
  field is unspecified the cohort is treated\nas `FIRST_VISIT_DATE` type cohort.\";s:4:\"enum\";a:2:{i:0;s:23:\"UNSPECIFIED_COHORT_TYPE\";i:1;s:16:\"FIRST_VISIT_DATE\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"CohortGroup\";O:8:\"stdClass\":3:{s:11:\"description\";s:383:\"Defines
  a cohort group.\nFor example:\n\n    \"cohortGroup\": {\n      \"cohorts\": [{\n
  \       \"name\": \"cohort 1\",\n        \"type\": \"FIRST_VISIT_DATE\",\n        \"dateRange\":
  { \"startDate\": \"2015-08-01\", \"endDate\": \"2015-08-01\" }\n      },{\n        \"name\":
  \"cohort 2\"\n         \"type\": \"FIRST_VISIT_DATE\"\n         \"dateRange\": {
  \"startDate\": \"2015-07-01\", \"endDate\": \"2015-07-01\" }\n      }]\n    }\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"cohorts\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"The
  definition for the cohort.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Cohort\";}s:4:\"type\";s:5:\"array\";}s:13:\"lifetimeValue\";O:8:\"stdClass\":2:{s:11:\"description\";s:1386:\"Enable
  Life Time Value (LTV).  LTV measures lifetime value for users\nacquired through
  different channels.\nPlease see:\n[Cohort Analysis](https://support.google.com/analytics/answer/6074676)
  and\n[Lifetime Value](https://support.google.com/analytics/answer/6182550)\nIf the
  value of lifetimeValue is false:\n\n- The metric values are similar to the values
  in the web interface cohort\n  report.\n- The cohort definition date ranges must
  be aligned to the calendar week\n  and month. i.e. while requesting `ga:cohortNthWeek`
  the `startDate` in\n  the cohort definition should be a Sunday and the `endDate`
  should be the\n  following Saturday, and for `ga:cohortNthMonth`, the `startDate`\n
  \ should be the 1st of the month and `endDate` should be the last day\n  of the
  month.\n\nWhen the lifetimeValue is true:\n\n- The metric values will correspond
  to the values in the web interface\n  LifeTime value report.\n- The Lifetime Value
  report shows you how user value (Revenue) and\n  engagement (Appviews, Goal Completions,
  Sessions, and Session Duration)\n  grow during the 90 days after a user is acquired.\n-
  The metrics are calculated as a cumulative average per user per the time\n  increment.\n-
  The cohort definition date ranges need not be aligned to the calendar\n  week and
  month boundaries.\n- The `viewId` must be an\n  [app view ID](https://support.google.com/analytics/answer/2649553#WebVersusAppViews)\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:12:\"ColumnHeader\";O:8:\"stdClass\":3:{s:11:\"description\";s:15:\"Column
  headers.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"dimensions\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"The
  dimension names in the response.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:12:\"metricHeader\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/MetricHeader\";s:11:\"description\";s:47:\"Metric
  headers for the metrics in the response.\";}}s:4:\"type\";s:6:\"object\";}s:9:\"DateRange\";O:8:\"stdClass\":3:{s:11:\"description\";s:186:\"A
  contiguous set of days: startDate, startDate + 1 day, ..., endDate.\nThe start and
  end dates are specified in\n[ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date
  format `YYYY-MM-DD`.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"endDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:54:\"The
  end date for the query in the format `YYYY-MM-DD`.\";s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:11:\"description\";s:56:\"The
  start date for the query in the format `YYYY-MM-DD`.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"DateRangeValues\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"Used
  to return a list of metrics for a single DateRange / dimension\ncombination\";s:10:\"properties\";O:8:\"stdClass\":2:{s:17:\"pivotValueRegions\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  values of each pivot region.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/PivotValueRegion\";}s:4:\"type\";s:5:\"array\";}s:6:\"values\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Each
  value corresponds to each Metric in the request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:9:\"Dimension\";O:8:\"stdClass\":3:{s:11:\"description\";s:220:\"[Dimensions](https://support.google.com/analytics/answer/1033861)\nare
  attributes of your data. For example, the dimension `ga:city`\nindicates the city,
  for example, \"Paris\" or \"New York\", from which\na session originates.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"histogramBuckets\";O:8:\"stdClass\":3:{s:11:\"description\";s:1441:\"If
  non-empty, we place dimension values into buckets after string to\nint64. Dimension
  values that are not the string representation of an\nintegral value will be converted
  to zero.  The bucket values have to be in\nincreasing order.  Each bucket is closed
  on the lower end, and open on the\nupper end. The \"first\" bucket includes all
  values less than the first\nboundary, the \"last\" bucket includes all values up
  to infinity. Dimension\nvalues that fall in a bucket get transformed to a new dimension
  value. For\nexample, if one gives a list of \"0, 1, 3, 4, 7\", then we return the\nfollowing
  buckets:\n\n- bucket #1: values < 0, dimension value \"<0\"\n- bucket #2: values
  in [0,1), dimension value \"0\"\n- bucket #3: values in [1,3), dimension value \"1-2\"\n-
  bucket #4: values in [3,4), dimension value \"3\"\n- bucket #5: values in [4,7),
  dimension value \"4-6\"\n- bucket #6: values >= 7, dimension value \"7+\"\n\nNOTE:
  If you are applying histogram mutation on any dimension, and using\nthat dimension
  in sort, you will want to use the sort type\n`HISTOGRAM_BUCKET` for that purpose.
  Without that the dimension values\nwill be sorted according to dictionary\n(lexicographic)
  order. For example the ascending dictionary order is:\n\n   \"<50\", \"1001+\",
  \"121-1000\", \"50-120\"\n\nAnd the ascending `HISTOGRAM_BUCKET` order is:\n\n   \"<50\",
  \"50-120\", \"121-1000\", \"1001+\"\n\nThe client has to explicitly request `\"orderType\":
  \"HISTOGRAM_BUCKET\"`\nfor a histogram-mutated dimension.\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"Name
  of the dimension to fetch, for example `ga:browser`.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:15:\"DimensionFilter\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Dimension
  filter specifies the filtering options on a dimension.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:13:\"caseSensitive\";O:8:\"stdClass\":2:{s:11:\"description\";s:53:\"Should
  the match be case sensitive? Default is false.\";s:4:\"type\";s:7:\"boolean\";}s:13:\"dimensionName\";O:8:\"stdClass\":2:{s:11:\"description\";s:71:\"The
  dimension to filter on. A DimensionFilter must contain a dimension.\";s:4:\"type\";s:6:\"string\";}s:11:\"expressions\";O:8:\"stdClass\":3:{s:11:\"description\";s:273:\"Strings
  or regular expression to match against. Only the first value of\nthe list is used
  for comparison unless the operator is `IN_LIST`.\nIf `IN_LIST` operator, then the
  entire list is used to filter the\ndimensions as explained in the description of
  the `IN_LIST` operator.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:3:\"not\";O:8:\"stdClass\":2:{s:11:\"description\";s:144:\"Logical
  `NOT` operator. If this boolean is set to true, then the matching\ndimension values
  will be excluded in the report. The default is false.\";s:4:\"type\";s:7:\"boolean\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:11:\"description\";s:68:\"How
  to match the dimension to the expression. The default is REGEXP.\";s:4:\"enum\";a:10:{i:0;s:20:\"OPERATOR_UNSPECIFIED\";i:1;s:6:\"REGEXP\";i:2;s:11:\"BEGINS_WITH\";i:3;s:9:\"ENDS_WITH\";i:4;s:7:\"PARTIAL\";i:5;s:5:\"EXACT\";i:6;s:13:\"NUMERIC_EQUAL\";i:7;s:20:\"NUMERIC_GREATER_THAN\";i:8;s:17:\"NUMERIC_LESS_THAN\";i:9;s:7:\"IN_LIST\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:21:\"DimensionFilterClause\";O:8:\"stdClass\":3:{s:11:\"description\";s:103:\"A
  group of dimension filters. Set the operator value to specify how\nthe filters are
  logically combined.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"filters\";O:8:\"stdClass\":3:{s:11:\"description\";s:89:\"The
  repeated set of filters. They are logically combined based on the\noperator specified.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DimensionFilter\";}s:4:\"type\";s:5:\"array\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:11:\"description\";s:96:\"The
  operator for combining multiple dimension filters. If unspecified, it\nis treated
  as an `OR`.\";s:4:\"enum\";a:3:{i:0;s:20:\"OPERATOR_UNSPECIFIED\";i:1;s:2:\"OR\";i:2;s:3:\"AND\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:14:\"DynamicSegment\";O:8:\"stdClass\":3:{s:11:\"description\";s:117:\"Dynamic
  segment definition for defining the segment within the request.\nA segment can select
  users, sessions or both.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"The
  name of the dynamic segment.\";s:4:\"type\";s:6:\"string\";}s:14:\"sessionSegment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/SegmentDefinition\";s:11:\"description\";s:61:\"Session
  Segment to select sessions to include in the segment.\";}s:11:\"userSegment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/SegmentDefinition\";s:11:\"description\";s:55:\"User
  Segment to select users to include in the segment.\";}}s:4:\"type\";s:6:\"object\";}s:17:\"GetReportsRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"The
  batch request containing multiple report request.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"reportRequests\";O:8:\"stdClass\":3:{s:11:\"description\";s:197:\"Requests,
  each request will have a separate response.\nThere can be a maximum of 5 requests.
  All requests should have the same\n`dateRanges`, `viewId`, `segments`, `samplingLevel`,
  and `cohortGroup`.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ReportRequest\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:18:\"GetReportsResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:87:\"The
  main response class which holds the reports from the Reporting API\n`batchGet` call.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"reports\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Responses
  corresponding to each of the request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Report\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Metric\";O:8:\"stdClass\":3:{s:11:\"description\";s:199:\"[Metrics](https://support.google.com/analytics/answer/1033861)\nare
  the quantitative measurements. For example, the metric `ga:users`\nindicates the
  total number of users for the requested time period.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"alias\";O:8:\"stdClass\":2:{s:11:\"description\";s:328:\"An
  alias for the metric expression is an alternate name for the\nexpression. The alias
  can be used for filtering and sorting. This field\nis optional and is useful if
  the expression is not a single metric but\na complex expression which cannot be
  used in filtering and sorting.\nThe alias is also used in the response column header.\";s:4:\"type\";s:6:\"string\";}s:10:\"expression\";O:8:\"stdClass\":2:{s:11:\"description\";s:529:\"A
  metric expression in the request. An expression is constructed from one\nor more
  metrics and numbers. Accepted operators include: Plus (+), Minus\n(-), Negation
  (Unary -), Divided by (/), Multiplied by (*), Parenthesis,\nPositive cardinal numbers
  (0-9), can include decimals and is limited to\n1024 characters. Example `ga:totalRefunds/ga:users`,
  in most cases the\nmetric expression is just a single metric name like `ga:users`.\nAdding
  mixed `MetricType` (E.g., `CURRENCY` + `PERCENTAGE`) metrics\nwill result in unexpected
  results.\";s:4:\"type\";s:6:\"string\";}s:14:\"formattingType\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"Specifies
  how the metric expression should be formatted, for example\n`INTEGER`.\";s:4:\"enum\";a:6:{i:0;s:23:\"METRIC_TYPE_UNSPECIFIED\";i:1;s:7:\"INTEGER\";i:2;s:5:\"FLOAT\";i:3;s:8:\"CURRENCY\";i:4;s:7:\"PERCENT\";i:5;s:4:\"TIME\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:12:\"MetricFilter\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"MetricFilter
  specifies the filter on a metric.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:15:\"comparisonValue\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"The
  value to compare against.\";s:4:\"type\";s:6:\"string\";}s:10:\"metricName\";O:8:\"stdClass\":2:{s:11:\"description\";s:176:\"The
  metric that will be filtered on. A metricFilter must contain a metric\nname. A metric
  name can be an alias earlier defined as a metric or it can\nalso be a metric expression.\";s:4:\"type\";s:6:\"string\";}s:3:\"not\";O:8:\"stdClass\":2:{s:11:\"description\";s:141:\"Logical
  `NOT` operator. If this boolean is set to true, then the matching\nmetric values
  will be excluded in the report. The default is false.\";s:4:\"type\";s:7:\"boolean\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:11:\"description\";s:200:\"Is
  the metric `EQUAL`, `LESS_THAN` or `GREATER_THAN` the\ncomparisonValue, the default
  is `EQUAL`. If the operator is\n`IS_MISSING`, checks if the metric is missing and
  would ignore the\ncomparisonValue.\";s:4:\"enum\";a:5:{i:0;s:20:\"OPERATOR_UNSPECIFIED\";i:1;s:5:\"EQUAL\";i:2;s:9:\"LESS_THAN\";i:3;s:12:\"GREATER_THAN\";i:4;s:10:\"IS_MISSING\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:18:\"MetricFilterClause\";O:8:\"stdClass\":3:{s:11:\"description\";s:111:\"Represents
  a group of metric filters.\nSet the operator value to specify how the filters are
  logically combined.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"filters\";O:8:\"stdClass\":3:{s:11:\"description\";s:89:\"The
  repeated set of filters. They are logically combined based on the\noperator specified.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/MetricFilter\";}s:4:\"type\";s:5:\"array\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:11:\"description\";s:93:\"The
  operator for combining multiple metric filters. If unspecified, it is\ntreated as
  an `OR`.\";s:4:\"enum\";a:3:{i:0;s:20:\"OPERATOR_UNSPECIFIED\";i:1;s:2:\"OR\";i:2;s:3:\"AND\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:12:\"MetricHeader\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"The
  headers for the metrics.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:19:\"metricHeaderEntries\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Headers
  for the metrics in the response.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/MetricHeaderEntry\";}s:4:\"type\";s:5:\"array\";}s:12:\"pivotHeaders\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"Headers
  for the pivots in the response.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/PivotHeader\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:17:\"MetricHeaderEntry\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"Header
  for the metrics.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"The
  name of the header.\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"The
  type of the metric, for example `INTEGER`.\";s:4:\"enum\";a:6:{i:0;s:23:\"METRIC_TYPE_UNSPECIFIED\";i:1;s:7:\"INTEGER\";i:2;s:5:\"FLOAT\";i:3;s:8:\"CURRENCY\";i:4;s:7:\"PERCENT\";i:5;s:4:\"TIME\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"OrFiltersForSegment\";O:8:\"stdClass\":3:{s:11:\"description\";s:86:\"A
  list of segment filters in the `OR` group are combined with the logical OR\noperator.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:20:\"segmentFilterClauses\";O:8:\"stdClass\":3:{s:11:\"description\";s:60:\"List
  of segment filters to be combined with a `OR` operator.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/SegmentFilterClause\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:7:\"OrderBy\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Specifies
  the sorting options.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"fieldName\";O:8:\"stdClass\":2:{s:11:\"description\";s:193:\"The
  field which to sort by. The default sort order is ascending. Example:\n`ga:browser`.\nNote,
  that you can only specify one field for sort here. For example,\n`ga:browser, ga:city`
  is not valid.\";s:4:\"type\";s:6:\"string\";}s:9:\"orderType\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"The
  order type. The default orderType is `VALUE`.\";s:4:\"enum\";a:6:{i:0;s:22:\"ORDER_TYPE_UNSPECIFIED\";i:1;s:5:\"VALUE\";i:2;s:5:\"DELTA\";i:3;s:5:\"SMART\";i:4;s:16:\"HISTOGRAM_BUCKET\";i:5;s:20:\"DIMENSION_AS_INTEGER\";}s:4:\"type\";s:6:\"string\";}s:9:\"sortOrder\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"The
  sorting order for the field.\";s:4:\"enum\";a:3:{i:0;s:22:\"SORT_ORDER_UNSPECIFIED\";i:1;s:9:\"ASCENDING\";i:2;s:10:\"DESCENDING\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Pivot\";O:8:\"stdClass\":3:{s:11:\"description\";s:173:\"The
  Pivot describes the pivot section in the request.\nThe Pivot helps rearrange the
  information in the table for certain reports\nby pivoting your data on a second
  dimension.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:22:\"dimensionFilterClauses\";O:8:\"stdClass\":3:{s:11:\"description\";s:481:\"DimensionFilterClauses
  are logically combined with an `AND` operator: only\ndata that is included by all
  these DimensionFilterClauses contributes to\nthe values in this pivot region. Dimension
  filters can be used to restrict\nthe columns shown in the pivot region. For example
  if you have\n`ga:browser` as the requested dimension in the pivot region, and you\nspecify
  key filters to restrict `ga:browser` to only \"IE\" or \"Firefox\",\nthen only those
  two browsers would show up as columns.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/DimensionFilterClause\";}s:4:\"type\";s:5:\"array\";}s:10:\"dimensions\";O:8:\"stdClass\":3:{s:11:\"description\";s:193:\"A
  list of dimensions to show as pivot columns. A Pivot can have a maximum\nof 4 dimensions.
  Pivot dimensions are part of the restriction on the\ntotal number of dimensions
  allowed in the request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Dimension\";}s:4:\"type\";s:5:\"array\";}s:13:\"maxGroupCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:107:\"Specifies
  the maximum number of groups to return.\nThe default value is 10, also the maximum
  value is 1,000.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"metrics\";O:8:\"stdClass\":3:{s:11:\"description\";s:111:\"The
  pivot metrics. Pivot metrics are part of the\nrestriction on total number of metrics
  allowed in the request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Metric\";}s:4:\"type\";s:5:\"array\";}s:10:\"startGroup\";O:8:\"stdClass\":3:{s:11:\"description\";s:755:\"If
  k metrics were requested, then the response will contain some\ndata-dependent multiple
  of k columns in the report.  E.g., if you pivoted\non the dimension `ga:browser`
  then you'd get k columns for \"Firefox\", k\ncolumns for \"IE\", k columns for \"Chrome\",
  etc. The ordering of the groups\nof columns is determined by descending order of
  \"total\" for the first of\nthe k values.  Ties are broken by lexicographic ordering
  of the first\npivot dimension, then lexicographic ordering of the second pivot\ndimension,
  and so on.  E.g., if the totals for the first value for\nFirefox, IE, and Chrome
  were 8, 2, 8, respectively, the order of columns\nwould be Chrome, Firefox, IE.\n\nThe
  following let you choose which of the groups of k columns are\nincluded in the response.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:11:\"PivotHeader\";O:8:\"stdClass\":3:{s:11:\"description\";s:66:\"The
  headers for each of the pivot sections defined in the request.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:18:\"pivotHeaderEntries\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  single pivot section header.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/PivotHeaderEntry\";}s:4:\"type\";s:5:\"array\";}s:21:\"totalPivotGroupsCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"The
  total number of groups for this pivot.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:16:\"PivotHeaderEntry\";O:8:\"stdClass\":3:{s:11:\"description\";s:123:\"The
  headers for the each of the metric column corresponding to the metrics\nrequested
  in the pivots section of the response.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"dimensionNames\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"The
  name of the dimensions in the pivot response.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:15:\"dimensionValues\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"The
  values for the dimensions in the pivot.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"metric\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:31:\"#/definitions/MetricHeaderEntry\";s:11:\"description\";s:46:\"The
  metric header for the metric in the pivot.\";}}s:4:\"type\";s:6:\"object\";}s:16:\"PivotValueRegion\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"The
  metric values in the pivot region.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"values\";O:8:\"stdClass\":3:{s:11:\"description\";s:55:\"The
  values of the metrics in each of the pivot regions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Report\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"The
  data response corresponding to the request.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"columnHeader\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/ColumnHeader\";s:11:\"description\";s:19:\"The
  column headers.\";}s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/ReportData\";s:11:\"description\";s:14:\"Response
  data.\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"Page
  token to retrieve the next page of results in the list.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:10:\"ReportData\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"The
  data part of the report.\";s:10:\"properties\";O:8:\"stdClass\":9:{s:17:\"dataLastRefreshed\";O:8:\"stdClass\":3:{s:11:\"description\";s:142:\"The
  last time the data in the report was refreshed. All the hits received\nbefore this
  timestamp are included in the calculation of the report.\";s:6:\"format\";s:15:\"google-datetime\";s:4:\"type\";s:6:\"string\";}s:12:\"isDataGolden\";O:8:\"stdClass\":2:{s:11:\"description\";s:166:\"Indicates
  if response to this request is golden or not. Data is\ngolden when the exact same
  request will not produce any new results if\nasked at a later point in time.\";s:4:\"type\";s:7:\"boolean\";}s:8:\"maximums\";O:8:\"stdClass\":3:{s:11:\"description\";s:150:\"Minimum
  and maximum values seen over all matching rows. These are both\nempty when `hideValueRanges`
  in the request is false, or when\nrowCount is zero.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DateRangeValues\";}s:4:\"type\";s:5:\"array\";}s:8:\"minimums\";O:8:\"stdClass\":3:{s:11:\"description\";s:150:\"Minimum
  and maximum values seen over all matching rows. These are both\nempty when `hideValueRanges`
  in the request is false, or when\nrowCount is zero.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DateRangeValues\";}s:4:\"type\";s:5:\"array\";}s:8:\"rowCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"Total
  number of matching rows for this query.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"rows\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"There's
  one ReportRow for every unique combination of dimensions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/ReportRow\";}s:4:\"type\";s:5:\"array\";}s:17:\"samplesReadCounts\";O:8:\"stdClass\":3:{s:11:\"description\";s:309:\"If
  the results are\n[sampled](https://support.google.com/analytics/answer/2637192),\nthis
  returns the total number of samples read, one entry per date range.\nIf the results
  are not sampled this field will not be defined. See\n[developer guide](/analytics/devguides/reporting/core/v4/basics#sampling)\nfor
  details.\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:18:\"samplingSpaceSizes\";O:8:\"stdClass\":3:{s:11:\"description\";s:312:\"If
  the results are\n[sampled](https://support.google.com/analytics/answer/2637192),\nthis
  returns the total number of\nsamples present, one entry per date range. If the results
  are not sampled\nthis field will not be defined. See\n[developer guide](/analytics/devguides/reporting/core/v4/basics#sampling)\nfor
  details.\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:6:\"totals\";O:8:\"stdClass\":3:{s:11:\"description\";s:426:\"For
  each requested date range, for the set of all rows that match\nthe query, every
  requested value format gets a total. The total\nfor a value format is computed by
  first totaling the metrics\nmentioned in the value format and then evaluating the
  value\nformat as a scalar expression.  E.g., The \"totals\" for\n`3 / (ga:sessions
  + 2)` we compute\n`3 / ((sum of all relevant ga:sessions) + 2)`.\nTotals are computed
  before pagination.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DateRangeValues\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:13:\"ReportRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"The
  main request class which specifies the Reporting API request.\";s:10:\"properties\";O:8:\"stdClass\":17:{s:11:\"cohortGroup\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:25:\"#/definitions/CohortGroup\";s:11:\"description\";s:240:\"Cohort
  group associated with this request. If there is a cohort group\nin the request the
  `ga:cohort` dimension must be present.\nEvery [ReportRequest](#ReportRequest) within
  a `batchGet` method must\ncontain the same `cohortGroup` definition.\";}s:10:\"dateRanges\";O:8:\"stdClass\":3:{s:11:\"description\";s:680:\"Date
  ranges in the request. The request can have a maximum of 2 date\nranges. The response
  will contain a set of metric values for each\ncombination of the dimensions for
  each date range in the request. So, if\nthere are two date ranges, there will be
  two set of metric values, one for\nthe original date range and one for the second
  date range.\nThe `reportRequest.dateRanges` field should not be specified for cohorts\nor
  Lifetime value requests.\nIf a date range is not provided, the default date range
  is (startDate:\ncurrent date - 7 days, endDate: current date - 1 day). Every\n[ReportRequest](#ReportRequest)
  within a `batchGet` method must\ncontain the same `dateRanges` definition.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DateRange\";}s:4:\"type\";s:5:\"array\";}s:22:\"dimensionFilterClauses\";O:8:\"stdClass\":3:{s:11:\"description\";s:261:\"The
  dimension filter clauses for filtering Dimension Values. They are\nlogically combined
  with the `AND` operator. Note that filtering occurs\nbefore any dimensions are aggregated,
  so that the returned metrics\nrepresent the total for only the relevant dimensions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/DimensionFilterClause\";}s:4:\"type\";s:5:\"array\";}s:10:\"dimensions\";O:8:\"stdClass\":3:{s:11:\"description\";s:68:\"The
  dimensions requested.\nRequests can have a total of 7 dimensions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Dimension\";}s:4:\"type\";s:5:\"array\";}s:17:\"filtersExpression\";O:8:\"stdClass\":2:{s:11:\"description\";s:480:\"Dimension
  or metric filters that restrict the data returned for your\nrequest. To use the
  `filtersExpression`, supply a dimension or metric on\nwhich to filter, followed
  by the filter expression. For example, the\nfollowing expression selects `ga:browser`
  dimension which starts with\nFirefox; `ga:browser=~^Firefox`. For more information
  on dimensions\nand metric filters, see\n[Filters reference](https://developers.google.com/analytics/devguides/reporting/core/v3/reference#filters).\";s:4:\"type\";s:6:\"string\";}s:10:\"hideTotals\";O:8:\"stdClass\":2:{s:11:\"description\";s:141:\"If
  set to true, hides the total of all metrics for all the matching rows,\nfor every
  date range. The default false and will return the totals.\";s:4:\"type\";s:7:\"boolean\";}s:15:\"hideValueRanges\";O:8:\"stdClass\":2:{s:11:\"description\";s:127:\"If
  set to true, hides the minimum and maximum across all matching rows.\nThe default
  is false and the value ranges are returned.\";s:4:\"type\";s:7:\"boolean\";}s:16:\"includeEmptyRows\";O:8:\"stdClass\":2:{s:11:\"description\";s:151:\"If
  set to false, the response does not include rows if all the retrieved\nmetrics are
  equal to zero. The default is false which will exclude these\nrows.\";s:4:\"type\";s:7:\"boolean\";}s:19:\"metricFilterClauses\";O:8:\"stdClass\":3:{s:11:\"description\";s:235:\"The
  metric filter clauses. They are logically combined with the `AND`\noperator.  Metric
  filters look at only the first date range and not the\ncomparing date range. Note
  that filtering on metrics occurs after the\nmetrics are aggregated.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/MetricFilterClause\";}s:4:\"type\";s:5:\"array\";}s:7:\"metrics\";O:8:\"stdClass\":3:{s:11:\"description\";s:106:\"The
  metrics requested.\nRequests must specify at least one metric. Requests can have
  a\ntotal of 10 metrics.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Metric\";}s:4:\"type\";s:5:\"array\";}s:8:\"orderBys\";O:8:\"stdClass\":3:{s:11:\"description\";s:182:\"Sort
  order on output rows. To compare two rows, the elements of the\nfollowing are applied
  in order until a difference is found.  All date\nranges in the output get the same
  row order.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/OrderBy\";}s:4:\"type\";s:5:\"array\";}s:8:\"pageSize\";O:8:\"stdClass\":3:{s:11:\"description\";s:547:\"Page
  size is for paging and specifies the maximum number of returned rows.\nPage size
  should be >= 0. A query returns the default of 1,000 rows.\nThe Analytics Core Reporting
  API returns a maximum of 10,000 rows per\nrequest, no matter how many you ask for.
  It can also return fewer rows\nthan requested, if there aren't as many dimension
  segments as you expect.\nFor instance, there are fewer than 300 possible values
  for `ga:country`,\nso when segmenting only by country, you can't get more than 300
  rows,\neven if you set `pageSize` to a higher value.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:9:\"pageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:243:\"A
  continuation token to get the next page of the results. Adding this to\nthe request
  will return the rows after the pageToken. The pageToken should\nbe the value returned
  in the nextPageToken parameter in the response to\nthe GetReports request.\";s:4:\"type\";s:6:\"string\";}s:6:\"pivots\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"The
  pivot definitions. Requests can have a maximum of 2 pivots.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Pivot\";}s:4:\"type\";s:5:\"array\";}s:13:\"samplingLevel\";O:8:\"stdClass\":3:{s:11:\"description\";s:379:\"The
  desired report\n[sample](https://support.google.com/analytics/answer/2637192) size.\nIf
  the the `samplingLevel` field is unspecified the `DEFAULT` sampling\nlevel is used.
  Every [ReportRequest](#ReportRequest) within a\n`batchGet` method must contain the
  same `samplingLevel` definition. See\n[developer guide](/analytics/devguides/reporting/core/v4/basics#sampling)\n
  for details.\";s:4:\"enum\";a:4:{i:0;s:20:\"SAMPLING_UNSPECIFIED\";i:1;s:7:\"DEFAULT\";i:2;s:5:\"SMALL\";i:3;s:5:\"LARGE\";}s:4:\"type\";s:6:\"string\";}s:8:\"segments\";O:8:\"stdClass\":3:{s:11:\"description\";s:324:\"Segment
  the data returned for the request. A segment definition helps look\nat a subset
  of the segment request. A request can contain up to four\nsegments. Every [ReportRequest](#ReportRequest)
  within a\n`batchGet` method must contain the same `segments` definition. Requests\nwith
  segments must have the `ga:segment` dimension.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Segment\";}s:4:\"type\";s:5:\"array\";}s:6:\"viewId\";O:8:\"stdClass\":2:{s:11:\"description\";s:202:\"The
  Analytics\n[view ID](https://support.google.com/analytics/answer/1009618)\nfrom
  which to retrieve data. Every [ReportRequest](#ReportRequest)\nwithin a `batchGet`
  method must contain the same `viewId`.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:9:\"ReportRow\";O:8:\"stdClass\":3:{s:11:\"description\";s:20:\"A
  row in the report.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"dimensions\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"List
  of requested dimensions.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:7:\"metrics\";O:8:\"stdClass\":3:{s:11:\"description\";s:45:\"List
  of metrics for each requested DateRange.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DateRangeValues\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Segment\";O:8:\"stdClass\":3:{s:11:\"description\";s:208:\"The
  segment definition, if the report needs to be segmented.\nA Segment is a subset
  of the Analytics data. For example, of the entire\nset of users, one Segment might
  be users from a particular country or city.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:14:\"dynamicSegment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DynamicSegment\";s:11:\"description\";s:44:\"A
  dynamic segment definition in the request.\";}s:9:\"segmentId\";O:8:\"stdClass\":2:{s:11:\"description\";s:71:\"The
  segment ID of a built-in or custom segment, for example `gaid::-3`.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:17:\"SegmentDefinition\";O:8:\"stdClass\":3:{s:11:\"description\";s:127:\"SegmentDefinition
  defines the segment to be a set of SegmentFilters which\nare combined together with
  a logical `AND` operation.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"segmentFilters\";O:8:\"stdClass\":3:{s:11:\"description\";s:108:\"A
  segment is defined by a set of segment filters which are combined\ntogether with
  a logical `AND` operation.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/SegmentFilter\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:22:\"SegmentDimensionFilter\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Dimension
  filter specifies the filtering options on a dimension.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:13:\"caseSensitive\";O:8:\"stdClass\":2:{s:11:\"description\";s:67:\"Should
  the match be case sensitive, ignored for `IN_LIST` operator.\";s:4:\"type\";s:7:\"boolean\";}s:13:\"dimensionName\";O:8:\"stdClass\":2:{s:11:\"description\";s:60:\"Name
  of the dimension for which the filter is being applied.\";s:4:\"type\";s:6:\"string\";}s:11:\"expressions\";O:8:\"stdClass\":3:{s:11:\"description\";s:73:\"The
  list of expressions, only the first element is used for all operators\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:18:\"maxComparisonValue\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Maximum
  comparison values for `BETWEEN` match type.\";s:4:\"type\";s:6:\"string\";}s:18:\"minComparisonValue\";O:8:\"stdClass\":2:{s:11:\"description\";s:51:\"Minimum
  comparison values for `BETWEEN` match type.\";s:4:\"type\";s:6:\"string\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"The
  operator to use to match the dimension with the expressions.\";s:4:\"enum\";a:10:{i:0;s:20:\"OPERATOR_UNSPECIFIED\";i:1;s:6:\"REGEXP\";i:2;s:11:\"BEGINS_WITH\";i:3;s:9:\"ENDS_WITH\";i:4;s:7:\"PARTIAL\";i:5;s:5:\"EXACT\";i:6;s:7:\"IN_LIST\";i:7;s:17:\"NUMERIC_LESS_THAN\";i:8;s:20:\"NUMERIC_GREATER_THAN\";i:9;s:15:\"NUMERIC_BETWEEN\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"SegmentFilter\";O:8:\"stdClass\":3:{s:11:\"description\";s:280:\"SegmentFilter
  defines the segment to be either a simple or a sequence\nsegment. A simple segment
  condition contains dimension and metric conditions\nto select the sessions or users.
  A sequence segment condition can be used to\nselect users or sessions based on sequential
  conditions.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"not\";O:8:\"stdClass\":2:{s:11:\"description\";s:551:\"If
  true, match the complement of simple or sequence segment.\nFor example, to match
  all visits not from \"New York\", we can define the\nsegment as follows:\n\n      \"sessionSegment\":
  {\n        \"segmentFilters\": [{\n          \"simpleSegment\" :{\n            \"orFiltersForSegment\":
  [{\n              \"segmentFilterClauses\":[{\n                \"dimensionFilter\":
  {\n                  \"dimensionName\": \"ga:city\",\n                  \"expressions\":
  [\"New York\"]\n                }\n              }]\n            }]\n          },\n
  \         \"not\": \"True\"\n        }]\n      },\";s:4:\"type\";s:7:\"boolean\";}s:15:\"sequenceSegment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/SequenceSegment\";s:11:\"description\";s:184:\"Sequence
  conditions consist of one or more steps, where each step is\ndefined by one or more
  dimension/metric conditions. Multiple steps can\nbe combined with special sequence
  operators.\";}s:13:\"simpleSegment\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:27:\"#/definitions/SimpleSegment\";s:11:\"description\";s:99:\"A
  Simple segment conditions consist of one or more dimension/metric\nconditions that
  can be combined\";}}s:4:\"type\";s:6:\"object\";}s:19:\"SegmentFilterClause\";O:8:\"stdClass\":3:{s:11:\"description\";s:95:\"Filter
  Clause to be used in a segment definition, can be wither a metric or\na dimension
  filter.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:15:\"dimensionFilter\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/SegmentDimensionFilter\";s:11:\"description\";s:44:\"Dimension
  Filter for the segment definition.\";}s:12:\"metricFilter\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:33:\"#/definitions/SegmentMetricFilter\";s:11:\"description\";s:41:\"Metric
  Filter for the segment definition.\";}s:3:\"not\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Matches
  the complement (`!`) of the filter.\";s:4:\"type\";s:7:\"boolean\";}}s:4:\"type\";s:6:\"object\";}s:19:\"SegmentMetricFilter\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"Metric
  filter to be used in a segment filter clause.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:15:\"comparisonValue\";O:8:\"stdClass\":2:{s:11:\"description\";s:110:\"The
  value to compare against. If the operator is `BETWEEN`, this value is\ntreated as
  minimum comparison value.\";s:4:\"type\";s:6:\"string\";}s:18:\"maxComparisonValue\";O:8:\"stdClass\":2:{s:11:\"description\";s:57:\"Max
  comparison value is only used for `BETWEEN` operator.\";s:4:\"type\";s:6:\"string\";}s:10:\"metricName\";O:8:\"stdClass\":2:{s:11:\"description\";s:81:\"The
  metric that will be filtered on. A `metricFilter` must contain a\nmetric name.\";s:4:\"type\";s:6:\"string\";}s:8:\"operator\";O:8:\"stdClass\":3:{s:11:\"description\";s:84:\"Specifies
  is the operation to perform to compare the metric. The default\nis `EQUAL`.\";s:4:\"enum\";a:5:{i:0;s:20:\"UNSPECIFIED_OPERATOR\";i:1;s:9:\"LESS_THAN\";i:2;s:12:\"GREATER_THAN\";i:3;s:5:\"EQUAL\";i:4;s:7:\"BETWEEN\";}s:4:\"type\";s:6:\"string\";}s:5:\"scope\";O:8:\"stdClass\":3:{s:11:\"description\";s:257:\"Scope
  for a metric defines the level at which that metric is defined.  The\nspecified
  metric scope must be equal to or greater than its primary scope\nas defined in the
  data model. The primary scope is defined by if the\nsegment is selecting users or
  sessions.\";s:4:\"enum\";a:5:{i:0;s:17:\"UNSPECIFIED_SCOPE\";i:1;s:7:\"PRODUCT\";i:2;s:3:\"HIT\";i:3;s:7:\"SESSION\";i:4;s:4:\"USER\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"SegmentSequenceStep\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"A
  segment sequence definition.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"matchType\";O:8:\"stdClass\":3:{s:11:\"description\";s:83:\"Specifies
  if the step immediately precedes or can be any time before the\nnext step.\";s:4:\"enum\";a:3:{i:0;s:22:\"UNSPECIFIED_MATCH_TYPE\";i:1;s:8:\"PRECEDES\";i:2;s:20:\"IMMEDIATELY_PRECEDES\";}s:4:\"type\";s:6:\"string\";}s:19:\"orFiltersForSegment\";O:8:\"stdClass\":3:{s:11:\"description\";s:97:\"A
  sequence is specified with a list of Or grouped filters which are\ncombined with
  `AND` operator.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/OrFiltersForSegment\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:15:\"SequenceSegment\";O:8:\"stdClass\":3:{s:11:\"description\";s:184:\"Sequence
  conditions consist of one or more steps, where each step is defined\nby one or more
  dimension/metric conditions. Multiple steps can be combined\nwith special sequence
  operators.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:28:\"firstStepShouldMatchFirstHit\";O:8:\"stdClass\":2:{s:11:\"description\";s:89:\"If
  set, first step condition must match the first hit of the visitor (in\nthe date
  range).\";s:4:\"type\";s:7:\"boolean\";}s:20:\"segmentSequenceSteps\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"The
  list of steps in the sequence.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/SegmentSequenceStep\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:13:\"SimpleSegment\";O:8:\"stdClass\":3:{s:11:\"description\";s:100:\"A
  Simple segment conditions consist of one or more dimension/metric\nconditions that
  can be combined.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:19:\"orFiltersForSegment\";O:8:\"stdClass\":3:{s:11:\"description\";s:80:\"A
  list of segment filters groups which are combined with logical `AND`\noperator.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/OrFiltersForSegment\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}}}"
info: !php/object "O:8:\"stdClass\":10:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";}s:11:\"description\";s:31:\"Accesses
  Analytics report data.\";s:5:\"title\";s:26:\"Google Analytics Reporting\";s:7:\"version\";s:2:\"v4\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:116:\"https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\";}s:8:\"x-origin\";O:8:\"stdClass\":3:{s:6:\"format\";s:6:\"google\";s:3:\"url\";s:68:\"https://analyticsreporting.googleapis.com/$discovery/rest?version=v4\";s:7:\"version\";s:2:\"v1\";}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:18:\"analyticsreporting\";}"
paths: []
...
