---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:11:\"Sample
  spec\";s:11:\"description\";s:23:\"Sample spec for Swagger\";s:14:\"termsOfService\";s:24:\"http://swagger.io/terms/\";}"
basePath: /
paths:
  /msdapi/project/user:
    post:
      tags:
      - Users
      description: Creates a new User
      operationId: for the URL
      produces:
      - json
      parameters:
      - name: Job Parameters
        in: body
        description: Job to create a new User
        required: true
        schema:
          $ref: '#/definitions/createUser'
      responses:
        200:
          description: Creates a new user
          schema:
            $ref: '#/definitions/successResponseCreateUser'
        400:
          description: Error creating a user
          schema:
            $ref: '#/definitions/errorResponseCreateUser'
    get:
      tags:
      - Users
      description: Gets all Users
      operationId: getAllUsers
      produces:
      - application/json
      parameters:
      - scehma:
          $ref: '#/definitions/getAllUsers'
      responses:
        200:
          description: Lists all Users
          scehma:
            $ref: '#/definitions/successResponse'
        400:
          description: No users present
          schema:
            $ref: '#/definitions/errorResponse'
  /msdapi/project/user/{id}:
    get:
      tags:
      - Users
      description: Get a User by ID
      operationId: for the URL
      produces:
      - json
      parameters:
      - name: id
        in: path
        description: the id of the user to retrieve
        required: true
        type: string
      responses:
        200:
          description: Updates the details of an existing User successfully
          schema:
            $ref: '#/definitions/successResponse'
        400:
          description: Error Updating details of a user
          schema:
            $ref: '#/definitions/errorResponse'
    put:
      tags:
      - Users
      description: Update details of an user
      operationId: for the URL
      produces:
      - json
      parameters:
      - name: id
        in: path
        description: the id of the user to be updated
        required: true
        type: string
      - name: User
        in: body
        description: the updated User object
        required: true
        schema:
          $ref: '#/definitions/updateUser'
      responses:
        200:
          description: Updates the details of an existing User successfully
          schema:
            $ref: '#/definitions/successResponseUpdateUser'
        400:
          description: Error Updating details of a user
          schema:
            $ref: '#/definitions/errorResponse'
    delete:
      tags:
      - Users
      description: Deletes a User
      operationId: delete
      produces:
      - json
      parameters:
      - name: id
        in: path
        description: the id of the user to be deleted
        required: true
        type: string
      responses:
        200:
          description: Delete a User successfully, and return all the remaining users.
        400:
          description: Error Deleting a user
  /msdapi/project/user/login:
    post:
      tags:
      - Users
      description: Checks user login
      operationId: for the URL
      produces:
      - json
      parameters:
      - name: Job Parameters
        in: body
        description: Job to check User credentials
        required: true
        schema:
          $ref: '#/definitions/loginUser'
      responses:
        200:
          description: Logs in an user if s/he has valid credentials
          schema:
            $ref: '#/definitions/successResponse'
        400:
          description: Error Logging in a User
          schema:
            $ref: '#/definitions/errorResponse'
  /msdapi/project/user/logout:
    post:
      tags:
      - Users
      description: Logs out a User
      oprationId: for the URL
      parameters:
      - description: Job to logout a User
      responses:
        200:
          description: Logs out a user
          schema:
            $ref: '#/definitions/successResponse'
        400:
          description: Error Logging out a user
          schema:
            $ref: '#/definitions/errorResponse'
  /msdapi/project/user/loggedin:
    get:
      tags:
      - Users
      description: Checks if the user is logged in. Used for session management.
      operationId: for the URL
      produces: []
      parameters:
      - description: Job to check if User is logged in
      responses:
        200:
          description: Maintains a session if user is logged in with valid credentials
          schema:
            $ref: '#/definitions/successResponse'
        400:
          description: Error if user is not logged-in
          schema:
            $ref: '#/definitions/errorResponse'
  /msdapi/project/user/{userId}/comments:
    get:
      tags:
      - Comment
      description: Retrieve a list of comments for the given user
      operationId: getCommentForUser
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        type: string
      responses:
        200:
          description: The comments posted by the user with the given userId
          schema:
            $ref: '#/definitions/comment'
  /msdapi/project/user/{userId}/question:
    post:
      tags:
      - Question
      description: Create a new question object for the given user
      operationId: createQuestion
      produces:
      - application/json
      parameters:
      - name: Question Body
        in: body
        description: The new question to be created
        required: true
        schema:
          $ref: '#/definitions/createQuestion'
      - name: userId
        in: path
        description: ID of the user who posted the question
        required: true
        type: string
      responses:
        200:
          description: A unique question ID will be returned after creating a question
          schema:
            $ref: '#/definitions/createQuestionResponse'
  /msdapi/project/admin/user:
    post:
      tags:
      - Users
      description: Creates a new Admin User
      operationId: for the URL
      produces:
      - json
      parameters:
      - name: Job Parameters
        in: body
        description: Job to create a new Admin User
        required: true
        schema:
          $ref: '#/definitions/createAdmin'
      responses:
        200:
          description: Creates a new Admin user if none is present
          schema:
            $ref: '#/definitions/successResponseCreateUser'
        400:
          description: Error creating an Admin user as one is already present or username
            matches with other users
  /msdapi/project/petFavoriteList:
    post:
      tags:
      - Users
      description: This api creates a favorite list for user to watch
      operationId: for the URL
      produces:
      - application/json
      parameters:
      - name: Favorite Object
        in: body
        description: petID and userId to add to favorite list
        required: true
        schema:
          $ref: '#/definitions/createFavoriteList'
      responses:
        200:
          description: a json of the pet created
          schema:
            $ref: '#/definitions/successResponseFavoriteList'
  /msdapi/project/pet:
    post:
      tags:
      - Pets
      description: This api creates a pet in the database, user needs to be an admin
        to create a pet
      operationId: for the URL
      produces:
      - application/json
      parameters:
      - name: Pet Object
        in: body
        description: Pet to add to the database
        required: true
        schema:
          $ref: '#/definitions/createPet'
      responses:
        200:
          description: a json of the pet created
          schema:
            $ref: '#/definitions/successResponseCreatePet'
  /msdapi/project/pet/{id}:
    delete:
      tags:
      - Pets
      description: Deletes a pet based on its id
      operationId: delete
      produces:
      - json
      parameters:
      - name: id
        in: path
        description: the id of the pet to be deleted
        required: true
        type: string
      - name: userId
        in: body
        description: the userId of admin
        required: true
        type: string
        schema:
          $ref: '#/definitions/deletePet'
      responses:
        200:
          description: A json object that indicates if the operation succeeds and
            how many rows are affected.
          schema:
            $ref: '#/definitions/mongoRemoveResponse'
    get:
      tags:
      - Pets
      description: Returns the status of a pet
      operationId: findById
      produces:
      - json
      parameters:
      - name: id
        in: path
        description: id of the pet to retrieve
        required: true
        type: string
      responses:
        200:
          description: response for retrieving a pet
          schema:
            $ref: '#/definitions/pet'
    put:
      tags:
      - Pets
      description: This api modifies a pet in the database, user need to be an adim
        to update a pet, also after an update is complete, all the watching users
        are notified
      operationId: for the URL
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: the id of the pet to be updated
        required: true
        type: string
      - name: Pet
        in: body
        description: the updated Pet Object
        required: true
        schema:
          $ref: '#/definitions/createPet'
      responses:
        200:
          description: a json of the pet modified
          schema:
            $ref: '#/definitions/successResponseUpdatePet'
  /msdapi/project/listAllPets:
    get:
      tags:
      - Pets
      description: Lists all the pets in the database
      operationId: getAllPets
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/getAllPets'
      responses:
        200:
          description: lists all the pets in json format
  /msdapi/project/pet/availability/{availability}:
    get:
      tags:
      - Pets
      description: Lists all the pets with the given availability
      operationId: getPetByAvailability
      produces:
      - application/json
      parameters:
      - name: availability
        in: path
        description: availability of the pets that you want to search
        required: true
        type: boolean
      response:
        200:
          description: response
          schema:
            $ref: '#/definitions/pet'
  /msdapi/project/pet/category/{category}:
    get:
      tags:
      - Pets
      description: Lists all the pets that match the given category
      operationId: getPetByCategory
      produces:
      - application/json
      parameters:
      - name: category
        in: path
        description: category of the pets that you want to search, like cat, dog or
          fish
        required: true
        type: string
      response:
        200:
          description: response
          schema:
            $ref: '#/definitions/pet'
  /msdapi/project/question/{questionId}:
    delete:
      tags:
      - Question
      description: Deletes a question
      operationId: deleteQuestion
      produces:
      - application/json
      parameters:
      - name: questionId
        in: path
        description: ID of the question to delete
        required: true
        type: string
      responses:
        200:
          description: delete response
    get:
      tags:
      - Question
      description: Retrieve a question object
      operationId: getQuestionById
      produces:
      - application/json
      parameters:
      - name: questionId
        in: path
        description: ID of the question to delete
        required: true
        type: string
      responses:
        200:
          description: A question object
          schema:
            $ref: '#/definitions/question'
  /msdapi/project/pet/{petId}/comments:
    post:
      tags:
      - Comment
      description: Create a new comment object
      operationId: createComment
      produces:
      - application/json
      parameters:
      - name: Comment Body
        in: body
        description: The new comment to be created
        required: true
        schema:
          $ref: '#/definitions/createComment'
      - name: petId
        in: path
        description: ID of the pet which is commented on
        required: true
        type: string
      responses:
        200:
          description: A unique comment ID will be returned after creating a question
          schema:
            $ref: '#/definitions/createCommentResponse'
    get:
      tags:
      - Comment
      description: Retrieve a list of comments for the given pet
      operationId: getCommentForPet
      produces:
      - application/json
      parameters:
      - name: petId
        in: path
        description: ID of the pet
        required: true
        type: string
      responses:
        200:
          description: The comments posted to the pet with the given Id
          schema:
            $ref: '#/definitions/comment'
  /msdapi/project/comments/{commentId}:
    get:
      tags:
      - Comment
      description: Retrieve a comment object with the given ID
      operationId: getComment
      produces:
      - application/json
      parameters:
      - name: commentId
        in: path
        description: ID of the comment to be retrieved
        required: true
        type: string
      responses:
        200:
          description: The comment with the requested ID
          schema:
            $ref: '#/definitions/comment'
produces:
- application/json
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":25:{s:10:\"createUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"username\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"name5\";}s:8:\"password\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"name5\";}s:9:\"firstName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"fn5\";}s:8:\"lastName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"ln5\";}s:6:\"emails\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:14:\"name5@name.com\";}s:6:\"phones\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:1:{i:0;s:3:\"206\";}}s:9:\"favorites\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:0:{}}s:13:\"notifications\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:0:{}}}}s:11:\"createAdmin\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"username\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"admin\";}s:8:\"password\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"admin\";}s:9:\"firstName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"admin\";}s:8:\"lastName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"admin\";}s:6:\"emails\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:15:\"admin@admin.com\";}s:6:\"phones\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:1:{i:0;s:3:\"777\";}}s:9:\"favorites\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:0:{}}s:13:\"notifications\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:0:{}}}}s:18:\"createFavoriteList\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"userId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"583f929ac1bc4d0ed0c2aa78\";}s:5:\"petId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"583f933ec1bc4d0ed0c2aa7a\";}}}s:25:\"successResponseCreateUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"name5\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:60:\"$2a$10$aMh.RHL7W7kLIIa05pSMR.7H36/LCc5nOT84wAq4qM.lUvfd5dE6C\";}s:9:\"firstName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"fn5\";}s:8:\"lastName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"ln5\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840dd847079250d3ba4bd14\";}s:13:\"notifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:14:\"[string-array]\";s:7:\"example\";a:0:{}}s:9:\"favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:14:\"[string-array]\";s:7:\"example\";a:0:{}}s:6:\"phones\";O:8:\"stdClass\":2:{s:4:\"type\";s:12:\"string
  array\";s:7:\"example\";a:1:{i:0;s:3:\"206\";}}s:6:\"emails\";O:8:\"stdClass\":2:{s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:14:\"name5@name.com\";}s:5:\"roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:10:\"[standard]\";}}}s:23:\"errorResponseCreateUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"null\";}}}s:27:\"successResponseFavoriteList\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840dd847079250d3ba4bd14\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"name5\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:60:\"$2a$10$aMh.RHL7W7kLIIa05pSMR.7H36/LCc5nOT84wAq4qM.lUvfd5dE6C\";}s:9:\"firstName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"fn5\";}s:8:\"lastName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"ln5\";}s:13:\"notifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:14:\"[string-array]\";s:7:\"example\";a:0:{}}s:9:\"favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:14:\"[string-array]\";s:7:\"example\";a:2:{i:0;s:24:\"583f933ec1bc4d0ed0c2aa7a\";i:1;s:24:\"583f9343c1bc4d0ed0c2aa7b\";}}s:6:\"phones\";O:8:\"stdClass\":2:{s:4:\"type\";s:12:\"string
  array\";s:7:\"example\";a:1:{i:0;s:3:\"206\";}}s:6:\"emails\";O:8:\"stdClass\":2:{s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:14:\"name5@name.com\";}s:5:\"roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:10:\"[standard]\";}}}s:10:\"updateUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"username\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"name5\";}s:8:\"password\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"new_name5\";}s:9:\"firstName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"fn5\";}s:8:\"lastName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"ln5\";}s:6:\"emails\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:8:\"[strings\";s:7:\"example\";s:14:\"name5@name.com\";}s:6:\"phones\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:1:{i:0;s:3:\"317\";}}s:9:\"favorites\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:0:{}}s:13:\"notifications\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";a:0:{}}}}s:25:\"successResponseUpdateUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"name5\";}s:8:\"password\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:60:\"$2a$10$BTe8fDVhvhFM06g11bBSZuXKTxXU.rOtYRascuC2ATkedD1lr1cO2\";}s:9:\"firstName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"fn5\";}s:8:\"lastName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"ln5\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840dd847079250d3ba4bd14\";}s:13:\"notifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:14:\"[string-array]\";s:7:\"example\";a:0:{}}s:9:\"favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:14:\"[string-array]\";s:7:\"example\";a:0:{}}s:6:\"phones\";O:8:\"stdClass\":2:{s:4:\"type\";s:12:\"string
  array\";s:7:\"example\";a:1:{i:0;s:3:\"317\";}}s:6:\"emails\";O:8:\"stdClass\":2:{s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:14:\"name5@name.com\";}s:5:\"roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:9:\"[strings]\";s:7:\"example\";s:10:\"[standard]\";}}}s:9:\"createPet\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:6:\"userId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5848b004222309074c757da5\";}s:7:\"petName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"pet4\";}s:9:\"petGender\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"male\";}s:6:\"petAge\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"Number\";s:7:\"example\";i:2;}s:11:\"petCategory\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"dog\";}s:15:\"petAvailability\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:9:\"adoptedBy\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:0:\"\";}s:9:\"favorites\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:8:\"[string]\";s:7:\"example\";s:2:\"[]\";}}}s:24:\"successResponseCreatePet\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"petName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"pet4\";}s:9:\"petGender\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"male\";}s:6:\"petAge\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"Number\";s:7:\"example\";i:2;}s:11:\"petCategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"dog\";}s:15:\"petAvailability\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:9:\"adoptedBy\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:0:\"\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840e8fb7079250d3ba4bd15\";}s:9:\"favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:8:\"[string]\";s:7:\"example\";s:2:\"[]\";}}}s:24:\"successResponseUpdatePet\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"petName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"pet4\";}s:9:\"petGender\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"male\";}s:6:\"petAge\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"Number\";s:7:\"example\";i:2;}s:11:\"petCategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"dog\";}s:15:\"petAvailability\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:9:\"adoptedBy\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:0:\"\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840e8fb7079250d3ba4bd15\";}s:9:\"favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:8:\"[string]\";s:7:\"example\";s:2:\"[]\";}}}s:7:\"getById\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"petId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"idOfPet\";}}}s:10:\"getAllPets\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"petId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:28:\"nothing
  to pass as paramater\";}}}s:3:\"pet\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"petName\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"pet4\";}s:9:\"petGender\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"male\";}s:6:\"petAge\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"Number\";s:7:\"example\";i:2;}s:11:\"petCategory\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"dog\";}s:15:\"petAvailability\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:9:\"adoptedBy\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:0:\"\";}s:9:\"favorites\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:8:\"[string]\";s:7:\"example\";s:2:\"[]\";}}}s:9:\"deletePet\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5848b010222309074c757da6\";}}}s:13:\"getByCategory\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:11:\"petCategory\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"Dog\";}}}s:8:\"400error\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"400
  Bad Request\";}}}s:9:\"loginUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"username\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"alice\";}s:8:\"password\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"eve\";}}}s:14:\"createQuestion\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"title\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:22:\"How
  can I adopt a cat?\";}s:7:\"content\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:46:\"Could
  anyone show me the steps to adopt a pet?\";}}}s:22:\"createQuestionResponse\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"questionId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"12321432423\";}}}s:8:\"question\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:6:\"userId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"user12345\";}s:5:\"title\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:22:\"How
  can I adopt a cat?\";}s:7:\"content\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:46:\"Could
  anyone show me the steps to adopt a pet?\";}}}s:14:\"deleteQuestion\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"questionId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"234344234234\";}}}s:21:\"createCommentResponse\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"commentId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"123456\";}}}s:13:\"createComment\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"comments\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:25:\"This
  is a sample comment.\";}s:6:\"userId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840dd847079250d3ba4bd14\";}s:6:\"emails\";O:8:\"stdClass\":2:{s:8:\"required\";b:0;s:7:\"example\";s:17:\"[12345@gmail.com]\";}s:5:\"petId\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5840e8fb7079250d3ba4bd15\";}}}s:19:\"mongoRemoveResponse\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"ok\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"Number\";s:7:\"example\";i:1;}s:1:\"n\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"Number\";s:7:\"example\";i:1;}}}}"
...
