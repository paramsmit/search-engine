---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:27:\"myaxa-apifactory-oracle-api\";}"
basePath: /api
paths:
  /lives/customerContactsForVerification:
    get:
      tags:
      - life
      summary: Returns phones and emails for verification.
      operationId: life.customerContactsForVerification
      parameters:
      - name: documentId
        in: query
        required: false
        type: string
      - name: documentType
        in: query
        required: false
        type: string
      - name: countryCode
        in: query
        required: false
        type: string
      - name: correlationId
        in: query
        description: An ID of a request throught all pods and microservices.
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              contacts:
                type: array
                items:
                  type: object
      deprecated: false
  /lives/policies:
    get:
      tags:
      - life
      summary: Returns policies for a given documentId.
      operationId: life.policies
      parameters:
      - name: documentId
        in: query
        required: false
        type: string
      - name: documentType
        in: query
        required: false
        type: string
      - name: countryCode
        in: query
        required: false
        type: string
      - name: correlationId
        in: query
        description: An ID of a request throught all pods and microservices.
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              policyList:
                type: array
                items:
                  type: object
      deprecated: false
  /lives/policies/{documentId}:
    get:
      tags:
      - life
      summary: Returns policy by policyId.
      operationId: life.policy
      parameters:
      - name: documentId
        in: path
        required: false
        type: string
      - name: countryCode
        in: query
        required: false
        type: string
      - name: correlationId
        in: query
        description: An ID of a request throught all pods and microservices.
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              policy:
                type: array
                items:
                  type: object
      deprecated: false
  /lives/claims:
    get:
      tags:
      - life
      summary: Returns claims by PolicyId.
      operationId: life.claims__get_lives_claims
      parameters:
      - name: documentId
        in: query
        required: false
        type: string
      - name: countryCode
        in: query
        required: false
        type: string
      - name: correlationId
        in: query
        description: An ID of a request throught all pods and microservices.
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              claimList:
                type: array
                items:
                  type: object
      deprecated: false
  /lives/claims/{documentId}:
    get:
      tags:
      - life
      summary: Returns claim for a given documentId.
      operationId: life.claims__get_lives_claims_{documentId}
      parameters:
      - name: documentId
        in: path
        required: false
        type: string
      - name: countryCode
        in: query
        required: false
        type: string
      - name: correlationId
        in: query
        description: An ID of a request throught all pods and microservices.
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              claim:
                type: array
                items:
                  type: object
      deprecated: false
  /lives/agents/policy/{documentId}:
    get:
      tags:
      - life
      summary: Returns agents info by policyId.
      operationId: life.agentsByPolicyId
      parameters:
      - name: documentId
        in: path
        required: false
        type: string
      - name: countryCode
        in: query
        required: false
        type: string
      - name: correlationId
        in: query
        description: An ID of a request throught all pods and microservices.
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              agentList:
                type: array
                items:
                  type: object
      deprecated: false
  /admins/testQuery:
    get:
      tags:
      - admin
      summary: Tests query.
      operationId: admin.testQuery
      parameters:
      - name: query
        in: query
        required: false
        type: string
      - name: params
        in: query
        description: Values separated by comma
        required: false
        type: string
      responses:
        200:
          description: Request was successful
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
      deprecated: false
produces:
- application/json
- application/xml
- text/xml
- application/javascript
- text/javascript
definitions: !php/object "O:8:\"stdClass\":0:{}"
...
