---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"The posts API description\";s:7:\"version\";s:3:\"1.0\";s:5:\"title\";s:5:\"Posts\";}"
basePath: /api
paths:
  /hello:
    get:
      summary: ""
      operationId: App_getData
      responses:
        200:
          description: ""
      produces:
      - application/json
      consumes:
      - application/json
  /posts:
    get:
      summary: ""
      operationId: Posts_getPosts
      parameters:
      - type: number
        name: page
        required: true
        in: query
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/PostUserRO'
      tags:
      - posts
      produces:
      - application/json
      consumes:
      - application/json
    post:
      summary: ""
      operationId: Posts_createPost
      parameters:
      - name: PostDTO
        required: true
        in: body
        schema:
          $ref: '#/definitions/PostDTO'
      responses:
        201:
          description: The post has been successfully created.
          schema:
            $ref: '#/definitions/PostRO'
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
  /posts/{id}:
    get:
      summary: ""
      operationId: Posts_getPost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/PostRO'
      tags:
      - posts
      produces:
      - application/json
      consumes:
      - application/json
    put:
      summary: ""
      operationId: Posts_updatePost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        201:
          description: The post has been successfully updated.
          schema:
            $ref: '#/definitions/PostRO'
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
    delete:
      summary: ""
      operationId: Posts_deletePost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        201:
          description: The post has been successfully deleted.
          schema:
            type: string
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
  /posts/{id}/upvote:
    post:
      summary: ""
      operationId: Posts_upvotePost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
  /posts/{id}/downvote:
    post:
      summary: ""
      operationId: Posts_downvotePost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
  /posts/{id}/bookmark:
    post:
      summary: ""
      operationId: Posts_bookmarkPost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
    delete:
      summary: ""
      operationId: Posts_unbookmarkPost
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        403:
          description: Forbidden.
      tags:
      - posts
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
  /users:
    get:
      summary: ""
      operationId: Users_showAllUsers
      parameters:
      - type: number
        name: page
        required: true
        in: query
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/UserPostsRO'
      tags:
      - users
      produces:
      - application/json
      security:
      - bearer: []
      consumes:
      - application/json
  /login:
    post:
      summary: ""
      operationId: Users_login
      parameters:
      - name: UserDTO
        required: true
        in: body
        schema:
          $ref: '#/definitions/UserDTO'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/UserRO'
      tags:
      - users
      produces:
      - application/json
      consumes:
      - application/json
  /register:
    post:
      summary: ""
      operationId: Users_register
      parameters:
      - name: UserDTO
        required: true
        in: body
        schema:
          $ref: '#/definitions/UserDTO'
      responses:
        201:
          description: ""
          schema:
            $ref: '#/definitions/UserRO'
      tags:
      - users
      produces:
      - application/json
      consumes:
      - application/json
  /comments/post/{postId}:
    get:
      summary: ""
      operationId: Comments_getCommentsByPost
      parameters:
      - type: number
        name: page
        required: true
        in: query
      - type: string
        name: postId
        required: true
        in: path
      responses:
        200:
          description: ""
      tags:
      - comments
      produces:
      - application/json
      consumes:
      - application/json
    post:
      summary: ""
      operationId: Comments_createComment
      parameters:
      - name: CommentDTO
        required: true
        in: body
        schema:
          $ref: '#/definitions/CommentDTO'
      - type: string
        name: postId
        required: true
        in: path
      responses:
        201:
          description: The comment has been successfully created.
        403:
          description: Forbidden.
      tags:
      - comments
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
  /comments/user/{userId}:
    get:
      summary: ""
      operationId: Comments_getCommentsByUser
      parameters:
      - type: number
        name: page
        required: true
        in: query
      - type: string
        name: userId
        required: true
        in: path
      responses:
        200:
          description: ""
      tags:
      - comments
      produces:
      - application/json
      consumes:
      - application/json
  /comments/{id}:
    get:
      summary: ""
      operationId: Comments_getComment
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        200:
          description: ""
      tags:
      - comments
      produces:
      - application/json
      consumes:
      - application/json
    delete:
      summary: ""
      operationId: Comments_deleteComment
      parameters:
      - type: string
        name: id
        required: true
        in: path
      responses:
        201:
          description: The comment has been successfully deleted.
          schema:
            type: string
        403:
          description: Forbidden.
      tags:
      - comments
      security:
      - bearer: []
      produces:
      - application/json
      consumes:
      - application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":8:{s:6:\"UserRO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:7:\"created\";i:2;s:8:\"username\";}}s:9:\"CommentRO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}s:7:\"comment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:7:\"created\";i:2;s:7:\"comment\";}}s:10:\"PostUserRO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}s:6:\"author\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/UserRO\";}s:7:\"upvotes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:9:\"downvotes\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"number\";}s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/CommentRO\";}}}s:8:\"required\";a:8:{i:0;s:2:\"id\";i:1;s:5:\"title\";i:2;s:11:\"description\";i:3;s:7:\"created\";i:4;s:7:\"updated\";i:5;s:6:\"author\";i:6;s:7:\"upvotes\";i:7;s:9:\"downvotes\";}}s:6:\"PostRO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}}s:8:\"required\";a:5:{i:0;s:2:\"id\";i:1;s:5:\"title\";i:2;s:11:\"description\";i:3;s:7:\"created\";i:4;s:7:\"updated\";}}s:7:\"PostDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:2:{i:0;s:5:\"title\";i:1;s:11:\"description\";}}s:11:\"UserPostsRO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:7:\"example\";s:24:\"2018-11-11T06:20:32.232Z\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"token\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"posts\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/PostRO\";}}s:9:\"bookmarks\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/PostRO\";}}}s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:7:\"created\";i:2;s:8:\"username\";}}s:7:\"UserDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"username\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:8:\"username\";s:9:\"minLength\";i:4;s:9:\"maxLength\";i:64;}s:8:\"password\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:8:\"password\";s:7:\"example\";s:8:\"password\";s:9:\"minLength\";i:4;s:9:\"maxLength\";i:64;}}s:8:\"required\";a:2:{i:0;s:8:\"username\";i:1;s:8:\"password\";}}s:10:\"CommentDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"comment\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"required\";a:1:{i:0;s:7:\"comment\";}}}"
...
