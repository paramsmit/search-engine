---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:7:\"version\";s:2:\"v1\";s:5:\"title\";s:14:\"Strategery
  API\";s:11:\"description\";s:62:\"A Strategery list API based on Swagger and built
  using Node.js\";}"
paths:
  /:
    get:
      tags:
      - Strategery
      operationId: strategery_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Strategery'
      deprecated: false
  /{id}:
    get:
      tags:
      - Strategery
      operationId: strategery_getById
      consumes: []
      produces:
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Strategery'
      deprecated: false
    post:
      tags:
      - Strategery
      summary: Updates a strategery with form data
      description: ""
      operationId: updateStrategeryWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of strategery that needs to be updated
        required: true
        type: integer
        format: int64
      - name: title
        in: formData
        description: Updated title of the strategery
        required: false
        type: string
      - name: status
        in: formData
        description: Updated status of the strategery
        required: false
        type: string
      responses:
        405:
          description: Invalid input
      security: []
    delete:
      tags:
      - Strategery
      summary: Deletes a Strategery
      description: ""
      operationId: deleteStrategery
      produces:
      - application/xml
      - application/json
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: id
        in: path
        description: Strategery id to delete
        required: true
        type: integer
        format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Strategerynot found
      security: []
  /maps:
    get:
      tags:
      - Map
      operationId: StrategeryMap_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Map'
      deprecated: false
  /maps/{id}:
    get:
      tags:
      - Map
      operationId: StrategeryMap_getById
      consumes: []
      produces:
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Map'
      deprecated: false
  /themes:
    get:
      tags:
      - Theme
      operationId: StrategeryTheme_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Theme'
      deprecated: false
  /perspectives:
    get:
      tags:
      - Perspective
      operationId: StrategeryPerspective_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Perspective'
      deprecated: false
  /scorecards:
    get:
      tags:
      - Scorecard
      operationId: StrategeryScorecard_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Scorecard'
      deprecated: false
  /objectives:
    get:
      tags:
      - Objective
      operationId: StrategeryObjective_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Objective'
      deprecated: false
  /measures:
    get:
      tags:
      - Measure
      operationId: getMeasure
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Measure'
      deprecated: false
  /measures/{id}:
    get:
      tags:
      - Measure
      operationId: getMeasure_ById
      consumes: []
      produces:
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Measure'
      deprecated: false
  /initiatives:
    get:
      tags:
      - Initiative
      operationId: getInitiative
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Initiative'
      deprecated: false
  /initiatives/{id}:
    get:
      tags:
      - Initiative
      operationId: getInitiative_ById
      consumes: []
      produces:
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Initiative'
      deprecated: false
  /tasks:
    get:
      tags:
      - Task
      operationId: getTask
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
      deprecated: false
  /tasks/{id}:
    get:
      tags:
      - Task
      operationId: getTask_ById
      consumes: []
      produces:
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
      deprecated: false
  /contacts:
    get:
      tags:
      - Contacts
      operationId: contacts_get
      consumes: []
      produces:
      - application/json
      - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
      deprecated: false
  /contacts/{id}:
    get:
      tags:
      - Contacts
      operationId: contacts_getById
      consumes: []
      produces:
      - application/json
      - text/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
      deprecated: false
  /pet:
    post:
      tags:
      - pet
      summary: Add a new pet to the store
      description: ""
      operationId: addPet
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Pet'
      responses:
        405:
          description: Invalid input
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    put:
      tags:
      - pet
      summary: Update an existing pet
      description: ""
      operationId: updatePet
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Pet'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
        405:
          description: Validation exception
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  /pet/findByStatus:
    get:
      tags:
      - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
      - application/xml
      - application/json
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        type: array
        items:
          type: string
          enum:
          - available
          - pending
          - sold
          default: available
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        400:
          description: Invalid status value
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  /pet/findByTags:
    get:
      tags:
      - pet
      summary: Finds Pets by tags
      description: Muliple tags can be provided with comma separated strings. Use
        tag1, tag2, tag3 for testing.
      operationId: findPetsByTags
      produces:
      - application/xml
      - application/json
      parameters:
      - name: tags
        in: query
        description: Tags to filter by
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        400:
          description: Invalid tag value
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      deprecated: true
  /pet/{petId}:
    get:
      tags:
      - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: petId
        in: path
        description: ID of pet to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
      security:
      - api_key: []
    post:
      tags:
      - pet
      summary: Updates a pet in the store with form data
      description: ""
      operationId: updatePetWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: petId
        in: path
        description: ID of pet that needs to be updated
        required: true
        type: integer
        format: int64
      - name: name
        in: formData
        description: Updated name of the pet
        required: false
        type: string
      - name: status
        in: formData
        description: Updated status of the pet
        required: false
        type: string
      responses:
        405:
          description: Invalid input
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - pet
      summary: Deletes a pet
      description: ""
      operationId: deletePet
      produces:
      - application/xml
      - application/json
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: petId
        in: path
        description: Pet id to delete
        required: true
        type: integer
        format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  /pet/{petId}/uploadImage:
    post:
      tags:
      - pet
      summary: uploads an image
      description: ""
      operationId: uploadFile
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: petId
        in: path
        description: ID of pet to update
        required: true
        type: integer
        format: int64
      - name: additionalMetadata
        in: formData
        description: Additional data to pass to server
        required: false
        type: string
      - name: file
        in: formData
        description: file to upload
        required: false
        type: file
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - petstore_auth:
        - write:pets
        - read:pets
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":17:{s:10:\"Strategery\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"strategery\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"keywords\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"Map\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":21:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"themes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Theme\";}}s:12:\"persepctives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Perspective\";}}s:10:\"scorecards\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Scorecard\";}}s:8:\"measures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Measure\";}}s:10:\"objectives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Objective\";}}s:11:\"initiatives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Initiative\";}}s:5:\"tasks\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Task\";}}s:8:\"keywords\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"published\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Theme\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":15:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"objectives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Objective\";}}s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"Perspective\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":16:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"objectives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Objective\";}}s:8:\"comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"image\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Image\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"Scorecard\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":16:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"parentid\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"keywords\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"objectives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Objective\";}}s:9:\"published\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"Objective\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":21:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"parentid\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"measures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Measure\";}}s:10:\"objectives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Objective\";}}s:11:\"initiatives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Initiative\";}}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Owner\";}s:11:\"from-to-gap\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"perspective\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/Perspective\";}}s:5:\"theme\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Theme\";}}s:8:\"document\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}s:5:\"image\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Image\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Measure\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":21:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"parentid\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"polarity\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:0:\"\";s:4:\"enum\";a:3:{i:0;s:36:\"Higher
  Is Better (Up Arrow is Green)\";i:1;s:37:\"Lower Is Better (Down Arrow is Green)\";i:2;s:39:\"Stable
  Is Better (Right Arrow is Green)\";}}s:14:\"timeperiodtype\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:0:\"\";s:4:\"enum\";a:5:{i:0;s:4:\"Year\";i:1;s:7:\"Quarter\";i:2;s:5:\"Month\";i:3;s:4:\"Week\";i:4;s:3:\"Day\";}}s:13:\"unitofmeasure\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:0:\"\";s:4:\"enum\";a:2:{i:0;s:15:\"Value
  0 Decimal\";i:1;s:15:\"Value 0 Percent\";}}s:11:\"targetvalue\";O:8:\"stdClass\":4:{s:1:\"v\";s:2:\"50\";s:1:\"r\";s:0:\"\";s:1:\"y\";s:0:\"\";s:1:\"g\";s:0:\"\";}s:10:\"datavalues\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"measures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Measure\";}}s:11:\"initiatives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Initiative\";}}s:11:\"maintainers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Owner\";}s:9:\"published\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"Initiative\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":23:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"parentid\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"keywords\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"statusupdate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"statuscolor\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"percentcomplete\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:10:\"activeflag\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"subinitiatives\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Initiative\";}}s:8:\"measures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Measure\";}}s:5:\"tasks\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/task\";}}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"published\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"Task\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":21:{s:4:\"kind\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeOf\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"etag\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"parentid\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:8:\"keywords\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"statusupdate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"statuscolor\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"percentcomplete\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:10:\"activeflag\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"initiative\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Initiative\";}s:10:\"assignedto\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}s:10:\"assignedby\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}s:6:\"pmtask\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:17:\"userdefinedfields\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/UDF\";}}s:17:\"attacheddocuments\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Doc\";}}s:9:\"shortname\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:5:\"Owner\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"userStatus\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:10:\"UserStatus\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"User\";}}s:7:\"Contact\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"Pet\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:4:\"name\";i:1;s:9:\"photoUrls\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Category\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"doggie\";}s:9:\"photoUrls\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:8:\"photoUrl\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"tags\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:3:\"xml\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"tag\";s:7:\"wrapped\";b:1;}s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Tag\";}}s:6:\"status\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"pet
  status in the store\";s:4:\"enum\";a:3:{i:0;s:9:\"available\";i:1;s:7:\"pending\";i:2;s:4:\"sold\";}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:3:\"Pet\";}}s:3:\"UDF\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"Doc\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Category\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"Category\";}}s:8:\"Keywords\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"Keyword\";}}s:3:\"Tag\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:3:\"Tag\";}}}"
...
