---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"This is the API-documentation
  \";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:19:\"Menus Documentation\";}"
host: ""
basePath: ""
paths:
  /restaurant:
    post:
      tags:
      - Restaurant
      summary: Create Restaurant
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created Restaurant object
        required: true
        schema:
          $ref: '#/definitions/Restaurant'
    patch:
      tags:
      - Restaurant
      summary: Update Restaurant
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated restaurant object
        required: true
        schema:
          $ref: '#/definitions/Restaurant'
  /restaurant/:id:
    get:
      tags:
      - Restaurant
      summary: Get restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /restaurant/upload:
    post:
      tags:
      - Restaurant
      summary: Upload Images to  Restaurant
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            images:
              type: array
              items:
                type: string
            image-type:
              type: string
  /plate:
    post:
      tags:
      - Plate
      summary: Create Plate
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created Plate object
        required: true
        schema:
          $ref: '#/definitions/Plate'
  /plate/:id:
    get:
      tags:
      - Plate
      summary: Get plate by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
    patch:
      tags:
      - Plate
      summary: Updated plate
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/Plate'
  /user:
    post:
      tags:
      - User
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/Profile'
    patch:
      tags:
      - User
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/Profile'
  /signUp:
    post:
      tags:
      - Auth
      summary: SignUp into the system
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
  /login:
    post:
      tags:
      - Auth
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
  /logout:
    get:
      tags:
      - Auth
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      produces:
      - application/json
      parameters: []
  /user/:id:
    get:
      tags:
      - User
      summary: Get user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /search:
    get:
      tags:
      - Search
      summary: Searching for users/restaurants
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: searchValue
        in: query
        description: User/Restaurant name
        required: true
        type: string
  /search/restaurant:
    get:
      tags:
      - Search
      summary: Advanced Searching in restaurants
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: searchValue
        in: query
        description: Place/Categories
        required: true
        type: string
  /block:
    post:
      tags:
      - Block
      summary: Block user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters: []
  /block/:id:
    get:
      tags:
      - Block
      summary: Get blocks of user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /report/:id:
    post:
      tags:
      - Report
      summary: Report user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be reported
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            violationType:
              type: string
            details:
              type: string
    get:
      tags:
      - Report
      summary: Get reports on user by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /review/:id:
    post:
      tags:
      - Review
      summary: Review on restaurant/plate
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be reviewed
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            review:
              type: string
            locationRating:
              type: integer
            ambianceRating:
              type: integer
    get:
      tags:
      - Review
      summary: Get reviews by review_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /comment/:id:
    post:
      tags:
      - Comment
      summary: Comment on a review/comment
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The review_id that needs to be commented on
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            comment:
              type: string
    get:
      tags:
      - Comment
      summary: Get comment by target_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /follow/:id:
    post:
      tags:
      - Follower
      summary: Followe user
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The user_id that needs to be followed on
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            user_id:
              type: string
    get:
      tags:
      - Follower
      summary: Get Followers by target_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
    delete:
      tags:
      - Follower
      summary: Unfollow user by collection_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be unfollowed
        required: true
        type: string
  /favorite/:id:
    post:
      tags:
      - Favorite
      summary: Favorite restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be favorited
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            user_id:
              type: string
    get:
      tags:
      - Favorite
      summary: Get Favorite by user_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /bucketlist:
    post:
      tags:
      - Bucketlist
      summary: Bucketlist restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be bucketlisted
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            restaurant_id:
              type: string
            user_id:
              type: string
  /bucketlist/:id:
    get:
      tags:
      - Bucketlist
      summary: Get Bucketlist by user_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /checkin:
    post:
      tags:
      - Checkin
      summary: Checkin restaurant by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be checkedinto
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            restaurant_id:
              type: string
            user_id:
              type: string
  /checkin/:id:
    get:
      tags:
      - Bucketlist
      summary: Get Bucketlist by user_id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be fetched
        required: true
        type: string
  /like/:id:
    post:
      tags:
      - Like
      summary: Like a review by id
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id that needs to be liked
        required: true
        type: string
  /order:
    post:
      tags:
      - Order
      summary: Make an order
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            plates:
              type: array
              items:
                $ref: '#/definitions/Plate'
    get:
      tags:
      - Order
      summary: Orders made by a user
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id if the user
        required: true
        type: string
  /order/:id:
    get:
      tags:
      - Order
      summary: Get an order
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
    patch:
      tags:
      - Order
      summary: Make an order
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The id if the order
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            plates:
              type: array
              items:
                $ref: '#/definitions/Plate'
  /question:
    post:
      tags:
      - Question
      summary: Send question to restaurant
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            restaurant_id:
              type: string
            text:
              type: string
            isAnon:
              type: boolean
  /question/:id:
    patch:
      tags:
      - Question
      summary: Send question to restaurant
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The restaurant_id the user will send a question to
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            text:
              type: string
            isAnon:
              type: boolean
  /chat/:roomId:
    post:
      tags:
      - Chat
      summary: Send message to chat-room
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: The room_id the user will send a message to
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            text:
              type: string
            isAnon:
              type: boolean
            attachements:
              type: array
              items:
                type: string
    get:
      tags:
      - Chat
      summary: Fetch room messages
      description: ""
      operationId: ""
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":15:{s:4:\"User\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"Guns
  N' Roses\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"phone\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"user_type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:9:\"User
  Type\";s:4:\"enum\";a:2:{i:0;s:7:\"Visitor\";i:1;s:10:\"Restaurant\";}}}}s:10:\"Restaurant\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"Guns
  N' Roses\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"Guns\";}}}s:7:\"Profile\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"Ahmed
  Kamal\";}}}s:5:\"Plate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:13:\"restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"category\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"promotion\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:9:\"isOffered\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:6:\"prices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"size\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"price\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}}}s:5:\"Order\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"plates\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/Plate\";}}s:7:\"address\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"status\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"Order
  Status\";s:4:\"enum\";a:3:{i:0;s:6:\"placed\";i:1;s:8:\"approved\";i:2;s:9:\"delivered\";}}}}s:4:\"Room\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"members\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:8:\"messages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"from\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:8:\"Question\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"isAnon\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"replies\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"from\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}}s:15:\"Reviews&Ratings\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:19:\"plate/restaurant_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:11:\"Review
  Type\";s:4:\"enum\";a:2:{i:0;s:5:\"Plate\";i:1;s:10:\"Restaurant\";}}s:6:\"rating\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:6:\"review\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:8:\"Comments\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"review/comment_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:12:\"Comment
  Type\";s:4:\"enum\";a:2:{i:0;s:7:\"Comment\";i:1;s:6:\"Review\";}}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"likes\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:13:\"Notifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"to\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:20:\"Followings&Followers\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"followers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:9:\"following\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:10:\"BucketList\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"restaurants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:9:\"Favorites\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"restaurants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:9:\"CheckedIn\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"restaurants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}}s:8:\"Branches\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"user_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"branches\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:13:\"phone_numbers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}s:14:\"branch_address\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"working_hrs\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}}}}"
...
