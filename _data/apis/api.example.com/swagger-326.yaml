---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:7:\"version\";s:5:\"2.0.0\";s:5:\"title\";s:20:\"Smartphone
  Test Farm\";s:11:\"description\";s:73:\"Control and manages real Smartphone devices
  from browser and restful apis\";s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache-2.0\";s:3:\"url\";s:42:\"http://www.apache.org/licenses/LICENSE-2.0\";}s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:8:\"STF
  Team\";s:5:\"email\";s:18:\"contact@openstf.io\";s:3:\"url\";s:18:\"http://openstf.io/\";}}"
basePath: /api/v1
paths:
  /user:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about current authorized
        user
      operationId: getUser
      tags:
      - user
      responses:
        200:
          description: Current User Profile information
          schema:
            $ref: '#/definitions/UserResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /user/devices:
    get:
      summary: User Devices
      description: The User Devices endpoint returns device list owner by current
        authorized user
      operationId: getUserDevices
      tags:
      - user
      parameters:
      - name: fields
        in: query
        description: Fields query parameter takes a comma seperated list of fields.
          Only listed field will be return in response
        required: false
        type: string
      responses:
        200:
          description: Current User Devices List
          schema:
            $ref: '#/definitions/DeviceListResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
    post:
      summary: Add a device to a user
      description: The User Devices endpoint will request stf server for a new device.
      operationId: addUserDevice
      tags:
      - user
      parameters:
      - name: device
        in: body
        description: Device to add
        required: true
        schema:
          $ref: '#/definitions/AddUserDevicePayload'
      responses:
        200:
          description: Add User Device Status
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /user/devices/{serial}:
    get:
      summary: User Device
      description: The devices enpoint return information about device owned by user
      operationId: getUserDeviceBySerial
      tags:
      - user
      parameters:
      - name: serial
        in: path
        description: Device Serial
        required: true
        type: string
      - name: fields
        in: query
        description: Fields query parameter takes a comma seperated list of fields.
          Only listed field will be return in response
        required: false
        type: string
      responses:
        200:
          description: Device Information owned by user
          schema:
            $ref: '#/definitions/DeviceResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
    delete:
      summary: Delete User Device
      description: The User Devices endpoint will request for device release from
        stf server. It will return request accepted if device is being used by current
        user
      operationId: deleteUserDeviceBySerial
      tags:
      - user
      parameters:
      - name: serial
        in: path
        description: Device Serial
        required: true
        type: string
      responses:
        200:
          description: Delete User Device Status
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /user/devices/{serial}/remoteConnect:
    post:
      summary: Remote Connect
      description: The device connect endpoint will request stf server to connect
        remotely
      operationId: remoteConnectUserDeviceBySerial
      tags:
      - user
      parameters:
      - name: serial
        in: path
        description: Device Serial
        required: true
        type: string
      responses:
        200:
          description: Remote Connect User Device Request Status
          schema:
            $ref: '#/definitions/RemoteConnectUserDeviceResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
    delete:
      summary: Remote Disconnect
      description: The device connect endpoint will request stf server to disconnect
        remotely
      operationId: remoteDisconnectUserDeviceBySerial
      tags:
      - user
      parameters:
      - name: serial
        in: path
        description: Device Serial
        required: true
        type: string
      responses:
        200:
          description: Remote Disonnect User Device Request Status
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /user/accessTokens:
    get:
      summary: Access Tokens
      description: The Access Tokens endpoints returns titles of all the valid access
        tokens
      operationId: getUserAccessTokens
      tags:
      - user
      responses:
        200:
          description: Access Tokens titles
          schema:
            $ref: '#/definitions/AccessTokensResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /devices:
    get:
      summary: Device List
      description: The devices endpoint return list of all the STF devices including
        Disconnected and Offline
      operationId: getDevices
      tags:
      - devices
      parameters:
      - name: fields
        in: query
        description: Fields query parameter takes a comma seperated list of fields.
          Only listed field will be return in response
        required: false
        type: string
      responses:
        200:
          description: List of Devices
          schema:
            $ref: '#/definitions/DeviceListResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /devices/{serial}:
    get:
      summary: Device Information
      description: The device enpoint return information about a single device
      operationId: getDeviceBySerial
      tags:
      - devices
      parameters:
      - name: serial
        in: path
        description: Device Serial
        required: true
        type: string
      - name: fields
        in: query
        description: Fields query parameter takes a comma seperated list of fields.
          Only listed field will be return in response
        required: false
        type: string
      responses:
        200:
          description: Device Information
          schema:
            $ref: '#/definitions/DeviceResponse'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - accessTokenAuth: []
  /swagger.json: []
produces:
- application/json
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":7:{s:12:\"UserResponse\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:4:\"user\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}s:20:\"AccessTokensResponse\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:6:\"tokens\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"tokens\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:18:\"DeviceListResponse\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:7:\"devices\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"devices\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}}s:14:\"DeviceResponse\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:6:\"device\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"device\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}}s:31:\"RemoteConnectUserDeviceResponse\";O:8:\"stdClass\":2:{s:8:\"required\";a:2:{i:0;s:16:\"remoteConnectUrl\";i:1;s:6:\"serial\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:16:\"remoteConnectUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:20:\"AddUserDevicePayload\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"payload
  object for adding device to user\";s:8:\"required\";a:1:{i:0;s:6:\"serial\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"serial\";O:8:\"stdClass\":2:{s:11:\"description\";s:13:\"Device
  Serial\";s:4:\"type\";s:6:\"string\";}s:7:\"timeout\";O:8:\"stdClass\":2:{s:11:\"description\";s:134:\"Device
  timeout in ms. If device is kept idle for this period, it will be automatically
  disconnected. Default is provider group timeout\";s:4:\"type\";s:7:\"integer\";}}}s:13:\"ErrorResponse\";O:8:\"stdClass\":2:{s:8:\"required\";a:1:{i:0;s:7:\"message\";}s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
