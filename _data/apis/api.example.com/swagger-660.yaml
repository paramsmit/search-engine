---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:79:\"ASP.NET Core Web
  API used for publishing and accessing technical documentation.\";s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:28:\"Documentation
  Repository API\";s:7:\"contact\";O:8:\"stdClass\":2:{s:5:\"email\";s:22:\"mihailo.stev@gmail.com\";s:4:\"name\";s:19:\"Mihailo
  Stevanovi\u0107\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:3:\"MIT\";s:3:\"url\";s:96:\"https://raw.githubusercontent.com/mihailo-stevanovic/documentation-repository/master/LICENSE.txt\";}}"
paths:
  /api/v1/Authors:
    get:
      tags:
      - Authors
      summary: Returns all authors.
      operationId: ApiV1AuthorsGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Authors successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
            example:
            - id: 1
              firstName: Jamie
              lastName: Smith
              email: jsmith@doc.com
              alias: JSMIT
              isFormerAuthor: false
              aitName: Jamie
            - id: 2
              firstName: Ariel
              lastName: Taylor
              email: ataylor@doc.com
              alias: ATAYL
              isFormerAuthor: true
              aitName: Ariel
            - id: 3
              firstName: Glen
              lastName: Williams
              email: gwilliams@doc.com
              alias: GWILL
              isFormerAuthor: false
              aitName: Glen
        404:
          description: No authors were found.
    post:
      tags:
      - Authors
      summary: Creates a new author.
      operationId: ApiV1AuthorsPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: author
        in: body
        description: New author object.
        required: true
        schema:
          $ref: '#/definitions/Author'
      responses:
        201:
          description: Returns the newly created author.
          schema:
            $ref: '#/definitions/Author'
        400:
          description: Invalid request.
  /api/v1/Authors/Active:
    get:
      tags:
      - Authors
      summary: Returns all active authors. Former authors are excluded.
      operationId: ApiV1AuthorsActiveGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Authors successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
            example:
            - id: 1
              firstName: Jamie
              lastName: Smith
              email: jsmith@doc.com
              alias: JSMIT
              isFormerAuthor: false
              aitName: Jamie
            - id: 3
              firstName: Glen
              lastName: Williams
              email: gwilliams@doc.com
              alias: GWILL
              isFormerAuthor: false
              aitName: Glen
        404:
          description: No active authors were found.
  /api/v1/Authors/{id}:
    get:
      tags:
      - Authors
      summary: Returns a single author.
      operationId: ApiV1AuthorsByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the author.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Author successfully returned.
          schema:
            $ref: '#/definitions/Author'
        400:
          description: Invalid request.
        404:
          description: Author with a matching ID could not be found.
    put:
      tags:
      - Authors
      summary: Updates an author.
      operationId: ApiV1AuthorsByIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: id
        in: path
        description: ID of the author.
        required: true
        type: integer
        format: int32
      - name: author
        in: body
        description: Updated author.
        required: true
        schema:
          $ref: '#/definitions/Author'
      responses:
        204:
          description: Update is successuful.
        400:
          description: Request is incorrect or ID from the path does not match the
            ID of the author.
        404:
          description: Author does not exist.
    delete:
      tags:
      - Authors
      summary: Deletes an author.
      operationId: ApiV1AuthorsByIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the author to be deleted.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Author sucessufully deleted.
          schema:
            $ref: '#/definitions/Author'
        400:
          description: Invalid request.
        404:
          description: Author with the provided ID could not be found.
  /api/v1/Authors/Batch:
    post:
      tags:
      - Authors
      summary: Creates multiple authors.
      operationId: ApiV1AuthorsBatchPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: authorList
        in: body
        description: List of authors.
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Author'
      responses:
        201:
          description: Action is successful.
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        400:
          description: Invalid request.
  /api/v1/ClientCatalogs:
    get:
      tags:
      - Client Catalogs
      summary: Returns all client catalogs.
      operationId: ApiV1ClientCatalogsGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Catalogs successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientCatalog'
            example:
            - id: 1
              name: Awesome Product Knowledge Base
              internalId: "000753"
            - id: 2
              name: Nice Product Release Notes
              internalId: 000845
        404:
          description: No catalogs were found.
    post:
      tags:
      - Client Catalogs
      summary: Creates a new client catalog.
      operationId: ApiV1ClientCatalogsPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: clientCatalog
        in: body
        description: Client catalog object.
        required: true
        schema:
          $ref: '#/definitions/ClientCatalog'
      responses:
        201:
          description: Returns the newly created author.
          schema:
            $ref: '#/definitions/ClientCatalog'
        400:
          description: Invalid request.
  /api/v1/ClientCatalogs/{id}:
    get:
      tags:
      - Client Catalogs
      summary: Returns a single client catalog.
      operationId: ApiV1ClientCatalogsByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the client catalog.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Catalog successfully returned.
          schema:
            $ref: '#/definitions/ClientCatalog'
        400:
          description: Invalid request.
        404:
          description: Catalog with a matching ID could not be found.
    put:
      tags:
      - Client Catalogs
      summary: Updates an existing client catalog.
      operationId: ApiV1ClientCatalogsByIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: id
        in: path
        description: ID of the client catalog.
        required: true
        type: integer
        format: int32
      - name: clientCatalog
        in: body
        description: Client catalog object.
        required: true
        schema:
          $ref: '#/definitions/ClientCatalog'
      responses:
        204:
          description: Update is successuful.
        400:
          description: Request is incorrect or ID from the path does not match the
            ID of the author.
        404:
          description: Author does not exist.
    delete:
      tags:
      - Client Catalogs
      summary: Deletes a client catalog.
      operationId: ApiV1ClientCatalogsByIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the client catalog.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Client catalog sucessufully deleted.
          schema:
            $ref: '#/definitions/ClientCatalog'
        400:
          description: Invalid request.
        404:
          description: Client catalog with the provided ID could not be found.
  /api/v1/ClientCatalogs/Batch:
    post:
      tags:
      - Client Catalogs
      summary: Creates multiple client catalogs.
      operationId: ApiV1ClientCatalogsBatchPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: clientCatalogList
        in: body
        description: List of client catalog objects.
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ClientCatalog'
      responses:
        201:
          description: Action is successful.
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientCatalog'
        400:
          description: Invalid request.
  /api/v1/Documents:
    get:
      tags:
      - Documents
      summary: Returns all documents.
      operationId: ApiV1DocumentsGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Documents successfully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
            example:
            - id: 1
              title: Awesome Product User Guide V2018.1
              htmlLink: AwesomeProduct/UserGuide/V2018-1/index.html
              pdfLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf
              wordLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx
              otherLink: ~
              isFitForClients: true
              shortDescription: The document provides a description of the main features
                of <strong>Awesome Product</strong> as well as the main how-to procedures.
              aitId: 78965
              documentAuthorIds:
              - 1
              - 2
              - 3
              documentCatalogIds:
              - 1
              latestTopicsUpdated: This is the first version of the document.
              parentDocumentId: 0
              productVersionId: 1
              documentTypeId: 2
              rowVersion: AAAAAAAAB9E=
            - id: 2
              title: Nice Product Release Notes V2018.1
              htmlLink: ~
              pdfLink: NiceProduct/ReleaseNotes/AwesomeProduct_ReleaseNotes_V2018-1.pdf
              wordLink: ~
              otherLink: ~
              isFitForClients: true
              shortDescription: This document contains the new features and bug fixes
                implemented in V2018.1.
              aitId: 78965
              documentAuthorIds:
              - 1
              - 3
              documentCatalogIds:
              - 2
              latestTopicsUpdated: V2018.1 Bug Fixes.
              parentDocumentId: 0
              productVersionId: 1
              documentTypeId: 3
              rowVersion: AAAAAAAAC8H=
        404:
          description: No documents found.
    post:
      tags:
      - Documents
      summary: Creates a document.
      operationId: ApiV1DocumentsPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: document
        in: body
        description: New document object.
        required: true
        schema:
          $ref: '#/definitions/Document'
      responses:
        201:
          description: Document properly created.
          schema:
            $ref: '#/definitions/Document'
        400:
          description: Invalid request.
  /api/v1/Documents/{id}:
    get:
      tags:
      - Documents
      summary: Returns a single document.
      operationId: ApiV1DocumentsByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document successfully returned.
          schema:
            $ref: '#/definitions/Document'
        400:
          description: Invalid request.
        404:
          description: Document with a matching ID could not be found.
    put:
      tags:
      - Documents
      summary: Updates a document.
      operationId: ApiV1DocumentsByIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: id
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      - name: document
        in: body
        description: Modified document object.
        required: true
        schema:
          $ref: '#/definitions/Document'
      responses:
        204:
          description: Document successufully updated.
        400:
          description: Invalid request.
        404:
          description: Document with a matching ID could not be found.
    delete:
      tags:
      - Documents
      summary: Deletes a document.
      operationId: ApiV1DocumentsByIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document sucessfully deleted.
          schema:
            $ref: '#/definitions/Document'
        400:
          description: Invalid request.
        404:
          description: Document with the provided ID could not be found.
  /api/v1/Documents/{documentId}/Updates:
    get:
      tags:
      - Documents
      summary: Returns all updates related to a document.
      operationId: ApiV1DocumentsByDocumentIdUpdatesGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: documentId
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document updates successfully returned returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentUpdate'
            example:
            - id: 1
              timestamp: "2018-06-04T00:00:00"
              latestTopicsUpdated: This is the first version of the document.
              isPublished: true
              documentId: 1
              rowVersion: AAAAAAAARlE=
            - id: 2
              timestamp: "2018-06-04T00:00:00"
              latestTopicsUpdated: Cover Page
              isPublished: false
              documentId: 1
              rowVersion: AAAAAAAARlE=
            - id: 3
              timestamp: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              isPublished: true
              documentId: 1
              rowVersion: AAAAAAAARlE=
        400:
          description: Invalid request.
        404:
          description: Updates for a document with the specified ID could not be found.
    post:
      tags:
      - Documents
      summary: Creates a document update.
      operationId: ApiV1DocumentsByDocumentIdUpdatesPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: documentId
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      - name: documentUpdate
        in: body
        description: New document update object.
        required: true
        schema:
          $ref: '#/definitions/DocumentUpdate'
      responses:
        201:
          description: Document update properly created.
          schema:
            $ref: '#/definitions/DocumentUpdate'
        400:
          description: Invalid request.
  /api/v1/Documents/{documentId}/Updates/{updateId}:
    get:
      tags:
      - Documents
      summary: Returns a single update related to a document.
      operationId: ApiV1DocumentsByDocumentIdUpdatesByUpdateIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: documentId
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      - name: updateId
        in: path
        description: ID of the update.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document update successfully returned returned.
          schema:
            $ref: '#/definitions/DocumentUpdate'
        400:
          description: Invalid request.
        404:
          description: Update with a matching ID and DocumentID could not be found.
    put:
      tags:
      - Documents
      summary: Updates a document update.
      description: Please note that usage of this action is not recommended. It is
        provided to support specific cases.
      operationId: ApiV1DocumentsByDocumentIdUpdatesByUpdateIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: documentId
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      - name: updateId
        in: path
        description: ID of the document update.
        required: true
        type: integer
        format: int32
      - name: documentUpdate
        in: body
        description: Modified document object.
        required: true
        schema:
          $ref: '#/definitions/DocumentUpdate'
      responses:
        204:
          description: Document update successufully modified.
        400:
          description: Invalid request.
        404:
          description: Document update with a matching ID could not be found.
    delete:
      tags:
      - Documents
      summary: Deletes a document update.
      operationId: ApiV1DocumentsByDocumentIdUpdatesByUpdateIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: documentId
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      - name: updateId
        in: path
        description: ID of the document update.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document update sucessfully deleted.
          schema:
            $ref: '#/definitions/DocumentUpdate'
        400:
          description: Invalid request.
        404:
          description: Document update with the provided ID and DocumentID could not
            be found.
  /api/v1/Documents/Batch:
    post:
      tags:
      - Documents
      summary: Creates multiple documents.
      operationId: ApiV1DocumentsBatchPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: documentList
        in: body
        description: List of new document objects.
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Document'
      responses:
        201:
          description: Documents created sucessfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
        400:
          description: Invalid request.
  /api/v1/DocumentsInternal:
    get:
      tags:
      - Documents Internal
      summary: Returns a list of published documents.
      operationId: ApiV1DocumentsInternalGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: limit
        in: query
        description: Number of documents to retreive. Used for pagination. Default
          is 20.
        required: false
        type: integer
        format: int32
      - name: page
        in: query
        description: Index of the page to display starting with 1. Default is 1.
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Documents successufully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentInternal'
            example:
            - id: 1
              title: Awesome Product User Guide V2018.1
              product: Awesome Product
              version: V2018.1
              htmlLink: AwesomeProduct/UserGuide/V2018-1/index.html
              pdfLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf
              wordLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx
              otherLink: ~
              isFitForClients: true
              shortDescription: The document provides a description of the main features
                of <strong>Awesome Product</strong> as well as the main how-to procedures.
              documentType: User Guide
              latestUpdate: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 2
                firstName: Ariel
                lastName: Taylor
                email: ataylor@doc.com
                alias: ATAYL
                isFormerAuthor: true
                aitName: Ariel
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 1
                name: Awesome Product Knowledge Base
                internalId: "000753"
            - id: 2
              title: Nice Product Release Notes V2018.1
              product: Nice Product
              version: V2018.1
              htmlLink: ~
              pdfLink: NiceProduct/ReleaseNotes/AwesomeProduct_ReleaseNotes_V2018-1.pdf
              wordLink: ~
              otherLink: ~
              isFitForClients: true
              shortDescription: This document contains the new features and bug fixes
                implemented in V2018.1.
              documentType: Release Notes
              latestUpdate: "2018-06-04T00:00:00"
              latestTopicsUpdated: V2018.1 Bug Fixes.
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 2
                name: Nice Product Release Notes
                internalId: 000845
        400:
          description: Invalid request.
        404:
          description: No documents found.
  /api/v1/DocumentsInternal/{id}:
    get:
      tags:
      - Documents Internal
      summary: Returns a single published document.
      operationId: ApiV1DocumentsInternalByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document successfully found.
          schema:
            $ref: '#/definitions/DocumentInternal'
        400:
          description: Invalid request.
        404:
          description: Document with the provided ID could not be found.
  /api/v1/DocumentsInternal/ByDocType/{docTypeId}:
    get:
      tags:
      - Documents Internal
      summary: Returns a list of published documents of a specified document type.
      operationId: ApiV1DocumentsInternalByDocTypeByDocTypeIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: docTypeId
        in: path
        description: ID of the document type.
        required: true
        type: integer
        format: int32
      - name: limit
        in: query
        description: Number of documents to retreive. Used for pagination. Default
          is 20.
        required: false
        type: integer
        format: int32
      - name: page
        in: query
        description: Index of the page to display starting with 1. Default is 1.
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Documents successufully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentInternal'
            example:
            - id: 1
              title: Awesome Product User Guide V2018.1
              product: Awesome Product
              version: V2018.1
              htmlLink: AwesomeProduct/UserGuide/V2018-1/index.html
              pdfLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf
              wordLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx
              otherLink: ~
              isFitForClients: true
              shortDescription: The document provides a description of the main features
                of <strong>Awesome Product</strong> as well as the main how-to procedures.
              documentType: User Guide
              latestUpdate: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 2
                firstName: Ariel
                lastName: Taylor
                email: ataylor@doc.com
                alias: ATAYL
                isFormerAuthor: true
                aitName: Ariel
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 1
                name: Awesome Product Knowledge Base
                internalId: "000753"
        400:
          description: Invalid request.
        404:
          description: No documents of the specified type could be found.
  /api/v1/DocumentsInternal/ByProduct/{productId}:
    get:
      tags:
      - Documents Internal
      summary: Returns a list of published documents of a specified product.
      operationId: ApiV1DocumentsInternalByProductByProductIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: limit
        in: query
        description: Number of documents to retreive. Used for pagination. Default
          is 20.
        required: false
        type: integer
        format: int32
      - name: page
        in: query
        description: Index of the page to display starting with 1. Default is 1.
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Documents successufully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentInternal'
            example:
            - id: 1
              title: Awesome Product User Guide V2018.1
              product: Awesome Product
              version: V2018.1
              htmlLink: AwesomeProduct/UserGuide/V2018-1/index.html
              pdfLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf
              wordLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx
              otherLink: ~
              isFitForClients: true
              shortDescription: The document provides a description of the main features
                of <strong>Awesome Product</strong> as well as the main how-to procedures.
              documentType: User Guide
              latestUpdate: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 2
                firstName: Ariel
                lastName: Taylor
                email: ataylor@doc.com
                alias: ATAYL
                isFormerAuthor: true
                aitName: Ariel
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 1
                name: Awesome Product Knowledge Base
                internalId: "000753"
        400:
          description: Invalid request.
        404:
          description: No documents could be found for the specified product.
  /api/v1/DocumentsInternal/ByProductVersion/{productVersionId}:
    get:
      tags:
      - Documents Internal
      summary: Returns a list of published documents of a specified product.
      operationId: ApiV1DocumentsInternalByProductVersionByProductVersionIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: productVersionId
        in: path
        description: ID of the product version.
        required: true
        type: integer
        format: int32
      - name: limit
        in: query
        description: Number of documents to retreive. Used for pagination. Default
          is 20.
        required: false
        type: integer
        format: int32
      - name: page
        in: query
        description: Index of the page to display starting with 1. Default is 1.
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Documents successufully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentInternal'
            example:
            - id: 1
              title: Awesome Product User Guide V2018.1
              product: Awesome Product
              version: V2018.1
              htmlLink: AwesomeProduct/UserGuide/V2018-1/index.html
              pdfLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf
              wordLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx
              otherLink: ~
              isFitForClients: true
              shortDescription: The document provides a description of the main features
                of <strong>Awesome Product</strong> as well as the main how-to procedures.
              documentType: User Guide
              latestUpdate: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 2
                firstName: Ariel
                lastName: Taylor
                email: ataylor@doc.com
                alias: ATAYL
                isFormerAuthor: true
                aitName: Ariel
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 1
                name: Awesome Product Knowledge Base
                internalId: "000753"
        400:
          description: Invalid request.
        404:
          description: No documents could be found for the specified product version.
  /api/v1/DocumentsInternal/Search:
    get:
      tags:
      - Documents Internal
      summary: Returns a list of published documents by searching the title, short
        description and latest updates.
      operationId: ApiV1DocumentsInternalSearchGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: searchTerm
        in: query
        description: Terms used to search for the documents.
        required: true
        type: string
      - name: limit
        in: query
        description: Number of documents to retreive. Used for pagination. Default
          is 20.
        required: false
        type: integer
        format: int32
      - name: page
        in: query
        description: Index of the page to display starting with 1. Default is 1.
        required: false
        type: integer
        format: int32
      - name: exactMatch
        in: query
        description: When set to false, each word in the search term is searched for
          separately. Otherwise, the search term is used as a whole. Default is true.
        required: false
        type: boolean
      responses:
        200:
          description: Documents successufully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentInternal'
            example:
            - id: 1
              title: Awesome Product User Guide V2018.1
              product: Awesome Product
              version: V2018.1
              htmlLink: AwesomeProduct/UserGuide/V2018-1/index.html
              pdfLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf
              wordLink: AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx
              otherLink: ~
              isFitForClients: true
              shortDescription: The document provides a description of the main features
                of <strong>Awesome Product</strong> as well as the main how-to procedures.
              documentType: User Guide
              latestUpdate: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 2
                firstName: Ariel
                lastName: Taylor
                email: ataylor@doc.com
                alias: ATAYL
                isFormerAuthor: true
                aitName: Ariel
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 1
                name: Awesome Product Knowledge Base
                internalId: "000753"
            - id: 2
              title: Nice Product Release Notes V2018.1
              product: Nice Product
              version: V2018.1
              htmlLink: ~
              pdfLink: NiceProduct/ReleaseNotes/AwesomeProduct_ReleaseNotes_V2018-1.pdf
              wordLink: ~
              otherLink: ~
              isFitForClients: true
              shortDescription: This document contains the new features and bug fixes
                implemented in V2018.1.
              documentType: Release Notes
              latestUpdate: "2018-06-04T00:00:00"
              latestTopicsUpdated: V2018.1 Bug Fixes.
              authors:
              - id: 1
                firstName: Jamie
                lastName: Smith
                email: jsmith@doc.com
                alias: JSMIT
                isFormerAuthor: false
                aitName: Jamie
              - id: 3
                firstName: Glen
                lastName: Williams
                email: gwilliams@doc.com
                alias: GWILL
                isFormerAuthor: false
                aitName: Glen
              clientCatalogs:
              - id: 2
                name: Nice Product Release Notes
                internalId: 000845
        400:
          description: Invalid request.
        404:
          description: No documents could be found for the specified product.
  /api/v1/DocumentsInternal/{id}/Updates:
    get:
      tags:
      - Documents Internal
      summary: Returns all published updates of a specified document.
      operationId: ApiV1DocumentsInternalByIdUpdatesGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the document.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document updates successufully returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentUpdate'
            example:
            - id: 1
              timestamp: "2018-06-04T00:00:00"
              latestTopicsUpdated: This is the first version of the document.
              isPublished: true
              documentId: 1
              rowVersion: AAAAAAAARlE=
            - id: 3
              timestamp: "2018-06-11T00:00:00"
              latestTopicsUpdated: <ol><li>Create a contact</li><li>Edit a contact</li></ol>
              isPublished: true
              documentId: 1
              rowVersion: AAAAAAAARlE=
        400:
          description: Invalid request.
        404:
          description: No updates could be found for the specified document.
  /api/v1/DocumentTypes:
    get:
      tags:
      - Document Types
      summary: Returns all document types.
      operationId: ApiV1DocumentTypesGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Document types successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentType'
            example:
            - id: 1
              fullName: User Guide
              shortName: UG
              documentCategory: 0
            - id: 2
              fullName: Release Notes
              shortName: RN
              documentCategory: 1
        404:
          description: No document types were found.
    post:
      tags:
      - Document Types
      summary: Creates a Document Type.
      operationId: ApiV1DocumentTypesPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: documentType
        in: body
        description: Document Type object.
        required: true
        schema:
          $ref: '#/definitions/DocumentType'
      responses:
        201:
          description: Returns the newly created document type.
          schema:
            $ref: '#/definitions/DocumentType'
        400:
          description: Invalid request.
  /api/v1/DocumentTypes/{id}:
    get:
      tags:
      - Document Types
      summary: Returns a single document type.
      operationId: ApiV1DocumentTypesByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the document type.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document type successfully retrieved.
          schema:
            $ref: '#/definitions/DocumentType'
        400:
          description: Invalid request.
        404:
          description: No document types with the matching ID were found.
    put:
      tags:
      - Document Types
      summary: Updates an existing Document Type.
      operationId: ApiV1DocumentTypesByIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: id
        in: path
        description: ID of the Document Type.
        required: true
        type: integer
        format: int32
      - name: documentType
        in: body
        description: Document Type object.
        required: true
        schema:
          $ref: '#/definitions/DocumentType'
      responses:
        204:
          description: Update is successuful.
        400:
          description: Request is incorrect or ID from the path does not match the
            ID of the document type.
        404:
          description: Document type does not exist.
    delete:
      tags:
      - Document Types
      summary: Deletes a Document Type.
      operationId: ApiV1DocumentTypesByIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the document type object.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Document type sucessufully deleted.
          schema:
            $ref: '#/definitions/DocumentType'
        400:
          description: Invalid request.
        404:
          description: Document type with the provided ID could not be found.
  /api/v1/DocumentTypes/Categories:
    get:
      tags:
      - Document Types
      summary: Returns a list of all document categories as key-value pairs.
      description: 'Provided for informational purposes only.rnKey: Category IDrnValue:
        Category Name'
      operationId: ApiV1DocumentTypesCategoriesGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentCategory'
            example:
            - key: 0
              value: FunctionalDocumentation
            - key: 1
              value: TechnicalDocumentation
            - key: 2
              value: ReleaseNotes
            - key: 3
              value: Other
  /api/v1/Products:
    get:
      tags:
      - Products
      summary: Returns all products.
      operationId: ApiV1ProductsGet
      consumes: []
      produces:
      - application/json
      responses:
        200:
          description: Products successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
            example:
            - id: 1
              fullName: Awesome Product
              shortName: AWP
              alias: Product 1
            - id: 2
              fullName: Nice Product
              shortName: NP
              alias: Product 2
        404:
          description: No products were found.
    post:
      tags:
      - Products
      summary: Creates a product.
      operationId: ApiV1ProductsPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: product
        in: body
        description: Product object.
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        201:
          description: Returns the newly created product.
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid request.
  /api/v1/Products/{id}:
    get:
      tags:
      - Products
      summary: Returns a single product by ID.
      operationId: ApiV1ProductsByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Product successfully retrieved.
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid request.
        404:
          description: Products with matching ID not found.
    put:
      tags:
      - Products
      summary: Updates a single product.
      operationId: ApiV1ProductsByIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: id
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: product
        in: body
        description: Product object.
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        204:
          description: Update is successuful.
        400:
          description: Request is incorrect or ID from the path does not match the
            ID of the product.
        404:
          description: Product does not exist.
    delete:
      tags:
      - Products
      summary: Deletes a product.
      operationId: ApiV1ProductsByIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Product sucessufully deleted.
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid request.
        404:
          description: Product with the provided ID could not be found.
  /api/v1/Products/{productId}/Versions:
    get:
      tags:
      - Products
      summary: Returns a list of versions associated to a product.
      operationId: ApiV1ProductsByProductIdVersionsGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Product versions successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductVersion'
            example:
            - id: 1
              product: Awesome Product
              release: V2018.1
              endOfSupport: "2019-02-01T00:00:00"
              isSupported: true
            - id: 2
              product: Awesome Product
              release: V2018.2
              endOfSupport: "2019-04-01T00:00:00"
              isSupported: true
            - id: 3
              product: Nice Product
              release: V2018.1
              endOfSupport: "2019-02-01T00:00:00"
              isSupported: true
            - id: 3
              product: Nice Product
              release: V2018.2
              endOfSupport: "2019-04-01T00:00:00"
              isSupported: true
        400:
          description: Invalid request.
        404:
          description: Products versions with matching product ID not found.
    post:
      tags:
      - Products
      summary: Creates a new version of a product.
      operationId: ApiV1ProductsByProductIdVersionsPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: productVersion
        in: body
        description: Product version object.
        required: true
        schema:
          $ref: '#/definitions/ProductVersion'
      responses:
        201:
          description: Returns the newly created product version.
          schema:
            $ref: '#/definitions/ProductVersion'
        400:
          description: Invalid request.
  /api/v1/Products/{productId}/Versions/{versionId}:
    get:
      tags:
      - Products
      summary: Returns a single version associated to a product.
      operationId: ApiV1ProductsByProductIdVersionsByVersionIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: versionId
        in: path
        description: ID of the version.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Product version successfully retrieved.
          schema:
            $ref: '#/definitions/ProductVersion'
        400:
          description: Invalid request.
        404:
          description: Product versions with matching ID not found.
    put:
      tags:
      - Products
      summary: Updates a version of a product.
      operationId: ApiV1ProductsByProductIdVersionsByVersionIdPut
      consumes:
      - application/json
      produces: []
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: versionId
        in: path
        description: ID of the version.
        required: true
        type: integer
        format: int32
      - name: productVersion
        in: body
        description: Product version object.
        required: false
        schema:
          $ref: '#/definitions/ProductVersion'
      responses:
        204:
          description: Update is successuful.
        400:
          description: Request is incorrect or ID from the path does not match the
            ID of the product version.
        404:
          description: Product version does not exist.
    delete:
      tags:
      - Products
      summary: Deletes a product version.
      operationId: ApiV1ProductsByProductIdVersionsByVersionIdDelete
      consumes: []
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: versionId
        in: path
        description: ID of the version.
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Product version sucessufully deleted.
          schema:
            $ref: '#/definitions/ProductVersion'
        400:
          description: Invalid request.
        404:
          description: Product version with the provided ID could not be found.
  /api/v1/Products/Batch:
    post:
      tags:
      - Products
      summary: Creates multiple products.
      operationId: ApiV1ProductsBatchPost
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: productList
        in: body
        description: List of product objects.
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Product'
      responses:
        201:
          description: Action is successful.
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        400:
          description: Invalid request.
  /api/v1/Products/{productId}/Versions/Batch:
    post:
      tags:
      - Products
      summary: Creates multiple product versions.
      operationId: ApiV1ProductsByProductIdVersionsBatchPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: productId
        in: path
        description: ID of the product.
        required: true
        type: integer
        format: int32
      - name: productVersionList
        in: body
        description: List of product version objects.
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ProductVersion'
      responses:
        201:
          description: Action is successful.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductVersion'
        400:
          description: Invalid request.
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":9:{s:6:\"Author\";O:8:\"stdClass\":4:{s:11:\"description\";s:29:\"Represents
  a document author.\";s:8:\"required\";a:4:{i:0;s:9:\"firstName\";i:1;s:8:\"lastName\";i:2;s:5:\"email\";i:3;s:5:\"alias\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:17:\"ID
  of the author.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:9:\"firstName\";O:8:\"stdClass\":5:{s:11:\"description\";s:25:\"First
  name of the author.\";s:9:\"maxLength\";i:50;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"Jamie\";}s:8:\"lastName\";O:8:\"stdClass\":5:{s:11:\"description\";s:24:\"Last
  name of the author.\";s:9:\"maxLength\";i:50;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"Smith\";}s:5:\"email\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Email
  address of the author.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"jsmith@doc.com\";}s:5:\"alias\";O:8:\"stdClass\":4:{s:9:\"maxLength\";i:7;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"JSMIT\";}s:14:\"isFormerAuthor\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"Is
  former employee.\";s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:0;}s:7:\"aitName\";O:8:\"stdClass\":5:{s:11:\"description\";s:29:\"Author-IT
  name of the author.\";s:9:\"maxLength\";i:10;s:9:\"minLength\";i:4;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"Jamie\";}}}s:13:\"ClientCatalog\";O:8:\"stdClass\":4:{s:11:\"description\";s:42:\"Represents
  a client documentation catalog.\";s:8:\"required\";a:1:{i:0;s:4:\"name\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:25:\"ID
  of the client catalog.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:4:\"name\";O:8:\"stdClass\":5:{s:11:\"description\";s:27:\"Name
  of the client catalog.\";s:9:\"maxLength\";i:50;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:30:\"Awesome
  Product Knowledge Base\";}s:10:\"internalId\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"ID
  used for integration with other internal systems.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"000753\";}}}s:8:\"Document\";O:8:\"stdClass\":4:{s:11:\"description\";s:54:\"Represents
  a document with all the related entity IDs.\";s:8:\"required\";a:1:{i:0;s:5:\"title\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":17:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:19:\"ID
  of the document.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"Title
  of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:34:\"Awesome Product
  User Guide V2018.1\";}s:8:\"htmlLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Relative
  path to the HTML output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:43:\"AwesomeProduct/UserGuide/V2018-1/index.html\";}s:7:\"pdfLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"Relative
  path to the PDF output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:69:\"AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf\";}s:8:\"wordLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Relative
  path to the Word output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:70:\"AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx\";}s:9:\"otherLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Relative
  path to a misc output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";N;}s:15:\"isFitForClients\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"Is
  document available to clients.\";s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:16:\"shortDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Short
  description of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:131:\"The
  document provides a description of the main features of <strong>Awesome Product</strong>
  as well as the main how-to procedures.\";}s:5:\"aitId\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:29:\"Author-ID
  ID of the document.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:78965;}s:17:\"documentAuthorIds\";O:8:\"stdClass\":4:{s:11:\"description\";s:27:\"List
  of related author IDs.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"example\";a:3:{i:0;i:1;i:1;i:2;i:2;i:3;}}s:18:\"documentCatalogIds\";O:8:\"stdClass\":4:{s:11:\"description\";s:35:\"List
  of related client catalog IDs.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"example\";a:1:{i:0;i:1;}}s:19:\"latestTopicsUpdated\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"List
  of the latest updated topics.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:42:\"This
  is the first version of the document.\";}s:11:\"isPublished\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Used
  to restrict the visibility of the update during publishing.\";s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:16:\"parentDocumentId\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:26:\"ID
  of the parent document.\";s:4:\"type\";s:7:\"integer\";}s:16:\"productVersionId\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:34:\"ID
  of the related product version.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:14:\"documentTypeId\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:32:\"ID
  of the related document type.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:2;}s:10:\"rowVersion\";O:8:\"stdClass\":4:{s:6:\"format\";s:4:\"byte\";s:11:\"description\";s:53:\"Used
  to prevent DB concurrency issues during updates.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"AAAAAAAAB9E=\";}}}s:14:\"DocumentUpdate\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"Represents
  a version of a document.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:26:\"ID
  of the document update.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:9:\"timestamp\";O:8:\"stdClass\":4:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:28:\"Date
  and time of the update.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:19:\"2018-06-04T00:00:00\";}s:19:\"latestTopicsUpdated\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"List
  of the latest updated topics.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:42:\"This
  is the first version of the document.\";}s:11:\"isPublished\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Used
  to restrict the visibility of the update during publishing.\";s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:10:\"documentId\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:29:\"Link
  to the related document.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:10:\"rowVersion\";O:8:\"stdClass\":4:{s:6:\"format\";s:4:\"byte\";s:11:\"description\";s:53:\"Used
  to prevent DB concurrency issues during updates.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"AAAAAAAARlE=\";}}}s:16:\"DocumentInternal\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Represent
  a Document published to internal users.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":15:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:19:\"ID
  of the document.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:5:\"title\";O:8:\"stdClass\":3:{s:11:\"description\";s:22:\"Title
  of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:34:\"Awesome Product
  User Guide V2018.1\";}s:7:\"product\";O:8:\"stdClass\":3:{s:11:\"description\";s:32:\"Product
  related to the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Awesome
  Product\";}s:7:\"version\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Product
  version related to the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"V2018.1\";}s:8:\"htmlLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Relative
  path to the HTML output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:43:\"AwesomeProduct/UserGuide/V2018-1/index.html\";}s:7:\"pdfLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"Relative
  path to the PDF output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:69:\"AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.pdf\";}s:8:\"wordLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Relative
  path to the Word output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:70:\"AwesomeProduct/UserGuide/V2018-1/AwesomeProduct_UserGuide_V2018-1.docx\";}s:9:\"otherLink\";O:8:\"stdClass\":3:{s:11:\"description\";s:47:\"Relative
  path to a misc output of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";N;}s:15:\"isFitForClients\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Is
  document available for clients.\";s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;}s:16:\"shortDescription\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Short
  description of the document.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:131:\"The
  document provides a description of the main features of <strong>Awesome Product</strong>
  as well as the main how-to procedures.\";}s:12:\"documentType\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Document
  type.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"User Guide\";}s:12:\"latestUpdate\";O:8:\"stdClass\":4:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:26:\"Date
  of the latest update.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"2018-06-04T00:00\";}s:19:\"latestTopicsUpdated\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"List
  of the latest updated topics.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:42:\"This
  is the first version of the document.\";}s:7:\"authors\";O:8:\"stdClass\":3:{s:11:\"description\";s:28:\"Link
  to the related authors.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Author\";}}s:14:\"clientCatalogs\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Link
  to the related client catalogs.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ClientCatalog\";}}}}s:12:\"DocumentType\";O:8:\"stdClass\":4:{s:11:\"description\";s:96:\"Represents
  a document type. Each document is linked to a single type that further classifies
  it.\";s:8:\"required\";a:2:{i:0;s:8:\"fullName\";i:1;s:9:\"shortName\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:24:\"ID
  of the document type.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:8:\"fullName\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Full
  name of the document type.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"User
  Guide\";}s:9:\"shortName\";O:8:\"stdClass\":5:{s:11:\"description\";s:39:\"Short
  name (code) of the document type.\";s:9:\"maxLength\";i:5;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"UG\";}s:16:\"documentCategory\";O:8:\"stdClass\":5:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:30:\"Category
  of the document type.\";s:4:\"enum\";a:4:{i:0;i:0;i:1;i:1;i:2;i:2;i:3;i:3;}s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:0;}}}s:16:\"DocumentCategory\";O:8:\"stdClass\":3:{s:11:\"description\";s:105:\"Represents
  a Document Category. Read-only enumeration. Each document type is linked to a single
  category.\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:3:\"key\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;s:7:\"example\";i:0;}s:5:\"value\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;s:7:\"example\";s:23:\"FunctionalDocumentation\";}}}s:7:\"Product\";O:8:\"stdClass\":4:{s:11:\"description\";s:21:\"Represents
  a Product.\";s:8:\"required\";a:2:{i:0;s:8:\"fullName\";i:1;s:9:\"shortName\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:18:\"Id
  of the product.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:8:\"fullName\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Marketing
  name of the product.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Awesome
  Product\";}s:9:\"shortName\";O:8:\"stdClass\":5:{s:11:\"description\";s:26:\"Short
  name of the product.\";s:9:\"maxLength\";i:7;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"AWP\";}s:5:\"alias\";O:8:\"stdClass\":4:{s:11:\"description\";s:27:\"Used
  for old product names.\";s:9:\"minLength\";i:4;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"Product
  1\";}}}s:14:\"ProductVersion\";O:8:\"stdClass\":4:{s:11:\"description\";s:39:\"Represents
  a Product Version (Release).\";s:8:\"required\";a:1:{i:0;s:7:\"release\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:26:\"ID
  of the product version.\";s:4:\"type\";s:7:\"integer\";s:7:\"example\";i:1;}s:7:\"product\";O:8:\"stdClass\":3:{s:11:\"description\";s:30:\"Marketing
  name of the product.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Awesome
  Product\";}s:7:\"release\";O:8:\"stdClass\":5:{s:11:\"description\";s:31:\"Release
  version of the product.\";s:9:\"maxLength\";i:10;s:9:\"minLength\";i:0;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"V2018.1\";}s:12:\"endOfSupport\";O:8:\"stdClass\":4:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:20:\"End
  of support date.\";s:4:\"type\";s:6:\"string\";s:7:\"example\";s:19:\"2019-02-01T00:00:00\";}s:11:\"isSupported\";O:8:\"stdClass\":4:{s:11:\"description\";s:39:\"True
  if the version is still supported.\";s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;s:7:\"example\";b:1;}}}}"
...
