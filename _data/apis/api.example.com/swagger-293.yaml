---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:7:\"version\";s:18:\"1.0.0-private-beta\";s:5:\"title\";s:13:\"catalogue-api\";s:11:\"description\";s:44:\"NHS
  Digital GP IT Futures Buying Catalog API\";}"
paths:
  /api/Capabilities/ByFramework/{frameworkId}:
    get:
      tags:
      - Capabilities
      summary: Get existing Capability/s which are in the given Framework
      operationId: ApiCapabilitiesByFrameworkByFrameworkIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: frameworkId
        in: path
        description: CRM identifier of Framework
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Capabilities]'
        404:
          description: Framework not found in CRM
      security:
      - Bearer: []
  /api/Capabilities/ById/{id}:
    get:
      tags:
      - Capabilities
      summary: Get an existing capability given its CRM identifierrnTypically used
        to retrieve previous version
      operationId: ApiCapabilitiesByIdByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of capability to find
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Capabilities'
        404:
          description: No capabilities not found in CRM
      security:
      - Bearer: []
  /api/Capabilities/ByIds:
    post:
      tags:
      - Capabilities
      summary: Get several existing capabilities given their CRM identifiers
      operationId: ApiCapabilitiesByIdsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: ids
        in: body
        description: Array of CRM identifiers of capabilities to find
        required: false
        schema:
          type: array
          items:
            type: string
          example:
          - CAP1
          - CAP8
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Capabilities'
        404:
          description: Capabilities not found in CRM
      security:
      - Bearer: []
  /api/Capabilities/ByStandard/{standardId}:
    get:
      tags:
      - Capabilities
      summary: Get existing Capability/s which require the given/optional Standard
      operationId: ApiCapabilitiesByStandardByStandardIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: standardId
        in: path
        description: CRM identifier of Standard
        required: true
        type: string
      - name: isOptional
        in: query
        description: true if the specified Standard is optional with the Capability
        required: false
        type: boolean
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Capabilities]'
        404:
          description: Capability not found in CRM
      security:
      - Bearer: []
  /api/Capabilities:
    get:
      tags:
      - Capabilities
      summary: Retrieve all current capabilities in a paged list
      operationId: ApiCapabilitiesGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success - if no capabilities found, return empty list
          schema:
            $ref: '#/definitions/PaginatedList[Capabilities]'
      security:
      - Bearer: []
  /api/CapabilitiesImplemented/ById/{id}:
    get:
      tags:
      - CapabilitiesImplemented
      summary: Retrieve claim, given the claimu2019s CRM identifier
      operationId: ApiCapabilitiesImplementedByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of claim
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CapabilitiesImplemented'
        404:
          description: Claim not found in CRM
      security:
      - Bearer: []
  /api/CapabilitiesImplemented/BySolution/{solutionId}:
    get:
      tags:
      - CapabilitiesImplemented
      summary: Retrieve all claimed capabilities for a solution in a paged list,rngiven
        the solutionu2019s CRM identifier
      operationId: ApiCapabilitiesImplementedBySolutionBySolutionIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: solutionId
        in: path
        description: CRM identifier of solution
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[CapabilitiesImplemented]'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
  /api/CapabilitiesImplemented:
    put:
      tags:
      - CapabilitiesImplemented
      summary: Update an existing claimed capability with new information
      operationId: ApiCapabilitiesImplementedPut
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: claimedcapability
        in: body
        description: claimed capability with updated information
        required: false
        schema:
          $ref: '#/definitions/CapabilitiesImplemented'
      responses:
        200:
          description: Success
        404:
          description: Solution or ClaimedCapability not found in CRM
      security:
      - Bearer: []
    post:
      tags:
      - CapabilitiesImplemented
      summary: Create a new claimed capability for a solution
      operationId: ApiCapabilitiesImplementedPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: claimedcapability
        in: body
        description: new claimed capability information
        required: false
        schema:
          $ref: '#/definitions/CapabilitiesImplemented'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CapabilitiesImplemented'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
    delete:
      tags:
      - CapabilitiesImplemented
      summary: Delete an existing claimed capability for a solution
      operationId: ApiCapabilitiesImplementedDelete
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: claimedcapability
        in: body
        description: existing claimed capability information
        required: false
        schema:
          $ref: '#/definitions/CapabilitiesImplemented'
      responses:
        200:
          description: Success
        404:
          description: ClaimedCapability not found in CRM
      security:
      - Bearer: []
  /api/CapabilitiesImplementedEvidence/ByClaim/{claimId}:
    get:
      tags:
      - CapabilitiesImplementedEvidence
      summary: Get all Evidence for the given ClaimrnEach list is a distinct 'chain'
        of Evidence ie original Evidence with all subsequent EvidencernThe first item
        in each 'chain' is the most current Evidence.rnThe last item in each 'chain'
        is the original Evidence.
      operationId: ApiCapabilitiesImplementedEvidenceByClaimByClaimIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: claimId
        in: path
        description: CRM identifier of Claim
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[IEnumerable[CapabilitiesImplementedEvidence]]'
        404:
          description: Claim not found
      security:
      - Bearer: []
  /api/CapabilitiesImplementedEvidence/ById/{id}:
    get:
      tags:
      - CapabilitiesImplementedEvidence
      summary: Get a CapabilityImplemented record by evidence Id
      consumes: []
      produces:
      - application/json
      parameters:
      - name: evidenceId
        in: path
        description: CRM identifier of evidence
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CapabilitiesImplementedEvidence'
        404:
          description: evidence not found
      security:
      - Bearer: []
  /api/CapabilitiesImplementedEvidence:
    post:
      tags:
      - CapabilitiesImplementedEvidence
      summary: Create a new evidence
      operationId: ApiCapabilitiesImplementedEvidencePost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: evidence
        in: body
        description: new evidence information
        required: false
        schema:
          $ref: '#/definitions/CapabilitiesImplementedEvidence'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CapabilitiesImplementedEvidence'
        404:
          description: Claim not found
      security:
      - Bearer: []
  /api/CapabilitiesImplementedReviews/ByEvidence/{evidenceId}:
    get:
      tags:
      - CapabilitiesImplementedReviews
      summary: Get all Reviews for a CapabilitiesImplementedrnEach list is a distinct
        'chain' of Review ie original Review with all subsequent ReviewrnThe first
        item in each 'chain' is the most current Review.rnThe last item in each 'chain'
        is the original Review.
      operationId: ApiCapabilitiesImplementedReviewsByEvidenceByEvidenceIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: evidenceId
        in: path
        description: CRM identifier of CapabilitiesImplementedEvidence
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[IEnumerable[CapabilitiesImplementedReviews]]'
        404:
          description: Evidence not found
      security:
      - Bearer: []
  /api/CapabilitiesImplementedReviews/ById/{reviewId}:
    get:
      tags:
      - CapabilitiesImplementedReviews
      summary: Get the CapabilityImplemented record for a given review id.
      consumes: []
      produces:
      - application/json
      parameters:
      - name: reviewId
        in: path
        description: CRM identifier of Review record
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CapabilitiesImplemented'
        404:
          description: Review not found
      security:
      - Bearer: []
  /api/CapabilitiesImplementedReviews:
    post:
      tags:
      - CapabilitiesImplementedReviews
      summary: Create a new Review for a CapabilitiesImplemented
      operationId: ApiCapabilitiesImplementedReviewsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: review
        in: body
        description: new Review information
        required: false
        schema:
          $ref: '#/definitions/CapabilitiesImplementedReviews'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CapabilitiesImplementedReviews'
        404:
          description: CapabilitiesImplemented not found
      security:
      - Bearer: []
  /api/CapabilityStandards:
    get:
      tags:
      - CapabilityStandards
      summary: Get all Capability Standards
      operationId: ApiCapabilitiesStandardsGet
      consumes:
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[CapabilityStandard]'
      security:
      - Bearer: []
  /api/Contacts/ByOrganisation/{organisationId}:
    get:
      tags:
      - Contacts
      summary: Retrieve all contacts for an organisation in a paged list, given the
        organisationu2019s CRM identifier
      operationId: ApiContactsByOrganisationByOrganisationIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: organisationId
        in: path
        description: CRM identifier of organisation
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Contacts]'
        404:
          description: Organisation not found in ODS
      security:
      - Bearer: []
  /api/Contacts/ByEmail/{email}:
    get:
      tags:
      - Contacts
      summary: Retrieve a contacts for an organisation, given the contactu2019s email
        addressrnEmail address is case insensitive
      operationId: ApiContactsByEmailByEmailGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: email
        in: path
        description: email address to search for
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Contacts'
        404:
          description: Contact not found
      security:
      - Bearer: []
  /api/Contacts/ById/{id}:
    get:
      tags:
      - Contacts
      summary: Retrieve a contact for an organisation, given the contactu2019s CRM
        identifier
      operationId: ApiContactsByIdByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of contact
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Contacts'
        404:
          description: Contact not found
      security:
      - Bearer: []
  /api/Frameworks/ByCapability/{capabilityId}:
    get:
      tags:
      - Frameworks
      summary: Get existing framework/s which have the given capability
      operationId: ApiFrameworksByCapabilityByCapabilityIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: capabilityId
        in: path
        description: CRM identifier of Capability
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Frameworks]'
        404:
          description: Capability not found in CRM
      security:
      - Bearer: []
  /api/Frameworks/ByStandard/{standardId}:
    get:
      tags:
      - Frameworks
      summary: Get existing framework/s which have the given standard
      operationId: ApiFrameworksByStandardByStandardIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: standardId
        in: path
        description: CRM identifier of Standard
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Frameworks]'
        404:
          description: Standard not found in CRM
      security:
      - Bearer: []
  /api/Frameworks/ById/{id}:
    get:
      tags:
      - Frameworks
      summary: Get an existing framework given its CRM identifierrnTypically used
        to retrieve previous version
      operationId: ApiFrameworksByIdByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of framework to find
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Frameworks'
        404:
          description: Framework not found in CRM
      security:
      - Bearer: []
  /api/Frameworks/BySolution/{solutionId}:
    get:
      tags:
      - Frameworks
      summary: Get existing framework/s on which a solution was onboarded, given the
        CRM identifier of the solution
      operationId: ApiFrameworksBySolutionBySolutionIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: solutionId
        in: path
        description: CRM identifier of solution
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Frameworks]'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
  /api/Frameworks:
    get:
      tags:
      - Frameworks
      summary: Retrieve all current frameworks in a paged list
      operationId: ApiFrameworksGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success - if no frameworks found, return empty list
          schema:
            $ref: '#/definitions/PaginatedList[Frameworks]'
      security:
      - Bearer: []
  /api/LinkManager/FrameworkSolution/Create/{frameworkId}/{solutionId}:
    post:
      tags:
      - LinkManager
      summary: Create a link between a Framework and a Solution
      operationId: ApiLinkManagerFrameworkSolutionCreateByFrameworkIdBySolutionIdPost
      consumes: []
      produces: []
      parameters:
      - name: frameworkId
        in: path
        description: CRM identifier of Framework
        required: true
        type: string
      - name: solutionId
        in: path
        description: CRM identifier of Solution
        required: true
        type: string
      responses:
        200:
          description: Success
        404:
          description: One entity not found
        412:
          description: Association already exists
      security:
      - Bearer: []
  /api/Organisations/ById/{organisationId}:
    get:
      tags:
      - Organisations
      summary: Retrieve an Organisation by the given Id
      operationId: ApiOrganisationsByOrganisationIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: organisationId
        in: path
        description: CRM identifier of Organisation
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Organisations'
        404:
          description: Organisation not found
      security:
      - Bearer: []
  /api/Organisations/ByContact/{contactId}:
    get:
      tags:
      - Organisations
      summary: Retrieve an Organisation for the given Contact
      operationId: ApiOrganisationsByContactByContactIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: contactId
        in: path
        description: CRM identifier of Contact
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Organisations'
        404:
          description: Organisation not found
      security:
      - Bearer: []
  /api/Solutions/ByFramework/{frameworkId}:
    get:
      tags:
      - Solutions
      summary: Get existing solution/s on which were onboarded onto a framework,rngiven
        the CRM identifier of the framework
      operationId: ApiSolutionsByFrameworkByFrameworkIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: frameworkId
        in: path
        description: CRM identifier of organisation to find
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Solutions]'
        404:
          description: Framework not found in CRM
      security:
      - Bearer: []
  /api/Solutions/ById/{id}:
    get:
      tags:
      - Solutions
      summary: Get an existing solution given its CRM identifierrnTypically used to
        retrieve previous version
      operationId: ApiSolutionsByIdByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of solution to find
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Solutions'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
  /api/Solutions/ByOrganisation/{organisationId}:
    get:
      tags:
      - Solutions
      summary: Retrieve all current solutions in a paged list for an organisation,rngiven
        the organisationu2019s CRM identifier
      operationId: ApiSolutionsByOrganisationByOrganisationIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: organisationId
        in: path
        description: CRM identifier of organisation
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Solutions]'
        404:
          description: Organisation not found in CRM
      security:
      - Bearer: []
  /api/Solutions:
    put:
      tags:
      - Solutions
      summary: Update an existing solution with new information
      operationId: ApiSolutionsPut
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: solution
        in: body
        description: contact with updated information
        required: false
        schema:
          $ref: '#/definitions/Solutions'
      responses:
        200:
          description: Success
        404:
          description: Organisation or solution not found in CRM
      security:
      - Bearer: []
    post:
      tags:
      - Solutions
      summary: Create a new solution for an organisation
      operationId: ApiSolutionsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: solution
        in: body
        description: new solution information
        required: false
        schema:
          $ref: '#/definitions/Solutions'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Solutions'
        404:
          description: Organisation not found in CRM
        500:
          description: Validation exception
      security:
      - Bearer: []
    delete:
      tags:
      - Solutions
      summary: Delete an existing solution (will cascade delete to child entities)
      operationId: ApiSolutionsDelete
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: solution
        in: body
        description: existing solution id
        required: true
        schema:
          $ref: '#/definitions/Solutions'
      responses:
        200:
          description: Success
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
  /api/porcelain/SolutionsEx/BySolution/{solutionId}:
    get:
      tags:
      - SolutionsEx
      summary: Get a Solution with a list of corresponding TechnicalContact, ClaimedCapability,
        ClaimedStandard et al
      operationId: ApiPorcelainSolutionsExBySolution
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: solutionId
        in: path
        description: Id of the solution to retrieve.
        required: true
        type: string
      responses:
        200:
          description: Success
        404:
          description: Solution not found in CRM
        500:
          description: Datastore exception
      security:
      - Bearer: []
  /api/porcelain/SolutionsEx/Update:
    put:
      tags:
      - SolutionsEx
      summary: Update an existing Solution, TechnicalContact, ClaimedCapability, ClaimedStandard
        et al with new information
      operationId: ApiPorcelainSolutionsExUpdatePut
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: solnEx
        in: body
        description: Solution, TechnicalContact, ClaimedCapability, ClaimedStandard
          et al with updated information
        required: false
        schema:
          $ref: '#/definitions/SolutionEx'
      responses:
        200:
          description: Success
        404:
          description: Solution, TechnicalContact, ClaimedCapability, ClaimedStandard
            et al not found in CRM
        500:
          description: Datastore exception
      security:
      - Bearer: []
  /api/Standards/ByCapability/{capabilityId}:
    get:
      tags:
      - Standards
      summary: Get existing/optional Standard/s which are in the given Capability
      operationId: ApiStandardsByCapabilityByCapabilityIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: capabilityId
        in: path
        description: CRM identifier of Capability
        required: true
        type: string
      - name: isOptional
        in: query
        description: true if the specified Standard is optional with the Capability
        required: false
        type: boolean
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Standards]'
        404:
          description: Capability not found in CRM
      security:
      - Bearer: []
  /api/Standards/ByFramework/{frameworkId}:
    get:
      tags:
      - Standards
      summary: Get existing Standard/s which are in the given Framework
      operationId: ApiStandardsByFrameworkByFrameworkIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: frameworkId
        in: path
        description: CRM identifier of Framework
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[Standards]'
        404:
          description: Framework not found in CRM
      security:
      - Bearer: []
  /api/Standards/ById/{id}:
    get:
      tags:
      - Standards
      summary: Get an existing standard given its CRM identifierrnTypically used to
        retrieve previous version
      operationId: ApiStandardsByIdByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of standard to find
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Standards'
        404:
          description: Standard not found in CRM
      security:
      - Bearer: []
  /api/Standards/ByIds:
    post:
      tags:
      - Standards
      summary: Get several existing Standards given their CRM identifiers
      operationId: ApiStandardsByIdsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: ids
        in: body
        description: Array of CRM identifiers of Standards to find
        required: false
        schema:
          type: array
          items:
            type: string
          example:
          - INT12
          - INT14
          - INT16
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Standards'
        404:
          description: Standards not found in CRM
      security:
      - Bearer: []
  /api/Standards:
    get:
      tags:
      - Standards
      summary: Retrieve all current standards in a paged list
      operationId: ApiStandardsGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success - if no standards found, return empty list
          schema:
            $ref: '#/definitions/PaginatedList[Standards]'
      security:
      - Bearer: []
  /api/StandardsApplicable/ById/{id}:
    get:
      tags:
      - StandardsApplicable
      summary: Retrieve claim, given the claimu2019s CRM identifier
      operationId: ApiStandardsApplicableByIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of claim
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StandardsApplicable'
        404:
          description: Claim not found in CRM
      security:
      - Bearer: []
  /api/StandardsApplicable/BySolution/{solutionId}:
    get:
      tags:
      - StandardsApplicable
      summary: Retrieve all claimed standards for a solution in a paged list,rn given
        the solutionu2019s CRM identifier
      operationId: ApiStandardsApplicableBySolutionBySolutionIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: solutionId
        in: path
        description: CRM identifier of solution
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[StandardsApplicable]'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
  /api/StandardsApplicable:
    put:
      tags:
      - StandardsApplicable
      summary: Update an existing claimed standard with new information
      operationId: ApiStandardsApplicablePut
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: claimedstandard
        in: body
        description: claimed standard with updated information
        required: false
        schema:
          $ref: '#/definitions/StandardsApplicable'
      responses:
        200:
          description: Success
        404:
          description: Solution or ClaimedStandard not found in CRM
      security:
      - Bearer: []
    post:
      tags:
      - StandardsApplicable
      summary: Create a new claimed standard for a solution
      operationId: ApiStandardsApplicablePost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: claimedstandard
        in: body
        description: new claimed standard information
        required: false
        schema:
          $ref: '#/definitions/StandardsApplicable'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StandardsApplicable'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
    delete:
      tags:
      - StandardsApplicable
      summary: Delete an existing claimed standard for a solution
      operationId: ApiStandardsApplicableDelete
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: claimedstandard
        in: body
        description: existing claimed standard information
        required: false
        schema:
          $ref: '#/definitions/StandardsApplicable'
      responses:
        200:
          description: Success
        404:
          description: ClaimedStandard not found in CRM
      security:
      - Bearer: []
  /api/StandardsApplicableEvidence/ByClaim/{claimId}:
    get:
      tags:
      - StandardsApplicableEvidence
      summary: Get all Evidence for the given ClaimrnEach list is a distinct 'chain'
        of Evidence ie original Evidence with all subsequent EvidencernThe first item
        in each 'chain' is the most current Evidence.rnThe last item in each 'chain'
        is the original Evidence.
      operationId: ApiStandardsApplicableEvidenceByClaimByClaimIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: claimId
        in: path
        description: CRM identifier of Claim
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[IEnumerable[StandardsApplicableEvidence]]'
        404:
          description: StandardsApplicable not found
      security:
      - Bearer: []
  /api/StandardsApplicableEvidence/ById/{Id}:
    get:
      tags:
      - StandardsApplicableEvidence
      summary: Get the standard applicable record by evidence.
      consumes: []
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: CRM identifier of Evidence
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StandardsApplicableEvidence'
        404:
          description: Evidence not found
      security:
      - Bearer: []
  /api/StandardsApplicableEvidence:
    post:
      tags:
      - StandardsApplicableEvidence
      summary: Create a new evidence
      operationId: ApiStandardsApplicableEvidencePost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: evidence
        in: body
        description: new evidence information
        required: false
        schema:
          $ref: '#/definitions/StandardsApplicableEvidence'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StandardsApplicableEvidence'
        404:
          description: Claim not found
      security:
      - Bearer: []
  /api/StandardsApplicableReviews/ByEvidence/{evidenceId}:
    get:
      tags:
      - StandardsApplicableReviews
      summary: Get all Reviews for a StandardsApplicablernEach list is a distinct
        'chain' of Review ie original Review with all subsequent ReviewrnThe first
        item in each 'chain' is the most current Review.rnThe last item in each 'chain'
        is the original Review.
      operationId: ApiStandardsApplicableReviewsByEvidenceByEvidenceIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: evidenceId
        in: path
        description: CRM identifier of StandardsApplicableEvidence
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[IEnumerable[StandardsApplicableReviews]]'
        404:
          description: Evidence not found
      security:
      - Bearer: []
  /api/StandardsApplicableReviews/ById/{reviewId}:
    get:
      tags:
      - StandardsApplicableReviews
      summary: Retrieve StandardsApplicable record for a given review id.
      operationId: ApiStandardsApplicableByReviewIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: reviewId
        in: path
        description: CRM identifier of review
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StandardsApplicable'
        404:
          description: Review not found in CRM
      security:
      - Bearer: []
  /api/StandardsApplicableReviews:
    post:
      tags:
      - StandardsApplicableReviews
      summary: Create a new Review for a StandardsApplicable
      operationId: ApiStandardsApplicableReviewsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: review
        in: body
        description: new Review information
        required: false
        schema:
          $ref: '#/definitions/StandardsApplicableReviews'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StandardsApplicableReviews'
        404:
          description: StandardsApplicable not found
      security:
      - Bearer: []
  /api/TechnicalContacts/BySolution/{solutionId}:
    get:
      tags:
      - TechnicalContacts
      summary: Retrieve all Technical Contacts for a solution in a paged list,rngiven
        the solutionu2019s CRM identifier
      operationId: ApiTechnicalContactsBySolutionBySolutionIdGet
      consumes: []
      produces:
      - application/json
      parameters:
      - name: solutionId
        in: path
        description: CRM identifier of solution
        required: true
        type: string
      - name: pageIndex
        in: query
        description: 1-based index of page to return.  Defaults to 1
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: number of items per page.  Defaults to 20
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaginatedList[TechnicalContacts]'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
  /api/TechnicalContacts:
    put:
      tags:
      - TechnicalContacts
      summary: Update a Technical Contact with new information
      operationId: ApiTechnicalContactsPut
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: techCont
        in: body
        description: Technical Contact with updated information
        required: false
        schema:
          $ref: '#/definitions/TechnicalContacts'
      responses:
        200:
          description: Success
        404:
          description: Technical Contact or Solution not found in CRM
      security:
      - Bearer: []
    post:
      tags:
      - TechnicalContacts
      summary: Create a new Technical Contact for a Solution
      operationId: ApiTechnicalContactsPost
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces:
      - application/json
      parameters:
      - name: techCont
        in: body
        description: new Technical Contact information
        required: false
        schema:
          $ref: '#/definitions/TechnicalContacts'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TechnicalContacts'
        404:
          description: Solution not found in CRM
      security:
      - Bearer: []
    delete:
      tags:
      - TechnicalContacts
      summary: Delete an existing Technical Contact for a Solution
      operationId: ApiTechnicalContactsDelete
      consumes:
      - application/json-patch+json
      - application/json
      - text/json
      - application/*+json
      produces: []
      parameters:
      - name: techCont
        in: body
        description: existing Technical Contact information
        required: false
        schema:
          $ref: '#/definitions/TechnicalContacts'
      responses:
        200:
          description: Success
        404:
          description: Technical Contact or Solution not found in CRM
      security:
      - Bearer: []
definitions: !php/object "O:8:\"stdClass\":38:{s:27:\"PaginatedList[Capabilities]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Capabilities\";}s:8:\"readOnly\";b:1;}}}s:12:\"Capabilities\";O:8:\"stdClass\":4:{s:11:\"description\";s:274:\"A
  list of potential competencies a \u2018solution\u2019 can perform or provide eg\r\n*
  Mobile working\r\n* Training\r\n* Prescribing\r\n* Installation\r\nNote that a \u2018capability\u2019
  has a link to zero or one previous \u2018capability\u2019\r\nGenerally, only interested
  in current \u2018capability\u2019\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"Name
  of Capability, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:49:\"Description
  of Capability, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"URL
  with further information\";s:4:\"type\";s:6:\"string\";}}}s:23:\"CapabilitiesImplemented\";O:8:\"stdClass\":5:{s:11:\"description\";s:177:\"A
  \u2018capability\u2019 which a \u2018solution\u2019 asserts that it provides.\r\nThis
  is then assessed by NHS to verify the \u2018solution\u2019 complies with the \u2018capability\u2019
  it has claimed.\";s:8:\"required\";a:3:{i:0;s:12:\"capabilityId\";i:1;s:2:\"id\";i:2;s:10:\"solutionId\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"capabilityId\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"Unique
  identifier of capability\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"Current
  status of this ClaimedCapability\";s:4:\"enum\";a:5:{i:0;s:5:\"Draft\";i:1;s:9:\"Submitted\";i:2;s:11:\"Remediation\";i:3;s:8:\"Approved\";i:4;s:8:\"Rejected\";}s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"solutionId\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Unique
  identifier of solution\";s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":4:{s:12:\"capabilityId\";s:4:\"CAP6\";s:6:\"status\";s:9:\"Submitted\";s:2:\"id\";s:36:\"0F2614F9-2521-414A-A448-0096C0DF3ABE\";s:10:\"solutionId\";s:36:\"A3C6830F-2E7C-4545-A4B9-02D20C4C92E1\";}}s:38:\"PaginatedList[CapabilitiesImplemented]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/CapabilitiesImplemented\";}s:8:\"readOnly\";b:1;}}}s:59:\"PaginatedList[IEnumerable[CapabilitiesImplementedEvidence]]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/CapabilitiesImplementedEvidence\";}}s:8:\"readOnly\";b:1;}}}s:31:\"CapabilitiesImplementedEvidence\";O:8:\"stdClass\":4:{s:11:\"description\";s:177:\"A
  piece of 'evidence' which supports a claim to a \u2018capability\u2019.\r\nThis
  is then assessed by NHS to verify the \u2018solution\u2019 complies with the \u2018capability\u2019
  it has claimed.\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:7:\"claimId\";i:2;s:11:\"createdById\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:7:\"claimId\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Unique
  identifier of Claim\";s:4:\"type\";s:6:\"string\";}s:11:\"createdById\";O:8:\"stdClass\":2:{s:11:\"description\";s:92:\"Unique
  identifier of Contact who created record\r\nDerived from calling context\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:9:\"createdOn\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:92:\"UTC
  date and time at which record created\r\nSet by server when creating record\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:8:\"evidence\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Serialised
  evidence data\";s:4:\"type\";s:6:\"string\";}}}s:9:\"IFormFile\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"contentType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:18:\"contentDisposition\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:7:\"headers\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"readOnly\";b:1;}s:6:\"length\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:8:\"fileName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:23:\"PaginatedList[BlobInfo]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/BlobInfo\";}s:8:\"readOnly\";b:1;}}}s:8:\"BlobInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:12:\"Display
  name\";s:4:\"type\";s:6:\"string\";}s:8:\"isFolder\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"true
  if object is a folder\";s:4:\"type\";s:7:\"boolean\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Externally
  accessible URL\";s:4:\"type\";s:6:\"string\";}s:16:\"timeLastModified\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:22:\"UTC
  when last modified\";s:4:\"type\";s:6:\"string\";}}}s:58:\"PaginatedList[IEnumerable[CapabilitiesImplementedReviews]]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:44:\"#/definitions/CapabilitiesImplementedReviews\";}}s:8:\"readOnly\";b:1;}}}s:30:\"CapabilitiesImplementedReviews\";O:8:\"stdClass\":4:{s:11:\"description\";s:163:\"Initially,
  a 'message' or response to 'evidence' which supports a claim to a \u2018capability\u2019.\r\nThereafter,
  this will be a response to a previous message/response.\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:10:\"evidenceId\";i:2;s:11:\"createdById\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"evidenceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Unique
  identifier of associated Evidence\";s:4:\"type\";s:6:\"string\";}s:11:\"createdById\";O:8:\"stdClass\":2:{s:11:\"description\";s:92:\"Unique
  identifier of Contact who created record\r\nDerived from calling context\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:9:\"createdOn\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:92:\"UTC
  date and time at which record created\r\nSet by server when creating record\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Serialised
  message data\";s:4:\"type\";s:6:\"string\";}}}s:18:\"CapabilityMappings\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"All
  CapabilityMapping with all corresponding Standard\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:17:\"capabilityMapping\";O:8:\"stdClass\":3:{s:11:\"description\";s:78:\"NHSD.GPITF.BuyingCatalog.Models.Porcelain.CapabilityMappings.CapabilityMapping\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/CapabilityMapping\";}}s:8:\"standard\";O:8:\"stdClass\":3:{s:11:\"description\";s:79:\"A
  list of NHSD.GPITF.BuyingCatalog.Models.Porcelain.CapabilityMappings.Standard\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Standards\";}}}}s:33:\"PaginatedList[CapabilityStandard]\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"All
  CapabilityStandard N:N records\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"NHSD.GPITF.BuyingCatalog.Models.CapabilityStandard\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/CapabilityStandard\";}}}}s:17:\"CapabilityMapping\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"A
  single Capability with its corresponding OptionalStandard\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"capability\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/Capabilities\";s:11:\"description\";s:70:\"NHSD.GPITF.BuyingCatalog.Models.Porcelain.CapabilityMapping.Capability\";}s:16:\"optionalStandard\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"A
  list of OptionalStandard\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/OptionalStandard\";}}}}s:18:\"CapabilityStandard\";O:8:\"stdClass\":4:{s:11:\"description\";s:44:\"Link
  entity between Capability and Standard.\";s:8:\"required\";a:2:{i:0;s:12:\"capabilityId\";i:1;s:10:\"standardId\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"capabilityId\";O:8:\"stdClass\":2:{s:11:\"description\";s:42:\"Unique
  identifier of the capability entity\";s:4:\"type\";s:6:\"string\";}s:10:\"standardId\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier of standard id.\";s:4:\"type\";s:6:\"string\";}s:10:\"isOptional\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"True
  if the Standard does not have to be supported in order to support the Capability\";s:4:\"type\";s:6:\"string\";}}}s:9:\"Standards\";O:8:\"stdClass\":4:{s:11:\"description\";s:175:\"A
  formal set of requirements eg  * ISO 9001\r\nNote that a \u2018standard\u2019 has
  a link to zero or one previous \u2018standard\u2019\r\nGenerally, only interested
  in current \u2018standard\u2019\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:13:\"isOverarching\";O:8:\"stdClass\":2:{s:11:\"description\";s:46:\"True
  if this standard applies to all solutions\";s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Name
  of Standard, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Description
  of Standard, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":2:{s:11:\"description\";s:28:\"URL
  with further information\";s:4:\"type\";s:6:\"string\";}}}s:16:\"OptionalStandard\";O:8:\"stdClass\":4:{s:11:\"description\";s:78:\"A
  Standard and a flag associated with a Capability through a CapabilityMapping\";s:8:\"required\";a:1:{i:0;s:10:\"standardId\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"standardId\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Unique
  identifier of Standard\";s:4:\"type\";s:6:\"string\";}s:10:\"isOptional\";O:8:\"stdClass\":2:{s:11:\"description\";s:85:\"True
  if the Standard does not have to be supported in order to support the Capability\";s:4:\"type\";s:7:\"boolean\";}}}s:23:\"PaginatedList[Contacts]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Contacts\";}s:8:\"readOnly\";b:1;}}}s:8:\"Contacts\";O:8:\"stdClass\":4:{s:11:\"description\";s:136:\"A
  means of communicating with an organisation, typically a person, email address,
  telephone number etc.\r\nStandard MS Dynamics CRM entity\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:14:\"organisationId\";i:2;s:13:\"emailAddress1\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:14:\"organisationId\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier of organisation\";s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"First
  name of contact\";s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Last
  name of contact\";s:4:\"type\";s:6:\"string\";}s:13:\"emailAddress1\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Primary
  email address of contact\";s:4:\"type\";s:6:\"string\";}s:12:\"phoneNumber1\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"Primary
  phone number of contact\";s:4:\"type\";s:6:\"string\";}}}s:25:\"PaginatedList[Frameworks]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/Frameworks\";}s:8:\"readOnly\";b:1;}}}s:10:\"Frameworks\";O:8:\"stdClass\":4:{s:11:\"description\";s:315:\"An
  agreement between an \u2018organisation\u2019 and NHS which allows a \u2018solution\u2019
  to be purchased.  There may be more than one active or current \u2018framework\u2019
  at any point in time  Note that a \u2018framework\u2019 has a link to zero or one
  previous \u2018framework\u2019  Generally, only interested in current \u2018framework\u2019\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:41:\"Name
  of Framework, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:48:\"Description
  of Framework, as displayed to a user\";s:4:\"type\";s:6:\"string\";}}}s:27:\"PaginatedList[KeywordCount]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/KeywordCount\";}s:8:\"readOnly\";b:1;}}}s:12:\"KeywordCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:48:\"How
  may times a keyword has appeared in a search\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"keyword\";O:8:\"stdClass\":2:{s:11:\"description\";s:7:\"Keyword\";s:4:\"type\";s:6:\"string\";}s:5:\"count\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:41:\"Number
  of times this keyword has occurred\";s:4:\"type\";s:7:\"integer\";}}}s:13:\"Organisations\";O:8:\"stdClass\":4:{s:11:\"description\";s:289:\"A
  'Supplier' is a company who supplies \u2018solutions\u2019 to NHS buyers.\r\nA 'Buyer'
  is a company who purchases 'solutions' from a 'Supplier'.\r\nAn 'Admin' is a company,
  typically NHS Digital, who has ultimate control over all information in the Buying
  Catalog.\r\nStandard MS Dynamics CRM entity\";s:8:\"required\";a:5:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:7:\"odsCode\";i:3;s:13:\"primaryRoleId\";i:4;s:6:\"status\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:43:\"Name
  of a company, as displayed to the user\";s:4:\"type\";s:6:\"string\";}s:7:\"odsCode\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"ODS
  code for company\";s:4:\"type\";s:6:\"string\";}s:13:\"primaryRoleId\";O:8:\"stdClass\":2:{s:11:\"description\";s:74:\"Primary
  ODS role code for company\r\nSuppliers have a primary role of \"RO92\"\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:11:\"description\";s:63:\"Operational
  status of company\r\nTypically:  \"Active\", \"Inactive\"\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:25:\"Information
  about company\";s:4:\"type\";s:6:\"string\";}}}s:27:\"PaginatedList[SearchResult]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/SearchResult\";}s:8:\"readOnly\";b:1;}}}s:12:\"SearchResult\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"A
  SolutionEx and an indication of its relevance (Distance)\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:10:\"solutionEx\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:24:\"#/definitions/SolutionEx\";s:11:\"description\";s:10:\"SolutionEx\";}s:8:\"distance\";O:8:\"stdClass\":3:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:235:\"How
  far away the SolutionEx is from ideal:\r\n  zero     =&gt; SolutionEx has exactly
  capabilities required\r\n  positive =&gt; SolutionEx has more capabilities than
  required\r\n  negative =&gt; SolutionEx has less capabilities than required\";s:4:\"type\";s:7:\"integer\";}}}s:10:\"SolutionEx\";O:8:\"stdClass\":3:{s:11:\"description\";s:104:\"An
  Extended Solution with its corresponding Technical Contacts, ClaimedCapability,
  ClaimedStandard et al\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":8:{s:8:\"solution\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:23:\"#/definitions/Solutions\";s:11:\"description\";s:8:\"Solution\";}s:17:\"claimedCapability\";O:8:\"stdClass\":3:{s:11:\"description\";s:27:\"A
  list of ClaimedCapability\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/CapabilitiesImplemented\";}}s:25:\"claimedCapabilityEvidence\";O:8:\"stdClass\":3:{s:11:\"description\";s:35:\"A
  list of ClaimedCapabilityEvidence\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/CapabilitiesImplementedEvidence\";}}s:23:\"claimedCapabilityReview\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"A
  list of ClaimedCapabilityReview\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:44:\"#/definitions/CapabilitiesImplementedReviews\";}}s:15:\"claimedStandard\";O:8:\"stdClass\":3:{s:11:\"description\";s:25:\"A
  list of ClaimedStandard\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/StandardsApplicable\";}}s:23:\"claimedStandardEvidence\";O:8:\"stdClass\":3:{s:11:\"description\";s:33:\"A
  list of ClaimedStandardEvidence\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/StandardsApplicableEvidence\";}}s:21:\"claimedStandardReview\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"A
  list of ClaimedStandardReview\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/StandardsApplicableReviews\";}}s:16:\"technicalContact\";O:8:\"stdClass\":3:{s:11:\"description\";s:26:\"A
  list of TechnicalContact\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/TechnicalContacts\";}}}}s:9:\"Solutions\";O:8:\"stdClass\":5:{s:11:\"description\";s:224:\"A
  product and/or service provided by an \u2018organisation\u2019.\r\nNote that a \u2018solution\u2019
  has a link to zero or one previous \u2018solution\u2019\r\nGenerally, only interested
  in current \u2018solution\u2019\r\nStandard MS Dynamics CRM entity\";s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:14:\"organisationId\";i:2;s:11:\"createdById\";i:3;s:12:\"modifiedById\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:14:\"organisationId\";O:8:\"stdClass\":2:{s:11:\"description\";s:33:\"Unique
  identifier of organisation\";s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":2:{s:11:\"description\";s:19:\"Version
  of solution\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Current
  status of this solution\";s:4:\"enum\";a:8:{i:0;s:6:\"Failed\";i:1;s:5:\"Draft\";i:2;s:10:\"Registered\";i:3;s:22:\"CapabilitiesAssessment\";i:4;s:19:\"StandardsCompliance\";i:5;s:13:\"FinalApproval\";i:6;s:12:\"SolutionPage\";i:7;s:8:\"Approved\";}s:4:\"type\";s:6:\"string\";}s:11:\"createdById\";O:8:\"stdClass\":2:{s:11:\"description\";s:97:\"Unique
  identifier of Contact who created this entity\r\nDerived from calling context\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:9:\"createdOn\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:92:\"UTC
  date and time at which record created\r\nSet by server when creating record\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:12:\"modifiedById\";O:8:\"stdClass\":2:{s:11:\"description\";s:103:\"Unique
  identifier of Contact who last modified this entity\r\nDerived from calling context\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:10:\"modifiedOn\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:98:\"UTC
  date and time at which record last modified\r\nSet by server when creating record\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Name
  of solution, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Description
  of solution, as displayed to a user\";s:4:\"type\";s:6:\"string\";}s:11:\"productPage\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Serialised
  product page\";s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":12:{s:2:\"id\";s:36:\"A3C6830F-2E7C-4545-A4B9-02D20C4C92E1\";s:10:\"previousId\";s:36:\"12968eb4-4160-4ec5-8bb7-3deca7c3f53b\";s:14:\"organisationId\";s:36:\"9c2fd4d4-98ca-41d7-b8f4-1ad6f6702127\";s:7:\"version\";s:3:\"2.0\";s:6:\"status\";s:9:\"Submitted\";s:11:\"createdById\";s:36:\"371b20b7-3bed-487d-aa5f-995f5924e579\";s:9:\"createdOn\";s:19:\"2017-12-25T06:45:00\";s:12:\"modifiedById\";s:36:\"371b20b7-3bed-487d-aa5f-995f5924e579\";s:10:\"modifiedOn\";s:19:\"2018-12-31T17:25:00\";s:4:\"name\";s:28:\"Really
  Kool Document Manager\";s:11:\"description\";s:36:\"Does Really Kool document management\";s:11:\"productPage\";s:0:\"\";}}s:19:\"StandardsApplicable\";O:8:\"stdClass\":5:{s:11:\"description\";s:173:\"A
  \u2018Standard\u2019 which a \u2018Solution\u2019 asserts that it provides.\r\nThis
  is then assessed by NHS to verify the \u2018Solution\u2019 complies with the \u2018Standard\u2019
  it has claimed.\";s:8:\"required\";a:3:{i:0;s:10:\"standardId\";i:1;s:2:\"id\";i:2;s:10:\"solutionId\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"standardId\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Unique
  identifier of standard\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:38:\"Current
  status of this ClaimedStandard\";s:4:\"enum\";a:8:{i:0;s:10:\"NotStarted\";i:1;s:5:\"Draft\";i:2;s:9:\"Submitted\";i:3;s:11:\"Remediation\";i:4;s:8:\"Approved\";i:5;s:19:\"ApprovedFirstOfType\";i:6;s:15:\"ApprovedPartial\";i:7;s:8:\"Rejected\";}s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"solutionId\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Unique
  identifier of solution\";s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":4:{s:10:\"standardId\";s:4:\"INT2\";s:6:\"status\";s:9:\"Submitted\";s:2:\"id\";s:36:\"0F2614F9-2521-414A-A448-0096C0DF3ABE\";s:10:\"solutionId\";s:36:\"A3C6830F-2E7C-4545-A4B9-02D20C4C92E1\";}}s:27:\"StandardsApplicableEvidence\";O:8:\"stdClass\":4:{s:11:\"description\";s:173:\"A
  piece of 'evidence' which supports a claim to a \u2018standard\u2019.\r\nThis is
  then assessed by NHS to verify the \u2018solution\u2019 complies with the \u2018standard\u2019
  it has claimed.\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:7:\"claimId\";i:2;s:11:\"createdById\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:7:\"claimId\";O:8:\"stdClass\":2:{s:11:\"description\";s:26:\"Unique
  identifier of Claim\";s:4:\"type\";s:6:\"string\";}s:11:\"createdById\";O:8:\"stdClass\":2:{s:11:\"description\";s:92:\"Unique
  identifier of Contact who created record\r\nDerived from calling context\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:9:\"createdOn\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:92:\"UTC
  date and time at which record created\r\nSet by server when creating record\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:8:\"evidence\";O:8:\"stdClass\":2:{s:11:\"description\";s:24:\"Serialised
  evidence data\";s:4:\"type\";s:6:\"string\";}}}s:26:\"StandardsApplicableReviews\";O:8:\"stdClass\":4:{s:11:\"description\";s:161:\"Initially,
  a 'message' or response to 'evidence' which supports a claim to a \u2018standard\u2019.\r\nThereafter,
  this will be a response to a previous message/response.\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:10:\"evidenceId\";i:2;s:11:\"createdById\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"previousId\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"Unique
  identifier of previous version of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"evidenceId\";O:8:\"stdClass\":2:{s:11:\"description\";s:40:\"Unique
  identifier of associated Evidence\";s:4:\"type\";s:6:\"string\";}s:11:\"createdById\";O:8:\"stdClass\":2:{s:11:\"description\";s:92:\"Unique
  identifier of Contact who created record\r\nDerived from calling context\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:9:\"createdOn\";O:8:\"stdClass\":3:{s:6:\"format\";s:9:\"date-time\";s:11:\"description\";s:92:\"UTC
  date and time at which record created\r\nSet by server when creating record\r\nSET
  ON SERVER\";s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:23:\"Serialised
  message data\";s:4:\"type\";s:6:\"string\";}}}s:17:\"TechnicalContacts\";O:8:\"stdClass\":5:{s:11:\"description\";s:133:\"A
  means of communicating with an Organisation, typically a person, email address,
  telephone number etc,\r\nin the context of a Solution\";s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:10:\"solutionId\";i:2;s:11:\"contactType\";i:3;s:12:\"emailAddress\";}s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:2:\"id\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Unique
  identifier of entity\";s:4:\"type\";s:6:\"string\";}s:10:\"solutionId\";O:8:\"stdClass\":2:{s:11:\"description\";s:29:\"Unique
  identifier of Solution\";s:4:\"type\";s:6:\"string\";}s:11:\"contactType\";O:8:\"stdClass\":2:{s:11:\"description\";s:192:\"Description
  of type of TechnicalContact eg\r\n<list type=\"bullet\">\r\nLead Contact\r\nTechnical
  Contact\r\nExecutive Sponsor\r\nClinical Safety Officer\r\nConnection Agreement
  Signatory\r\nOther...\r\n</list>\";s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":2:{s:11:\"description\";s:21:\"First
  name of contact\";s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":2:{s:11:\"description\";s:20:\"Last
  name of contact\";s:4:\"type\";s:6:\"string\";}s:12:\"emailAddress\";O:8:\"stdClass\":2:{s:11:\"description\";s:32:\"Primary
  email address of contact\";s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":2:{s:11:\"description\";s:31:\"Primary
  phone number of contact\";s:4:\"type\";s:6:\"string\";}}s:7:\"example\";O:8:\"stdClass\":7:{s:2:\"id\";s:36:\"87a58dbf-ab78-4350-9f3d-9276de3e4be6\";s:10:\"solutionId\";s:36:\"A3C6830F-2E7C-4545-A4B9-02D20C4C92E1\";s:11:\"contactType\";s:12:\"Lead
  Contact\";s:9:\"firstName\";s:3:\"Jon\";s:8:\"lastName\";s:5:\"Dough\";s:12:\"emailAddress\";s:18:\"jon.dough
  @tpp.com\";s:11:\"phoneNumber\";s:13:\"0300 303 5678\";}}s:24:\"PaginatedList[Solutions]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Solutions\";}s:8:\"readOnly\";b:1;}}}s:24:\"PaginatedList[Standards]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Standards\";}s:8:\"readOnly\";b:1;}}}s:34:\"PaginatedList[StandardsApplicable]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/StandardsApplicable\";}s:8:\"readOnly\";b:1;}}}s:55:\"PaginatedList[IEnumerable[StandardsApplicableEvidence]]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/StandardsApplicableEvidence\";}}s:8:\"readOnly\";b:1;}}}s:54:\"PaginatedList[IEnumerable[StandardsApplicableReviews]]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/StandardsApplicableReviews\";}}s:8:\"readOnly\";b:1;}}}s:32:\"PaginatedList[TechnicalContacts]\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"A
  paged list of objects\";s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:9:\"pageIndex\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"1-based
  index of which page this page\r\nDefaults to 1\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:10:\"totalPages\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:87:\"Total
  number of pages based on NHSD.GPITF.BuyingCatalog.Models.PaginatedList`1.PageSize\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:8:\"pageSize\";O:8:\"stdClass\":4:{s:6:\"format\";s:5:\"int32\";s:11:\"description\";s:52:\"Maximum
  number of items in this page\r\nDefaults to 20\";s:4:\"type\";s:7:\"integer\";s:8:\"readOnly\";b:1;}s:5:\"items\";O:8:\"stdClass\":4:{s:11:\"description\";s:13:\"List
  of items\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/TechnicalContacts\";}s:8:\"readOnly\";b:1;}}}}"
...
