---
openapi: 3.0.0
info: !php/object "O:8:\"stdClass\":5:{s:5:\"title\";s:34:\"Imperva Savings Bank and
  Trust API\";s:11:\"description\";s:2505:\"This is the public API for consuming Imperva
  Savings Bank and Trust services by any application.\n\n## Authentication\nIn order
  to perform authenticated requests to the API, your API key and secret should be
  joined with a colon (:) character and then Base64 encoded and passed via the custom
  HTTP `X-ISBT-API-Key` header.\n\n### Example\nAPI key: `L1W7KXY5OB6W8CTW`\n\nSecret
  key: `5V#GqWV2d6j@RCRKz$gQF0Ve%Mwh%9xp`\n\nYou need to Base64 encode `L1W7KXY5OB6W8CTW:5V#GqWV2d6j@RCRKz$gQF0Ve%Mwh%9xp`
  and then send the following header:\n\n`X-ISBT-API-Key: TDFXN0tYWTVPQjZXOENUVzo1ViNHcVdWMmQ2akBSQ1JLeiRnUUYwVmUlTXdoJTl4cA==`\n\n##
  HTTP Response Codes\nThe API will always return an HTTP 200 response code if the
  request was received and processed by the API server, regardless of the outcome
  of the request.  If there is a genuine HTTP transport error, like an unauthenticated
  API request, unexpected server error, gateway timeout, etc. then an appropriate
  HTTP status code will be returned instead.  If an API call is processed by the server
  but is unsuccessful, a code will be returned as part of the **status** that is sent
  back in the response body.\n\n## API and Object Versioning\nVersioning is performed
  by using both `Content-Type` and `Accept` headers in request calls to the API.  \n\nIf
  your application is sending data in the body of a request, it can use `Content-Type`
  to specify a supported version of the object being sent or use a more generic type
  such as `application/json` or `multipart/form-data` in which case the API will assume
  that you are sending the latest supported version of the object.\n\nIf your application
  is expecting a specific response, it can use `Accept` to specify a supported version
  of the object being returned by the API or use a more generic type such as `application/json`
  in which case the latest supported version of the object will be returned by the
  API.\n\nA final note on `Accept` - you can also specify multiple Accept types in
  which case the most-preferred version of the object.  You can also use quality factors
  to specifically weight your preferences.  \n\nSee <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept>
  for more details on the `Accept` header.\n\n### Example\nIf you specify `Accept:
  application/vnd.isbt.transactions.v1+json, application/json;q=0.8` then the **v1**
  version of a **transactions** object will be returned if it is still supported by
  the API.  If it is no longer supported, the latest version will be returned instead.\n\n##
  Additional Info\n\";s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:35:\"Imperva
  Global Sales Architect Team\";s:5:\"email\";s:20:\"gsa-team@imperva.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:37:\"Licensed
  under the Apache 2.0 License\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}s:7:\"version\";s:3:\"0.9\";}"
paths: []
...
