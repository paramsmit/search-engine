---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:155:\"Interra Open Data
  Catalog APIs. These are all read endpoints since Interra Generate runs without a
  server. Full CRUD APIs are available with Interra Admin.\";s:7:\"version\";s:5:\"0.0.1\";s:5:\"title\";s:26:\"Test
  Site Data Catalog API\";}"
host: ""
basePath: /api/v1/
paths:
  /data.json:
    get:
      summary: Project Open Data inspired endpoint
      operationId: dataJson
      description: A list of all of the datasets as fully rendered documents. If using
        the pod-full schema this will be Project Open Data compliant.
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/dataset'
  /schema.json:
    get:
      summary: Schema for the catalog
      operationId: schema
      description: A list of all of the schemas for the catalog.
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: object
            properties:
              collections:
                type: array
                items:
                  type: string
                  title: Collections
                  description: A list of strings of the collections in the catalog.
              schema:
                type: object
                title: Schema
                description: Schemas for all of the catalog collections
              map:
                type: object
                description: A mapping of expected keys for collections and the actual
                  value. For example every collection should have an identifier. Map
                  allows implementing a different key for identifier or other required
                  keys.
                title: Map
              uiSchema:
                type: object
                title: UISchema
                description: A UISchema for the forms for each collection. See Mozilla's
                  react-json-schema-form for details.
  /routes.json:
    get:
      summary: A list of routes for the catalog.
      description: This list is used by the front end to determine what routes are
        rendered as well as the build process for rendering each HTML page.
      operationId: routes
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              type: string
  /latest.json:
    get:
      summary: A list of datasets in descending date order.
      description: This list is used by the front end to determine what routes are
        rendered as well as the build process for rendering each HTML page.
      operationId: latest
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              type: object
              properties:
                identifier:
                  type: string
                modified:
                  type: string
  /collections/organization.json:
    get:
      summary: All results for organization collection
      operationId: organizationCollection
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/organization'
  /collections/organization/{document}.json:
    get:
      summary: All results for organization collection
      operationId: organizationCollectionDoc
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/organization'
      description: An individual document in the organization
      parameters:
      - in: path
        name: document
        type: string
        required: true
        description: The identifier for the document.
  /collections/tags.json:
    get:
      summary: All results for tags collection
      operationId: tagsCollection
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/tags'
  /collections/tags/{document}.json:
    get:
      summary: All results for tags collection
      operationId: tagsCollectionDoc
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/tags'
      description: An individual document in the tags
      parameters:
      - in: path
        name: document
        type: string
        required: true
        description: The identifier for the document.
  /collections/datasets.json:
    get:
      summary: All results for datasets collection
      operationId: datasetsCollection
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/datasets'
  /collections/datasets/{document}.json:
    get:
      summary: All results for datasets collection
      operationId: datasetsCollectionDoc
      produces:
      - application/json
      responses:
        200:
          description: This is a file so will either be 200 or 404
          schema:
            type: array
            items:
              $ref: '#/definitions/datasets'
      description: An individual document in the datasets
      parameters:
      - in: path
        name: document
        type: string
        required: true
        description: The identifier for the document.
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":3:{s:12:\"organization\";O:8:\"stdClass\":5:{s:5:\"title\";s:12:\"Organization\";s:11:\"description\";s:22:\"A
  simple organization.\";s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:4:\"name\";i:1;s:10:\"identifier\";i:2;s:7:\"created\";i:3;s:9:\"refreshed\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:5:\"Title\";}s:10:\"identifier\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:10:\"Identifier\";s:11:\"description\";s:35:\"Unique
  identifier for organization.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:11:\"Description\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:7:\"Created\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}s:9:\"refreshed\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:17:\"Last
  Refresh Date\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}}}s:4:\"tags\";O:8:\"stdClass\":5:{s:5:\"title\";s:3:\"Tag\";s:11:\"description\";s:45:\"A
  descriptor for associating similar records.\";s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:5:\"title\";i:1;s:10:\"identifier\";i:2;s:8:\"modified\";i:3;s:7:\"created\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"title\";O:8:\"stdClass\":2:{s:5:\"title\";s:5:\"Title\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:10:\"Identifier\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:8:\"Modified\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:4:\"icon\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:7:\"Created\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}}}s:8:\"datasets\";O:8:\"stdClass\":5:{s:5:\"title\";s:8:\"Datasets\";s:11:\"description\";s:17:\"A
  simple dataset.\";s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:5:\"title\";i:1;s:2:\"id\";i:2;s:7:\"created\";i:3;s:8:\"modified\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:5:\"Title\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:10:\"Identifier\";s:11:\"description\";s:30:\"Unique
  identifier for dataset.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:11:\"Description\";}s:3:\"org\";O:8:\"stdClass\":5:{s:4:\"type\";s:6:\"object\";s:5:\"title\";s:12:\"Organization\";s:11:\"description\";s:22:\"A
  simple organization.\";s:8:\"required\";a:4:{i:0;s:4:\"name\";i:1;s:10:\"identifier\";i:2;s:7:\"created\";i:3;s:9:\"refreshed\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:5:\"Title\";}s:10:\"identifier\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:10:\"Identifier\";s:11:\"description\";s:35:\"Unique
  identifier for organization.\";}s:11:\"description\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:11:\"Description\";}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:7:\"Created\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}s:9:\"refreshed\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:17:\"Last
  Refresh Date\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}}}s:4:\"tags\";O:8:\"stdClass\":4:{s:5:\"title\";s:4:\"Tags\";s:11:\"description\";s:14:\"Tags
  are tags.\";s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":6:{s:7:\"$schema\";s:39:\"http://json-schema.org/draft-04/schema#\";s:5:\"title\";s:3:\"Tag\";s:11:\"description\";s:45:\"A
  descriptor for associating similar records.\";s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:5:\"title\";i:1;s:10:\"identifier\";i:2;s:8:\"modified\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"title\";O:8:\"stdClass\":2:{s:5:\"title\";s:5:\"Title\";s:4:\"type\";s:6:\"string\";}s:10:\"identifier\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:10:\"Identifier\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:8:\"Modified\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:4:\"icon\";}}}}s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:7:\"Created\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}s:8:\"modified\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:8:\"Modified\";s:7:\"pattern\";s:26:\"[0-9]{4}-[0-9]{2}-[0-9]{2}\";}s:9:\"resources\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:5:\"title\";s:9:\"Resources\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:5:\"Title\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:3:\"URI\";}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:5:\"title\";s:4:\"Type\";s:4:\"enum\";a:4:{i:0;s:3:\"csv\";i:1;s:4:\"html\";i:2;s:3:\"xls\";i:3;s:3:\"pdf\";}}}}}}}}"
...
