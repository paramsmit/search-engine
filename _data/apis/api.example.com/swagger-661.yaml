---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:11:\"description\";s:551:\"# flowable / flow\u0259b(\u0259)l
  /\r\n\r\n- a compact and highly efficient workflow and Business Process Management
  (BPM) platform for developers, system admins and business users.\r\n- a lightning
  fast, tried and tested BPMN 2 process engine written in Java. It is Apache 2.0 licensed
  open source, with a committed community.\r\n- can run embedded in a Java application,
  or as a service on a server, a cluster, and in the cloud. It integrates perfectly
  with Spring. With a rich Java and REST API, it is the ideal engine for orchestrating
  human or system activities.\";s:7:\"version\";s:2:\"v1\";s:5:\"title\";s:25:\"Flowable
  CONTENT REST API\";s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:8:\"Flowable\";s:3:\"url\";s:24:\"http://www.flowable.org/\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:10:\"Apache
  2.0\";s:3:\"url\";s:47:\"http://www.apache.org/licenses/LICENSE-2.0.html\";}}"
basePath: /flowable-rest/content-api
paths:
  /content-management/engine:
    get:
      tags:
      - Engine
      summary: Get Content engine info
      description: ""
      operationId: getEngineInfo
      produces:
      - application/json
      responses:
        200:
          description: Indicates the engine info is returned.
          schema:
            $ref: '#/definitions/ContentEngineInfoResponse'
      security:
      - basicAuth: []
  /content-service/content-items:
    get:
      tags:
      - Content item
      summary: List content items
      description: ""
      operationId: listContentItems
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        description: Only return content items with the given id.
        required: false
        type: string
      - name: name
        in: query
        description: Only return content items with the given name.
        required: false
        type: string
      - name: nameLike
        in: query
        description: Only return content items with a name like the given value.
        required: false
        type: string
      - name: mimeType
        in: query
        description: Only return content items with the given mime type.
        required: false
        type: string
      - name: mimeTypeLike
        in: query
        description: Only return content items with a mime type like the given value.
        required: false
        type: string
      - name: taskId
        in: query
        description: Only return content items with the given task id.
        required: false
        type: string
      - name: taskIdLike
        in: query
        description: Only return content items with a task like the given value.
        required: false
        type: string
      - name: processInstanceId
        in: query
        description: Only return content items with the given process instance id.
        required: false
        type: string
      - name: processInstanceIdLike
        in: query
        description: Only return content items with a process instance like the given
          value.
        required: false
        type: string
      - name: contentStoreId
        in: query
        description: Only return content items with the given content store id.
        required: false
        type: string
      - name: contentStoreIdLike
        in: query
        description: Only return content items with a content store id like the given
          value.
        required: false
        type: string
      - name: contentStoreName
        in: query
        description: Only return content items with the given content store name.
        required: false
        type: string
      - name: contentStoreNameLike
        in: query
        description: Only return content items with a content store name like the
          given value.
        required: false
        type: string
      - name: contentAvailable
        in: query
        description: Only return content items with or without content available.
        required: false
        type: boolean
      - name: contentSize
        in: query
        description: Only return content items with the given content size.
        required: false
        type: number
        format: int64
      - name: minimumContentSize
        in: query
        description: Only return content items with the a minimum content size of
          the given value.
        required: false
        type: number
        format: int64
      - name: maximumContentSize
        in: query
        description: Only return content items with the a maximum content size of
          the given value.
        required: false
        type: number
        format: int64
      - name: field
        in: query
        description: Only return content items with the given field.
        required: false
        type: string
      - name: fieldLike
        in: query
        description: Only return content items with a field like the given value.
        required: false
        type: string
      - name: createdOn
        in: query
        description: Only return content items with the given create date.
        required: false
        type: string
        format: date-time
      - name: createdBefore
        in: query
        description: Only return content items before given create date.
        required: false
        type: string
        format: date-time
      - name: createdAfter
        in: query
        description: Only return content items after given create date.
        required: false
        type: string
        format: date-time
      - name: createdBy
        in: query
        description: Only return content items with the given created by.
        required: false
        type: string
      - name: createdByLike
        in: query
        description: Only return content items with a created by like the given value.
        required: false
        type: string
      - name: lastModifiedOn
        in: query
        description: Only return content items with the given last modified date.
        required: false
        type: string
        format: date-time
      - name: lastModifiedBefore
        in: query
        description: Only return content items before given last modified date.
        required: false
        type: string
        format: date-time
      - name: lastModifiedAfter
        in: query
        description: Only return content items after given last modified date.
        required: false
        type: string
        format: date-time
      - name: lastModifiedBy
        in: query
        description: Only return content items with the given last modified by.
        required: false
        type: string
      - name: lastModifiedByLike
        in: query
        description: Only return content items with a last modified by like the given
          value.
        required: false
        type: string
      - name: tenantId
        in: query
        description: Only return content items with the given tenantId.
        required: false
        type: string
      - name: tenantIdLike
        in: query
        description: Only return content items with a tenantId like the given value.
        required: false
        type: string
      - name: withoutTenantId
        in: query
        description: If true, only returns content items without a tenantId set. If
          false, the withoutTenantId parameter is ignored.
        required: false
        type: boolean
      responses:
        200:
          description: The content items are returned.
          schema:
            $ref: '#/definitions/DataResponseContentItemResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - Content item
      summary: Create a new content item, with content item information and an optional
        attached file
      description: 'This endpoint can be used in 2 ways: By passing a JSON Body (ContentItemRequest)
        to link an external resource or by passing a multipart/form-data Object to
        attach a file.nNB: Swagger V2 specification doesn''t support this use case
        that is why this endpoint might be buggy/incomplete if used with other tools.'
      operationId: createContentItem
      consumes:
      - application/json
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Create a new content item, with content item information
        required: false
        schema:
          $ref: '#/definitions/ContentItemCollectionResource'
      - name: file
        in: formData
        description: Attachment file
        required: false
        type: file
      - name: name
        in: formData
        description: Required name of the variable
        required: false
        type: string
        x-example: Simple content item
      - name: mimeType
        in: formData
        description: Mime type of the content item, optional
        required: false
        type: string
        x-example: application/pdf
      - name: taskId
        in: formData
        description: Task identifier for the content item, optional
        required: false
        type: string
        x-example: "12345"
      - name: processInstanceId
        in: formData
        description: Process instance identifier for the content item, optional
        required: false
        type: string
        x-example: "1234"
      - name: contentStoreId
        in: formData
        description: The identifier of the content item in an external content store,
          optional
        required: false
        type: string
        x-example: "5678"
      - name: contentStoreName
        in: formData
        description: The name of an external content store, optional
        required: false
        type: string
        x-example: myFileStore
      - name: field
        in: formData
        description: The form field for the content item, optional
        required: false
        type: string
        x-example: uploadField
      - name: createdBy
        in: formData
        description: The user identifier that created the content item, optional
        required: false
        type: string
        x-example: johndoe
      - name: lastModifiedBy
        in: formData
        description: The user identifier that last modified the content item, optional
        required: false
        type: string
        x-example: johndoe
      - name: tenantId
        in: formData
        description: The tenant identifier of the content item, optional
        required: false
        type: string
        x-example: myTenantId
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentItemResponse'
        201:
          description: Indicates the content item was created and the result is returned.
        400:
          description: Indicates required content item info is missing from the request.
      security:
      - basicAuth: []
  /content-service/content-items/{contentItemId}:
    get:
      tags:
      - Content item
      summary: Get a content item
      description: ""
      operationId: getContentItem
      produces:
      - application/json
      parameters:
      - name: contentItemId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Indicates the content item was found and returned.
          schema:
            $ref: '#/definitions/ContentItemResponse'
        404:
          description: Indicates the requested content item was not found.
      security:
      - basicAuth: []
    put:
      tags:
      - Content item
      summary: Updates a content item, with the provided content item information
      description: ""
      operationId: updateContentItem
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ContentItemRequest'
      - name: contentItemId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Indicates the content item was updated and the result is returned.
          schema:
            $ref: '#/definitions/ContentItemResponse'
        404:
          description: Indicates content item could not be found.
      security:
      - basicAuth: []
    delete:
      tags:
      - Content item
      summary: Delete a content item
      description: ""
      operationId: deleteContentItem
      parameters:
      - name: contentItemId
        in: path
        required: true
        type: string
      responses:
        204:
          description: Indicates the content item was deleted.
        404:
          description: Indicates the content item was not found.
      security:
      - basicAuth: []
  /content-service/content-items/{contentItemId}/data:
    get:
      tags:
      - Content item
      summary: Get the data of a content item
      description: The response body contains the binary content. By default, the
        content-type of the response is set to application/octet-stream unless the
        content item type contains a valid mime type.
      operationId: getContentItemData
      parameters:
      - name: contentItemId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Indicates the content item was found and the requested content
            is returned.
          schema:
            type: array
            items:
              type: string
              format: byte
        404:
          description: Indicates the content item was not found or the content item
            does not have a binary stream available. Status message provides additional
            information.
      security:
      - basicAuth: []
    post:
      tags:
      - Content item
      summary: Save the content item data
      description: Save the content item data with an attached file. The request should
        be of type multipart/form-data. There should be a single file-part included
        with the binary value of the content item.
      operationId: saveContentItemData
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: contentItemId
        in: path
        required: true
        type: string
      - name: file
        in: formData
        required: true
        type: file
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentItemResponse'
        201:
          description: Indicates the content item data was saved and the result is
            returned.
        400:
          description: Indicates required content item data is missing from the request.
      security:
      - basicAuth: []
  /query/content-items:
    post:
      tags:
      - Content item
      - Query
      summary: Query for content items
      description: All supported JSON parameter fields allowed are exactly the same
        as the parameters found for getting a collection of content items, but passed
        in as JSON-body arguments rather than URL-parameters to allow for more advanced
        querying and preventing errors with request-uriu2019s that are too long.
      operationId: getQueryResult
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ContentItemQueryRequest'
      responses:
        200:
          description: Indicates request was successful and the content items are
            returned.
          schema:
            $ref: '#/definitions/DataResponseContentItemResponse'
        400:
          description: Indicates a parameter was passed in the wrong format. The status-message
            contains additional information.
      security:
      - basicAuth: []
schemes:
- http
- https
definitions: !php/object "O:8:\"stdClass\":7:{s:25:\"ContentEngineInfoResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"default\";}s:11:\"resourceUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:40:\"file://flowable/flowable.content.cfg.xml\";}s:9:\"exception\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"null\";}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"6.2.0\";}}}s:29:\"ContentItemCollectionResource\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:23:\"ContentItemQueryRequest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":37:{s:5:\"start\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"sort\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"order\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"ids\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"nameLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"mimeType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"mimeTypeLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"taskId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"taskIdLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"processInstanceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"processInstanceIdLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"contentStoreId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"contentStoreIdLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"contentStoreName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"contentStoreNameLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"contentSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:18:\"minimumContentSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:18:\"maximumContentSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"contentAvailable\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"field\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"fieldLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"createdOn\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"createdBefore\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"createdAfter\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"createdBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"createdByLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"lastModifiedOn\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:18:\"lastModifiedBefore\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"lastModifiedAfter\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:14:\"lastModifiedBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"lastModifiedByLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"tenantId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"tenantIdLike\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"withoutTenantId\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:18:\"ContentItemRequest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:19:\"Simple
  content item\";s:11:\"description\";s:24:\"Name of the content item\";}s:8:\"mimeType\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"application/pdf\";s:11:\"description\";s:39:\"Mime
  type of the content item, optional\";}s:6:\"taskId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"12345\";s:11:\"description\";s:46:\"Task
  identifier for the content item, optional\";}s:17:\"processInstanceId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"1234\";s:11:\"description\";s:58:\"Process
  instance identifier for the content item, optional\";}s:14:\"contentStoreId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"5678\";s:11:\"description\";s:74:\"The
  identifier of the content item in an external content store, optional.\";}s:16:\"contentStoreName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"myFileStore\";s:11:\"description\";s:47:\"The
  name of an external content store, optional\";}s:5:\"field\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"uploadField\";s:11:\"description\";s:45:\"The
  form field for the content item, optional\";}s:8:\"tenantId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"myTenantId\";s:11:\"description\";s:52:\"The
  tenant identifier of the content item, optional.\";}s:9:\"createdBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"johndoe\";s:11:\"description\";s:59:\"The
  user identifier that created the content item, optional\";}s:14:\"lastModifiedBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"johndoe\";s:11:\"description\";s:65:\"The
  user identifier that last modified the content item, optional\";}}}s:19:\"ContentItemResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"mimeType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"taskId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"processInstanceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"contentStoreId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"contentStoreName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"contentAvailable\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"tenantId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"createdBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"lastModified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:14:\"lastModifiedBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"DataResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:5:\"total\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"start\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"sort\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"order\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:31:\"DataResponseContentItemResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/ContentItemResponse\";}}s:5:\"total\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"start\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"sort\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"order\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"size\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}}"
...
