---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:5:\"title\";s:24:\"Memscore application API\";s:14:\"termsOfService\";s:0:\"\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:17:\"info@memscore.com\";}s:7:\"version\";s:5:\"1.0.0\";}"
basePath: /
paths:
  /api/recent:
    get:
      tags:
      - Activity
      summary: Show the recent activity
      operationId: api.recent.show
      parameters:
      - name: note_id
        in: query
        description: Id of note
        type: integer
      - name: course_id
        in: query
        description: Id of course
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/activity/create:
    post:
      tags:
      - Activity
      summary: Create the activity
      operationId: api.activity.create
      parameters:
      - name: note_id
        in: formData
        description: Id of note
        type: integer
      - name: course_id
        in: formData
        description: Id of course
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/register:
    post:
      tags:
      - Auth
      summary: Registration user into the system
      operationId: signup
      parameters:
      - name: username
        in: formData
        description: Username
        required: true
        type: string
      - name: email
        in: formData
        description: Email
        required: true
        type: string
      - name: password
        in: formData
        description: Password
        required: true
        type: string
      - name: day
        in: formData
        description: Day of birthday
        required: true
        type: integer
      - name: month
        in: formData
        description: Month of birthday
        required: true
        type: integer
      - name: year
        in: formData
        description: Year of birthday
        required: true
        type: integer
      - name: accept_term
        in: formData
        description: Agree accepted term
        required: true
        type: boolean
      responses:
        200:
          description: successful operation
        406:
          description: not acceptable
        500:
          description: internal server error
  /api/login:
    post:
      tags:
      - Auth
      summary: Login
      operationId: login
      parameters:
      - name: email
        in: formData
        description: Email for login
        type: string
      - name: username
        in: formData
        description: Username for login
        type: string
      - name: password
        in: formData
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: internal server error
      security:
      - passport: []
  /api/logout:
    post:
      tags:
      - Auth
      summary: Logout
      operationId: logout
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/me:
    post:
      tags:
      - Auth
      summary: User records
      operationId: me
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/refresh:
    post:
      tags:
      - Auth
      summary: Refresh access token
      operationId: refreshAccessToken
      responses:
        default:
          description: successful operation
  /api/password/reset:
    post:
      tags:
      - Forgot password
      summary: Reset user password request
      operationId: reset
      parameters:
      - name: email
        in: formData
        description: Email
        required: true
        type: string
      responses:
        200:
          description: successful operation
        406:
          description: not acceptable
        500:
          description: internal server error
  /api/password/change:
    post:
      tags:
      - Forgot password
      summary: Reset user password request
      operationId: change
      parameters:
      - name: password
        in: formData
        description: Password
        required: true
        type: string
      - name: token
        in: formData
        description: Token
        required: true
        type: string
      responses:
        200:
          description: successful operation
        406:
          description: not acceptable
        500:
          description: internal server error
  '/api/categories ':
    get:
      tags:
      - Category
      summary: Get all categories
      operationId: api.categories.index
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    post:
      tags:
      - Category
      summary: Create category
      operationId: api.categories.store
      produces:
      - application/json
      parameters:
      - name: title
        in: formData
        description: Title of category
        required: true
        type: string
      - name: slug
        in: formData
        description: Slug of category
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/categories/{id}:
    get:
      tags:
      - Category
      summary: Show the category
      operationId: api.categories.show
      parameters:
      - name: id
        in: path
        description: Id of category
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
        404:
          description: Resource Not Found
    put:
      tags:
      - Category
      summary: Update the category
      operationId: api.categories.update
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Id of category
        required: true
        type: integer
      - name: title
        in: formData
        description: Title of category
        required: true
        type: string
      - name: slug
        in: formData
        description: Slug of category
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: Bad request
        404:
          description: Resource Not Found
    delete:
      tags:
      - Category
      summary: Delete the category
      operationId: api.category.destroy
      parameters:
      - name: id
        in: path
        description: Id of category
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  '/api/courses ':
    get:
      tags:
      - Courses
      summary: Get all courses
      operationId: api.courses.index
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    post:
      tags:
      - Courses
      summary: Create course
      operationId: api.courses.store
      parameters:
      - name: title
        in: formData
        description: Title of course
        required: true
        type: string
      - name: description
        in: formData
        description: Description of course
        type: string
      - name: category_id
        in: formData
        description: Category of course
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/my-courses:
    get:
      tags:
      - Courses
      summary: Get user courses
      operationId: api.authCourses
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/courses/{id}:
    get:
      tags:
      - Courses
      summary: Show the course
      operationId: api.courses.show
      parameters:
      - name: id
        in: path
        description: Id of course
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    put:
      tags:
      - Courses
      summary: Update the course
      operationId: api.courses.update
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Id of course
        required: true
        type: integer
      - name: title
        in: formData
        description: Title of course
        required: true
        type: string
      - name: description
        in: formData
        description: Description of course
        required: true
        type: string
      - name: category_id
        in: formData
        description: Category of course
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    delete:
      tags:
      - Courses
      summary: Delete the course
      operationId: api.courses.destroy
      parameters:
      - name: id
        in: path
        description: Id of course
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/search/course:
    get:
      tags:
      - Courses
      summary: 'Get searched course(s) '
      operationId: api.search.course
      parameters:
      - name: q
        in: query
        description: Query
        required: false
        type: string
      - name: category_id
        in: query
        description: Category ID
        required: false
        type: integer
      - name: date_from
        in: query
        description: Date from (unix timestamp)
        required: false
        type: integer
      - name: date_to
        in: query
        description: Date to (unix timestamp)
        required: false
        type: integer
      - name: page
        in: query
        description: Page
        required: false
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{note}/items:
    get:
      tags:
      - Note's items
      summary: Get all note's items
      operationId: api.noteItems.index
      parameters:
      - name: note
        in: path
        description: Note Id
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{id}/items:
    post:
      tags:
      - Note's items
      summary: Create note's item
      operationId: api.noteItems.store
      parameters:
      - name: id
        in: path
        description: Id of note
        required: true
        type: integer
      - name: position
        in: formData
        description: Position of note's item
        type: integer
      - name: term_text
        in: formData
        description: Term of note's item
        type: string
      - name: term_image
        in: formData
        description: Term image of note's item
        type: string
      - name: term_definition
        in: formData
        description: Term definition of note's item
        type: string
      - name: passage_text
        in: formData
        description: Passage text of note's item
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{note}/items/{item}:
    get:
      tags:
      - Note's items
      summary: Show the note's item
      operationId: api.noteItems.show
      parameters:
      - name: note
        in: path
        description: Note Id
        required: true
        type: integer
      - name: item
        in: path
        description: Id of note's item
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{note}/items/{note_item}:
    put:
      tags:
      - Note's items
      summary: Update the noteItem
      operationId: api.noteItems.update
      parameters:
      - name: note
        in: path
        description: Note id
        required: true
        type: integer
      - name: note_item
        in: path
        description: Id of note's item
        required: true
        type: integer
      - name: position
        in: formData
        description: Position of note's item
        type: integer
      - name: term_text
        in: formData
        description: Term text of note's item
        type: string
      - name: term_image
        in: formData
        description: Term image of note's item
        type: string
      - name: term_definition
        in: formData
        description: Term definition of note's item
        type: string
      - name: passage_text
        in: formData
        description: Passage text of note's item
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  '/api/notes/{note}/items/{note_item} ':
    delete:
      tags:
      - Note's items
      summary: Delete the note's item
      operationId: api.noteItems.destroy
      parameters:
      - name: note
        in: path
        description: Id of note's item
        required: true
        type: integer
      - name: note_item
        in: path
        description: Id of note's item
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{id}/stats:
    get:
      tags:
      - Note's stats
      summary: Show the note stat
      operationId: api.noteStat.show
      parameters:
      - name: id
        in: path
        description: Id of note
        required: true
        type: integer
      - name: page
        in: query
        description: Page
        required: false
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{note_id}/stats:
    post:
      tags:
      - Note's stats
      summary: Create note's stat
      operationId: api.noteStat.store
      parameters:
      - name: note_id
        in: path
        description: Id of note
        required: true
        type: integer
      - name: session_length
        in: formData
        description: Session length
        type: integer
      - name: words_total
        in: formData
        description: Words total
        type: integer
      - name: words_memorized
        in: formData
        description: Words memorized
        type: integer
      - name: words_memorized_avg
        in: formData
        description: Words memorized avg
        type: number
      - name: words_memorized_max
        in: formData
        description: Words memorized max
        type: integer
      - name: memorization_min
        in: formData
        description: Memorization min
        type: number
      - name: memorization_max
        in: formData
        description: Memorization max
        type: number
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
        404:
          description: Resource Not Found
  '/api/notes ':
    get:
      tags:
      - Notes
      summary: Get all notes
      operationId: api.notes.index
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes:
    post:
      tags:
      - Notes
      summary: Create note
      operationId: api.notes.store
      parameters:
      - name: title
        in: formData
        description: Title of note
        required: true
        type: string
      - name: description
        in: formData
        description: Description of note
        type: string
      - name: position
        in: formData
        description: Position of note
        type: integer
      - name: course_id
        in: formData
        description: Id of course
        type: integer
      - name: type
        in: formData
        description: Type of note
        type: string
      - name: cover_image
        in: formData
        description: Cover image of note
        type: string
      - name: public
        in: formData
        description: Visibility of note
        type: boolean
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/notes/{id}:
    get:
      tags:
      - Notes
      summary: Show the note
      operationId: api.notes.show
      parameters:
      - name: id
        in: path
        description: Id of note
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    delete:
      tags:
      - Notes
      summary: Delete the note
      operationId: api.note.destroy
      parameters:
      - name: id
        in: path
        description: Id of note
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  '/api/notes/{id} ':
    put:
      tags:
      - Notes
      summary: Update the note
      operationId: api.notes.update
      parameters:
      - name: id
        in: path
        description: Id of note
        required: true
        type: integer
      - name: title
        in: formData
        description: Title of note
        type: string
      - name: description
        in: formData
        description: Description of note
        type: string
      - name: position
        in: formData
        description: Position of note
        type: integer
      - name: course_id
        in: formData
        description: Id of course
        type: integer
      - name: category_id
        in: formData
        description: Id of category
        type: integer
      - name: type
        in: formData
        description: Type of note
        type: string
      - name: cover_image
        in: formData
        description: Cover image of note
        type: string
      - name: public
        in: formData
        description: Visibility of note
        type: boolean
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/search/note:
    get:
      tags:
      - Notes
      summary: 'Get searched note(s) '
      operationId: api.search.note
      parameters:
      - name: q
        in: query
        description: Query
        required: false
        type: string
      - name: category_id
        in: query
        description: Category ID
        required: false
        type: integer
      - name: date_from
        in: query
        description: Date from (unix timestamp)
        required: false
        type: integer
      - name: date_to
        in: query
        description: Date to (unix timestamp)
        required: false
        type: integer
      - name: type
        in: query
        description: Type
        required: false
        type: string
      - name: page
        in: query
        description: Page
        required: false
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/payment/method:
    get:
      tags:
      - User Cards
      summary: Get all user cards
      operationId: api.cards.index
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    post:
      tags:
      - User Cards
      summary: Create card
      operationId: api.cards.create
      parameters:
      - name: token
        in: formData
        description: Card token
        required: true
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/payment/method/{id}:
    delete:
      tags:
      - User Cards
      summary: Delete the card
      operationId: api.cards.destroy
      parameters:
      - name: id
        in: path
        description: Id of card
        required: true
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/forum/post:
    post:
      tags:
      - Forum
      summary: Create post
      operationId: api.post.store
      parameters:
      - name: topic_id
        in: formData
        description: Topic id
        required: true
        type: string
      - name: reply_post_id
        in: formData
        description: Reply post id
        type: string
      - name: text
        in: formData
        description: Text of post
        required: true
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/forum/post/{post_id}/like:
    post:
      tags:
      - Forum
      summary: Post like
      operationId: api.like.create
      parameters:
      - name: post_id
        in: formData
        description: post_id
        required: true
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/forum/post/{post_id}/dislike:
    post:
      tags:
      - Forum
      summary: Post dislike
      operationId: api.dislike.create
      parameters:
      - name: post_id
        in: formData
        description: post_id
        required: true
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/settings/data:
    get:
      tags:
      - Settings
      summary: Settings
      operationId: getSettingData
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/settings/update:
    post:
      tags:
      - Settings
      summary: Update settings
      operationId: updateAuthSettings
      parameters:
      - name: account_type
        in: formData
        description: Change the type of account
        type: string
      - name: appear_type
        in: formData
        description: Change the appears of account
        type: string
      - name: username
        in: formData
        description: Change the username
        type: string
      - name: profile_photo
        in: formData
        description: Update the profile photo
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/settings/change-password:
    post:
      tags:
      - Settings
      summary: Change password
      operationId: changePassword
      parameters:
      - name: old_password
        in: formData
        description: Old account password
        required: true
        type: string
      - name: password
        in: formData
        description: Account password
        required: true
        type: string
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/forum/topic:
    get:
      tags:
      - Forum
      summary: Show topics
      operationId: api.topics.show
      parameters:
      - name: sort
        in: query
        description: Sort
        type: string
        enum:
        - popular
        - new
        - followed
      - name: page
        in: query
        description: Page
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
    post:
      tags:
      - Forum
      summary: Create topic
      operationId: api.topic.store
      parameters:
      - name: title
        in: formData
        description: Title of topic
        required: true
        type: string
      - name: text
        in: formData
        description: Text of topic
        required: true
        type: string
      - name: category_id
        in: formData
        description: Id of category
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/forum/topic/{topic_id}:
    get:
      tags:
      - Forum
      summary: Show topic by id
      operationId: api.topic.show
      parameters:
      - name: topic_id
        in: path
        description: Topic id
        required: true
        type: string
      - name: page
        in: query
        description: Page
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/upload:
    post:
      tags:
      - Images
      summary: Upload image
      operationId: uploadImage
      parameters:
      - name: image
        in: formData
        description: Image
        required: true
        type: file
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/upload/{filename}:
    get:
      tags:
      - Images
      summary: Show the note's item
      operationId: api.images.show
      parameters:
      - name: filename
        in: path
        description: Filename
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /api/user/update:
    post:
      tags:
      - User
      summary: 'Update user records '
      operationId: api.user.update
      parameters:
      - name: username
        in: formData
        description: Update the username
        required: true
        type: string
      - name: email
        in: formData
        description: Update the email
        required: true
        type: string
      - name: day
        in: formData
        description: Day of birthday
        required: true
        type: integer
      - name: month
        in: formData
        description: Month of birthday
        required: true
        type: integer
      - name: year
        in: formData
        description: Year of birthday
        required: true
        type: integer
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        200:
          description: successful operation
        406:
          description: not acceptable
        500:
          description: internal server error
  /api/user/deactivate:
    post:
      tags:
      - User
      summary: Deactivate user account
      operationId: api.user.deactivate
      parameters:
      - name: Authorization
        in: header
        description: An authorization header
        required: true
        type: string
      responses:
        200:
          description: successful operation
        406:
          description: not acceptable
        500:
          description: internal server error
definitions: !php/object "O:8:\"stdClass\":0:{}"
...
