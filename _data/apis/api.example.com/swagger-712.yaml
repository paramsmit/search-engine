---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":2:{s:5:\"title\";s:6:\"API V1\";s:7:\"version\";s:2:\"v1\";}"
paths:
  /articles:
    get:
      summary: Get all articles
      tags:
      - Articles
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      responses:
        200:
          description: Array with all articles
    post:
      summary: Create an article
      tags:
      - Articles
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: article
        in: body
        schema:
          type: object
          properties:
            title:
              type: string
            content:
              type: string
            image:
              type: string
            vote:
              type: integer
            user_id:
              type: integer
          required:
          - title
          - content
          - image
          - vote
          - user_id
      responses:
        201:
          description: Article created
        400:
          description: invalid request
  /articles/{id}:
    get:
      summary: Get an article
      tags:
      - Articles
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        200:
          description: article found
          schema:
            type: object
            properties:
              id:
                type: integer
              title:
                type: string
              content:
                type: string
              image:
                type: string
              vote:
                type: integer
              user_id:
                type: integer
            required:
            - id
            - title
            - content
            - image
            - vote
            - user_id
        404:
          description: article not found
    put:
      summary: Edit an article
      tags:
      - Articles
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: article
        in: body
        schema:
          type: object
          properties:
            title:
              type: string
            content:
              type: string
            image:
              type: string
            vote:
              type: integer
            user_id:
              type: integer
      responses:
        200:
          description: Edit succesfull
        400:
          description: The article can't edit
    delete:
      summary: Delete an article
      tags:
      - Articles
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        204:
          description: Article has been delete
        404:
          description: Article not found
  /articles/{article_id}/comments:
    get:
      summary: Get all comments of an article
      tags:
      - Comments
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: article_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: Return an array with all comments of that article
        404:
          description: Article not found
    post:
      summary: Create a comment for an article
      tags:
      - Comments
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: article_id
        in: path
        type: string
        required: true
      - name: comment
        in: body
        schema:
          type: object
          properties:
            user_id:
              type: integer
            article_id:
              type: integer
            body:
              type: string
            vote:
              type: integer
          required:
          - user_id
          - article_id
          - body
      responses:
        201:
          description: Comment created
        400:
          description: invalid request
  /articles/{article_id}/comments/{id}:
    get:
      summary: Show a comment of an article
      tags:
      - Comments
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: article_id
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
      responses:
        200:
          description: comment found
    put:
      summary: Edit a comment of an article
      tags:
      - Comments
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: article_id
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
      - name: comment
        in: body
        schema:
          type: body
          properties:
            user_id:
              type: integer
            article_id:
              type: integer
            body:
              type: string
            vote:
              type: integer
          required:
          - body
      responses:
        200:
          description: Edit sucefull
        400:
          description: The article can't edit
    delete:
      summary: Delete a comment of an article
      tags:
      - Comments
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: article_id
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
      responses:
        204:
          description: The comment has been delete
        404:
          description: The comment not found
  /profile/{id}:
    get:
      summary: Get a profile
      tags:
      - Profile
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        200:
          description: Profile found
        404:
          description: Profile not foud
...
