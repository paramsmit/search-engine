---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:112:\"Candlepin is subscription
  management server written in Java. It helps with management of software subscriptions.\";s:7:\"version\";s:5:\"2.5.7\";s:5:\"title\";s:9:\"Candlepin\";}"
basePath: /candlepin
paths:
  /activation_keys:
    get:
      tags:
      - activation_keys
      summary: findActivationKey
      description: Retrieves a list of Activation Keys
      operationId: findActivationKey
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivationKey'
      security:
      - basic: []
  /activation_keys/{activation_key_id}:
    get:
      tags:
      - activation_keys
      summary: Get Activation Key
      description: Retrieves a single Activation Key
      operationId: getActivationKey
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - activation_keys
      summary: Update Activation Key
      description: Updates an Activation Key
      operationId: updateActivationKey
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      - in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/ActivationKeyDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - activation_keys
      summary: deleteActivationKey
      description: Removes an Activation Key
      operationId: deleteActivationKey
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
      security:
      - basic: []
  /activation_keys/{activation_key_id}/content_overrides:
    get:
      tags:
      - activation_keys
      operationId: getContentOverrideList
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryContentOverrideDTO'
          headers: []
      security:
      - basic: []
    put:
      tags:
      - activation_keys
      operationId: addContentOverrides
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/ContentOverrideDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryContentOverrideDTO'
          headers: []
      security:
      - basic: []
    delete:
      tags:
      - activation_keys
      operationId: deleteContentOverrides
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/ContentOverrideDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryContentOverrideDTO'
          headers: []
      security:
      - basic: []
  /activation_keys/{activation_key_id}/pools:
    get:
      tags:
      - activation_keys
      summary: Get Activation Key Pools
      description: Retrieves a list of Pools based on the Activation Key
      operationId: getActivationKeyPools
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/pool'
        400:
          description: ""
      security:
      - basic: []
  /activation_keys/{activation_key_id}/pools/{pool_id}:
    post:
      tags:
      - activation_keys
      summary: Add Pool to Key
      description: Adds a Pool to an Activation Key
      operationId: addPoolToKey
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      - name: pool_id
        in: path
        required: true
        type: string
      - name: quantity
        in: query
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - activation_keys
      summary: Remove Pool From Key
      description: Removes a Pool from an Activation Key
      operationId: removePoolFromKey
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: ""
      security:
      - basic: []
  /activation_keys/{activation_key_id}/product/{product_id}:
    post:
      tags:
      - activation_keys
      summary: Add Product ID to key
      description: Adds an Product ID to an Activation Key
      operationId: addProductIdToKey
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - activation_keys
      summary: Remove Product Id from Key
      description: Removes a Product ID from an Activation Key
      operationId: removeProductIdFromKey
      produces:
      - application/json
      parameters:
      - name: activation_key_id
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: ""
      security:
      - basic: []
  /admin/init:
    get:
      tags:
      - admin
      summary: initialize
      description: Initializes the Candlepin database. Currently this just creates
        the admin user for standalone deployments using the default user service adapter.
        It must be called once after candlepin is installed, repeat calls are not
        required, but will be harmless. The String returned is the description if
        the db was or already is initialized.
      operationId: initialize
      produces:
      - text/plain
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: string
  /admin/queues:
    get:
      tags:
      - admin
      summary: Get Queue Stats
      description: Basic information on the ActiveMQ queues and how many messages
        are pending in each.
      operationId: getQueueStats
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/QueueStatus'
  /atom:
    get:
      tags:
      - atom
      summary: getFeed
      description: Retrieves an Event Atom Feed
      operationId: getFeed
      produces:
      - application/atom+xml
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/feed'
      security:
      - basic: []
  /cdn:
    get:
      tags:
      - cdn
      summary: getContentDeliveryNetworks
      description: Retrieves a list of CDN's
      operationId: getContentDeliveryNetworks
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CdnDTO'
      security:
      - basic: []
    post:
      tags:
      - cdn
      summary: create
      description: Creates a CDN @return a Cdn object
      operationId: create
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: cdn
        required: true
        schema:
          $ref: '#/definitions/CdnDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CdnDTO'
      security:
      - basic: []
  /cdn/{label}:
    put:
      tags:
      - cdn
      summary: update
      description: Updates a CDN @return a Cdn object
      operationId: update
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: label
        in: path
        required: true
        type: string
      - in: body
        name: cdn
        required: true
        schema:
          $ref: '#/definitions/CdnDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CdnDTO'
      security:
      - basic: []
    delete:
      tags:
      - cdn
      summary: delete
      description: Removes a CDN
      operationId: delete
      produces:
      - '*/*'
      parameters:
      - name: label
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers:
    get:
      tags:
      - consumers
      summary: list
      description: Retrieves a list of the Consumers
      operationId: list
      produces:
      - application/json
      parameters:
      - name: username
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: owner
        in: query
        required: false
        type: string
      - name: uuid
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: hypervisor_id
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: fact
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Consumer'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
    post:
      tags:
      - consumers
      summary: create
      description: 'Creates a Consumer. NOTE: Opening this method up to everyone,
        as we have nothing we can reliably verify in the method signature. Instead
        we have to figure out what owner this consumer is destined for (due to backward
        compatability with existing clients which do not specify an owner during registration),
        and then check the access to the specified owner in the method itself.'
      operationId: create
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/ConsumerDTO'
      - name: username
        in: query
        required: false
        type: string
      - name: owner
        in: query
        required: false
        type: string
      - name: activation_keys
        in: query
        required: false
        type: string
      - name: identity_cert_creation
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerDTO'
        400:
          description: ""
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/compliance:
    get:
      tags:
      - consumers
      summary: getComplianceStatusList
      description: Retrieves a Compliance Status list for a list of Consumers
      operationId: getComplianceStatusList
      produces:
      - application/json
      parameters:
      - name: uuid
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/ComplianceStatusDTO'
      security:
      - basic: []
  /consumers/{consumer_uuid}:
    get:
      tags:
      - consumers
      summary: getConsumer
      description: Retrieves a single Consumer
      operationId: getConsumer
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerDTO'
        404:
          description: ""
      security:
      - basic: []
    post:
      tags:
      - consumers
      summary: regenerateIdentityCertificates
      description: Retrieves a single Consumer
      operationId: regenerateIdentityCertificates
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - consumers
      summary: updateConsumer
      description: Updates a Consumer
      operationId: updateConsumer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/ConsumerDTO'
      responses:
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - consumers
      summary: deleteConsumer
      description: Removes a Consumer
      operationId: deleteConsumer
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        410:
          description: Target consumer was already deleted.
        403:
          description: Invalid access rights to unregister the Consumer.
        404:
          description: Target consumer does not exist.
      security:
      - basic: []
  /consumers/{consumer_uuid}/accessible_content:
    get:
      tags:
      - consumers
      summary: getContentAccessBody
      description: Retrieves the body of the Content Access Certificate for the Consumer
      operationId: getContentAccessBody
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: If-Modified-Since
        in: header
        required: false
        type: string
        default: Thu, 01 Jan 1970 00:00:00 GMT
        format: date-time
      responses:
        200:
          description: successful operation
          schema:
            type: string
        304:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/atom:
    get:
      tags:
      - consumers
      summary: getConsumerAtomFeed
      description: Retrieves and Event Atom Feed for a Consumer
      operationId: getConsumerAtomFeed
      produces:
      - application/atom+xml
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/feed'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/certificates:
    get:
      tags:
      - consumers
      summary: getEntitlementCertificates
      description: Retrieves a list of Entitlement Certificates for the Consumer
      operationId: getEntitlementCertificates
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: serials
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CertificateDTO'
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - consumers
      summary: regenerateEntitlementCertificates
      description: Regenerates the Entitlement Certificates for a Consumer
      operationId: regenerateEntitlementCertificates
      consumes:
      - '*/*'
      produces:
      - '*/*'
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: entitlement
        in: query
        required: false
        type: string
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/certificates/serials:
    get:
      tags:
      - consumers
      summary: getEntitlementCertificateSerials
      description: Retrieves a list of Certiticate Serials Return the client certificate
        metadata a for the given consumer. This is a small subset of data clients
        can use to determine which certificates they need to update/fetch.
      operationId: getEntitlementCertificateSerials
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/serials'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/certificates/{serial}:
    delete:
      tags:
      - consumers
      summary: unbindBySerial
      description: Removes an Entitlement from a Consumer By the Certificate Serial
      operationId: unbindBySerial
      produces:
      - '*/*'
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: serial
        in: path
        required: true
        type: integer
        format: int64
      responses:
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/compliance:
    get:
      tags:
      - consumers
      summary: getComplianceStatus
      description: Retireves the Compliance Status of a Consumer.
      operationId: getComplianceStatus
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: on_date
        in: query
        description: Date to get compliance information for, default is now.
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ComplianceStatusDTO'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/content_overrides:
    get:
      tags:
      - consumers
      operationId: getContentOverrideList
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryContentOverrideDTO'
          headers: []
      security:
      - basic: []
    put:
      tags:
      - consumers
      operationId: addContentOverrides
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/ContentOverrideDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryContentOverrideDTO'
          headers: []
      security:
      - basic: []
    delete:
      tags:
      - consumers
      operationId: deleteContentOverrides
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/ContentOverrideDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryContentOverrideDTO'
          headers: []
      security:
      - basic: []
  /consumers/{consumer_uuid}/deletionrecord:
    delete:
      tags:
      - consumers
      summary: removeDeletionRecord
      description: Removes the Deletion Record for a Consumer Allowed for a superadmin.
        The main use case for this would be if a user accidently deleted a non-RHEL
        hypervisor, causing it to no longer be auto-detected via virt-who.
      operationId: removeDeletionRecord
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/entitlements:
    get:
      tags:
      - consumers
      summary: listEntitlements
      description: Retrives a list of Entitlements
      operationId: listEntitlements
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: product
        in: query
        required: false
        type: string
      - name: regen
        in: query
        required: false
        type: boolean
        default: true
      - name: matches
        in: query
        required: false
        type: string
      - name: attribute
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EntitlementDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
    post:
      tags:
      - consumers
      summary: Bind Entitlements
      description: If a pool ID is specified, we know we're binding to that exact
        pool. Specifying an entitle date in this case makes no sense and will throw
        an error. If a list of product IDs are specified, we attempt to auto-bind
        to subscriptions which will provide those products. An optional date can be
        specified allowing the consumer to get compliant for some date in the future.
        If no date is specified we assume the current date. If neither a pool nor
        an ID is specified, this is a healing request. The path is similar to the
        bind by products, but in this case we use the installed products on the consumer,
        and their current compliant status, to determine which product IDs should
        be requested. The entitle date is used the same as with bind by products.
        The response will contain a list of Entitlement objects if async is false,
        or a JobDetail object if async is true.
      operationId: bind
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: pool
        in: query
        required: false
        type: string
      - name: product
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: quantity
        in: query
        required: false
        type: integer
        format: int32
      - name: email
        in: query
        required: false
        type: string
      - name: email_locale
        in: query
        required: false
        type: string
      - name: async
        in: query
        required: false
        type: boolean
        default: false
      - name: entitle_date
        in: query
        required: false
        type: string
      - name: from_pool
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        400:
          description: ""
        403:
          description: Binds Entitlements
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - consumers
      summary: unbindAll
      description: Unbinds all Entitlements for a Consumer Result contains the total
        number of entitlements unbound.
      operationId: unbindAll
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DeleteResult'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/entitlements/dry-run:
    get:
      tags:
      - consumers
      summary: dryBind
      description: Retrieves a list of Pools and quantities that would be the result
        of an auto-bind. This is a dry run of an autobind. It allows the client to
        see what would be the result of an autobind without executing it. It can only
        do this for the prevously established list of installed products for the consumer
        If a service level is included in the request, then that level will override
        the one stored on the consumer. If no service level is included then the existing
        one will be used. The Response has a list of PoolQuantity objects
      operationId: dryBind
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: service_level
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/PoolQuantityDTO'
        400:
          description: ""
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/entitlements/pool/{pool_id}:
    delete:
      tags:
      - consumers
      summary: unbindByPool
      description: Removes all Entitlements from a Consumer. By Pool Id
      operationId: unbindByPool
      produces:
      - '*/*'
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/entitlements/{dbid}:
    delete:
      tags:
      - consumers
      summary: unbind
      description: Removes an Entitlement from a Consumer By the Entitlement ID
      operationId: unbind
      produces:
      - '*/*'
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: dbid
        in: path
        required: true
        type: string
      responses:
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/events:
    get:
      tags:
      - consumers
      summary: getConsumerEvents
      description: Retrieves a list of Consumer Events
      operationId: getConsumerEvents
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EventDTO'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/exists:
    head:
      tags:
      - consumers
      summary: ""
      description: Checks for the existence of a Consumer. This method is used to
        check if a consumer is available on a particular shard.  There is no need
        to do a full GET for the consumer for this check.
      operationId: consumerExists
      produces:
      - '*/*'
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        204:
          description: If the consumer exists and can be accessed
        404:
          description: If the consumer doesn't exist or cannot be accessed
      security:
      - basic: []
  /consumers/{consumer_uuid}/export:
    get:
      tags:
      - consumers
      summary: Consumer Export (manifest)
      description: Retrieves a Compressed File representation of a Consumer (manifest).
      operationId: exportData
      produces:
      - application/zip
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: cdn_label
        in: query
        required: false
        type: string
      - name: webapp_prefix
        in: query
        required: false
        type: string
      - name: api_url
        in: query
        required: false
        type: string
      - name: ext
        in: query
        description: Key/Value pairs to be passed to the extension adapter when generating
          a manifest
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        x-example: ext=version:1.2.3&ext=extension_key:EXT1
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/File'
        500:
          description: ""
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
      deprecated: true
  /consumers/{consumer_uuid}/export/async:
    get:
      tags:
      - consumers
      summary: Async Consumer Export (manifest)
      description: Initiates an async generation of a Compressed File representation
        of a Consumer (manifest). The response will contain the id of the job from
        which its result data  will contain the href to download the generated file.
      operationId: exportDataAsync
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        description: The UUID of the target consumer
        required: true
        type: string
      - name: cdn_label
        in: query
        description: The lable of the target CDN
        required: false
        type: string
      - name: webapp_prefix
        in: query
        description: the URL pointing to the manifest's originating web application
        required: false
        type: string
      - name: api_url
        in: query
        description: the URL pointing to the manifest's originating candlepin API
        required: false
        type: string
      - name: ext
        in: query
        description: Key/Value pairs to be passed to the extension adapter when generating
          a manifest
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        x-example: ext=version:1.2.3&ext=extension_key:EXT1
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        500:
          description: ""
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/export/{export_id}:
    get:
      tags:
      - consumers
      summary: Async Consumer Export (manifest) Download
      description: Downloads an asynchronously generated consumer export file (manifest).
      operationId: downloadExistingExport
      produces:
      - application/zip
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: export_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/File'
        500:
          description: ""
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/guestids:
    get:
      tags:
      - consumers
      summary: getGuestIds
      description: Retrieves the List of a Consumer's Guests
      operationId: getGuestIds
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryGuestIdDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - consumers
      summary: updateGuests
      description: Updates the List of Guests on a Consumer This method should work
        just like updating the consumer, except that it only updates GuestIds.  Eventually
        we should move All the logic here, and depricate updating guests through the
        consumer update.
      operationId: updateGuests
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - in: body
        name: guestIds
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/GuestIdDTO'
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /consumers/{consumer_uuid}/guestids/{guest_id}:
    get:
      tags:
      - consumers
      summary: getGuestId
      description: Retrieves a single Guest By its consumer and the guest UUID
      operationId: getGuestId
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: guest_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GuestIdDTO'
      security:
      - basic: []
    put:
      tags:
      - consumers
      summary: updateGuest
      description: Updates a single Guest on a Consumer. Allows virt-who to avoid
        uploading an entire list of guests
      operationId: updateGuest
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        description: consumer who owns or hosts the guest in question
        required: true
        type: string
      - name: guest_id
        in: path
        description: guest virtual uuid
        required: true
        type: string
      - in: body
        name: updated
        description: updated guest data to use
        required: true
        schema:
          $ref: '#/definitions/GuestIdDTO'
      responses:
        default:
          description: successful operation
      security:
      - basic: []
    delete:
      tags:
      - consumers
      summary: deleteGuest
      description: Removes the Guest from the Consumer
      operationId: deleteGuest
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        description: consumer who owns or hosts the guest in question
        required: true
        type: string
      - name: guest_id
        in: path
        required: true
        type: string
      - name: unregister
        in: query
        required: false
        type: boolean
        default: false
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /consumers/{consumer_uuid}/guests:
    get:
      tags:
      - consumers
      summary: getGuests
      description: Retrieves a list of Guest Consumers of a Consumer
      operationId: getGuests
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ConsumerDTO'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/host:
    get:
      tags:
      - consumers
      summary: getHost
      description: Retrieves a Host Consumer of a Consumer
      operationId: getHost
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerDTO'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/owner:
    get:
      tags:
      - consumers
      summary: getOwner
      description: Retrieves the Owner associated to a Consumer
      operationId: getOwner
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/OwnerDTO'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/purpose_compliance:
    get:
      tags:
      - consumers
      summary: getSystemPurposeComplianceStatus
      description: Retrieves the System Purpose Compliance Status of a Consumer.
      operationId: getSystemPurposeComplianceStatus
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: on_date
        in: query
        description: Date to get compliance information for, default is now.
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SystemPurposeComplianceStatusDTO'
        404:
          description: ""
      security:
      - basic: []
  /consumers/{consumer_uuid}/release:
    get:
      tags:
      - consumers
      summary: getRelease
      description: Retrieves the Release of a Consumer
      operationId: getRelease
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Release'
      security:
      - basic: []
  /consumertypes:
    get:
      tags:
      - consumertypes
      summary: list
      description: Retrieves a list of Consumer Types
      operationId: list
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ConsumerTypeDTO'
      security:
      - basic: []
    post:
      tags:
      - consumertypes
      summary: create
      description: Creates a Consumer Type
      operationId: create
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: consumerType
        required: true
        schema:
          $ref: '#/definitions/ConsumerTypeDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerTypeDTO'
        400:
          description: ""
      security:
      - basic: []
  /consumertypes/{id}:
    get:
      tags:
      - consumertypes
      summary: getConsumerType
      description: Retrieves a single Consumer Type
      operationId: getConsumerType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerTypeDTO'
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - consumertypes
      summary: update
      description: Updates a Consumer Type
      operationId: update
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: consumerType
        required: true
        schema:
          $ref: '#/definitions/ConsumerTypeDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerTypeDTO'
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - consumertypes
      summary: deleteConsumerType
      description: Removes a Consumer Type
      operationId: deleteConsumerType
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /content:
    get:
      tags:
      - content
      summary: list
      description: Retrieves list of Content
      operationId: list
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ContentDTO'
      security:
      - basic: []
    post:
      tags:
      - content
      summary: createContent
      description: Creates a Content
      operationId: createContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ContentDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentDTO'
      security:
      - basic: []
  /content/batch:
    post:
      tags:
      - content
      summary: createBatchContent
      description: Creates Contents in bulk
      operationId: createBatchContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: array
          items:
            $ref: '#/definitions/ContentDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/IterableContentDTO'
      security:
      - basic: []
  /content/{content_uuid}:
    get:
      tags:
      - content
      summary: getContent
      description: Retrieves a single Content
      operationId: getContent
      produces:
      - application/json
      parameters:
      - name: content_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentDTO'
        400:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - content
      summary: updateContent
      description: Updates a Content
      operationId: updateContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: content_uuid
        in: path
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ContentDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentDTO'
      security:
      - basic: []
    delete:
      tags:
      - content
      summary: remove
      description: Deletes a Content
      operationId: remove
      produces:
      - application/json
      parameters:
      - name: content_uuid
        in: path
        required: true
        type: string
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /crl:
    get:
      tags:
      - crl
      summary: getCurrentCrl
      description: Retrieves the Certificate Revocation List
      operationId: getCurrentCrl
      produces:
      - text/plain
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: string
      security:
      - basic: []
    delete:
      tags:
      - crl
      summary: unrevoke
      description: Deletes a Certificate from the Revocation List
      operationId: unrevoke
      produces:
      - application/json
      parameters:
      - name: serial
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /deleted_consumers:
    get:
      tags:
      - deleted_consumers
      summary: listByDate
      description: Retrieves a list of Deleted Consumers By deletion date or all.
        List returned is the deleted Consumers.
      operationId: listByDate
      produces:
      - application/json
      parameters:
      - name: date
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeletedConsumerDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /distributor_versions:
    get:
      tags:
      - distributor_versions
      summary: getVersions
      description: Retrieves list of Distributor Versions
      operationId: getVersions
      produces:
      - application/json
      parameters:
      - name: name_search
        in: query
        required: false
        type: string
      - name: capability
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/StreamDistributorVersionDTO'
      security:
      - basic: []
    post:
      tags:
      - distributor_versions
      summary: create
      description: Creates a Distributor Version
      operationId: create
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: distributorVersion
        required: true
        schema:
          $ref: '#/definitions/distributorversion'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/distributorversion'
      security:
      - basic: []
  /distributor_versions/{id}:
    put:
      tags:
      - distributor_versions
      summary: update
      description: Updates a Distributor Version
      operationId: update
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: body
        name: distributorVersion
        required: true
        schema:
          $ref: '#/definitions/distributorversion'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/distributorversion'
      security:
      - basic: []
    delete:
      tags:
      - distributor_versions
      summary: delete
      description: Deletes a Distributor Version
      operationId: delete
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /entitlements:
    get:
      tags:
      - entitlements
      summary: listAllForConsumer
      description: Retrieves list of Entitlements
      operationId: listAllForConsumer
      produces:
      - application/json
      parameters:
      - name: consumer
        in: query
        required: false
        type: string
      - name: matches
        in: query
        required: false
        type: string
      - name: attribute
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EntitlementDTO'
        400:
          description: ""
      security:
      - basic: []
  /entitlements/consumer/{consumer_uuid}/product/{product_id}:
    get:
      tags:
      - entitlements
      summary: hasEntitlement
      description: Checks Consumer for Product Entitlement
      operationId: hasEntitlement
      produces:
      - application/json
      parameters:
      - name: consumer_uuid
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EntitlementDTO'
        404:
          description: ""
      security:
      - basic: []
  /entitlements/product/{product_id}:
    put:
      tags:
      - entitlements
      summary: regenerateEntitlementCertificatesForProduct
      description: Regenerates the Entitlement Certificates for a Product
      operationId: regenerateEntitlementCertificatesForProduct
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        required: true
        type: string
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        202:
          description: ""
      security:
      - basic: []
  /entitlements/{dbid}:
    delete:
      tags:
      - entitlements
      summary: unbind
      description: Deletes an Entitlement
      operationId: unbind
      produces:
      - '*/*'
      parameters:
      - name: dbid
        in: path
        required: true
        type: string
      responses:
        403:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /entitlements/{dbid}/upstream_cert:
    get:
      tags:
      - entitlements
      summary: getUpstreamCert
      description: Retrieves a Subscription Certificate.  We can't return CdnInfo
        at this time, but when the time comes this is the implementation we want to
        start from. It will require changes to thumbslug.  will also @Produces(MediaType.APPLICATION_JSON)
      operationId: getUpstreamCert
      produces:
      - text/plain
      parameters:
      - name: dbid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
        404:
          description: ""
      security:
      - basic: []
  /entitlements/{entitlement_id}:
    get:
      tags:
      - entitlements
      summary: getEntitlement
      description: Retrieves a single Entitlement
      operationId: getEntitlement
      produces:
      - application/json
      parameters:
      - name: entitlement_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EntitlementDTO'
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - entitlements
      summary: updateEntitlement
      description: Updates an Entitlement. This only works for the quantity.
      operationId: updateEntitlement
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: entitlement_id
        in: path
        required: true
        type: string
      - in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/EntitlementDTO'
      responses:
        404:
          description: ""
      security:
      - basic: []
  /entitlements/{entitlement_id}/migrate:
    put:
      tags:
      - entitlements
      summary: migrateEntitlement
      description: Migrate entitlements from one distributor consumer to another.
        Can specify full or partial quantity. No specified quantity will lead to full
        migration of the entitlement.
      operationId: migrateEntitlement
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: entitlement_id
        in: path
        required: true
        type: string
      - name: to_consumer
        in: query
        required: false
        type: string
      - name: quantity
        in: query
        required: false
        type: integer
        format: int32
      responses:
        404:
          description: ""
      security:
      - basic: []
  /environments:
    get:
      tags:
      - environments
      summary: getEnvironments
      description: Lists the Environments.  Only available to super admins.
      operationId: getEnvironments
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Environment'
      security:
      - basic: []
  /environments/{env_id}:
    get:
      tags:
      - environments
      summary: getEnv
      description: Retrieves a single Environment
      operationId: getEnv
      produces:
      - application/json
      parameters:
      - name: env_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EnvironmentDTO'
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - environments
      summary: deleteEnv
      description: 'Deletes an environment. WARNING: this will delete all consumers
        in the environment and revoke their entitlement certificates.'
      operationId: deleteEnv
      produces:
      - '*/*'
      parameters:
      - name: env_id
        in: path
        required: true
        type: string
      responses:
        404:
          description: ""
      security:
      - basic: []
  /environments/{env_id}/consumers:
    post:
      tags:
      - environments
      summary: create
      description: Creates an Environment
      operationId: create
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: env_id
        in: path
        required: true
        type: string
      - in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/ConsumerDTO'
      - name: username
        in: query
        required: false
        type: string
      - name: owner
        in: query
        required: false
        type: string
      - name: activation_keys
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ConsumerDTO'
      security:
      - basic: []
  /environments/{env_id}/content:
    post:
      tags:
      - environments
      summary: promoteContent
      description: Promotes a Content into an Environment. This call accepts multiple
        content sets to promote at once, after which all affected certificates for
        consumers in the environment will be regenerated. Consumers registered to
        this environment will now receive this content in their entitlement certificates.
        Because the certificate regeneraiton can be quite time consuming, this is
        done as an asynchronous job. The content will be promoted and immediately
        available for new entitlements, but existing entitlements could take some
        time to be regenerated and sent down to clients as they check in.
      operationId: promoteContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: env_id
        in: path
        required: true
        type: string
      - in: body
        name: contentToPromote
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/EnvironmentContent'
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - environments
      summary: demoteContent
      description: 'Demotes a Content from an Environment. Consumer''s registered
        to this environment will no see this content in their entitlement certificates.
        (after they are regenerated and synced to clients) This call accepts multiple
        content IDs to demote at once, allowing us to mass demote, then trigger a
        cert regeneration. NOTE: This call expects the actual content IDs, *not* the
        ID created for each EnvironmentContent object created after a promotion. This
        is to help integrate with other management apps which should not have to track/lookup
        a specific ID for the content to demote.'
      operationId: demoteContent
      produces:
      - application/json
      parameters:
      - name: env_id
        in: path
        required: true
        type: string
      - name: content
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        404:
          description: When the content has already been demoted.
      security:
      - basic: []
  /events:
    get:
      tags:
      - events
      summary: listEvents
      description: Retrieves a list of Events
      operationId: listEvents
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EventDTO'
      security:
      - basic: []
  /events/{uuid}:
    get:
      tags:
      - events
      summary: getEvent
      description: Retrieves a single Event
      operationId: getEvent
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EventDTO'
        404:
          description: ""
      security:
      - basic: []
  /hypervisors:
    post:
      tags:
      - hypervisors
      summary: hypervisorUpdate
      description: Updates the list of Hypervisor Guests Allows agents such as virt-who
        to update its host list and associate the guests for each host. This is typically
        used when a host is unable to register to candlepin via subscription manager.  In
        situations where consumers already exist it is probably best not to allow
        creation of new hypervisor consumers.  Most consumers do not have a hypervisorId
        attribute, so that should be added manually when necessary by the management
        environment. @deprecated Use the asynchronous method
      operationId: hypervisorUpdate
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/definitions/GuestIdDTO'
      - name: owner
        in: query
        required: false
        type: string
      - name: create_missing
        in: query
        description: specify whether or not to create missing hypervisors.Default
          is true.  If false is specified, hypervisorIds that are not foundwill result
          in failed entries in the resulting HypervisorCheckInResult
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/HypervisorUpdateResultDTO'
        202:
          description: ""
      security:
      - basic: []
      deprecated: true
  /hypervisors/{owner}:
    post:
      tags:
      - hypervisors
      summary: hypervisorUpdateAsync
      description: Creates or Updates the list of Hypervisor hosts Allows agents such
        as virt-who to update hosts' information . This is typically used when a host
        is unable to register to candlepin via subscription manager. In situations
        where consumers already exist it is probably best not to allow creation of
        new hypervisor consumers.  Most consumers do not have a hypervisorId attribute,
        so that should be added manually when necessary by the management environment.
        Default is true.  If false is specified, hypervisorIds that are not found
        will result in a failed state of the job.
      operationId: hypervisorUpdateAsync
      consumes:
      - text/plain
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: string
      - name: owner
        in: path
        required: true
        type: string
      - name: create_missing
        in: query
        description: specify whether or not to create missing hypervisors.Default
          is true.  If false is specified, hypervisorIds that are not foundwill result
          in failed entries in the resulting HypervisorCheckInResult
        required: false
        type: boolean
        default: true
      - name: reporter_id
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        202:
          description: ""
      security:
      - basic: []
  /jobs:
    get:
      tags:
      - jobs
      summary: getStatuses
      description: Retrieves a list of Job Status
      operationId: getStatuses
      produces:
      - application/json
      parameters:
      - name: owner
        in: query
        required: false
        type: string
      - name: consumer
        in: query
        required: false
        type: string
      - name: principal
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/JobStatus'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /jobs/retrigger/{task}:
    post:
      tags:
      - jobs
      summary: retrigger
      description: Re-trigger cron jobs
      operationId: retrigger
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: task
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
        500:
          description: ""
      security:
      - basic: []
  /jobs/schedule/{task}:
    post:
      tags:
      - jobs
      summary: schedule
      description: Fires cron jobs asynchronously and immediately
      operationId: schedule
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: task
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobStatusDTO'
        400:
          description: ""
        500:
          description: ""
      security:
      - basic: []
  /jobs/scheduler:
    get:
      tags:
      - jobs
      summary: getSchedulerStatus
      description: Retrieves the Scheduler Status
      operationId: getSchedulerStatus
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SchedulerStatusDTO'
      security:
      - basic: []
    post:
      tags:
      - jobs
      summary: setSchedulerStatus
      description: Updates the Scheduler Status
      operationId: setSchedulerStatus
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SchedulerStatusDTO'
        500:
          description: ""
      security:
      - basic: []
  /jobs/{job_id}:
    get:
      tags:
      - jobs
      summary: getStatus
      description: Retrieves a single Job Status
      operationId: getStatus
      produces:
      - application/json
      parameters:
      - name: job_id
        in: path
        required: true
        type: string
      - name: result_data
        in: query
        required: false
        type: boolean
        default: false
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobStatusDTO'
      security:
      - basic: []
    post:
      tags:
      - jobs
      summary: getStatusAndDeleteIfFinished
      description: Retrieves a Job Status and Removes if finished
      operationId: getStatusAndDeleteIfFinished
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: job_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobStatusDTO'
      security:
      - basic: []
    delete:
      tags:
      - jobs
      summary: cancel
      description: Cancels a Job Status
      operationId: cancel
      produces:
      - application/json
      parameters:
      - name: job_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobStatusDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /owners:
    get:
      tags:
      - owners
      summary: List Owners
      description: Retrieves a list of Owners
      operationId: list
      produces:
      - application/json
      parameters:
      - name: key
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OwnerDTO'
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Create Owner
      description: Creates an Owner
      operationId: createOwner
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/OwnerDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/OwnerDTO'
        400:
          description: Invalid owner specified in body
      security:
      - basic: []
  /owners/subscriptions:
    put:
      tags:
      - owners
      summary: Update Subscription
      description: Updates a Subscription for an Owner.  Please update pools directly
        with POST /pools.
      operationId: updateSubscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/Subscription'
      responses:
        404:
          description: Owner not found
      security:
      - basic: []
      deprecated: true
  /owners/{owner_key}:
    get:
      tags:
      - owners
      summary: Get Owner
      description: Retrieves a single Owner
      operationId: getOwner
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/OwnerDTO'
        404:
          description: An owner not found
      security:
      - basic: []
    put:
      tags:
      - owners
      summary: Update Owner
      description: To un-set the defaultServiceLevel for an owner, submit an empty
        string.
      operationId: updateOwner
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/OwnerDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/OwnerDTO'
        404:
          description: Owner not found
      security:
      - basic: []
    delete:
      tags:
      - owners
      summary: Delete Owner
      description: Removes an Owner
      operationId: deleteOwner
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: revoke
        in: query
        required: false
        type: boolean
        default: true
      - name: force
        in: query
        required: false
        type: boolean
        default: false
      responses:
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/activation_keys:
    get:
      tags:
      - owners
      summary: Owner Activation Keys
      description: Retrieves a list of Activation Keys for an Owner
      operationId: ownerActivationKeys
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: name
        in: query
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryActivationKeyDTO'
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Create Activation Key
      description: Creates an Activation Key for the Owner
      operationId: createActivationKey
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: activation_key
        required: true
        schema:
          $ref: '#/definitions/ActivationKeyDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ActivationKeyDTO'
        400:
          description: Invalid activation key
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/atom:
    get:
      tags:
      - owners
      summary: Get Atom Feed
      description: Retrieves an Event Atom Feed for an owner
      operationId: getOwnerAtomFeed
      produces:
      - application/atom+xml
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/feed'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/consumers:
    get:
      tags:
      - owners
      summary: List Consumers
      description: Retrieve a list of Consumers for the Owner
      operationId: listConsumers
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: username
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: uuid
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: hypervisor_id
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: fact
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sku
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: subscription_id
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: contract
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Consumer'
        400:
          description: Invalid request
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/consumers/count:
    get:
      tags:
      - owners
      summary: consumers count
      description: Retrieve a count of Consumers for the Owner
      operationId: countConsumers
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: type
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: sku
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: subscription_id
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: contract
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: integer
            format: int32
        400:
          description: Invalid request
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/content:
    get:
      tags:
      - owners
      summary: list
      description: Retrieves list of Content
      operationId: listContent
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Content'
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: createContent
      description: Creates a Content
      operationId: createContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/ContentDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentDTO'
      security:
      - basic: []
  /owners/{owner_key}/content/batch:
    post:
      tags:
      - owners
      summary: createBatchContent
      description: Creates Contents in bulk
      operationId: createBatchContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: contents
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ContentDTO'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ContentDTO'
      security:
      - basic: []
  /owners/{owner_key}/content/{content_id}:
    get:
      tags:
      - owners
      summary: getContent
      description: Retrieves a single Content
      operationId: getContent
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentDTO'
        400:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - owners
      summary: updateContent
      description: Updates a Content
      operationId: updateContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      - in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/ContentDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ContentDTO'
      security:
      - basic: []
    delete:
      tags:
      - owners
      summary: remove
      description: Deletes a Content
      operationId: remove
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /owners/{owner_key}/entitlements:
    get:
      tags:
      - owners
      summary: List Owner Entitlements
      description: Retrieves the list of Entitlements for an Owner
      operationId: ownerEntitlements
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product
        in: query
        required: false
        type: string
      - name: matches
        in: query
        required: false
        type: string
      - name: attribute
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EntitlementDTO'
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Heal owner
      description: Starts an asynchronous healing for the given Owner. At the end
        of the process the idea is that all of the consumers in the owned by the Owner
        will be up to date.
      operationId: healEntire
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        description: ownerKey id of the owner to be healed.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/environments:
    get:
      tags:
      - owners
      summary: List environments
      description: Retrieves a list of Environments for an Owner
      operationId: listEnvironments
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: name
        in: query
        description: Environment name filter to search for.
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CandlepinQueryEnvironmentDTO'
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Create environment
      description: Creates an Environment for an Owner
      operationId: createEnv
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/EnvironmentDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EnvironmentDTO'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/events:
    get:
      tags:
      - owners
      summary: Get Events
      description: Retrieves a list of Events for an Owner
      operationId: getEvents
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EventDTO'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/hypervisors:
    get:
      tags:
      - owners
      summary: Get Hypervisors
      description: Retrieves a list of Hypervisors for an Owner
      operationId: getHypervisors
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: hypervisor_id
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Consumer'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/imports:
    get:
      tags:
      - owners
      summary: Get Imports
      description: ' Retrieves a list of Import Records for an Owner'
      operationId: getImports
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ImportRecord'
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Import Manifest
      description: Imports a manifest zip file for the given organization. This will
        bring in any products, content, and subscriptions that were assigned to the
        distributor who generated the manifest.
      operationId: importManifest
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: force
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/MultipartInput'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ImportRecordDTO'
        400:
          description: ""
        500:
          description: ""
        404:
          description: Owner not found
        409:
          description: ""
      security:
      - basic: []
      deprecated: true
    delete:
      tags:
      - owners
      summary: Undo Imports
      description: 'Removes Imports for an Owner. Cleans out all imported subscriptions
        and triggers a background refresh pools. Link to an upstream distributor is
        removed for the owner, so they can import from another distributor. Other
        owners can also now import the manifests originally used in this owner. This  call
        does not differentiate between any specific import, it just destroys all subscriptions
        with an upstream pool ID, essentially anything from an import. Custom subscriptions
        will be left alone. Imports do carry rules and product information which is
        global to the candlepin server. This import data is *not* undone, we assume
        that updates to this data can be safely kept. '
      operationId: undoImports
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/imports/async:
    post:
      tags:
      - owners
      summary: Import Manifest Asynchronously
      description: Initiates an asynchronous manifest import for the given organization.
        This will bring in any products, content, and subscriptions that were assigned
        to the distributor who generated the manifest.
      operationId: importManifestAsync
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: force
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/MultipartInput'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        400:
          description: ""
        500:
          description: ""
        404:
          description: Owner not found
        409:
          description: ""
      security:
      - basic: []
  /owners/{owner_key}/info:
    get:
      tags:
      - owners
      summary: Get Owner Info
      description: Retrieves the Owner Info for an Owner
      operationId: getOwnerInfo
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/OwnerInfo'
        404:
          description: An owner not found
      security:
      - basic: []
  /owners/{owner_key}/log:
    put:
      tags:
      - owners
      summary: Set Log Level
      description: Sets the Log Level for an Owner
      operationId: setLogLevel
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: level
        in: query
        required: false
        type: string
        default: DEBUG
        enum:
        - ALL
        - TRACE
        - DEBUG
        - INFO
        - WARN
        - ERROR
        - "OFF"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/OwnerDTO'
        404:
          description: Owner not found
      security:
      - basic: []
    delete:
      tags:
      - owners
      summary: Remove Log Level
      description: Remove the Log Level of an Owner
      operationId: deleteLogLevel
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/pools:
    get:
      tags:
      - owners
      summary: List Pools
      description: Retrieves a list of Pools for an Owner
      operationId: listPools
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: consumer
        in: query
        required: false
        type: string
      - name: activation_key
        in: query
        required: false
        type: string
      - name: product
        in: query
        required: false
        type: string
      - name: subscription
        in: query
        required: false
        type: string
      - name: listall
        in: query
        description: Include pools that are not suited to the unit's facts.
        required: false
        type: boolean
        default: false
      - name: activeon
        in: query
        description: Date to use as current time for lookup criteria. Defaults to
          current date if not specified.
        required: false
        type: string
        default: now
        format: date-time
      - name: matches
        in: query
        description: Find pools matching the given pattern in a variety of fields;
          * and ? wildcards are supported; may be specified multiple times
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: attribute
        in: query
        description: The attributes to return based on the specified types.
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: add_future
        in: query
        description: When set to true, it will add future dated pools to the result,
          based on the activeon date.
        required: false
        type: boolean
        default: false
      - name: only_future
        in: query
        description: When set to true, it will return only future dated pools to the
          result, based on the activeon date.
        required: false
        type: boolean
        default: false
      - name: after
        in: query
        description: Will only return pools with a start date after the supplied date.
          Overrides the activeOn date.
        required: false
        type: string
        format: date-time
      - name: poolid
        in: query
        description: One or more pool IDs to use to filter the output; only pools
          with IDs matching those provided will be returned; may be specified multiple
          times
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/pool'
        400:
          description: Invalid request
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Create Pool
      description: Creates a custom pool for an Owner. Floating pools are not tied
        to any upstream subscription, and are most commonly used for custom content
        delivery in Satellite. Also helps in on-site deployment testing
      operationId: createPool
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: pool
        required: true
        schema:
          $ref: '#/definitions/pool'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/pool'
        404:
          description: Owner not found
      security:
      - basic: []
    put:
      tags:
      - owners
      summary: Update Pool
      description: 'Updates a pool for an Owner. assumes this is a normal pool, and
        errors out otherwise cause we cannot create master pools from bonus pools '
      operationId: updatePool
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: pool
        required: true
        schema:
          $ref: '#/definitions/pool'
      responses:
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/products:
    get:
      tags:
      - owners
      summary: List Products for an Owner
      description: Retrieves a list of Products
      operationId: listProducts
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: createProduct
      description: Creates a Product.  Returns either the new created Product or the
        Product that already existed.
      operationId: createProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProductDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
  /owners/{owner_key}/products/{product_id}:
    get:
      tags:
      - owners
      summary: getProduct
      description: Retrieves a single Product
      operationId: getProduct
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - owners
      summary: updateProduct
      description: Updates a Product
      operationId: updateProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      - in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/ProductDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - owners
      summary: deleteProduct
      description: Removes a Product
      operationId: deleteProduct
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /owners/{owner_key}/products/{product_id}/batch_content:
    post:
      tags:
      - owners
      summary: addBatchContent
      description: Adds one or more Content entities to a Product
      operationId: addBatchContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      - in: body
        name: contentMap
        required: true
        schema:
          type: object
          additionalProperties:
            type: boolean
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
    delete:
      tags:
      - owners
      summary: addBatchContent
      description: Adds one or more Content entities to a Product
      operationId: removeBatchContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      - in: body
        name: content
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
  /owners/{owner_key}/products/{product_id}/certificate:
    get:
      tags:
      - owners
      summary: getProductCertificate
      description: Retrieves a Certificate for a Product
      operationId: getProductCertificate
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: productId
        in: path
        description: Numeric product identifier
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductCertificateDTO'
        404:
          description: ""
      security:
      - basic: []
  /owners/{owner_key}/products/{product_id}/content/{content_id}:
    post:
      tags:
      - owners
      summary: addContent
      description: Adds a single Content to a Product
      operationId: addContent
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      - name: enabled
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
    delete:
      tags:
      - owners
      summary: removeContent
      description: Removes a single Content from a Product
      operationId: removeContent
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
  /owners/{owner_key}/products/{product_id}/subscriptions:
    put:
      tags:
      - owners
      summary: refreshPoolsForProduct
      description: Refreshes Pools by Product
      operationId: refreshPoolsForProduct
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: product_id
        in: path
        required: true
        type: string
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
      security:
      - basic: []
  /owners/{owner_key}/servicelevels:
    get:
      tags:
      - owners
      summary: Get Service Levels
      description: Retrieves a list of Support Levels for an Owner
      operationId: ownerServiceLevels
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        description: ownerKey id of the owner whose support levels are sought.
        required: true
        type: string
      - name: exempt
        in: query
        required: false
        type: string
        default: "false"
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/subscriptions:
    get:
      tags:
      - owners
      summary: List Subscriptions
      description: Retrieves a list of Subscriptions for an Owner
      operationId: getSubscriptions
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscription'
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Create Subscription
      description: 'Creates a Subscription for an Owner DEPRECATED: Please create
        pools directly with POST /pools.'
      operationId: createSubscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Subscription'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Subscription'
        404:
          description: Owner not found
      security:
      - basic: []
      deprecated: true
    put:
      tags:
      - owners
      summary: Update Subscription
      description: Tickle an owner to have all of their entitlement pools synced with
        their subscriptions. This method (and the one below may not be entirely RESTful,
        as the updated data is not supplied as an argument. This API call is only
        relevant in a top level hosted deployment where subscriptions and products
        are sourced from adapters. Calling this in an on-site deployment is just a
        no-op.
      operationId: refreshPools
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      - name: auto_create_owner
        in: query
        required: false
        type: boolean
        default: false
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/JobDetail'
        202:
          description: ""
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/system_purpose:
    get:
      tags:
      - owners
      summary: getSyspurpose
      description: Retrieves the system purpose settings available to an owner
      operationId: getSyspurpose
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SystemPurposeAttributesDTO'
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/uebercert:
    get:
      tags:
      - owners
      summary: Get Ueber Entitlement Certificate
      description: Retrieves the Ueber Entitlement Certificate
      operationId: getUeberCertificate
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UeberCertificateDTO'
        404:
          description: Owner not found
      security:
      - basic: []
    post:
      tags:
      - owners
      summary: Create Ueber Entitlement Certificate
      description: Creates an Ueber Entitlement Certificate. If a certificate already
        exists, it will be regenerated.
      operationId: createUeberCertificate
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UeberCertificateDTO'
        400:
          description: ""
        404:
          description: Owner not found
      security:
      - basic: []
  /owners/{owner_key}/upstream_consumers:
    get:
      tags:
      - owners
      summary: Get Upstream Consumers
      description: ' Retrieves a list of Upstream Consumers for an Owner'
      operationId: getUpstreamConsumers
      produces:
      - application/json
      parameters:
      - name: owner_key
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UpstreamConsumerDTO'
        404:
          description: Owner not found
      security:
      - basic: []
  /pools:
    get:
      tags:
      - pools
      summary: ""
      description: Retrieves a list of Pools @deprecated Use the method on /owners
      operationId: list
      produces:
      - application/json
      parameters:
      - name: owner
        in: query
        required: false
        type: string
      - name: consumer
        in: query
        required: false
        type: string
      - name: product
        in: query
        required: false
        type: string
      - name: listall
        in: query
        description: Use with consumerUuid to list all pools available to the consumer.
          This will include pools which would otherwise be omitted due to a rules
          warning. (i.e. not recommended) Pools that trigger an error however will
          still be omitted. (no entitlements available, consumer type mismatch, etc)
        required: false
        type: boolean
        default: false
      - name: activeon
        in: query
        description: Uses ISO 8601 format
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/pool'
        400:
          description: if both consumer(unit) and owner are given, or if a product
            id is specified without a consumer(unit) or owner
        403:
          description: ""
        404:
          description: if a specified consumer(unit) or owner is not found
      security:
      - basic: []
      deprecated: true
  /pools/{pool_id}:
    get:
      tags:
      - pools
      summary: getPool
      description: Retrieves a single Pool
      operationId: getPool
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
      - name: consumer
        in: query
        required: false
        type: string
      - name: activeon
        in: query
        description: Uses ISO 8601 format
        required: false
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/pool'
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - pools
      summary: deletePool
      description: Remove a Pool
      operationId: deletePool
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        404:
          description: if the pool with the specified id is not found
      security:
      - basic: []
  /pools/{pool_id}/cdn:
    get:
      tags:
      - pools
      summary: getPoolCdn
      description: Retrieve a CDN for a Pool
      operationId: getPoolCdn
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CdnDTO'
        400:
          description: ""
      security:
      - basic: []
  /pools/{pool_id}/cert:
    get:
      tags:
      - pools
      summary: getSubCert
      description: Retrieves a Subscription Certificate
      operationId: getSubCert
      consumes:
      - text/plain
      - application/json
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CertificateDTO'
      security:
      - basic: []
  /pools/{pool_id}/entitlements:
    get:
      tags:
      - pools
      summary: getPoolEntitlements
      description: Retrieve a list of Entitlements for a Pool
      operationId: getPoolEntitlements
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EntitlementDTO'
        400:
          description: ""
      security:
      - basic: []
  /pools/{pool_id}/entitlements/consumer_uuids:
    get:
      tags:
      - pools
      summary: listEntitledConsumerUuids
      description: Retrieve a list of Consumer UUIDs attached to a pool.  Available
        only to superadmins
      operationId: listEntitledConsumerUuids
      produces:
      - application/json
      parameters:
      - name: pool_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: string
        400:
          description: ""
      security:
      - basic: []
  /products:
    post:
      tags:
      - products
      summary: createProduct
      description: Creates a Product. Returns either the new created Product or the
        Product that already existed. @deprecated Use per-org version
      operationId: createProduct
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ProductDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
      deprecated: true
  /products/owners:
    get:
      tags:
      - products
      summary: getProductOwners
      description: Retrieves a list of Owners by Product
      operationId: getProductOwners
      produces:
      - application/json
      parameters:
      - name: product
        in: query
        description: Multiple product UUIDs
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Owner'
        400:
          description: ""
      security:
      - basic: []
  /products/subscriptions:
    put:
      tags:
      - products
      summary: refreshPoolsForProduct
      description: Refreshes Pools by Product
      operationId: refreshPoolsForProduct
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: product
        in: query
        description: Multiple product UUIDs
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: lazy_regen
        in: query
        required: false
        type: boolean
        default: true
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/JobDetail'
      security:
      - basic: []
  /products/{product_uuid}:
    get:
      tags:
      - products
      summary: getProduct
      description: Retrieves a single Product
      operationId: getProduct
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - products
      summary: updateProduct
      description: Updates a Product @deprecated Use per-org version
      operationId: updateProduct
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      - in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/ProductDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
        400:
          description: ""
      security:
      - basic: []
      deprecated: true
    delete:
      tags:
      - products
      summary: deleteProduct
      description: Removes a Product @deprecated Use per-org version
      operationId: deleteProduct
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
      deprecated: true
  /products/{product_uuid}/batch_content:
    post:
      tags:
      - products
      summary: addBatchContent
      description: Adds Content to a Product Batch mode @deprecated Use per-org version
      operationId: addBatchContent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          type: object
          additionalProperties:
            type: boolean
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
      deprecated: true
  /products/{product_uuid}/certificate:
    get:
      tags:
      - products
      summary: getProductCertificate
      description: Retreives a Certificate for a Product
      operationId: getProductCertificate
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductCertificateDTO'
        404:
          description: ""
      security:
      - basic: []
  /products/{product_uuid}/content/{content_id}:
    post:
      tags:
      - products
      summary: addContent
      description: Adds Content to a Product. Single mode @deprecated Use per-org
        version
      operationId: addContent
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      - name: enabled
        in: query
        required: false
        type: boolean
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductDTO'
      security:
      - basic: []
      deprecated: true
    delete:
      tags:
      - products
      summary: removeContent
      description: Removes Content from a Product @deprecated Use per-org version
      operationId: removeContent
      produces:
      - application/json
      parameters:
      - name: product_uuid
        in: path
        required: true
        type: string
      - name: content_id
        in: path
        required: true
        type: string
      responses:
        default:
          description: successful operation
      security:
      - basic: []
      deprecated: true
  /roles:
    get:
      tags:
      - roles
      summary: getRoles
      description: Retrieves a list of Roles
      operationId: getRoles
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/StreamRoleDTO'
      security:
      - basic: []
    post:
      tags:
      - roles
      summary: createRole
      description: Creates a Role
      operationId: createRole
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/RoleDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
        404:
          description: ""
      security:
      - basic: []
  /roles/{role_name}:
    get:
      tags:
      - roles
      summary: getRole
      description: Retrieves a single Role
      operationId: getRole
      produces:
      - application/json
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
      security:
      - basic: []
    put:
      tags:
      - roles
      summary: updateRole
      description: Updates a Role.  To avoid race conditions, we do not support updating
        the user or permission collections. Currently this call will only update the
        role name. See the specific nested POST/DELETE calls for modifying users and
        permissions.
      operationId: updateRole
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      - in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/RoleDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - roles
      summary: deleteRole
      description: Removes a Role
      operationId: deleteRole
      produces:
      - '*/*'
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /roles/{role_name}/permissions:
    post:
      tags:
      - roles
      summary: addRolePermission
      description: Adds a Permission to a Role. Returns the updated Role.
      operationId: addRolePermission
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      - in: body
        name: permissionBlueprint
        required: true
        schema:
          $ref: '#/definitions/PermissionBlueprintDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /roles/{role_name}/permissions/{perm_id}:
    delete:
      tags:
      - roles
      summary: removeRolePermission
      description: Removes a Permission from a Role. Returns the updated Role.
      operationId: removeRolePermission
      produces:
      - application/json
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      - name: perm_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
        404:
          description: ""
      security:
      - basic: []
  /roles/{role_name}/users/{username}:
    post:
      tags:
      - roles
      summary: addUser
      description: Adds a User to a Role
      operationId: addUserToRole
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      - name: username
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - roles
      summary: deleteUser
      description: Removes a User from a Role
      operationId: deleteUserFromRole
      produces:
      - application/json
      parameters:
      - name: role_name
        in: path
        required: true
        type: string
      - name: username
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/RoleDTO'
        404:
          description: ""
      security:
      - basic: []
  /rules:
    get:
      tags:
      - rules
      summary: get
      description: Retrieves the Rules
      operationId: get
      produces:
      - application/json
      - text/plain
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: string
        503:
          description: ""
      security:
      - basic: []
    post:
      tags:
      - rules
      summary: upload
      description: Uploads the Rules Returns a copy of the uploaded rules.
      operationId: upload
      consumes:
      - application/json
      - text/plain
      produces:
      - text/plain
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - rules
      summary: delete
      description: Removes the Rules  Deletes any uploaded rules, uses bundled rules
        instead
      operationId: delete
      produces:
      - application/json
      parameters: []
      responses:
        default:
          description: successful operation
      security:
      - basic: []
  /serials:
    get:
      tags:
      - serials
      summary: getCertificateSerials
      description: Retrieves a list of Certificate Serials
      operationId: getCertificateSerials
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CertificateSerial'
      security:
      - basic: []
  /serials/{serial_id}:
    get:
      tags:
      - serials
      summary: getCertificateSerial
      description: Retrieves single Certificate Serial
      operationId: getCertificateSerial
      produces:
      - application/json
      parameters:
      - name: serial_id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CertificateSerialDTO'
      security:
      - basic: []
  /status:
    get:
      tags:
      - status
      summary: Status
      description: Returns status of the server
      operationId: status
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/status'
  /subscriptions:
    get:
      tags:
      - subscriptions
      summary: getSubscriptions
      description: Retrieves a list of Subscriptions
      operationId: getSubscriptions
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscription'
      security:
      - basic: []
    post:
      tags:
      - subscriptions
      summary: activateSubscription
      description: Activates a Subscription
      operationId: activateSubscription
      consumes:
      - '*/*'
      produces:
      - '*/*'
      parameters:
      - name: consumer_uuid
        in: query
        required: true
        type: string
      - name: email
        in: query
        required: true
        type: string
      - name: email_locale
        in: query
        required: true
        type: string
      responses:
        400:
          description: ""
        202:
          description: ""
        503:
          description: ""
      security:
      - basic: []
  /subscriptions/{subscription_id}:
    get:
      tags:
      - subscriptions
      summary: getSubscription
      description: Retrieves a single Subscription
      operationId: getSubscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Subscription'
        400:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - subscriptions
      summary: deleteSubscription
      description: Removes a Subscription
      operationId: deleteSubscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
      security:
      - basic: []
  /subscriptions/{subscription_id}/cert:
    get:
      tags:
      - subscriptions
      summary: getSubCert
      description: Retrieves a Subscription Certificate
      operationId: getSubCert
      consumes:
      - text/plain
      - application/json
      produces:
      - application/json
      parameters:
      - name: subscription_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CertificateDTO'
      security:
      - basic: []
  /users:
    get:
      tags:
      - users
      summary: list
      description: Retrieves a list of Users
      operationId: list
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/StreamUserDTO'
      security:
      - basic: []
    post:
      tags:
      - users
      summary: createUser
      description: Creates a User
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/UserCreationRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserDTO'
        400:
          description: ""
        409:
          description: ""
      security:
      - basic: []
  /users/{username}:
    get:
      tags:
      - users
      summary: getUserInfo
      description: Retrieves a single User
      operationId: getUserInfo
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
    put:
      tags:
      - users
      summary: updateUser
      description: Updates a User
      operationId: updateUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
      - in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/UserDTO'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
    delete:
      tags:
      - users
      summary: deleteUser
      description: Removes a User
      operationId: deleteUser
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
      responses:
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
  /users/{username}/owners:
    get:
      tags:
      - users
      summary: listUsersOwners
      description: Retrieve a list of owners the user can register systems to. Previously
        this represented owners the user was an admin for. Because the client uses
        this API call to list the owners a user can register to, when we introduced
        'my systems' administrator, we have to change its meaning to listing the owners
        that can be registered to by default to maintain compatability with released
        clients.
      operationId: listUsersOwners
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/StreamOwnerDTO'
      security:
      - basic: []
  /users/{username}/roles:
    get:
      tags:
      - users
      summary: getUserRoles
      description: Retrieves a list of Roles by User
      operationId: getUserRoles
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/StreamRoleDTO'
        400:
          description: ""
        404:
          description: ""
      security:
      - basic: []
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":112:{s:14:\"NestedOwnerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"displayName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:38:\"DTO
  representing an owner/organization\";}s:21:\"EnvironmentContentDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"$ref\";s:24:\"#/definitions/ContentDTO\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:12:\"Serializable\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:5:\"Owner\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:11:\"displayName\";i:1;s:2:\"id\";i:2;s:3:\"key\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:11:\"parentOwner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/NestedOwner\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"displayName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:13:\"contentPrefix\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:13:\"lastRefreshed\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:19:\"defaultServiceLevel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:16:\"upstreamConsumer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/UpstreamConsumer\";}s:8:\"logLevel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:32;}s:17:\"contentAccessMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"contentAccessModeList\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"autobindDisabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:20:\"CertificateSerialDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}s:10:\"expiration\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"collected\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"revoked\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}s:11:\"description\";s:37:\"DTO
  representing a certificate serial\";}s:7:\"Product\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:4:\"uuid\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:10:\"multiplier\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"attributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:14:\"productContent\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ProductContent\";}}s:19:\"dependentProductIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"ContentOverrideDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"contentLabel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:3:\"Cdn\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:5:\"label\";i:2;s:4:\"name\";i:3;s:3:\"url\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:3:\"url\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"certificate\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/CdnCertificate\";}}}s:14:\"CdnCertificate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:4:\"cert\";i:1;s:2:\"id\";i:2;s:3:\"key\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"cert\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/CertificateSerial\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"certificate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"JobDetail\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:10:\"jobDataMap\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:28:\"persistJobDataAfterExecution\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:10:\"jobBuilder\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/JobBuilder\";}s:28:\"concurrentExectionDisallowed\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"durable\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/JobKey\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"JobKey\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"group\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Consumer\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:5:{i:0;s:16:\"entitlementCount\";i:1;s:2:\"id\";i:2;s:4:\"name\";i:3;s:6:\"typeId\";i:4;s:4:\"uuid\";}s:10:\"properties\";O:8:\"stdClass\":30:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:8:\"username\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:17:\"entitlementStatus\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:32;}s:12:\"serviceLevel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"role\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:5:\"usage\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"addOns\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"systemPurposeStatus\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:32;}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Release\";}s:6:\"idCert\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/IdentityCertificate\";}s:6:\"typeId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"environmentId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"entitlementCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"facts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"lastCheckin\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"installedProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/ConsumerInstalledProduct\";}}s:11:\"canActivate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:12:\"capabilities\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/consumercapability\";}}s:12:\"hypervisorId\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/HypervisorId\";}s:11:\"contentTags\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"autoheal\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:17:\"contentAccessMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"annotations\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"dev\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:9:\"MediaType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"subtype\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"parameters\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"wildcardType\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:15:\"wildcardSubtype\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:21:\"HypervisorConsumerDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/OwnerDTO\";}}}s:12:\"Subscription\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":25:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/NestedOwner\";}s:7:\"product\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProductData\";}s:14:\"derivedProduct\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProductData\";}s:16:\"providedProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProductData\";}}s:23:\"derivedProvidedProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ProductData\";}}s:8:\"branding\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Branding\";}}s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:14:\"contractNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"accountNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"modified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"orderNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"upstreamPoolId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"upstreamEntitlementId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"upstreamConsumerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"cdn\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Cdn\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"certificate\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/SubscriptionsCertificate\";}s:7:\"stacked\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"stackId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"lastModified\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:19:\"IdentityCertificate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:4:\"cert\";i:1;s:2:\"id\";i:2;s:3:\"key\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"cert\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/CertificateSerial\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"certificate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"consumercapability\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:18:\"consumercapability\";}}s:7:\"RoleDTO\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"name\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"admin-all\";}s:5:\"users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/UserDTO\";}}s:11:\"permissions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/PermissionBlueprintDTO\";}}}s:11:\"description\";s:33:\"Role
  information for a given role\";}s:20:\"NestedEntitlementDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:31:\"DTO
  representing an entitlement\";}s:10:\"JobBuilder\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"pool\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":37:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:18:\"activeSubscription\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:17:\"sourceEntitlement\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/NestedEntitlementDTO\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"attributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:20:\"restrictedToUsername\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"contractNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"accountNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"orderNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"consumed\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"exported\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"branding\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/BrandingDTO\";}}s:20:\"calculatedAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:14:\"upstreamPoolId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"upstreamEntitlementId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"upstreamConsumerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"productName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:9:\"productId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"productAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:7:\"stackId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:7:\"stacked\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;s:7:\"default\";b:0;}s:13:\"sourceStackId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:15:\"developmentPool\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;s:7:\"default\";b:0;}s:24:\"derivedProductAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:16:\"derivedProductId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"derivedProductName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:16:\"providedProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ProvidedProductDTO\";}}s:23:\"derivedProvidedProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ProvidedProductDTO\";}}s:18:\"subscriptionSubKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"subscriptionId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:23:\"DTO
  representing a Pool\";s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"pool\";}}s:13:\"StreamRoleDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"parallel\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:18:\"EnvironmentContent\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:7:\"content\";i:1;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Content\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:15:\"ProvidedProduct\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"productId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"productName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"ActivationKey\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:5:\"owner\";}s:10:\"properties\";O:8:\"stdClass\":13:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/NestedOwner\";}s:5:\"pools\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ActivationKeyPool\";}}s:8:\"products\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}}s:16:\"contentOverrides\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/ActivationKeyContentOverride\";}}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Release\";}s:12:\"serviceLevel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:10:\"autoAttach\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:28:\"CandlepinQueryEnvironmentDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"rowCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:32:\"SystemPurposeComplianceStatusDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":14:{s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"compliant\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:4:\"date\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:16:\"nonCompliantRole\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"nonCompliantAddOns\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:15:\"nonCompliantSLA\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"nonCompliantUsage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"compliantRole\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:15:\"compliantAddOns\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:12:\"compliantSLA\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:14:\"compliantUsage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:15:\"nonPreferredSLA\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:17:\"nonPreferredUsage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:7:\"reasons\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"description\";s:49:\"DTO
  representing system purpose compliance status\";}s:25:\"ImportUpstreamConsumerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"apiUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"webUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"contentAccessMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ConsumerTypeDTO\";}}s:11:\"description\";s:46:\"DTO
  representing an imported upstream consumer\";}s:24:\"SubscriptionsCertificate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:4:\"cert\";i:1;s:2:\"id\";i:2;s:3:\"key\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"cert\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/CertificateSerial\";}s:11:\"certificate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:6:\"Person\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uri\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"DeleteResult\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"deletedRecords\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:6:\"status\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:4:\"mode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"modeReason\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"modeChangeTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"result\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;s:7:\"default\";b:0;}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"0.9.10\";}s:12:\"rulesVersion\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"5.8\";}s:7:\"release\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:1:\"1\";}s:10:\"standalone\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:7:\"timeUTC\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:11:\"rulesSource\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"managerCapabilities\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"description\";s:61:\"Version
  and Status information about running Candlepin server\";s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:6:\"status\";}}s:19:\"UeberCertificateDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"cert\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/CertificateSerialDTO\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}}s:11:\"description\";s:37:\"DTO
  representing an ueber certificate\";}s:22:\"ImportUpstreamConsumer\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:5:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:7:\"ownerId\";i:3;s:4:\"type\";i:4;s:4:\"uuid\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/consumertype\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"contentAccessMode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"webUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"apiUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:17:\"ProductContentDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"$ref\";s:24:\"#/definitions/ContentDTO\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:8:\"Branding\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:9:\"productId\";i:3;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"productId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:32;}}}s:15:\"PoolQuantityDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:4:\"pool\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/pool\";}}}s:10:\"ContentDTO\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":16:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"5001\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"yum\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"content_label\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"content_name\";}s:6:\"vendor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"example-vendor\";}s:10:\"contentUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"/admin/foo/example/path\";}s:12:\"requiredTags\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"TAG1,TAG2\";}s:6:\"gpgUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:27:\"/admin/foo/example/gpg/path\";}s:18:\"modifiedProductIds\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:7:\"example\";s:16:\"[5051,5052,5053]\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"arches\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"x86_64\";}s:18:\"requiredProductIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:14:\"metadataExpire\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:1467124079;}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:30:\"DTO
  representing a certificate\";}s:9:\"JobStatus\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":15:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:5:\"state\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:7:{i:0;s:7:\"CREATED\";i:1;s:7:\"PENDING\";i:2;s:7:\"RUNNING\";i:3;s:8:\"FINISHED\";i:4;s:8:\"CANCELED\";i:5;s:6:\"FAILED\";i:6;s:7:\"WAITING\";}}s:9:\"startTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"finishTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"result\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:13:\"principalName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:10:\"targetType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"targetId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:7:\"ownerId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:13:\"correlationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"resultData\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"done\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:5:\"group\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"ConsumptionTypeCounts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"physical\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"guest\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:13:\"StreamUserDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"parallel\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:27:\"StreamDistributorVersionDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"parallel\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:11:\"ProductData\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"5051\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"Admin
  OS Developer Bits\";}s:10:\"multiplier\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:1;}s:10:\"attributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"dependentProductIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"href\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:42:\"/products/ff808081554a3e4101554a3e9033005d\";}s:14:\"productContent\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ProductContentData\";}}}s:11:\"description\";s:46:\"Product
  information for a given sku or product\";}s:30:\"CandlepinQueryActivationKeyDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"rowCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:24:\"ConsumerInstalledProduct\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:9:\"productId\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"productId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"productName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:7:\"version\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:20;}s:4:\"arch\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:63;}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:14:\"EnvironmentDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:18:\"environmentContent\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/EnvironmentContentDTO\";}}}s:11:\"description\";s:31:\"DTO
  representing an environment\";}s:8:\"EventDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"targetName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"principal\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/PrincipalDataDTO\";}s:9:\"timestamp\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:8:\"entityId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"consumerUuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"referenceId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"messageText\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"target\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"referenceType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:25:\"DTO
  representing an event\";}s:17:\"CertificateSerial\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:9:\"collected\";i:1;s:2:\"id\";i:2;s:7:\"revoked\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"revoked\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:9:\"collected\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:10:\"expiration\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"integer\";}}}s:17:\"ActivationKeyPool\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:4:\"pool\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"pool\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/pool\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:4:\"Text\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}}}s:19:\"ComplianceStatusDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"compliant\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:4:\"date\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:14:\"compliantUntil\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"compliantProducts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:20:\"nonCompliantProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:26:\"partiallyCompliantProducts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:13:\"partialStacks\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EntitlementDTO\";}}}s:27:\"productComplianceDateRanges\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/DateRange\";}}s:7:\"reasons\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/ComplianceReasonDTO\";}}}s:11:\"description\";s:34:\"DTO
  representing compliance status\";}s:12:\"ImportRecord\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:7:\"SUCCESS\";i:1;s:7:\"FAILURE\";i:2;s:6:\"DELETE\";i:3;s:20:\"SUCCESS_WITH_WARNING\";}}s:13:\"statusMessage\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:8:\"fileName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"generatedBy\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:13:\"generatedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:16:\"upstreamConsumer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/ImportUpstreamConsumer\";}}}s:15:\"ConsumerTypeDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"manifest\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}s:11:\"description\";s:32:\"DTO
  representing a consumer type\";}s:18:\"SchedulerStatusDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"running\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:13:\"CapabilityDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:38:\"DTO
  representing a consumer capability\";}s:19:\"ComplianceReasonDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"message\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"attributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"description\";s:36:\"DTO
  representing a compliance reason\";}s:11:\"BrandingDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:9:\"productId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"StreamOwnerDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"parallel\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:16:\"ActivationKeyDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":12:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:12:\"serviceLevel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"autoAttach\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:5:\"pools\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/ActivationKeyPoolDTO\";}}s:16:\"contentOverrides\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/ContentOverrideDTO\";}}s:8:\"products\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:34:\"DTO
  representing an activation key\";}s:19:\"UpstreamConsumerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":11:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"apiUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"webUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"contentAccessMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ConsumerTypeDTO\";}s:6:\"idCert\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/CertificateDTO\";}}s:11:\"description\";s:37:\"DTO
  representing an upstream consumer\";}s:7:\"UserDTO\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:2:\"id\";i:1;s:8:\"username\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:8:\"username\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"admin\";}s:10:\"superAdmin\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:7:\"example\";b:1;s:7:\"default\";b:0;}}s:11:\"description\";s:33:\"User
  information for a given user\";}s:11:\"ContentData\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":16:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"5001\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"yum\";}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:13:\"content_label\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"content_name\";}s:6:\"vendor\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:14:\"example-vendor\";}s:10:\"contentUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"/admin/foo/example/path\";}s:12:\"requiredTags\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"TAG1,TAG2\";}s:6:\"gpgUrl\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:27:\"/admin/foo/example/gpg/path\";}s:18:\"modifiedProductIds\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:7:\"example\";s:16:\"[5051,5052,5053]\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:6:\"arches\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"x86_64\";}s:18:\"metadataExpiration\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:18:\"requiredProductIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"EntitlementDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"consumer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/NestedConsumerDTO\";}s:4:\"pool\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/pool\";}s:8:\"quantity\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"certificates\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/CertificateDTO\";}}s:9:\"startDate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"endDate\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:31:\"DTO
  representing an entitlement\";}s:9:\"InputPart\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"bodyAsString\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"contentTypeFromMessage\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:9:\"mediaType\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/MediaType\";}s:7:\"headers\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}s:6:\"CdnDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:5:\"label\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"url\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"certificate\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/CertificateDTO\";}}s:11:\"description\";s:22:\"DTO
  representing a Cdn\";}s:9:\"OwnerInfo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:14:\"consumerCounts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:19:\"consumerGuestCounts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:26:\"entitlementsConsumedByType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:23:\"consumerTypeCountByPool\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:30:\"enabledConsumerTypeCountByPool\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:32:\"consumerCountsByComplianceStatus\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:28:\"entitlementsConsumedByFamily\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/ConsumptionTypeCounts\";}}}}s:18:\"ProductContentData\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/ContentData\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:11:\"QueueStatus\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"queueName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"pendingMessageCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:24:\"CandlepinQueryGuestIdDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"rowCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:28:\"ActivationKeyContentOverride\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:12:\"contentLabel\";i:1;s:2:\"id\";i:2;s:4:\"name\";i:3;s:5:\"value\";}s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"contentLabel\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:5:\"value\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"parent\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ActivationKey\";}}}s:15:\"HypervisorIdDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"hypervisorId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"reporterId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:38:\"DTO
  representing a HypervisorId entity\";}s:14:\"MultipartInput\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"preamble\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"parts\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/InputPart\";}}}}s:11:\"NestedOwner\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:11:\"displayName\";i:1;s:2:\"id\";i:2;s:3:\"key\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"displayName\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:15:\"ImportRecordDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":9:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"statusMessage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"generatedBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"generatedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:16:\"upstreamConsumer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:39:\"#/definitions/ImportUpstreamConsumerDTO\";}s:8:\"fileName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"UpstreamConsumer\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:5:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:7:\"ownerId\";i:3;s:4:\"type\";i:4;s:4:\"uuid\";}s:10:\"properties\";O:8:\"stdClass\":11:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"idCert\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/IdentityCertificate\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/consumertype\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"contentAccessMode\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"webUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"apiUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"ProvidedProductDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"productId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:11:\"productName\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:14:\"ProductContent\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:7:\"content\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Content\";}s:7:\"enabled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:13:\"entityVersion\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:5:\"entry\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":16:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Text\";}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/link\";}}s:10:\"categories\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/category\";}}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:9:\"published\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"author\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Person\";}}s:11:\"contributor\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Person\";}}s:6:\"source\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Source\";}s:6:\"rights\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Text\";}s:7:\"content\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/content\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/Text\";}s:8:\"anyOther\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:5:\"entry\";}}s:4:\"feed\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":16:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"categories\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/category\";}}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/link\";}}s:6:\"author\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Person\";}}s:11:\"contributor\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Person\";}}s:6:\"rights\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:4:\"logo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:9:\"generator\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/generator\";}s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:7:\"entries\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:19:\"#/definitions/entry\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"feed\";}}s:14:\"CertificateDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"cert\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"serial\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:34:\"#/definitions/CertificateSerialDTO\";}}s:11:\"description\";s:30:\"DTO
  representing a certificate\";}s:32:\"CandlepinQueryContentOverrideDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"rowCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:7:\"Content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:6:{i:0;s:2:\"id\";i:1;s:5:\"label\";i:2;s:4:\"name\";i:3;s:4:\"type\";i:4;s:4:\"uuid\";i:5;s:6:\"vendor\";}s:10:\"properties\";O:8:\"stdClass\":16:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:32;}s:4:\"type\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:5:\"label\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"vendor\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:10:\"contentUrl\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:12:\"requiredTags\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:6:\"gpgUrl\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:18:\"modifiedProductIds\";O:8:\"stdClass\":4:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"maxItems\";i:255;s:8:\"minItems\";i:0;}s:6:\"arches\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:14:\"releaseVersion\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"metadataExpiration\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:18:\"requiredProductIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:8:\"OwnerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":15:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"displayName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"parentOwner\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:13:\"contentPrefix\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"defaultServiceLevel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"upstreamConsumer\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"$ref\";s:33:\"#/definitions/UpstreamConsumerDTO\";}s:8:\"logLevel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"autobindDisabled\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"boolean\";s:8:\"readOnly\";b:1;s:7:\"default\";b:0;}s:17:\"contentAccessMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"contentAccessModeList\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"lastRefreshed\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:38:\"DTO
  representing an owner/organization\";}s:11:\"Environment\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:4:\"name\";i:2;s:5:\"owner\";}s:10:\"properties\";O:8:\"stdClass\":8:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/NestedOwner\";}s:4:\"name\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:11:\"description\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"environmentContent\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/EnvironmentContent\";}}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"PrincipalDataDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}}}s:4:\"File\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":15:{s:4:\"path\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"parent\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"absolute\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:13:\"canonicalPath\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"parentFile\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/File\";}s:12:\"absolutePath\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"absoluteFile\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/File\";}s:13:\"canonicalFile\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/File\";}s:9:\"directory\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:4:\"file\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:6:\"hidden\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:10:\"totalSpace\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"freeSpace\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"usableSpace\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:19:\"UserCreationRequest\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:8:\"password\";i:1;s:8:\"username\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"superAdmin\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}}s:12:\"consumertype\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:3:{i:0;s:2:\"id\";i:1;s:5:\"label\";i:2;s:8:\"manifest\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"label\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:8:\"manifest\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:12:\"consumertype\";}}s:17:\"NestedConsumerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:37:\"DTO
  representing an upstream consumer\";}s:7:\"serials\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"serial\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"serials\";}}s:18:\"distributorversion\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"displayName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"capabilities\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/distributorversioncapability\";}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:18:\"distributorversion\";}}s:4:\"link\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:4:\"href\";}s:10:\"properties\";O:8:\"stdClass\":9:{s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"href\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:3:\"rel\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/MediaType\";}s:8:\"hreflang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:6:\"length\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:4:\"link\";}}s:26:\"SystemPurposeAttributesDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"owner\";O:8:\"stdClass\":2:{s:8:\"readOnly\";b:1;s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:23:\"systemPurposeAttributes\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"readOnly\";b:1;s:20:\"additionalProperties\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:11:\"description\";s:105:\"DTO
  representing the system purpose attributes available across the set of products
  belonging to an owner\";}s:9:\"generator\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"value\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"uri\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:7:\"version\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:9:\"generator\";}}s:6:\"Source\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":15:{s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"subtitle\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"categories\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/category\";}}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:5:\"links\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/link\";}}s:6:\"author\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Person\";}}s:11:\"contributor\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Person\";}}s:6:\"rights\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"icon\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:4:\"logo\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";}s:9:\"generator\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/generator\";}s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}}}s:7:\"content\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:5:\"value\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:3:\"src\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:7:\"content\";}}s:9:\"DateRange\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:28:\"distributorversioncapability\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:28:\"distributorversioncapability\";}}s:11:\"ConsumerDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":30:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"uuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"username\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"entitlementStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"serviceLevel\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"usage\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"addOns\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"systemPurposeStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:11:\"environment\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/EnvironmentDTO\";}s:16:\"entitlementCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"facts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"lastCheckin\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"installedProducts\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/ConsumerInstalledProductDTO\";}}s:11:\"canActivate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:12:\"capabilities\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/CapabilityDTO\";}}s:12:\"hypervisorId\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/HypervisorIdDTO\";}s:11:\"contentTags\";O:8:\"stdClass\":3:{s:4:\"type\";s:5:\"array\";s:11:\"uniqueItems\";b:1;s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"autoheal\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:11:\"annotations\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"contentAccessMode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/ConsumerTypeDTO\";}s:8:\"guestIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/GuestIdDTO\";}}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"idCert\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/CertificateDTO\";}}s:11:\"description\";s:37:\"DTO
  representing an upstream consumer\";}s:27:\"ConsumerInstalledProductDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"productId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"productName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"arch\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}s:11:\"description\";s:45:\"DTO
  representing a consumer installed product\";}s:20:\"ActivationKeyPoolDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"poolId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:8:\"readOnly\";b:1;}s:8:\"quantity\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:8:\"readOnly\";b:1;}}}s:12:\"JobStatusDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":16:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"startTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"finishTime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:6:\"result\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"principalName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"targetType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"targetId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"correlationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"resultData\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:4:\"done\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"boolean\";s:7:\"default\";b:0;}s:10:\"statusPath\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"group\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:29:\"DTO
  representing a job status\";}s:7:\"Release\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:10:\"releaseVer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:10:\"ProductDTO\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"uuid\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"5051\";}s:4:\"name\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"Admin
  OS Developer Bits\";}s:10:\"multiplier\";O:8:\"stdClass\":3:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";s:7:\"example\";i:1;}s:10:\"attributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:19:\"dependentProductIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"href\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:42:\"/products/ff808081554a3e4101554a3e9033005d\";}s:14:\"productContent\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/ProductContentDTO\";}}}s:11:\"description\";s:46:\"Product
  information for a given sku or product\";}s:10:\"GuestIdDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"guestId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"attributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:11:\"description\";s:29:\"DTO
  representing a GuestIdDTO\";}s:18:\"DeletedConsumerDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":7:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"consumerUuid\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"ownerId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"ownerKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"ownerDisplayName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:22:\"PermissionBlueprintDTO\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:6:\"access\";i:1;s:2:\"id\";i:2;s:5:\"owner\";i:3;s:4:\"type\";}s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:32:\"ff808081554a3e4101554a3e9033005d\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/NestedOwnerDTO\";}s:4:\"type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"OWNER\";}s:6:\"access\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"NONE\";}}s:11:\"description\";s:33:\"User
  information for a given user\";}s:17:\"NestedEntitlement\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:1:{i:0;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"href\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"HypervisorId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:12:\"hypervisorId\";i:1;s:2:\"id\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:7:\"created\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:7:\"updated\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";s:8:\"readOnly\";b:1;}s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Serializable\";}s:12:\"hypervisorId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}s:10:\"reporterId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:9:\"minLength\";i:0;s:9:\"maxLength\";i:255;}}}s:8:\"category\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":6:{s:19:\"extensionAttributes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}}s:4:\"lang\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"base\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":2:{s:9:\"namespace\";s:36:\"http://www.w3.org/XML/1998/namespace\";s:9:\"attribute\";b:1;}}s:4:\"term\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:6:\"scheme\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:3:\"uri\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}s:5:\"label\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:3:\"xml\";O:8:\"stdClass\":1:{s:9:\"attribute\";b:1;}}}s:3:\"xml\";O:8:\"stdClass\":1:{s:4:\"name\";s:8:\"category\";}}s:21:\"ProductCertificateDTO\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"cert\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:11:\"description\";s:38:\"DTO
  representing a product certificate\";}s:25:\"HypervisorUpdateResultDTO\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/HypervisorConsumerDTO\";}}s:7:\"updated\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/HypervisorConsumerDTO\";}}s:9:\"unchanged\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/HypervisorConsumerDTO\";}}s:12:\"failedUpdate\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}}"
...
