---
openapi: 3.0.0
info: !php/object "O:8:\"stdClass\":5:{s:7:\"version\";s:3:\"2.4\";s:5:\"title\";s:16:\"RECEIPTS
  API 2.4\";s:7:\"contact\";O:8:\"stdClass\":3:{s:4:\"name\";s:13:\"OASIS Support\";s:5:\"email\";s:27:\"sunil.pandey@coxautoinc.com\";s:3:\"url\";s:25:\"http://www.coxautoinc.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:14:\"Cox
  Automotive\";s:3:\"url\";s:25:\"http://www.coxautoinc.com\";}s:11:\"description\";s:4799:\"#
  \ Purpose\n\n This document addresses the requirements of Cox Automotive to provide
  an\n application programming interface (API) that creates and returns dealer receipts
  information from the Cox Automotive Wholesale Billing and\n Payments system that
  is built on Oracle's E-Business Suite. Receipts API (this API) is created to cater
  the need of rendering the buyer receipt details to the calling applications and
  creating the buyer payments in Oracle EBS.\n\n   \n #  Architecture\n   In order
  to present/render transactions, Receipts API accepts input parameters (request payload)
  from the calling application through a composite service built on OSB in JSON format.
  The output (response payload) is returned in JSON format to the calling application.
  This action is performed by GET method of the API.\n\n   Similarly, in order to
  process/create transactions, Receipts API accepts input parameters (request payload)
  from the calling application through a composite service built on OSB in JSON format.
  Then the  API creates/updates transactions in Oracle EBS tables and returns back
  the status (response payload) is JSON format to the calling application. \n # Versioning\n
  \  Calling application passes Version as a field in the HTTPS header for both GET
  and POST methods.  API uses the version number to control what version of the JSON
  output needs to be returned for GET method and what version of API to be used for
  POST method.\n # Application Authentication\n   Each calling application requires
  an Oracle Weblogic username and password to access the API. Value in the following
  httpS header fields need to be passed by the calling application-\n   \n   * Application-UserName\n
  \  * Application-Password\n   \n   Oracle SOA authenticates the application user
  credentials. If the application user fails the authentication then the Oracle SOA
  returns 401 error message.\n \n # End User Authorization\n\n   **Manheim Customer
  Portal (CP)**\n\n   Receipts API considers the Manheim CP a trusted application
  and does not require that the customer user has an account in Oracle EBS. The Manheim
  CP is responsible for authenticating the customer user and providing the following
  parameters the httpS header-\n   * Manheim-Customer-UserName\n   * Manheim-Customer-Role\n
  \  * Manheim-Customer-RepNumber\n\n If the CP sends a Customer Role of 'Order Services
  Rep' or 'Order Services Pay Rep', the API validates that the \u2018RepNumber' parameter
  is provided in the httpS Header and returns an error if it is not valid.  A corresponding
  responsibility is created in Oracle EBS for each CP role to control the types of
  receipts that role can create in Oracle. One common application level user is created
  in Oracle EBS for both CP and CSA, and user name is identified as CPCSAUSER.\n\n
  **Manheim Customer Service Application (CSA)**\n\n Employee users are required to
  have an account in Oracle EBS before that can access the CSA.  Each user is assigned
  a specific CSA responsibility in EBS.  The Manheim CSA only passes the user name
  for the employee as 'Manheim-Employee-ID' in the httpS header when calling the API.
  \  If the employee user does not have an account with CSA responsibility assigned
  in Oracle EBS, then API returns an error message.  The receipts API restricts the
  creation of types of receipts based on the responsibilities assigned to the passed
  employee user. One common application level user is created in Oracle EBS for both
  CP and CSA, and user name is identified as CPCSAUSER. \n   \n **Remarketing Management
  System (RMS)**\n     \n A new application level user \"rmsuser\" is created in Oracle
  EBS. RMS system does not send end user employee  'Manheim-Employee-ID' in the httpS
  header when calling the API, it only passes the application user. For POST method
  call, Oracle EBS checks the application user authorization access for creating the
  type of receipt (Check, ACH etc.) in Oracle EBS. If the authorization fails then
  the Oracle EBS API returns an error message. \n\n **Profile, Preferences, and Notifications
  (PPN)**\n\n A new application level user \"manppn\" will be created in Oracle EBS
  for PPN system to use while calling the API. PPN will not send end user employee
  \ 'Manheim-Employee-ID' in the httpS header when calling the API, it will only pass
  the application user. manppn user will not be provided authorization for creating
  any type of receipts in Oracle EBS, i.e. any POST method call initiated by manppn
  will be rejected by the Receipts API.\n   \n Appropriate responsibilities are assigned
  to each of the above mentioned Application users in Oracle EBS. API uses these responsibilities
  to control the Output Expansions that an Application is authorized to access, during
  GET method call. API returns an error message if the passed Application user is
  not authorized for the requested output expansions.\";}"
paths: []
...
