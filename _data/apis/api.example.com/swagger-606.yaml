---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":3:{s:11:\"description\";s:129:\"This is a multi-factor
  authentication server. It supports single use backup-codes, one-time passwords (totp)
  and hardware tokens.\";s:7:\"version\";s:5:\"1.1.0\";s:5:\"title\";s:23:\"U2F Server
  Microservice\";}"
host: api.example.com
paths:
  /status:
    get:
      operationId: mfaStatus
      summary: Check MFA Methods
      description: Lookup Configured MFA Methods AND get any/all U2F challenges necessary
        to generate a U2F response.
      parameters:
      - name: appId
        in: query
        description: User facing application id (FQDN)
        required: true
        type: string
      - name: account
        in: query
        description: account handle, uuid, primary key
        required: true
        type: string
      - name: secret
        in: query
        description: Secret used to salt u2fId in API Database
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /logs:
    get:
      operationId: mfaLogs
      summary: MFA Access Logs
      description: Get records for all authentication attempts (success & failure)
      parameters:
      - name: appId
        in: query
        description: User facing application id (FQDN)
        required: true
        type: string
      - name: account
        in: query
        description: account handle, uuid, primary key
        required: true
        type: string
      - name: secret
        in: query
        description: Secret used to salt u2fId in API Database
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /key/register:
    post:
      operationId: keyRegisterStart
      tags:
      - key
      summary: Start Key Registration
      description: some description
      parameters:
      - in: body
        name: body
        description: zzzzz
        required: true
        schema:
          $ref: '#/definitions/BasicUserInfo'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /key/register/finish:
    post:
      operationId: keyRegisterFinish
      tags:
      - key
      summary: Finish Key Registration
      description: some description
      parameters:
      - in: body
        name: body
        description: zzzzz
        required: true
        schema:
          $ref: '#/definitions/keyRegisterFinish'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /key/remove:
    delete:
      operationId: keyRemove
      tags:
      - key
      summary: Remove Registrated Key
      description: Using a registered key's uuid, remove the device from a users account.
      parameters:
      - in: body
        name: body
        description: Method for removing registered U2F key from users account.
        required: true
        schema:
          $ref: '#/definitions/uuidRemove'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /key/authenticate:
    post:
      operationId: keyAuthenticateStart
      tags:
      - key
      summary: Start Key Authentication
      description: Generate U2F challenges for all registered U2F hardware tokens.
      parameters:
      - in: body
        name: body
        description: zzzzz
        required: true
        schema:
          $ref: '#/definitions/BasicUserInfo'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /key/authenticate/finish:
    post:
      operationId: keyAuthenticateFinish
      tags:
      - key
      summary: Finish Key Authentication
      description: Verify the response generated by the U2F hardware token.
      parameters:
      - in: body
        name: body
        description: zzzzz
        required: true
        schema:
          $ref: '#/definitions/keyAuthenticateFinish'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /otp/register:
    post:
      operationId: otpRegisterStart
      tags:
      - otp
      summary: Start OTP Registration
      description: Generate a secret and send it as a payload I can display as a QR
        Code.
      parameters:
      - in: body
        name: body
        description: Basic info needed to identify a users unique account.
        required: true
        schema:
          $ref: '#/definitions/BasicUserInfo'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /otp/register/finish:
    post:
      operationId: otpRegisterFinish
      tags:
      - otp
      summary: Start OTP Registration
      description: Verify that the response code was generated using the secret.
      parameters:
      - in: body
        name: body
        description: Basic info needed to identify a users unique account AND token
          generated by a OTP device with the last generated secret.
        required: true
        schema:
          $ref: '#/definitions/otpRegisterFinish'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /otp/remove:
    delete:
      operationId: otpRemove
      tags:
      - otp
      summary: Remove Registrated OTP Device
      description: Using a registered devices's uuid, remove the device from a users
        account.
      parameters:
      - in: body
        name: body
        description: Method for removing registered OTP Device from users account.
        required: true
        schema:
          $ref: '#/definitions/uuidRemove'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /otp/authenticate:
    get:
      operationId: otpAuthenticate
      tags:
      - otp
      summary: Authenticate
      description: Verify that the token provided was generated using any of the secrets
        I have stored in registered OTP devices.
      parameters:
      - name: appId
        in: query
        description: User facing application id (FQDN)
        required: true
        type: string
      - name: account
        in: query
        description: account handle, uuid, primary key
        required: true
        type: string
      - name: secret
        in: query
        description: Secret used to salt u2fId in API Database
        type: string
      - name: token
        in: query
        description: OTP Token Generated by Device using stored secret
        required: true
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /code/issue:
    post:
      operationId: codeRegister
      tags:
      - code
      summary: Issue
      description: Issue a batch of single-use backup codes
      parameters:
      - in: body
        name: body
        description: Basic info needed to identify a users unique account.
        required: true
        schema:
          $ref: '#/definitions/BasicUserInfo'
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
  /code/authenticate:
    get:
      operationId: codeAuthenticate
      tags:
      - code
      summary: Authenticate
      description: Verify that the code provided has been issued to my account.
      parameters:
      - name: appId
        in: query
        description: User facing application id (FQDN)
        required: true
        type: string
      - name: account
        in: query
        description: account handle, uuid, primary key
        required: true
        type: string
      - name: secret
        in: query
        description: Secret used to salt u2fId in API Database
        type: string
      - name: code
        in: query
        description: Issued Backup Code
        required: true
        type: string
      responses:
        200:
          description: successful operation
        400:
          description: somekind of error
definitions: !php/object "O:8:\"stdClass\":7:{s:13:\"BasicUserInfo\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:2:{i:0;s:5:\"appId\";i:1;s:7:\"account\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"appId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"User
  facing application id (FQDN)\";s:7:\"example\";s:19:\"https://example.com\";}s:7:\"account\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"handle,
  uuid, account primary key\";s:7:\"example\";s:8:\"superman\";}s:6:\"secret\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Secret
  used to salt u2fId in API Database\";s:7:\"example\";s:0:\"\";}}}s:17:\"otpRegisterFinish\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:5:\"appId\";i:1;s:7:\"account\";i:2;s:6:\"secret\";i:3;s:5:\"token\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"appId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"User
  facing application id (FQDN)\";s:7:\"example\";s:19:\"https://example.com\";}s:7:\"account\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"handle,
  uuid, account primary key\";s:7:\"example\";s:8:\"superman\";}s:6:\"secret\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Secret
  used to salt u2fId in API Database\";s:7:\"example\";s:0:\"\";}s:5:\"token\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:19:\"otp
  generated token\";}s:8:\"nickname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Nickname
  for OTP device\";s:7:\"example\";s:0:\"\";}}}s:10:\"uuidRemove\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:5:\"appId\";i:1;s:7:\"account\";i:2;s:6:\"secret\";i:3;s:4:\"uuid\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"appId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"User
  facing application id (FQDN)\";s:7:\"example\";s:19:\"https://example.com\";}s:7:\"account\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"handle,
  uuid, account primary key\";s:7:\"example\";s:8:\"superman\";}s:6:\"secret\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Secret
  used to salt u2fId in API Database\";s:7:\"example\";s:0:\"\";}s:4:\"uuid\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:52:\"uuid
  for registered OTP Device or U2F Hardware Token\";s:7:\"example\";s:0:\"\";}}}s:17:\"keyRegisterFinish\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:5:\"appId\";i:1;s:7:\"account\";i:2;s:6:\"secret\";i:3;s:20:\"registrationResponse\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"appId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"User
  facing application id (FQDN)\";s:7:\"example\";s:19:\"https://example.com\";}s:7:\"account\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"handle,
  uuid, account primary key\";s:7:\"example\";s:8:\"superman\";}s:6:\"secret\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Secret
  used to salt u2fId in API Database\";s:7:\"example\";s:0:\"\";}s:20:\"registrationResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"registrationResponse
  object\";s:4:\"$ref\";s:34:\"#/definitions/registrationResponse\";}s:8:\"nickname\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:23:\"Nickname
  for OTP device\";s:7:\"example\";s:0:\"\";}}}s:20:\"registrationResponse\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:49:\"Response
  generated by U2F device using u2f-api.js\";s:8:\"required\";a:5:{i:0;s:16:\"registrationData\";i:1;s:7:\"version\";i:2;s:5:\"appId\";i:3;s:9:\"challenge\";i:4;s:10:\"clientData\";}s:10:\"properties\";O:8:\"stdClass\":5:{s:16:\"registrationData\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"appId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"User
  facing application id (FQDN)\";}s:9:\"challenge\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"clientData\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:6:\"string\";}}}s:21:\"keyAuthenticateFinish\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"object\";s:8:\"required\";a:4:{i:0;s:5:\"appId\";i:1;s:7:\"account\";i:2;s:6:\"secret\";i:3;s:20:\"registrationResponse\";}s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"appId\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"User
  facing application id (FQDN)\";s:7:\"example\";s:19:\"https://example.com\";}s:7:\"account\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:33:\"handle,
  uuid, account primary key\";s:7:\"example\";s:8:\"superman\";}s:6:\"secret\";O:8:\"stdClass\":3:{s:4:\"type\";s:6:\"string\";s:11:\"description\";s:41:\"Secret
  used to salt u2fId in API Database\";s:7:\"example\";s:0:\"\";}s:12:\"authResponse\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"registrationResponse
  object\";s:4:\"$ref\";s:36:\"#/definitions/authenticationResponse\";}}}s:22:\"authenticationResponse\";O:8:\"stdClass\":4:{s:4:\"type\";s:6:\"object\";s:11:\"description\";s:96:\"Authentication
  Response generated by U2F device using u2f-api.js and challenge received from API\";s:8:\"required\";a:3:{i:0;s:9:\"keyHandle\";i:1;s:10:\"clientData\";i:2;s:13:\"signatureData\";}s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"keyHandle\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"clientData\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"signatureData\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}"
...
