---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":5:{s:5:\"title\";s:22:\"Movie Storage REST API\";s:11:\"description\";s:37:\"Movie
  Storage REST API documentation \";s:7:\"version\";s:5:\"1.0.0\";s:14:\"termsOfService\";s:0:\"\";s:7:\"contact\";O:8:\"stdClass\":1:{s:5:\"email\";s:16:\"ddewid@gmail.com\";}}"
basePath: /
paths:
  /movies:
    post:
      tags:
      - Movies
      summary: Fetch new movie from external API and add to database
      description: Returned movie with additional information fetched from external
        API.
      parameters:
      - name: payload
        required: true
        in: body
        description: Movie title
        schema:
          type: object
          required:
          - title
          properties:
            title:
              type: string
              example: Django
      responses:
        201:
          description: Returns movie object with additional data fetched from external
            API
          schema:
            $ref: '#/definitions/MovieResponse'
        400:
          description: Validation error.
          schema:
            $ref: '#/definitions/MovieBadRequest'
        404:
          description: Movie was not found.
          schema:
            $ref: '#/definitions/MovieNotFound'
    get:
      tags:
      - Movies
      summary: Fetch movie list.
      description: Fetch movie list with additional data from database
      parameters:
      - in: query
        name: sort
        type: string
        description: title, -title
        default: title
      - in: query
        name: offset
        type: number
        default: 0
      - in: query
        name: limit
        type: number
        default: 20
      responses:
        200:
          description: Returns 20 movies by default.
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '#/definitions/MovieResponse'
              total:
                type: number
                example: 1
              limit:
                type: number
                example: 20
              offset:
                type: number
                example: 0
  /movies/{id}:
    get:
      tags:
      - Movies
      summary: Get movie information.
      description: Returns movie information
      parameters:
      - in: path
        name: id
        type: string
        example: 5b019c90daa3f623f0d6e76c
      responses:
        200:
          description: Movie succesfully fetched.
          schema:
            $ref: '#/definitions/MovieResponse'
        404:
          description: Movie Not Found.
          schema:
            $ref: '#/definitions/MovieNotFound'
  /comments:
    post:
      tags:
      - Comments
      summary: Add comment to a movie.
      description: Returns newly created comment.
      parameters:
      - in: body
        name: payload
        required: true
        description: Comment text body and movieId.
        schema:
          type: object
          required:
          - movieId
          - body
          properties:
            movieId:
              type: string
              example: 5b0190b924914f0ece0693a9
            body:
              type: string
              example: Nice movie
      responses:
        201:
          description: Comment succesfully created.
          schema:
            $ref: '#/definitions/CommentResponse'
        400:
          description: Validation error.
          schema:
            $ref: '#/definitions/CommentBadRequest'
        404:
          description: Movie provided in body was not found in database.
          schema:
            $ref: '#/definitions/MovieNotFound'
    get:
      tags:
      - Comments
      summary: Fetch list of comments.
      parameters:
      - in: query
        name: movieId
        required: false
        description: Filter comments by movieId.
        type: string
      responses:
        200:
          description: Returns comments array.
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '#/definitions/CommentResponse'
              total:
                type: number
                example: 1
              limit:
                type: number
                example: 20
              offset:
                type: number
                example: 0
        400:
          description: Validation error
        404:
          description: Movie provided in query was not found in database.
          schema:
            $ref: '#/definitions/MovieNotFound'
  /comments/{id}:
    get:
      tags:
      - Comments
      summary: Get comment information.
      description: Returns comment information
      parameters:
      - in: path
        name: id
        type: string
        example: 5b01a1061697f828dd0ab946
      responses:
        200:
          description: Comment succesfully fetched.
          schema:
            $ref: '#/definitions/CommentResponse'
        404:
          description: Comment Not Found.
          schema:
            $ref: '#/definitions/CommentNotFound'
produces:
- application/json
schemes:
- https
- http
definitions: !php/object "O:8:\"stdClass\":6:{s:13:\"MovieResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5b019c90daa3f623f0d6e76c\";}s:5:\"title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"Django\";}s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":25:{s:5:\"Title\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"Django\";}s:4:\"year\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"1966\";}s:5:\"Rated\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"NOT
  RATED\";}s:8:\"Released\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"01
  Dec 1966\";}s:7:\"Runtime\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:2:\"92\";}s:5:\"Genre\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Action,
  Western\";}s:8:\"Director\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Sergio
  Corbucci\";}s:6:\"Writer\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:251:\"Sergio
  Corbucci (story), Bruno Corbucci (story), Sergio Corbucci (screenplay), Bruno Corbucci
  (screenplay), Franco Rossetti (screenplay in collaboration with), Piero Vivarelli
  (screenplay in collaboration with), Geoffrey Copleston (English version by)\";}s:6:\"Actors\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:61:\"Franco
  Nero, Jos\xE9 B\xF3dalo, Loredana Nusciak, \xC1ngel \xC1lvarez\";}s:4:\"Plot\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:164:\"A
  coffin-dragging gunslinger and a half-breed prostitute become embroiled in a bitter
  feud between a Klan of Southern racists and a band of Mexican Revolutionaries.\";}s:8:\"Language\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"Italian\";}s:7:\"Country\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"Italy,
  Spain\";}s:6:\"Awards\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"N/A\";}s:6:\"Poster\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:145:\"https://ia.media-imdb.com/images/M/MV5BMTA4M2NmZTgtOGJlOS00NDExLWE4MzItNWQxNTRmYzIzYmM0L2ltYWdlL2ltYWdlXkEyXkFqcGdeQXVyNjc1NTYyMjg@._V1_SX300.jpg\";}s:7:\"Ratings\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"Source\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:23:\"Internet
  Movie Database\";}s:5:\"Value\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"7.3/10\";}}}}s:9:\"Metascore\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"N/A\";}s:10:\"imdbRating\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:3:\"7.3\";}s:9:\"imdbVotes\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:6:\"20,810\";}s:6:\"imdbID\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"tt0060315\";}s:4:\"Type\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:5:\"movie\";}s:3:\"DVD\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"24
  Sep 2002\";}s:9:\"BoxOffice\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"$25,097\";}s:10:\"Production\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Rialto
  Pictures\";}s:7:\"Website\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:36:\"http://www.rialtopictures.com/django\";}s:8:\"Response\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:4:\"True\";}}}}}s:15:\"CommentResponse\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:3:\"_id\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5b01a1061697f828dd0ab946\";}s:7:\"movieId\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:24:\"5b019c90daa3f623f0d6e76c\";}s:4:\"body\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:10:\"Nice
  movie\";}}}s:13:\"MovieNotFound\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"statusCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:404;}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"Not
  Found\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"Movie
  Not Found\";}}}s:15:\"CommentNotFound\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"statusCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:404;}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:9:\"Not
  Found\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:17:\"Comment
  Not Found\";}}}s:15:\"MovieBadRequest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"statusCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:400;}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"Bad
  Request\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"Validation
  Error\";}s:7:\"details\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:17:\"title
  is required\";}}}s:17:\"CommentBadRequest\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"statusCode\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:7:\"example\";i:400;}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"Bad
  Request\";}s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"Validation
  Error\";}s:7:\"details\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:16:\"body
  is required\";}}}}"
...
