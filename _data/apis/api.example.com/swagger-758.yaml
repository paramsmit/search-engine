---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":4:{s:7:\"version\";s:5:\"1.0.0\";s:5:\"title\";s:27:\"Dexter
  server specification\";s:11:\"description\";s:30:\"Documentation of Dexter server\";s:14:\"termsOfService\";s:24:\"http://swagger.io/terms/\";}"
host:
- localhost:4982
basePath: /
paths:
  /api/isServerAlive:
    get:
      tags:
      - Server managing v1
      description: Is server Alive
      operationId: isServerAlive
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /defect:
    get:
      tags:
      - Server managing v1
      description: Main page connection
      operationId: checkConnecton
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /api/isServerAlive2:
    get:
      tags:
      - Server managing v1
      description: Is server alive 2
      operationId: isServerAlive2
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /api/analysis/snapshot/source:
    get:
      tags:
      - Server managing v1
      description: Snapshot source
      operationId: snapshotSource
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /api/version/false-alarm:
    get:
      tags:
      - SharedDataVersion
      description: Get false alarm version
      operationId: falseAlarmVersion
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/isServerAlive:
    get:
      tags:
      - Server managing v1
      description: V1 is server alive
      operationId: v1IsServerAlive
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /api/v2/server-status:
    get:
      tags:
      - Server managing v1
      description: Server Status
      operationId: serverStatus
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /api/v2/server-detailed-status:
    get:
      tags:
      - Server managing v1
      description: Detailed Server Status
      operationId: detailedServerStatus
      produces:
      - application/json
      parameters:
      - name: Request parameter
        in: body
        description: Sample parameter
        required: false
      responses: []
  /api/v1/accounts/checkLogin:
    get:
      tags:
      - Server managing v1
      description: Check Login
      operationId: checkLogin
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/projectName:
    get:
      tags:
      - Server managing v1
      description: Return project name
      operationId: projectName
      produces:
      - application/json
      parameters: []
      responses: []
  /api/v1/accounts/userId:
    get:
      tags:
      - Managing accounts v1
      description: Return Dexter userId
      operationId: getUserID
      produces:
      - application/json
      parameters:
      - []
      responses: []
      security:
      - Secured: []
      securityDefinitions:
        basicAuth:
          type: basic
  /api/v1/accounts/checkWebLogin:
    get:
      tags:
      - Managing accounts v1
      description: Check Web Login
      operationId: checkWebLogin
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/logout:
    get:
      tags:
      - Managing accounts v1
      description: Logout
      operationId: logout
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/accountCount:
    get:
      tags:
      - Managing accounts v1
      description: Account count
      operationId: accountCount
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/findAll:
    get:
      tags:
      - Managing accounts v1
      description: Find All
      operationId: findAll
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/findById/:userId:
    get:
      tags:
      - Managing accounts v1
      description: 'Find by id: User ID'
      operationId: findByIdUserId
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/hasAccount/:userId:
    get:
      tags:
      - Managing accounts v1
      description: 'Has account: User ID'
      operationId: hasAccountUserId
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/checkAdmin:
    get:
      tags:
      - Managing accounts v1
      description: Check admin
      operationId: checkAdmin
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/add:
    post:
      tags:
      - Managing accounts v1
      description: Account add
      operationId: accountAdd
      produces:
      - application/json
      parameters: []
      responses: []
  /api/v1/accounts/webAdd:
    post:
      tags:
      - Managing accounts v1
      description: Web add
      operationId: webAdd
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/update/:userId:
    post:
      tags:
      - Managing accounts v1
      description: Account update user ID
      operationId: accountUpdateUserId
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/webUpdate/:userId:
    post:
      tags:
      - Managing accounts v1
      description: Account webUpdate user ID
      operationId: webUpdateUserId
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/remove/:userId:
    delete:
      tags:
      - Managing accounts v1
      description: Remove user ID
      operationId: removeUserId
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/accounts/removeAll:
    delete:
      tags:
      - Managing accounts v1
      description: Remove all
      operationId: removeAll
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/server:
    delete:
      tags:
      - Server managing v1
      description: Server stop
      operationId: serverStop
      produces:
      - application/json
      parameters:
      - []
      responses: []
  /api/v1/dexter-db:
    delete:
      tags:
      - Server managing v1
      description: dexter-db
      operationId: removeAll
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/analysis/result:
    post:
      tags:
      - Analysis Result
      description: Analysis result
      operationId: analysisResult
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/analysis/snapshot/source:
    post:
      tags:
      - Analysis Result
      description: Snapshot source
      operationId: snapshotSource
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/analysis/snapshot/checkSourceCode:
    get:
      tags:
      - Analysis Result
      description: Check source code
      operationId: checkSourceCode
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v3/analysis/snapshot/sourcecode:
    post:
      tags:
      - Analysis Result
      description: Get snapshot source code V3
      operationId: getSnapshotSourceCodeV3
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v3/defect/count:
    get:
      tags:
      - Analysis Result
      description: V3 defect count
      operationId: defectCountV3
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/analysis/snapshot/sourcecode:
    post:
      tags:
      - Analysis Result
      description: Get snapshot source code
      operationId: getSnapshotSourceCodeV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/snapshot/occurence-in-file:
    post:
      tags:
      - Analysis Result
      description: Get occurency by file name in snapshot
      operationId: getOccurencyByFilenameInSnapshotV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/filter/false-alarm:
    get:
      tags:
      - Defect Filter
      description: False Alarm
      operationId: falseAlarm
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/filter/false-alarm-list:
    get:
      tags:
      - Defect Filter
      description: False Alarm List
      operationId: falseAlarmList
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/filter/delete-false-alarm:
    post:
      tags:
      - Defect Filter
      description: Delete false alarm
      operationId: deleteFalseAlarm
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/defect/gid:
    post:
      tags:
      - Defect
      description: Get global gid
      operationId: globalGid
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/defect/deleteAll:
    delete:
      tags:
      - Defect
      description: Delete all
      operationId: deleteAll
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/dismiss:
    post:
      tags:
      - Defect
      description: Defect dismiss
      operationId: defectDismiss
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/moduleAndFile:
    get:
      tags:
      - Defect
      description: Defect module and file
      operationId: moduleAndFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/markFalseDefect:
    post:
      tags:
      - Defect
      description: Mark false defect
      operationId: markFalseDefect
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/markDefect:
    post:
      tags:
      - Defect
      description: Mark defect
      operationId: markDefect
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/changeFix:
    post:
      tags:
      - Defect
      description: Change fix
      operationId: changeFix
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/status/project:
    get:
      tags:
      - Defect
      description: Status project
      operationId: statusProject
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/status/modulePath:
    get:
      tags:
      - Defect
      description: Defect status module Path
      operationId: modulePath
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/status/fileName:
    get:
      tags:
      - Defect
      description: Status filename
      operationId: statusFilename
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect/count:
    get:
      tags:
      - Defect
      description: Defect count
      operationId: defectCount
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/webDefectCount:
    get:
      tags:
      - Defect
      description: Web defect count
      operationId: webDefectCount
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/occurence/:did:
    get:
      tags:
      - Defect
      description: Occurence did
      operationId: occurenceDid
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/occurenceInFile:
    get:
      tags:
      - Defect
      description: Occurence in file
      operationId: occurenceInFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/defect:
    get:
      tags:
      - Defect
      description: V1 Defect
      operationId: v1Defect
      produces:
      - application/json
      parameters: []
      responses: []
  /api/v1/snapshot/snapshotList:
    get:
      tags:
      - Snapshot Defect Map V1
      description: Snapshot List
      operationId: snapshotList
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/snapshot/showSnapshotDefectPage:
    get:
      tags:
      - Snapshot Defect Map V1
      description: Show snapshot defect page
      operationId: snapshotDefectPage
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/snapshot/occurenceInFile:
    get:
      tags:
      - Snapshot Defect Map V1
      description: Occurence in file
      operationId: occurenceInFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/metrics:
    get:
      tags:
      - Code metrics
      description: Code Metrics
      operationId: metrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/metrics-and-defect:
    get:
      tags:
      - Code metrics
      description: Metrics and Defect
      operationId: metricsAndDefect
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/metrics-and-defect-limit:
    get:
      tags:
      - Code metrics
      description: Metrics and defect limit
      operationId: metricsAndDefectLimit
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/checker-and-defect:
    get:
      tags:
      - Code metrics
      description: Checker and defect
      operationId: checkerAndDefect
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/developer-and-file:
    get:
      tags:
      - Code metrics
      description: Developer and file
      operationId: devAndFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/config/defect-group:
    get:
      tags:
      - SharedDataVersion
      description: Get defect group
      operationId: getDefectGroup2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/config/defect-group/:groupName:
    get:
      tags:
      - SharedDataVersion
      description: Get defect group
      operationId: getDefectGroup
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/config/defect-group-id/:groupName:
    get:
      tags:
      - SharedDataVersion
      description: GetDefectGroupId
      operationId: devAndFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/config/defect-group/:id:
    delete:
      tags:
      - SharedDataVersion
      description: Delete defect group
      operationId: deleteDefectGroup
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/config/code/:codeKey:
    get:
      tags:
      - SharedDataVersion
      description: Get codes
      operationId: getCodes
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/config/:pluginName:
    post:
      tags:
      - Latest Config Json
      description: Get checker config json file
      operationId: checkerConfigJsonFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/total:
    gett:
      tags:
      - Code metrics for Dexter client
      description: Get total code metrics
      operationId: getTotalCodeMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get code metrics from the client
      operationId: getMetricsFromClient
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/ccList:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get code metrics CC list
      operationId: getMetricsCCList
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/sloc:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get function metric for sloc
      operationId: getFunctionMetricForSloc
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/topCodeMetrics:
    post:
      tags:
      - Code metrics for Dexter client
      description: Get toop code metrics
      operationId: getTopMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/topCC:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get top CC for code metrics
      operationId: getTopCC
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/topMethod:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get top method for code metrics
      operationId: getTopMethod
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/topClass:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get top class for code metrics
      operationId: getTopClassForCodeMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/topSloc:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get top Sloc for code metrics
      operationId: getTopSlocForCodeMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/threshold:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get code metrics threshold
      operationId: getCodeMetricsThreshold
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v1/codeMetrics/quantity:
    get:
      tags:
      - Code metrics for Dexter client
      description: Get code metrics quantity
      operationId: getMetricsQuantity
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/analysis/result:
    post:
      tags:
      - API Version 2
      description: Add V2
      operationId: v2AnalysisResult
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect:
    get:
      tags:
      - API Version 2
      description: Get defect by module and file V2
      operationId: V2GetDefectByModuleAndFile
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect/:did:
    get:
      tags:
      - API Version 2
      description: 'Get defect by module and file for did V2 '
      operationId: V2GetDefectByModuleAndFileForDid
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/snapshot/snapshotList:
    get:
      tags:
      - Snapshot Defect Map V2
      description: Get all snapshot V2
      operationId: getAllSnapshotV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/snapshot/security:
    get:
      tags:
      - Snapshot Defect Map V2
      description: 'Get snapshot defect for security '
      operationId: getSnapshotDefectForSecurity
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/snapshot/:snapshotId:
    get:
      tags:
      - Snapshot Defect Map V2
      description: 'Get defect list in snapshot V2 '
      operationId: getDefectListInSnapshotV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/snapshot/:snapshotId/:did:
    get:
      tags:
      - Snapshot Defect Map V2
      description: Get defect list in snapshot for did
      operationId: getDefectListInSnapshotForDid
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect/status/project:
    get:
      tags:
      - Defect V2
      description: Get project defect status  V2
      operationId: getProjectDefectStatusV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect/status/modulePath:
    get:
      tags:
      - Defect V2
      description: Get modul defect status V2
      operationId: getModuleDefectStatusV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect/status/fileName:
    get:
      tags:
      - Defect V2
      description: Get file defect status V2
      operationId: getFileDefectStatusV2
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect/security:
    get:
      tags:
      - Defect V2
      description: Get defect for security
      operationId: getDefectForSecurity
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect/deleteAll:
    post:
      tags:
      - Defect V2
      description: Delete defect
      operationId: deleteDefect
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/functionMetrics/:
    get:
      tags:
      - Defect V2
      description: Get total function metrics
      operationId: getTotalFunctionMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/functionMetrics/All:
    get:
      tags:
      - Defect V2
      description: Get all function metrics
      operationId: getAllFunctionMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/functionMetrics:
    post:
      tags:
      - Defect V2
      description: Get function metrics
      operationId: getFunctionMetrics
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/2/codeMetrics/slocList:
    get:
      tags:
      - Defect V2
      description: Get code metrics for sloc
      operationId: getCodeMetricsForSloc
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/security/snapshotAll:
    get:
      tags:
      - Export security report
      description: Get snapshot defect for security
      operationId: getSnapshotDefectForSecurity
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/security/defectAll:
    get:
      tags:
      - Export security report
      description: Get defect for security
      operationId: getDefectForSecurity
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defectAll:
    get:
      tags:
      - For CSV file
      description: Get defect for CSV
      operationId: getDefectForCSV
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/snapshotAll:
    get:
      tags:
      - For CSV file
      description: Get snapshot defect for CSV
      operationId: getSnapshotDefectForCSV
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/module-path-list:
    delete:
      tags:
      - For Administrator
      description: Delete module path list
      operationId: deleteModulePathList
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/defect-count:
    get:
      tags:
      - For Administrator
      description: Get defect count
      operationId: getDefectCount
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/detailed-defect-count:
    get:
      tags:
      - For Administrator
      description: Get detailed defect count
      operationId: getDetailedDefectCount
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/user-count:
    get:
      tags:
      - For Administrator
      description: Get user count
      operationId: getUserCount
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v2/user-list:
    get:
      tags:
      - For Administrator
      description: Get user list
      operationId: getUserList
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v3/projectName:
    get:
      tags:
      - API VERSION 3
      description: Get project name v3
      operationId: getProjectNameV3
      produces:
      - application/json
      parameters: []
      responses: []
  /api/v3/analysis/result:
    post:
      tags:
      - API VERSION 3
      description: Add V3
      operationId: addV3
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
  /api/v3/did-list:
    delete:
      tags:
      - API VERSION 3
      description: Delete did list
      operationId: deleteDidList
      produces:
      - application/json
      parameters:
      - name: Login and Password
        in: body
        description: Dexter login and password
        required: true
        schema:
          $ref: '#/definitions/create'
      responses: []
produces:
- application/json
schemes:
- http
definitions: !php/object "O:8:\"stdClass\":5:{s:6:\"create\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"userId\";O:8:\"stdClass\":2:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";}s:7:\"userPwd\";O:8:\"stdClass\":2:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";}}}s:9:\"response1\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"jobID\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"23423456543\";}s:7:\"request\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"schema\";s:7:\"example\";O:8:\"stdClass\":2:{s:7:\"eventId\";s:12:\"mathmaticial\";s:14:\"numberRequired\";i:500;}}}}s:8:\"response\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"jobID\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:11:\"12321432423\";}}}s:6:\"delete\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"jobID\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:12:\"234344234234\";}s:6:\"status\";O:8:\"stdClass\":3:{s:8:\"required\";b:1;s:4:\"type\";s:6:\"string\";s:7:\"example\";s:7:\"deleted\";}}}s:8:\"400error\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"message\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:7:\"example\";s:15:\"400
  Bad Request\";}}}}"
...
