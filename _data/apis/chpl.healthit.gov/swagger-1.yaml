---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":6:{s:11:\"description\";s:35:\"Certified Health
  IT Product Listing\";s:7:\"version\";s:5:\"8.1.0\";s:5:\"title\";s:4:\"CHPL\";s:14:\"termsOfService\";s:27:\"http://terms/of/service.url\";s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"name\";s:13:\"CHPL@ainq.com\";}s:7:\"license\";O:8:\"stdClass\":2:{s:4:\"name\";s:12:\"License
  Text\";s:3:\"url\";s:58:\"https://github.com/chpladmin/chpl-api/blob/staging/LICENSE\";}}"
host: chpl.healthit.gov
basePath: /rest
paths:
  /acbs/:
    get:
      tags:
      - certification-body-controller
      summary: List all certification bodies (ACBs).
      description: Setting the 'editable' parameter to true will return all ACBs that
        the logged in user has edit permissions on.Setting 'showDeleted' to true will
        include even those ACBs that have been deleted. The logged in user must have
        ROLE_ADMIN to see deleted ACBs. The default behavior of this service is to
        list all of the ACBs in the system that are not deleted.
      operationId: getAcbsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: editable
        in: query
        description: editable
        required: false
        type: boolean
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationBodyResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/add_user:
    post:
      tags:
      - certification-body-controller
      summary: Add a user to an ACB.
      description: The logged in user must have ROLE_ADMIN or ROLE_ACB_ADMIN and have
        administrative authority on the  specified ACB. It is recommended to pass
        'ADMIN' in as the 'authority' field to guarantee maximum compatibility although
        'READ' and 'DELETE' are also valid choices.  Note that this method gives special
        permission on a specific ACB and is not the  equivalent of assigning the ROLE_ACB_ADMIN
        role. Please view /users/grant_role  request for more information on that.
      operationId: addUserToAcbUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: updateRequest
        description: updateRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateUserAndAcbRequest'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/create:
    post:
      tags:
      - certification-body-controller
      summary: Create a new ACB.
      description: The logged in user must have ROLE_ADMIN to create a new ACB.
      operationId: createAcbUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: acbInfo
        description: acbInfo
        required: true
        schema:
          $ref: '#/definitions/CertificationBody'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationBody'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/update:
    post:
      tags:
      - certification-body-controller
      summary: Update an existing ACB.
      description: The logged in user must either have ROLE_ADMIN or have ROLE_ACB_ADMIN  to
        update an existing ACB.
      operationId: updateAcbUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: acbInfo
        description: acbInfo
        required: true
        schema:
          $ref: '#/definitions/CertificationBody'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationBody'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/{acbId}:
    get:
      tags:
      - certification-body-controller
      summary: Get details about a specific certification body (ACB).
      description: The logged in user must either have ROLE_ADMIN or have ROLE_ACB_ADMIN
        or ROLE_ACB_STAFF  for the ACB with the provided ID.
      operationId: getAcbByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: acbId
        in: path
        description: acbId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationBody'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/{acbId}/delete:
    post:
      tags:
      - certification-body-controller
      summary: Delete an ACB.
      description: The logged in user must have ROLE_ADMIN.
      operationId: deleteAcbUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: acbId
        in: path
        description: acbId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/{acbId}/remove_user/{userId}:
    post:
      tags:
      - certification-body-controller
      summary: Remove user permissions from an ACB.
      description: The logged in user must have ROLE_ADMIN or ROLE_ACB_ADMIN and have
        administrative authority on the  specified ACB. The user specified in the
        request will have all authorities  removed that are associated with the specified
        ACB.
      operationId: deleteUserFromAcbUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: acbId
        in: path
        description: acbId
        required: true
        type: integer
        format: int64
      - name: userId
        in: path
        description: userId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/{acbId}/undelete:
    post:
      tags:
      - certification-body-controller
      summary: Restore a deleted ACB.
      description: ACBs are unique in the CHPL in that they can be restored after
        a delete. The logged in user must have ROLE_ADMIN.
      operationId: undeleteAcbUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: acbId
        in: path
        description: acbId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /acbs/{acbId}/users:
    get:
      tags:
      - certification-body-controller
      summary: List users with permissions on a specified ACB.
      description: The logged in user must have ROLE_ADMIN or have administrative
        or read authority on the  specified ACB.
      operationId: getUsersUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: acbId
        in: path
        description: acbId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PermittedUserResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/acbs:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for certification bodies.
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. Only users calling this API with ROLE_ADMIN
        may set the 'showDeleted' flag to true. Those users are allowed to see activity
        for all certification bodies including that have been deleted. The default
        behavior is to show all activity for non-deleted ACBs.
      operationId: activityForACBsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/acbs/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific certification body.
      description: 'Users can optionally specify ''start'' and ''end'' parameters
        to restrict the date range of the results. Only users calling this API with
        ROLE_ADMIN may set the ''showDeleted'' flag to true and should do so if the
        certification body specified in the path has been deleted. '
      operationId: activityForACBByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/announcements:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for all announcements
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return announcement
        activity across all dates.
      operationId: activityForAnnoucementsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/announcements/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific announcement
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return all activity
        for the specified announcement across all dates.
      operationId: activityForAnnouncementByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/api_keys:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for all API keys
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return API key activity
        across all dates.
      operationId: activityForApiKeysUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/atls:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for testing labs.
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. Only users calling this API with ROLE_ADMIN
        may set the 'showDeleted' flag to true. Those users are allowed to see activity
        for all testing labs including that have been deleted. The default behavior
        is to show all activity for non-deleted ATLs.
      operationId: activityforATLsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/atls/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific testing lab.
      description: 'Users can optionally specify ''start'' and ''end'' parameters
        to restrict the date range of the results. Only users calling this API with
        ROLE_ADMIN may set the ''showDeleted'' flag to true and should do so if the
        testing lab specified in the path has been deleted. '
      operationId: activityForATLByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/certifications:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for all certifications
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for all certifications across all dates.
      operationId: activityForCertificationsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/certifications/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific certification
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for the specified certification across all dates.
      operationId: activityForCertificationByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/certified_products:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for certified products
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return certified
        product activity across all dates.
      operationId: activityForCertifiedProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/certified_products/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific certified product
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for the specified certified product across all dates.
      operationId: activityForCertifiedProductByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/developers:
    get:
      tags:
      - activity-controller
      summary: Get auditable data about all developers
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return the all developer
        activity across all dates.
      operationId: activityForDevelopersUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/developers/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific developer
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for the specified developer across all dates.
      operationId: activityForDevelopersUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/pending_certified_products:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for all pending certified products
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for all pending certified products across all dates.
      operationId: activityForPendingCertifiedProductsUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/pending_certified_products/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific pending certified product
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for the specified pending certified product across all dates.
      operationId: activityForPendingCertifiedProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/products:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for all products
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for all products across all dates.
      operationId: activityForProductsUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/products/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific product
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for the specified product across all dates.
      operationId: activityForProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/user_activities:
    get:
      tags:
      - activity-controller
      summary: Track the actions of all users in the system
      description: The authenticated user calling this method must have ROLE_ADMIN.
        Users can optionally specify 'start' and 'end' parameters to restrict the
        date range of the results. The default behavior is to return the all user
        activity across all dates.
      operationId: activityByUserUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserActivity'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/user_activities/{id}:
    get:
      tags:
      - activity-controller
      summary: Track the actions of a specific user in the system
      description: The authenticated user calling this method must have ROLE_ADMIN.
        Users can optionally specify 'start' and 'end' parameters to restrict the
        date range of the results. The default behavior is to return the specified
        user's activity across all dates.
      operationId: activityByUserUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/users:
    get:
      tags:
      - activity-controller
      summary: Get auditable data about all CHPL user accounts
      description: API users can optionally specify to only get activity a certain
        number of days into the past with the 'lastNDays' parameter. The default behavior
        is to return activity for all CHPL user across all dates.
      operationId: activityForUsersUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/users/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data about a specific CHPL user account
      description: API users can optionally specify to only get activity a certain
        number of days into the past with the 'lastNDays' parameter. The default behavior
        is to return activity for the specified CHPL user across all dates.
      operationId: activityForUsersUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/versions:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for all versions
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for all versions across all dates.
      operationId: activityForVersionsUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /activity/versions/{id}:
    get:
      tags:
      - activity-controller
      summary: Get auditable data for a specific version
      description: Users can optionally specify 'start' and 'end' parameters to restrict
        the date range of the results. The default behavior is to return activity
        for the specified version across all dates.
      operationId: activityForVersionsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - name: start
        in: query
        description: start
        required: false
        type: integer
        format: int64
      - name: end
        in: query
        description: end
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityEvent'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /announcements/:
    get:
      tags:
      - announcement-controller
      summary: Get all announcements.
      description: The announcement listing is open to anyone, however announcements
        may be both public and private and  only public announcements will be returned
        if a non-authenticated user calls this method.  Both public and private announcements
        will be returned to an authenticated user. Scheduled future announcements
        can be retrieved by setting the 'future' flag to true  and only CHPL users
        with ROLE_ADMIN will be granted access to that data.
      operationId: getAnnouncementsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: future
        in: query
        description: future
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AnnouncementResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /announcements/create:
    post:
      tags:
      - announcement-controller
      summary: Create a new announcement.
      description: Only CHPL users with ROLE_ADMIN are able to create announcements.
      operationId: createAnnouncementUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: announcementInfo
        description: announcementInfo
        required: true
        schema:
          $ref: '#/definitions/Announcement'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Announcement'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /announcements/update:
    post:
      tags:
      - announcement-controller
      summary: Change an existing announcement.
      description: Only CHPL users with ROLE_ADMIN are able to update announcements.
      operationId: updateAnnouncementUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: announcementInfo
        description: announcementInfo
        required: true
        schema:
          $ref: '#/definitions/Announcement'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Announcement'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /announcements/{announcementId}:
    get:
      tags:
      - announcement-controller
      summary: Get a specific announcement.
      operationId: getAnnouncementByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: announcementId
        in: path
        description: announcementId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Announcement'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /announcements/{announcementId}/delete:
    post:
      tags:
      - announcement-controller
      summary: Delete an existing announcement.
      description: Only CHPL users with ROLE_ADMIN are able to delete announcements.
      operationId: deleteAnnouncementUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: announcementId
        in: path
        description: announcementId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/:
    get:
      tags:
      - testing-lab-controller
      summary: List all testing labs (ATLs).
      description: Setting the 'editable' parameter to true will return all ATLs that
        the logged in user has edit permissions on.Setting 'showDeleted' to true will
        include even those ATLs that have been deleted. The logged in user must have
        ROLE_ADMIN to see deleted ATLs. The default behavior of this service is to
        list all of the ATLs in the system that are not deleted.
      operationId: getAtlsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: editable
        in: query
        description: editable
        required: false
        type: boolean
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TestingLabResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/add_user:
    post:
      tags:
      - testing-lab-controller
      summary: Add a user to an ATL.
      description: The logged in user must have ROLE_ADMIN or ROLE_ATL_ADMIN and have
        administrative authority on the  specified ATL. It is recommended to pass
        'ADMIN' in as the 'authority' field to guarantee maximum compatibility although
        'READ' and 'DELETE' are also valid choices.  Note that this method gives special
        permission on a specific ATL and is not the  equivalent of assigning the ROLE_ATL_ADMIN
        role. Please view /users/grant_role  request for more information on that.
      operationId: addUserToAtlUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: updateRequest
        description: updateRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateUserAndAtlRequest'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/create:
    post:
      tags:
      - testing-lab-controller
      summary: Create a new testing lab.
      description: The logged in user must have ROLE_ADMIN to create a new testing
        lab.
      operationId: createUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: atlInfo
        description: atlInfo
        required: true
        schema:
          $ref: '#/definitions/TestingLab'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TestingLab'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/update:
    post:
      tags:
      - testing-lab-controller
      summary: Update an existing ATL.
      description: The logged in user must either have ROLE_ADMIN or have administrative
        authority on the testing lab whose data is being updated.
      operationId: updateUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: atlInfo
        description: atlInfo
        required: true
        schema:
          $ref: '#/definitions/TestingLab'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TestingLab'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/{atlId}:
    get:
      tags:
      - testing-lab-controller
      summary: Get details about a specific testing lab (ATL).
      description: The logged in user must have ROLE_ADMIN or have either read oradministrative
        authority on the testing lab with the ID specified.
      operationId: getAtlByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: atlId
        in: path
        description: atlId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TestingLab'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/{atlId}/delete:
    post:
      tags:
      - testing-lab-controller
      summary: Delete an ATL.
      description: The logged in user must have ROLE_ADMIN.
      operationId: deleteAtlUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: atlId
        in: path
        description: atlId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/{atlId}/remove_user/{userId}:
    post:
      tags:
      - testing-lab-controller
      summary: Remove user permissions from an ATL.
      description: The logged in user must have ROLE_ADMIN or ROLE_ATL_ADMIN and have
        administrative authority on the  specified ATL. The user specified in the
        request will have all authorities  removed that are associated with the specified
        ATL.
      operationId: deleteUserFromAtlUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: atlId
        in: path
        description: atlId
        required: true
        type: integer
        format: int64
      - name: userId
        in: path
        description: userId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/{atlId}/undelete:
    post:
      tags:
      - testing-lab-controller
      summary: Restore a deleted ATL.
      description: ATLs are unique in the CHPL in that they can be restored after
        a delete. The logged in user must have ROLE_ADMIN.
      operationId: undeleteAtlUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: atlId
        in: path
        description: atlId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /atls/{atlId}/users:
    get:
      tags:
      - testing-lab-controller
      summary: List users with permissions on a specified ATL.
      description: The logged in user must have ROLE_ADMIN or have administrative
        or read authority on the  specified ATL.
      operationId: getUsersUsingGET_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: atlId
        in: path
        description: atlId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PermittedUserResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /auth/authenticate:
    post:
      tags:
      - authentication-controller
      summary: Log in.
      description: Call this method to authenticate a user. The value returned is
        that user's token which must be passed on all subsequent requests in the Authorization
        header. Specifically, the Authorization header must have a value of 'Bearer
        token-that-gets-returned'.
      operationId: authenticateJSONUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: credentials
        description: credentials
        required: true
        schema:
          $ref: '#/definitions/LoginCredentials'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /auth/change_password:
    post:
      tags:
      - authentication-controller
      summary: Change password.
      description: Change the logged in user's password as long as the old password
        passed in matches what is stored in the database.
      operationId: changePasswordUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /auth/reset_password:
    post:
      tags:
      - authentication-controller
      summary: Reset a user's password.
      description: This service generates a new password, saves it to the user's account  and
        sends an email to the address associated with the user's account  containing
        the new password.
      operationId: resetPasswordUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: userInfo
        description: userInfo
        required: true
        schema:
          $ref: '#/definitions/UserResetPasswordJSONObject'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certification_ids/:
    get:
      tags:
      - certification-id-controller
      summary: Retrieves a list of all CMS EHR Certification IDs along with the date
        they were created.
      operationId: getAllUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SimpleCertificationId'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certification_ids/create:
    post:
      tags:
      - certification-id-controller
      summary: Creates a new CMS EHR Certification ID for a collection of products
        if one does not already exist.
      description: Retrieves a CMS EHR Certification ID for a collection of products
        or creates a new one if one does not already exist. Returns a list of basic
        product information, Criteria and CQM calculations, and the associated CMS
        EHR Certification ID if one exists.
      operationId: createCertificationIdUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: ids
        in: query
        description: ids
        required: true
        type: array
        items:
          type: integer
          format: int64
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationIdResults'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certification_ids/search:
    get:
      tags:
      - certification-id-controller
      summary: Retrieves a CMS EHR Certification ID for a collection of products.
      description: Retrieves a CMS EHR Certification ID for a collection of products.
        Returns a list of basic product information, Criteria and CQM calculations,
        and the associated CMS EHR Certification ID if one exists.
      operationId: searchCertificationIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: ids
        in: query
        description: ids
        required: false
        type: array
        items:
          type: integer
          format: int64
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationIdResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certification_ids/verify:
    get:
      tags:
      - certification-id-controller
      summary: Verify whether one or more specific EHR Certification IDs are valid
        or not.
      description: Returns true or false for each EHR Certification ID specified.
      operationId: verifyCertificationIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: ids
        in: query
        description: ids
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationIdVerifyResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - certification-id-controller
      summary: Verify whether one or more specific EHR Certification IDs are valid
        or not.
      description: Returns a boolean value for each EHR Certification ID specified.
      operationId: verifyCertificationIdUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: body
        required: true
        schema:
          $ref: '#/definitions/CertificationIdVerificationBody'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationIdVerifyResults'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certification_ids/{certificationId}:
    get:
      tags:
      - certification-id-controller
      summary: Get information about a specific EHR Certification ID.
      description: Retrieves detailed information about a specific EHR Certification
        ID including the list of products that make it up.
      operationId: getCertificationIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: certificationId
        in: path
        description: certificationId
        required: true
        type: string
      - name: includeCriteria
        in: query
        description: includeCriteria
        required: false
        type: boolean
      - name: includeCqms
        in: query
        description: includeCqms
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertificationIdLookupResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_product_details:
    get:
      tags:
      - search-view-controller
      summary: Get all data about a certified product.
      operationId: getCertifiedProductDetailsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: query
        description: productId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertifiedProductSearchDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products:
    get:
      tags:
      - search-view-controller
      summary: Get basic data about all certified products in the system.
      operationId: getAllCertifiedProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BasicSearchResponse'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/:
    get:
      tags:
      - certified-product-controller
      summary: List all certified products
      description: Default behavior is to return all certified products in the system.  The
        optional 'versionId' parameter filters the certified products to those assigned
        to that version. The 'editable' parameter will return only those certified
        products that the logged in user has permission to edit as  determined by
        ACB roles and authorities. Not all information about  every certified product
        is returned. Call the /details service for more information.
      operationId: getCertifiedProductsByVersionUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: versionId
        in: query
        description: versionId
        required: false
        type: integer
        format: int64
      - name: editable
        in: query
        description: editable
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CertifiedProduct'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/meaningful_use_users/upload:
    post:
      tags:
      - certified-product-controller
      summary: DEPRECATED. Upload a file to update the number of meaningful use users
        for each CHPL Product Number
      description: 'Accepts a CSV file with chpl_product_number and num_meaningful_use_users
        to update the number of meaningful use users for each CHPL Product Number.
        The user uploading the file must have ROLE_ADMIN or ROLE_ONC_STAFF '
      operationId: uploadMeaningfulUseUsersUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: file
        in: formData
        description: file
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MeaningfulUseUserResults'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /certified_products/pending:
    get:
      tags:
      - certified-product-controller
      summary: List pending certified products.
      description: Pending certified products are created via CSV file upload and
        are left in the 'pending' state  until validated and approved by an appropriate
        ACB administrator.
      operationId: getPendingCertifiedProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PendingCertifiedProductResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/pending/confirm:
    post:
      tags:
      - certified-product-controller
      summary: Confirm a pending certified product.
      description: Creates a new certified product in the system based on all of the
        information  passed in on the request. This information may differ from what
        was previously  entered for the pending certified product during upload. It
        will first be validated  to check for errors, then a new certified product
        is created, and the old pending certified product will be removed. ROLE_ACB_ADMIN
        or ROLE_ACB_STAFF  and administrative authority on the ACB is required.
      operationId: confirmPendingCertifiedProductUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: pendingCp
        description: pendingCp
        required: true
        schema:
          $ref: '#/definitions/PendingCertifiedProductDetails'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertifiedProductSearchDetails'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/pending/{pcpId}:
    get:
      tags:
      - certified-product-controller
      summary: List a specific pending certified product.
      operationId: getPendingCertifiedProductByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: pcpId
        in: path
        description: pcpId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PendingCertifiedProductDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/pending/{pcpId}/reject:
    post:
      tags:
      - certified-product-controller
      summary: Reject a pending certified product.
      description: Essentially deletes a pending certified product. ROLE_ACB_ADMIN,
        ROLE_ACB_STAFF  and administrative authority on the ACB is required.
      operationId: rejectPendingCertifiedProductsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: pcpId
        in: path
        description: pcpId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/update:
    post:
      tags:
      - certified-product-controller
      summary: Update an existing certified product.
      description: Updates the certified product after first validating the request.
        The logged in user must have ROLE_ADMIN or ROLE_ACB_ADMIN and have administrative  authority
        on the ACB that certified the product. If a different ACB is passed in as
        part of the request, an ownership change will take place and the logged in  user
        must have ROLE_ADMIN.
      operationId: updateCertifiedProductUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: updateRequest
        description: updateRequest
        required: true
        schema:
          $ref: '#/definitions/CertifiedProductSearchDetails'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertifiedProductSearchDetails'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/upload:
    post:
      tags:
      - certified-product-controller
      summary: Upload a file with certified products
      description: Accepts a CSV file with very specific fields to create pending
        certified products.  The user uploading the file must have ROLE_ACB_ADMIN
        or ROLE_ACB_STAFF  and administrative authority on the ACB(s) specified in
        the file.
      operationId: uploadUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: file
        in: formData
        description: file
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PendingCertifiedProductResults'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /certified_products/{certifiedProductId}/details:
    get:
      tags:
      - certified-product-controller
      summary: Get all details for a specified certified product.
      description: Returns all information in the CHPL related to the specified certified
        product.
      operationId: getCertifiedProductByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: certifiedProductId
        in: path
        description: certifiedProductId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CertifiedProductSearchDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /corrective_action_plan/:
    get:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/>List corrective action
        plans for a certified product.
      description: List all corrective action plans, both open and resolved, for a
        certified product.
      operationId: getCorrectiveActionPlansForCertifiedProductUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: certifiedProductId
        in: query
        description: certifiedProductId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CorrectiveActionPlanResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/create:
    post:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods. <br/>Create a new corrective
        action plan.
      description: The logged in user must have either ROLE_ADMIN or ROLE_ACB_ADMIN
        and administrative  authority on the associated ACB.
      operationId: createUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: createRequest
        description: createRequest
        required: true
        schema:
          $ref: '#/definitions/CorrectiveActionPlanDetails'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CorrectiveActionPlanDetails'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/documentation/{capDocId}:
    get:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/> Download CAP supporting
        documentation.
      description: Download a specific file that was previously uploaded to a corrective
        action plan.
      operationId: getCorrectiveActionPlanDocumentationByIdUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: capDocId
        in: path
        description: capDocId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/documentation/{docId}/delete:
    post:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/>Remove documentation
        from a corrective action plan.
      description: The logged in user must have either ROLE_ADMIN or ROLE_ACB_ADMIN
        and administrative  authority on the associated ACB.
      operationId: deleteDocumentationByIdUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: docId
        in: path
        description: docId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/update:
    post:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/>Update a corrective action
        plan.
      description: The logged in user must have ROLE_ADMIN or ROLE_ACB_ADMIN and administrative
        authority on the ACB associated with the corrective action plan.
      operationId: updateUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: updateRequest
        description: updateRequest
        required: true
        schema:
          $ref: '#/definitions/CorrectiveActionPlanDetails'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CorrectiveActionPlanDetails'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/{capId}:
    get:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/> Get corrective action
        plan details.
      description: Get all of the information about a specific corrective action plan.
        These details  include the presence and associated id's of any uploaded supporting  documentation
        but not the contents of those documents. Use /documentation/{capDocId} to  view
        the files.
      operationId: getCorrectiveActionPlanByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: capId
        in: path
        description: capId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CorrectiveActionPlanDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/{capId}/documentation:
    post:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/>Add documentation to
        an existing CAP.
      description: Upload a file of any kind (current size limit 5MB) as supporting  documentation
        to an existing CAP. The logged in user uploading the file  must have either
        ROLE_ADMIN or ROLE_ACB_ADMIN and administrative  authority on the associated
        ACB.
      operationId: uploadUsingPOST_1
      consumes:
      - multipart/form-data
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: capId
        in: path
        description: capId
        required: true
        type: integer
        format: int64
      - name: file
        in: formData
        description: file
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /corrective_action_plan/{planId}/delete:
    post:
      tags:
      - corrective-action-plan-controller
      summary: DEPRECATED. Use surveillance API methods.<br/>Delete a corrective action
        plan.
      description: The logged in user must have either ROLE_ADMIN or ROLE_ACB_ADMIN
        and administrative  authority on the associated ACB.
      operationId: deleteAcbUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: planId
        in: path
        description: planId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      deprecated: true
  /data/accessibility_standards:
    get:
      tags:
      - search-view-controller
      summary: Get all possible accessibility standard options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getAccessibilityStandardsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/age_ranges:
    get:
      tags:
      - search-view-controller
      summary: Get all possible test participant age ranges in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getAgeRangesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/certification_bodies:
    get:
      tags:
      - search-view-controller
      summary: Get all possible ACBs in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getCertBodyNamesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModel'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/certification_editions:
    get:
      tags:
      - search-view-controller
      summary: Get all possible certificaiton editions in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getEditionNamesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModel'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/certification_statuses:
    get:
      tags:
      - search-view-controller
      summary: Get all possible certification statuses in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getCertificationStatusesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModel'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/classification_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible classifications in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getClassificationNamesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModel'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/developer_statuses:
    get:
      tags:
      - search-view-controller
      summary: Get all possible developer status options in the CHPL
      operationId: getDeveloperStatusesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/developers:
    get:
      tags:
      - search-view-controller
      summary: Get all possible developer names in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getDeveloperNamesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModelStatuses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/education_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible education types in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getEducationTypesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/macra_measures:
    get:
      tags:
      - search-view-controller
      summary: Get all possible macra measure options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getMacraMeasuresUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/nonconformity_status_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible nonconformity status type options in the CHPL
      operationId: getNonconformityStatusTypesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/nonconformity_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible nonconformity type options in the CHPL
      operationId: getNonconformityTypeOptionsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/practice_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible practice types in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getPracticeTypeNamesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModel'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/products:
    get:
      tags:
      - search-view-controller
      summary: Get all possible product names in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getProductNamesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyValueModelStatuses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/qms_standards:
    get:
      tags:
      - search-view-controller
      summary: Get all possible qms standard options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getQmsStandardsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/search_options:
    get:
      tags:
      - search-view-controller
      summary: Get all search options in the CHPL
      description: This returns all of the other /data/{something} results in one
        single response.
      operationId: getPopulateSearchDataUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: simple
        in: query
        description: simple
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PopulateSearchOptions'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/surveillance_requirement_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible surveillance requirement type options in the CHPL
      operationId: getSurveillanceRequirementTypesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/surveillance_requirements:
    get:
      tags:
      - search-view-controller
      summary: Get all possible surveillance requirement options in the CHPL
      operationId: getSurveillanceRequirementOptionsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SurveillanceRequirementOptions'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/surveillance_result_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible surveillance result type options in the CHPL
      operationId: getSurveillanceResultTypesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/surveillance_types:
    get:
      tags:
      - search-view-controller
      summary: Get all possible surveillance type options in the CHPL
      operationId: getSurveillanceTypesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/targeted_users:
    get:
      tags:
      - search-view-controller
      summary: Get all possible targeted user options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getTargetedUsersUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/test_functionality:
    get:
      tags:
      - search-view-controller
      summary: Get all possible test functionality options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getTestFunctionalityUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/test_standards:
    get:
      tags:
      - search-view-controller
      summary: Get all possible test standard options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getTestStandardsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/test_tools:
    get:
      tags:
      - search-view-controller
      summary: Get all possible test tool options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getTestToolsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /data/ucd_processes:
    get:
      tags:
      - search-view-controller
      summary: Get all possible UCD process options in the CHPL
      description: This is useful for knowing what values one might possibly search
        for.
      operationId: getUcdProcessesUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchOption'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /decertifications/certified_products:
    get:
      tags:
      - search-view-controller
      summary: Get all decertified certified products in the CHPL
      description: Returns all decertified certified products, their decertified statuses,
        and the total count of decertified certified products as the recordCount.
      operationId: getDecertifiedCertifiedProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: pageNumber
        in: query
        description: pageNumber
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: pageSize
        required: false
        type: integer
        format: int32
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: string
      - name: sortDescending
        in: query
        description: sortDescending
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /decertifications/developers:
    get:
      tags:
      - search-view-controller
      summary: Get all developer decertifications in the CHPL
      description: This returns all decertified developers.
      operationId: getDecertifiedDevelopersUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DecertifiedDeveloperResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /decertifications/inactive_certificates:
    get:
      tags:
      - search-view-controller
      summary: Get decertified certified products in the CHPL with inactive certificates
      description: Returns only decertified certified products with inactive certificates.
        Includes their decertified statuses and the total count of decertified certified
        products as the recordCount.
      operationId: getDecertifiedInactiveCertificateCertifiedProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: pageNumber
        in: query
        description: pageNumber
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: pageSize
        required: false
        type: integer
        format: int32
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: string
      - name: sortDescending
        in: query
        description: sortDescending
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /developers/:
    get:
      tags:
      - developer-controller
      summary: List all developers in the system.
      operationId: getDevelopersUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: showDeleted
        in: query
        description: showDeleted
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DeveloperResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /developers/update:
    post:
      tags:
      - developer-controller
      summary: Update a developer or merge developers.
      description: 'This method serves two purposes: to update a single developer''s
        information and to merge two developers into one.  A user of this service
        should pass in a single developerId to update just that developer.  If multiple
        developer IDs are passed in, the service performs a merge meaning that a new
        developer  is created with all of the information provided (name, address,
        etc.) and all of the prodcuts  previously assigned to the developerId''s specified
        are reassigned to the newly created developer. The  old developers are then
        deleted.  The logged in user must have ROLE_ADMIN, ROLE_ACB_ADMIN, or ROLE_ACB_STAFF. '
      operationId: updateDeveloperUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: developerInfo
        description: developerInfo
        required: true
        schema:
          $ref: '#/definitions/UpdateDevelopersRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Developer'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /developers/{developerId}:
    get:
      tags:
      - developer-controller
      summary: Get information about a specific developer.
      operationId: getDeveloperByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: developerId
        in: path
        description: developerId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Developer'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /download:
    get:
      tags:
      - search-view-controller
      summary: Download the entire CHPL as XML.
      description: Once per day, the entire certified product listing is written out
        to an XML file on the CHPL servers. This method allows any user to download
        that XML file. It is formatted in such a way that users may import it into
        Microsoft Excel or any other XML tool of their choosing.
      operationId: downloadUsingGET
      consumes:
      - application/json
      produces:
      - application/xml
      parameters:
      - name: edition
        in: query
        description: edition
        required: false
        type: string
      - name: format
        in: query
        description: format
        required: false
        type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /key/:
    get:
      tags:
      - api-key-controller
      summary: List all API keys that have been created.
      description: This service is only available to CHPL users with ROLE_ADMIN.
      operationId: listKeysUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiKey'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /key/activity:
    post:
      tags:
      - api-key-controller
      summary: View the calls made per API key.
      description: This service is only available to CHPL users with ROLE_ADMIN.
      operationId: listActivityUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: pageNumber
        in: query
        description: pageNumber
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: pageSize
        required: false
        type: integer
        format: int32
      - name: filter
        in: query
        description: filter
        required: false
        type: string
      - name: dateAscending
        in: query
        description: dateAscending
        required: false
        type: boolean
      - name: startDate
        in: query
        description: startDate
        required: false
        type: integer
        format: int64
      - name: endDate
        in: query
        description: endDate
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiKeyActivity'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /key/activity/{apiKey}:
    post:
      tags:
      - api-key-controller
      summary: View the calls made by a specific API key.
      description: This service is only available to CHPL users with ROLE_ADMIN.
      operationId: listActivityByKeyUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: apiKey
        in: path
        description: apiKey
        required: true
        type: string
      - name: pageNumber
        in: query
        description: pageNumber
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: pageSize
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiKeyActivity'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /key/register:
    post:
      tags:
      - api-key-controller
      summary: Sign up for a new API key.
      description: Anyone wishing to access the methods listed in this API must have
        an API key. This service  will auto-generate a key and send it to the supplied
        email address. It must be included  in subsequent API calls via either a header
        with the name 'API-Key' or as a URL parameter named 'api_key'.
      operationId: registerUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: registration
        description: registration
        required: true
        schema:
          $ref: '#/definitions/ApiKeyRegistration'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /key/revoke:
    post:
      tags:
      - api-key-controller
      summary: Remove an API key.
      description: This service is only available to CHPL users with ROLE_ADMIN.
      operationId: revokeUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: key
        description: key
        required: true
        schema:
          $ref: '#/definitions/ApiKey'
      - name: API-Key
        in: header
        description: API-Key
        required: false
        type: string
      - name: apiKey
        in: query
        description: apiKey
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /products/:
    get:
      tags:
      - product-controller
      summary: List all products
      description: Either list all products or optionally just all products belonging
        to a specific developer.
      operationId: getAllProductsUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: developerId
        in: query
        description: developerId
        required: false
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /products/update:
    post:
      tags:
      - product-controller
      summary: Update a product or merge products.
      description: 'This method serves two purposes: to update a single product''s
        information and to merge two products into one.  A user of this service should
        pass in a single productId to update just that product.  If multiple product
        IDs are passed in, the service performs a merge meaning that a new product  is
        created with all of the information provided and all of the versions  previously
        assigned to the productIds specified are reassigned to the newly created product.
        The  old products are then deleted.  The logged in user must have ROLE_ADMIN,
        ROLE_ACB_ADMIN, or ROLE_ACB_STAFF. '
      operationId: updateProductUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: productInfo
        description: productInfo
        required: true
        schema:
          $ref: '#/definitions/UpdateProductsRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Product'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /products/{productId}:
    get:
      tags:
      - product-controller
      summary: Get information about a specific product.
      operationId: getProductByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Product'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /search:
    get:
      tags:
      - search-view-controller
      summary: Search the CHPL
      description: If paging parameters are not specified, the first 20 records are
        returned by default.
      operationId: simpleSearchUsingGET
      consumes:
      - application/json
      produces:
      - application/xml
      - application/json;charset=utf-8
      parameters:
      - name: searchTerm
        in: query
        description: searchTerm
        required: true
        type: string
      - name: pageNumber
        in: query
        description: pageNumber
        required: false
        type: integer
        format: int32
      - name: pageSize
        in: query
        description: pageSize
        required: false
        type: integer
        format: int32
      - name: orderBy
        in: query
        description: orderBy
        required: false
        type: string
      - name: sortDescending
        in: query
        description: sortDescending
        required: false
        type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    post:
      tags:
      - search-view-controller
      summary: Advanced search for the CHPL
      description: Search the CHPL by specifycing multiple fields of the data to search.
        If paging fields are not specified, the first 20 records are returned by default.
      operationId: advancedSearchUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: searchFilters
        description: searchFilters
        required: true
        schema:
          $ref: '#/definitions/SearchRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/create:
    post:
      tags:
      - surveillance-controller
      summary: Create a new surveillance activity for a certified product.
      description: Creates a new surveillance activity, surveilled requirements, and
        any applicable non-conformities in the system and associates them with the
        certified product indicated in the request body. The surveillance passed into
        this request will first be validated  to check for errors. ROLE_ACB_ADMIN
        or ROLE_ACB_STAFF  and administrative authority on the ACB associated with
        the certified product is required.
      operationId: createSurveillanceUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: survToInsert
        description: survToInsert
        required: true
        schema:
          $ref: '#/definitions/Surveillance'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Surveillance'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/document/{documentId}:
    get:
      tags:
      - surveillance-controller
      summary: Download nonconformity supporting documentation.
      description: Download a specific file that was previously uploaded to a surveillance
        nonconformity.
      operationId: streamDocumentContentsUsingGET
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: documentId
        in: path
        description: documentId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/download:
    get:
      tags:
      - surveillance-controller
      summary: Download surveillance as CSV.
      description: Once per day, all surveillance and nonconformities are written
        out to CSV files on the CHPL servers. This method allows any user to download
        those files.
      operationId: downloadUsingGET_1
      consumes:
      - application/json
      produces:
      - text/csv
      parameters:
      - name: type
        in: query
        description: type
        required: false
        type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/pending:
    get:
      tags:
      - surveillance-controller
      summary: Get the listing of all pending surveillance items that this user has
        access to.
      operationId: getAllPendingSurveillanceForAcbUserUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SurveillanceResults'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/pending/confirm:
    post:
      tags:
      - surveillance-controller
      summary: Confirm a pending surveillance activity.
      description: Creates a new surveillance activity, surveilled requirements, and
        any applicable non-conformities in the system and associates them with the
        certified product indicated in the request body. If the surveillance is an
        update of an existing surveillance activity as indicated by the 'surveillanceIdToReplace'
        field, that existing surveillance activity will be marked as deleted and the
        surveillance in this request body will be inserted. The surveillance passed
        into this request will first be validated  to check for errors and the related
        pending surveillance will be removed. ROLE_ACB_ADMIN or ROLE_ACB_STAFF  and
        administrative authority on the ACB associated with the certified product
        is required.
      operationId: confirmPendingSurveillanceUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: survToInsert
        description: survToInsert
        required: true
        schema:
          $ref: '#/definitions/Surveillance'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Surveillance'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/pending/{pendingSurvId}/reject:
    post:
      tags:
      - surveillance-controller
      summary: Reject (effectively delete) a pending surveillance item.
      operationId: deletePendingSurveillanceUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: pendingSurvId
        in: path
        description: pendingSurvId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/update:
    post:
      tags:
      - surveillance-controller
      summary: Update a surveillance activity for a certified product.
      description: Updates an existing surveillance activity, surveilled requirements,
        and any applicable non-conformities in the system. The surveillance passed
        into this request will first be validated  to check for errors. ROLE_ACB_ADMIN
        or ROLE_ACB_STAFF  and administrative authority on the ACB associated with
        the certified product is required.
      operationId: updateSurveillanceUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: survToUpdate
        description: survToUpdate
        required: true
        schema:
          $ref: '#/definitions/Surveillance'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Surveillance'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/upload:
    post:
      tags:
      - surveillance-controller
      summary: Upload a file with surveillance and nonconformities for certified products.
      description: Accepts a CSV file with very specific fields to create pending
        surveillance items.  The user uploading the file must have ROLE_ACB_ADMIN
        or ROLE_ACB_STAFF  and administrative authority on the ACB(s) responsible
        for the product(s) in the file.
      operationId: uploadUsingPOST_2
      consumes:
      - multipart/form-data
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: file
        in: formData
        description: file
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SurveillanceResults'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/{surveillanceId}/delete:
    post:
      tags:
      - surveillance-controller
      summary: Delete a surveillance activity for a certified product.
      description: Deletes an existing surveillance activity, surveilled requirements,
        and any applicable non-conformities in the system. ROLE_ACB_ADMIN or ROLE_ACB_STAFF  and
        administrative authority on the ACB associated with the certified product
        is required.
      operationId: deleteSurveillanceUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: surveillanceId
        in: path
        description: surveillanceId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/{surveillanceId}/nonconformity/{nonconformityId}/document/create:
    post:
      tags:
      - surveillance-controller
      summary: Add documentation to an existing nonconformity.
      description: Upload a file of any kind (current size limit 5MB) as supporting  documentation
        to an existing nonconformity. The logged in user uploading the file  must
        have either ROLE_ADMIN or ROLE_ACB_ADMIN and administrative  authority on
        the associated ACB.
      operationId: uploadNonconformityDocumentUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: surveillanceId
        in: path
        description: surveillanceId
        required: true
        type: integer
        format: int64
      - name: nonconformityId
        in: path
        description: nonconformityId
        required: true
        type: integer
        format: int64
      - name: file
        in: formData
        description: file
        required: true
        type: file
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /surveillance/{surveillanceId}/nonconformity/{nonconformityId}/document/{docId}/delete:
    post:
      tags:
      - surveillance-controller
      summary: Remove documentation from a nonconformity.
      description: The logged in user must have either ROLE_ADMIN or ROLE_ACB_ADMIN
        and administrative  authority on the associated ACB.
      operationId: deleteNonconformityDocumentUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: surveillanceId
        in: path
        description: surveillanceId
        required: true
        type: integer
        format: int64
      - name: nonconformityId
        in: path
        description: nonconformityId
        required: true
        type: integer
        format: int64
      - name: docId
        in: path
        description: docId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/:
    get:
      tags:
      - user-management-controller
      summary: View users of the system.
      description: Only ROLE_ADMIN will be able to see all users.
      operationId: getUsersUsingGET_2
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserListJSONObject'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/authorize:
    post:
      tags:
      - user-management-controller
      summary: Update an existing user account with new permissions.
      description: 'Adds all permissions from the invitation identified by the user
        key to the appropriate existing user account.The correct order to call invitation
        requests is the following: 1) /invite 2) /create or /authorize 3) /confirm '
      operationId: authorizeUserUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: credentials
        description: credentials
        required: true
        schema:
          $ref: '#/definitions/AuthorizeCredentials'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/confirm:
    post:
      tags:
      - user-management-controller
      summary: Confirm that a user's email address is valid.
      description: 'When a new user accepts their invitation to the CHPL they have
        to provide an email address. They then receive an email prompting them to
        confirm that this email address is valid. Confirming the email address must
        be done via this request before the user will be allowed to log in with the
        credentials they selected. The correct order to call invitation requests is
        the following: 1) /invite 2) /create or /authorize 3) /confirm '
      operationId: confirmUserUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: hash
        description: hash
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/create:
    post:
      tags:
      - user-management-controller
      summary: Create a new user account from an invitation.
      description: 'An individual who has been invited to the CHPL has a special user
        key in their invitation email. That user key along with all the information
        needed to create a new user''s account can be passed in here. The account
        is created but cannot be used until that user confirms that their email address
        is valid. The correct order to call invitation requests is the following:
        1) /invite 2) /create or /authorize 3) /confirm '
      operationId: createUserUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: userInfo
        description: userInfo
        required: true
        schema:
          $ref: '#/definitions/CreateUserFromInvitationRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/grant_role:
    post:
      tags:
      - user-management-controller
      summary: Give additional roles to a user.
      description: Users may be given ROLE_ADMIN, ROLE_ACB_ADMIN, ROLE_ACB_STAFF,
        ROLE_ATL_ADMIN, ROLE_ATL_STAFF, or ROLE_ONC_STAFF roles within the system.
      operationId: grantUserRoleUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: grantRoleObj
        description: grantRoleObj
        required: true
        schema:
          $ref: '#/definitions/GrantRoleJSONObject'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/invite:
    post:
      tags:
      - user-management-controller
      summary: Invite a user to the CHPL.
      description: 'This request creates an invitation that is sent to the email address
        provided. The recipient of this invitation can then choose to create a new
        account or add the permissions contained within the invitation to an exisitng
        account if they have one. Said another way, an invitation can be used to create
        or modify CHPL user accounts.The correct order to call invitation requests
        is the following: 1) /invite 2) /create or /authorize 3) /confirm '
      operationId: inviteUserUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: invitation
        description: invitation
        required: true
        schema:
          $ref: '#/definitions/UserInvitation'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserInvitation'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/revoke_role:
    post:
      tags:
      - user-management-controller
      summary: Remove roles previously granted to a user.
      description: Users may be given ROLE_ADMIN, ROLE_ACB_ADMIN, ROLE_ACB_STAFF,
        ROLE_ATL_ADMIN, ROLE_ATL_STAFF, or ROLE_ONC_STAFF roles within the system.
      operationId: revokeUserRoleUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: grantRoleObj
        description: grantRoleObj
        required: true
        schema:
          $ref: '#/definitions/GrantRoleJSONObject'
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/update:
    post:
      tags:
      - user-management-controller
      summary: Modify user information.
      operationId: updateUserDetailsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: userInfo
        description: userInfo
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userId}/delete:
    post:
      tags:
      - user-management-controller
      summary: Delete a user.
      description: Deletes a user account and all associated authorities on ACBs and
        ATLs. The logged in user must have ROLE_ADMIN.
      operationId: deleteUserUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: string
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /users/{userName}/details:
    get:
      tags:
      - user-management-controller
      summary: View a specific user's details.
      description: The logged in user must either be the user in the parameters, have
        ROLE_ADMIN, or have ROLE_ACB_ADMIN.
      operationId: getUserUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: userName
        in: path
        description: userName
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserInfoJSONObject'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /versions/:
    get:
      tags:
      - product-version-controller
      summary: List all versions.
      description: List all versions associated with a specific product.
      operationId: getVersionsByProductUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: query
        description: productId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductVersion'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /versions/update:
    post:
      tags:
      - product-version-controller
      summary: Update a version or merge versions.
      description: 'This method serves two purposes: to update a single version''s
        information and to merge two versions into one.  A user of this service should
        pass in a single versionId to update just that version.  If multiple version
        IDs are passed in, the service performs a merge meaning that a new version  is
        created with all of the information provided and all of the certified products  previously
        assigned to the old versionIds are reassigned to the newly created version.
        The  old versions are then deleted.  The logged in user must have ROLE_ADMIN,
        ROLE_ACB_ADMIN, or ROLE_ACB_STAFF. '
      operationId: updateVersionUsingPOST
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - in: body
        name: versionInfo
        description: versionInfo
        required: true
        schema:
          $ref: '#/definitions/UpdateVersionsRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductVersion'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /versions/{versionId}:
    get:
      tags:
      - product-version-controller
      summary: Get information about a specific version.
      operationId: getProductVersionByIdUsingGET
      consumes:
      - application/json
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: versionId
        in: path
        description: versionId
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductVersion'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
definitions: !php/object "O:8:\"stdClass\":100:{s:19:\"BasicSearchResponse\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/CertifiedProductSearchResult\";}}}}s:7:\"Address\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:9:\"addressId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"city\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"country\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"line1\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"line2\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"state\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"zipcode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:30:\"PendingCertifiedProductResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:24:\"pendingCertifiedProducts\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:44:\"#/definitions/PendingCertifiedProductDetails\";}}}}s:22:\"CertificationCriterion\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:20:\"certificationEdition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"certificationEditionId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:33:\"SurveillanceNonconformityDocument\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:12:\"fileContents\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";}}s:8:\"fileName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"fileType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:7:\"Product\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:16:\"lastModifiedDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"owner\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}s:12:\"ownerHistory\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/ProductOwner\";}}s:9:\"productId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:18:\"reportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:9:\"Developer\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Address\";}s:7:\"contact\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Contact\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"developerCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"developerId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:29:\"#/definitions/DeveloperStatus\";}s:24:\"transparencyAttestations\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/TransparencyAttestationMap\";}}s:7:\"website\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"JsonNode\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":21:{s:5:\"array\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"bigDecimal\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"bigInteger\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"binary\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"boolean\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"containerNode\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"double\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"float\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:19:\"floatingPointNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"int\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:14:\"integralNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"long\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"missingNode\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:8:\"nodeType\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:9:{i:0;s:5:\"ARRAY\";i:1;s:6:\"BINARY\";i:2;s:7:\"BOOLEAN\";i:3;s:7:\"MISSING\";i:4;s:4:\"NULL\";i:5;s:6:\"NUMBER\";i:6;s:6:\"OBJECT\";i:7;s:4:\"POJO\";i:8;s:6:\"STRING\";}}s:4:\"null\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"object\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"pojo\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"short\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"textual\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"valueNode\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:22:\"CertificationIdResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:18:\"ehrCertificationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"isValid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:9:\"metCounts\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:14:\"metPercentages\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}s:8:\"products\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}}s:4:\"year\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:22:\"CQMResultCertification\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:15:\"certificationId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:19:\"certificationNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:29:\"CertifiedProductSearchDetails\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":42:{s:18:\"acbCertificationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"accessibilityCertified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:22:\"accessibilityStandards\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:51:\"#/definitions/CertifiedProductAccessibilityStandard\";}}s:17:\"certificationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:20:\"certificationEdition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:19:\"certificationEvents\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CertificationStatusEvent\";}}s:20:\"certificationResults\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/CertificationResult\";}}s:19:\"certificationStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:14:\"certifyingBody\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:17:\"chplProductNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"classificationType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:10:\"countCerts\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:26:\"countClosedNonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:23:\"countClosedSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"countCqms\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:24:\"countOpenNonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:21:\"countOpenSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"countSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"cqmResults\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/CQMResultDetails\";}}s:19:\"decertificationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}s:13:\"errorMessages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"ics\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"numMeaningfulUse\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"otherAcb\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"practiceType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"product\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}s:25:\"productAdditionalSoftware\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"qmsStandards\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/CertifiedProductQmsStandard\";}}s:18:\"reportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"sedIntendedUserDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"sedReportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"sedTestingEnd\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"surveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Surveillance\";}}s:13:\"targetedUsers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/CertifiedProductTargetedUser\";}}s:10:\"testingLab\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:23:\"transparencyAttestation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"transparencyAttestationUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ProductVersion\";}s:15:\"warningMessages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:21:\"UpdatePasswordRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:11:\"newPassword\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"oldPassword\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:28:\"CertificationIdLookupResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"cqms\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:8:\"criteria\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:18:\"ehrCertificationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"products\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}}s:4:\"year\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:26:\"TransparencyAttestationMap\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"acbId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"acbName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"attestation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:34:\"CertificationResultTestParticipant\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":13:{s:8:\"ageRange\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"ageRangeId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:24:\"assistiveTechnologyNeeds\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"computerExperienceMonths\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"educationTypeId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"educationTypeName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"gender\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"occupation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"productExperienceMonths\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:28:\"professionalExperienceMonths\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"testParticipantId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"uniqueId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"CertificationResultTestTask\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":18:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"taskErrors\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:16:\"taskErrorsStddev\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:25:\"taskPathDeviationObserved\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:24:\"taskPathDeviationOptimal\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"taskRating\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:15:\"taskRatingScale\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"taskRatingStddev\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:18:\"taskSuccessAverage\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:17:\"taskSuccessStddev\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"number\";s:6:\"format\";s:5:\"float\";}s:11:\"taskTimeAvg\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:28:\"taskTimeDeviationObservedAvg\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:27:\"taskTimeDeviationOptimalAvg\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"taskTimeStddev\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:16:\"testParticipants\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:48:\"#/definitions/CertificationResultTestParticipant\";}}s:10:\"testTaskId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"uniqueId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:15:\"DeveloperStatus\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:37:\"CertificationResultAdditionalSoftware\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:21:\"certificationResultId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:18:\"certifiedProductId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:22:\"certifiedProductNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"grouping\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"justification\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:17:\"Map\xABstring,int\xBB\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"object\";s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Integer\";}}s:16:\"DescriptiveModel\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:8:\"Statuses\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:6:\"active\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"retired\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"suspendedByAcb\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"suspendedByOnc\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:15:\"terminatedByOnc\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:14:\"withdrawnByAcb\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:20:\"withdrawnByDeveloper\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:31:\"CreateUserFromInvitationRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"hash\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/UserCreationJSONObject\";}}}s:31:\"SurveillanceNonconformityStatus\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"ProductOwner\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"transferDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:21:\"UpdateVersionsRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"newProductId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ProductVersion\";}s:10:\"versionIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}s:6:\"ApiKey\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"key\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"Announcement\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:12:\"creationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"isPublic\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:16:\"lastModifiedUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:4:\"text\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"PopulateSearchOptions\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":9:{s:13:\"certBodyNames\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:29:\"certificationCriterionNumbers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/DescriptiveModel\";}}s:21:\"certificationStatuses\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:19:\"cqmCriterionNumbers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/DescriptiveModel\";}}s:14:\"developerNames\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/KeyValueModelStatuses\";}}s:8:\"editions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:17:\"practiceTypeNames\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:22:\"productClassifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:12:\"productNames\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:35:\"#/definitions/KeyValueModelStatuses\";}}}}s:18:\"UserListJSONObject\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/UserInfoJSONObject\";}}}}s:17:\"MeaningfulUseUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:18:\"certifiedProductId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"csvLineNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:5:\"error\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"numberOfUsers\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:13:\"productNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"CertificationResultTestTool\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"retired\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"testToolId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"testToolName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"testToolVersion\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:19:\"SurveillanceResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:19:\"pendingSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Surveillance\";}}}}s:24:\"MeaningfulUseUserResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"errors\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/MeaningfulUseUser\";}}s:18:\"meaningfulUseUsers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/MeaningfulUseUser\";}}}}s:12:\"UserActivity\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:6:\"events\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/ActivityEvent\";}}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}}}s:14:\"ProductVersion\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:7:\"details\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"versionId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:20:\"PermittedUserResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"users\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/PermittedUser\";}}}}s:27:\"CertificationResultTestData\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"alteration\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:31:\"CertificationResultTestStandard\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:23:\"testStandardDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"testStandardId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"testStandardName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"CorrectiveActionPlanResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:5:\"plans\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/CorrectiveActionPlanDetails\";}}}}s:20:\"AuthorizeCredentials\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"hash\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"userName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:29:\"CertificationResultUcdProcess\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"ucdProcessDetails\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ucdProcessId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"ucdProcessName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:30:\"PendingCertifiedProductDetails\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":43:{s:18:\"acbCertificationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"accessibilityCertified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:22:\"accessibilityStandards\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:51:\"#/definitions/CertifiedProductAccessibilityStandard\";}}s:17:\"certificationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:20:\"certificationEdition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:19:\"certificationEvents\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:38:\"#/definitions/CertificationStatusEvent\";}}s:20:\"certificationResults\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:33:\"#/definitions/CertificationResult\";}}s:19:\"certificationStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:14:\"certifyingBody\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:17:\"chplProductNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"classificationType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:10:\"countCerts\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:26:\"countClosedNonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:23:\"countClosedSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"countCqms\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:24:\"countOpenNonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:21:\"countOpenSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"countSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"cqmResults\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/CQMResultDetails\";}}s:19:\"decertificationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}s:13:\"errorMessages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:3:\"ics\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"numMeaningfulUse\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"otherAcb\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"practiceType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"product\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}s:25:\"productAdditionalSoftware\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"qmsStandards\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/CertifiedProductQmsStandard\";}}s:12:\"recordStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"reportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"sedIntendedUserDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"sedReportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"sedTestingEnd\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"surveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Surveillance\";}}s:13:\"targetedUsers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/CertifiedProductTargetedUser\";}}s:10:\"testingLab\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:23:\"transparencyAttestation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"transparencyAttestationUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/ProductVersion\";}s:15:\"warningMessages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:18:\"ApiKeyRegistration\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:36:\"CertificationResultTestFunctionality\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"testFunctionalityId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:19:\"GrantRoleJSONObject\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"role\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"subjectName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"CertifiedProductQmsStandard\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:18:\"applicableCriteria\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:15:\"qmsModification\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"qmsStandardId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:15:\"qmsStandardName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:13:\"PermittedUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"permissions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}}}s:21:\"UpdateProductsRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"newDeveloperId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"product\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}s:10:\"productIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}s:39:\"CorrectiveActionPlanCertificationResult\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":9:{s:10:\"acbSummary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"certificationCriterionId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:28:\"certificationCriterionNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:27:\"certificationCriterionTitle\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:16:\"developerSummary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:10:\"resolution\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"surveillancePassRate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:27:\"surveillanceSitesSurveilled\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:19:\"AnnouncementResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:13:\"announcements\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/Announcement\";}}}}s:10:\"TestingLab\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:19:\"accredidationNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Address\";}s:7:\"atlCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"isDeleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:24:\"CertificationStatusEvent\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:21:\"certificationStatusId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:23:\"certificationStatusName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"eventDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:25:\"CertificationCriterionDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":13:{s:23:\"automatedMeasureCapable\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:25:\"automatedNumeratorCapable\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:20:\"certificationEdition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"certificationEditionId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"creationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:7:\"deleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:16:\"lastModifiedUser\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"requiresSed\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"MacraMeasure\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:12:\"abbreviation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"criteria\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/CertificationCriterion\";}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:42:\"CorrectiveActionPlanCertificationResultDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:13:\"certCriterion\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:39:\"#/definitions/CertificationCriterionDTO\";}s:22:\"correctiveActionPlanId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:20:\"developerExplanation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"numSitesPassed\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:13:\"numSitesTotal\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:10:\"resolution\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"DeveloperResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:10:\"developers\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}}}}s:16:\"LoginCredentials\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"userName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"UserInvitation\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:5:\"acbId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"emailAddress\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"hash\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"permissions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:12:\"testingLabId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:16:\"CertifiedProduct\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:17:\"chplProductNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"edition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"lastModifiedDate\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:14:\"ProductResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"products\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Product\";}}}}s:22:\"SurveillanceResultType\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:23:\"SurveillanceRequirement\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:15:\"nonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:39:\"#/definitions/SurveillanceNonconformity\";}}s:11:\"requirement\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"result\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/SurveillanceResultType\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/SurveillanceRequirementType\";}}}s:19:\"CertificationResult\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":20:{s:18:\"additionalSoftware\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:51:\"#/definitions/CertificationResultAdditionalSoftware\";}}s:20:\"allowedMacraMeasures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/MacraMeasure\";}}s:16:\"apiDocumentation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:15:\"g1MacraMeasures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/MacraMeasure\";}}s:9:\"g1Success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:15:\"g2MacraMeasures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/MacraMeasure\";}}s:9:\"g2Success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"gap\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"privacySecurityFramework\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:3:\"sed\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"testDataUsed\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/CertificationResultTestData\";}}s:17:\"testFunctionality\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:50:\"#/definitions/CertificationResultTestFunctionality\";}}s:14:\"testProcedures\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:46:\"#/definitions/CertificationResultTestProcedure\";}}s:13:\"testStandards\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/CertificationResultTestStandard\";}}s:9:\"testTasks\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/CertificationResultTestTask\";}}s:13:\"testToolsUsed\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:41:\"#/definitions/CertificationResultTestTool\";}}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"ucdProcesses\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:43:\"#/definitions/CertificationResultUcdProcess\";}}}}s:16:\"CQMResultDetails\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":12:{s:11:\"allVersions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"cmsId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"criteria\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:36:\"#/definitions/CQMResultCertification\";}}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"domain\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"nqfNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"number\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"success\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:15:\"successVersions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"typeId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:33:\"CorrectiveActionPlanDocumentation\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"fileName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"fileType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:14:\"SearchResponse\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"pageNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:11:\"recordCount\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:42:\"#/definitions/CertifiedProductSearchResult\";}}}}s:17:\"CertificationBody\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:7:\"acbCode\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"address\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Address\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"isDeleted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"website\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:18:\"UserInfoJSONObject\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"roles\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"user\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}}}s:12:\"SearchOption\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:4:\"data\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:10:\"expandable\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}s:25:\"SurveillanceNonconformity\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":15:{s:15:\"capApprovalDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:10:\"capEndDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:19:\"capMustCompleteDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"capStartDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:19:\"dateOfDetermination\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:20:\"developerExplanation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"documents\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:47:\"#/definitions/SurveillanceNonconformityDocument\";}}s:8:\"findings\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"nonconformityType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"resolution\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"sitesPassed\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:6:\"status\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:45:\"#/definitions/SurveillanceNonconformityStatus\";}s:7:\"summary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"totalSites\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}}}s:12:\"Surveillance\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":10:{s:16:\"certifiedProduct\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/CertifiedProduct\";}s:7:\"endDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:13:\"errorMessages\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:10:\"friendlyId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:19:\"randomizedSitesUsed\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"requirements\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/SurveillanceRequirement\";}}s:9:\"startDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:23:\"surveillanceIdToReplace\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:30:\"#/definitions/SurveillanceType\";}}}s:17:\"TestingLabResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"atls\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:24:\"#/definitions/TestingLab\";}}}}s:26:\"DecertifiedDeveloperResult\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:14:\"certifyingBody\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/CertificationBody\";}}s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}s:14:\"estimatedUsers\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:36:\"CorrectiveActionPlanDocumentationDTO\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":5:{s:22:\"correctiveActionPlanId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"fileData\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:4:\"byte\";}}s:8:\"fileName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"fileType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:13:\"SearchRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":18:{s:19:\"certificationBodies\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:21:\"certificationCriteria\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:20:\"certificationDateEnd\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"certificationDateStart\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"certificationEditions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:21:\"certificationStatuses\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:4:\"cqms\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"hasHadSurveillance\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:7:\"orderBy\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"pageNumber\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:8:\"pageSize\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:12:\"practiceType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"product\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"searchTerm\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:14:\"sortDescending\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:12:\"surveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:4:{i:0;s:17:\"OPEN_SURVEILLANCE\";i:1;s:19:\"CLOSED_SURVEILLANCE\";i:2;s:18:\"OPEN_NONCONFORMITY\";i:3;s:20:\"CLOSED_NONCONFORMITY\";}}}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:4:\"User\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":11:{s:14:\"accountEnabled\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"accountLocked\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:23:\"complianceTermsAccepted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"hash\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"subjectName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:13:\"ActivityEvent\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:12:\"activityDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:16:\"activityObjectId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"concept\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:13:{i:0;s:34:\"ACTIVITY_CONCEPT_CERTIFIED_PRODUCT\";i:1;s:24:\"ACTIVITY_CONCEPT_PRODUCT\";i:2;s:26:\"ACTIVITY_CONCEPT_DEVELOPER\";i:3;s:30:\"ACTIVITY_CONCEPT_CERTIFICATION\";i:4;s:20:\"ACTIVITY_CONCEPT_CQM\";i:5;s:35:\"ACTIVITY_CONCEPT_CERTIFICATION_BODY\";i:6;s:24:\"ACTIVITY_CONCEPT_VERSION\";i:7;s:21:\"ACTIVITY_CONCEPT_USER\";i:8;s:20:\"ACTIVITY_CONCEPT_ATL\";i:9;s:42:\"ACTIVITY_CONCEPT_PENDING_CERTIFIED_PRODUCT\";i:10;s:24:\"ACTIVITY_CONCEPT_API_KEY\";i:11;s:29:\"ACTIVITY_CONCEPT_ANNOUNCEMENT\";i:12;s:32:\"ACTIVITY_CONCEPT_CERTIFICATIONID\";}}s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:7:\"newData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/JsonNode\";}s:12:\"originalData\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/JsonNode\";}s:15:\"responsibleUser\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:18:\"#/definitions/User\";}}}s:31:\"CertificationIdVerificationBody\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:3:\"ids\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:14:\"ApiKeyActivity\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":7:{s:11:\"apiCallPath\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:6:\"apiKey\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"apiKeyId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:12:\"creationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:16:\"SurveillanceType\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:30:\"SurveillanceRequirementOptions\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:19:\"criteriaOptions2014\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:19:\"criteriaOptions2015\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/KeyValueModel\";}}s:19:\"transparencyOptions\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}}s:32:\"CertificationResultTestProcedure\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:15:\"testProcedureId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:20:\"testProcedureVersion\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:23:\"UpdateUserAndAtlRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"atlId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"authority\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:4:\"READ\";i:1;s:6:\"DELETE\";i:2;s:5:\"ADMIN\";}}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:21:\"KeyValueModelStatuses\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":4:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"statuses\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:22:\"#/definitions/Statuses\";}}}s:23:\"UpdateUserAndAcbRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:5:\"acbId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"authority\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:4:\"enum\";a:3:{i:0;s:4:\"READ\";i:1;s:6:\"DELETE\";i:2;s:5:\"ADMIN\";}}s:6:\"userId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:22:\"UserCreationJSONObject\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":8:{s:23:\"complianceTermsAccepted\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"password\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"subjectName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:28:\"CertificationIdVerifyResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"results\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/VerifyResult\";}}}}s:23:\"UpdateDevelopersRequest\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:23:\"#/definitions/Developer\";}s:12:\"developerIds\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}}s:27:\"CorrectiveActionPlanDetails\";O:8:\"stdClass\":2:{s:10:\"properties\";O:8:\"stdClass\":18:{s:7:\"acbName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"acbSummary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:20:\"actualCompletionDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"approvalDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:17:\"certificationDtos\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:56:\"#/definitions/CorrectiveActionPlanCertificationResultDTO\";}}s:14:\"certifications\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:53:\"#/definitions/CorrectiveActionPlanCertificationResult\";}}s:18:\"certifiedProductId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"developerSummary\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:13:\"documentation\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:47:\"#/definitions/CorrectiveActionPlanDocumentation\";}}s:17:\"documentationDtos\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:50:\"#/definitions/CorrectiveActionPlanDocumentationDTO\";}}s:13:\"effectiveDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:23:\"estimatedCompletionDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:17:\"noncomplianceDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:22:\"randomizedSurveillance\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:10:\"resolution\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:19:\"surveillanceEndDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:21:\"surveillanceStartDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}s:11:\"description\";s:81:\"The
  details about a corrective action plan. If resolved, all fields are required.\";}s:28:\"CertifiedProductTargetedUser\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"targetedUserId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"targetedUserName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"UserResetPasswordJSONObject\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"userName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:27:\"SurveillanceRequirementType\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:7:\"Contact\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":6:{s:9:\"contactId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:5:\"email\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:9:\"firstName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:8:\"lastName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"phoneNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"title\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:21:\"SimpleCertificationId\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"certificationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"created\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}}}s:28:\"CertifiedProductSearchResult\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":42:{s:3:\"acb\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"acbCertificationId\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:22:\"accessibilityCertified\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"atl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:17:\"certificationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:20:\"certificationEdition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:19:\"certificationStatus\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:14:\"certifyingBody\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:17:\"chplProductNumber\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:18:\"classificationType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:10:\"countCerts\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:26:\"countClosedNonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:23:\"countClosedSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:9:\"countCqms\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:24:\"countOpenNonconformities\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:21:\"countOpenSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:17:\"countSurveillance\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int32\";}s:19:\"decertificationDate\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:9:\"developer\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"edition\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:24:\"hasClosedNonconformities\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:21:\"hasClosedSurveillance\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:22:\"hasOpenNonconformities\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:19:\"hasOpenSurveillance\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:3:\"ics\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:16:\"numMeaningfulUse\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:8:\"otherAcb\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:12:\"practiceType\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:7:\"product\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"object\";}s:25:\"productAdditionalSoftware\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"qmsTesting\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:18:\"reportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"sedIntendedUserDescription\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:21:\"sedReportFileLocation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:10:\"sedTesting\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}s:13:\"sedTestingEnd\";O:8:\"stdClass\":2:{s:4:\"type\";s:6:\"string\";s:6:\"format\";s:9:\"date-time\";}s:12:\"testingLabId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:14:\"testingLabName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:23:\"transparencyAttestation\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:26:\"transparencyAttestationUrl\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:7:\"version\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:24:\"CertificationBodyResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"acbs\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:31:\"#/definitions/CertificationBody\";}}}}s:27:\"DecertifiedDeveloperResults\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":1:{s:27:\"decertifiedDeveloperResults\";O:8:\"stdClass\":2:{s:4:\"type\";s:5:\"array\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:40:\"#/definitions/DecertifiedDeveloperResult\";}}}}s:37:\"CertifiedProductAccessibilityStandard\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:23:\"accessibilityStandardId\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:25:\"accessibilityStandardName\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}}}s:13:\"KeyValueModel\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":3:{s:11:\"description\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:2:\"id\";O:8:\"stdClass\":2:{s:4:\"type\";s:7:\"integer\";s:6:\"format\";s:5:\"int64\";}s:4:\"name\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}}}s:12:\"VerifyResult\";O:8:\"stdClass\":1:{s:10:\"properties\";O:8:\"stdClass\":2:{s:2:\"id\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:5:\"valid\";O:8:\"stdClass\":1:{s:4:\"type\";s:7:\"boolean\";}}}}"
...
