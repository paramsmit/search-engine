---
swagger: "2.0"
info: !php/object "O:8:\"stdClass\":11:{s:7:\"contact\";O:8:\"stdClass\":2:{s:4:\"name\";s:6:\"Google\";s:3:\"url\";s:18:\"https://google.com\";}s:11:\"description\";s:82:\"Automates
  Android zero-touch enrollment for device resellers, customers, and EMMs.\";s:5:\"title\";s:35:\"Android
  Device Provisioning Partner\";s:7:\"version\";s:2:\"v1\";s:23:\"x-apiClientRegistration\";O:8:\"stdClass\":1:{s:3:\"url\";s:37:\"https://console.developers.google.com\";}s:6:\"x-logo\";O:8:\"stdClass\":1:{s:3:\"url\";s:116:\"https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\";}s:8:\"x-origin\";a:1:{i:0;O:8:\"stdClass\":4:{s:9:\"converter\";O:8:\"stdClass\":2:{s:3:\"url\";s:45:\"https://github.com/lucybot/api-spec-converter\";s:7:\"version\";s:5:\"2.6.2\";}s:6:\"format\";s:6:\"google\";s:3:\"url\";s:75:\"https://androiddeviceprovisioning.googleapis.com/$discovery/rest?version=v1\";s:7:\"version\";s:2:\"v1\";}}s:11:\"x-preferred\";b:1;s:14:\"x-providerName\";s:14:\"googleapis.com\";s:13:\"x-serviceName\";s:25:\"androiddeviceprovisioning\";s:10:\"x-datafire\";O:8:\"stdClass\":2:{s:4:\"name\";s:32:\"google_androiddeviceprovisioning\";s:4:\"type\";s:7:\"openapi\";}}"
host: androiddeviceprovisioning.googleapis.com
basePath: /
paths:
  /v1/customers:
    get:
      description: Lists the user's customer accounts.
      operationId: customers.list
      parameters:
      - description: The maximum number of customers to show in a page of results.nA
          number between 1 and 100 (inclusive).
        in: query
        name: pageSize
        type: integer
      - description: A token specifying which result page to return.
        in: query
        name: pageToken
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListCustomersResponse'
      tags:
      - customers
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
  /v1/partners/{metadataOwnerId}/devices/{deviceId}/metadata:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Updates reseller metadata associated with the device.
      operationId: partners.devices.metadata
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/UpdateDeviceMetadataRequest'
      - description: Required. The ID of the reseller partner.
        in: path
        name: deviceId
        required: true
        type: string
        x-reservedExpansion: true
      - description: Required. The owner of the newly set metadata. Set this to the
          partner ID.
        in: path
        name: metadataOwnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/DeviceMetadata'
      tags:
      - partners
  /v1/partners/{partnerId}/customers:
    get:
      description: Lists the customers that are enrolled to the reseller identified
        by then`partnerId` argument. This list includes customers that the resellerncreated
        and customers that enrolled themselves using the portal.
      operationId: partners.customers.list
      parameters:
      - description: Required. The ID of the reseller partner.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ListCustomersResponse'
      tags:
      - partners
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
  /v1/partners/{partnerId}/devices:claim:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Claims a device for a customer and adds it to zero-touch enrollment.
        If thendevice is already claimed by another customer, the call returns an
        error.
      operationId: partners.devices.claim
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ClaimDeviceRequest'
      - description: Required. The ID of the reseller partner.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ClaimDeviceResponse'
      tags:
      - partners
  /v1/partners/{partnerId}/devices:claimAsync:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Claims a batch of devices for a customer asynchronously. Adds the
        devicesnto zero-touch enrollment. To learn more, read [Longu2011running batchnoperations](/zero-touch/guides/how-it-works#operations).
      operationId: partners.devices.claimAsync
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ClaimDevicesRequest'
      - description: Required. The ID of the reseller partner.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
      - partners
  /v1/partners/{partnerId}/devices:findByIdentifier:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Finds devices by hardware identifiers, such as IMEI.
      operationId: partners.devices.findByIdentifier
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/FindDevicesByDeviceIdentifierRequest'
      - description: Required. The ID of the reseller partner.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/FindDevicesByDeviceIdentifierResponse'
      tags:
      - partners
  /v1/partners/{partnerId}/devices:findByOwner:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Finds devices claimed for customers. The results only contain devicesnregistered
        to the reseller that's identified by the `partnerId` argument.nThe customer's
        devices purchased from other resellers don't appear in thenresults.
      operationId: partners.devices.findByOwner
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/FindDevicesByOwnerRequest'
      - description: Required. The ID of the reseller partner.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/FindDevicesByOwnerResponse'
      tags:
      - partners
  /v1/partners/{partnerId}/devices:unclaim:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Unclaims a device from a customer and removes it from zero-touchnenrollment.
      operationId: partners.devices.unclaim
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/UnclaimDeviceRequest'
      - description: Required. The ID of the reseller partner.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
      - partners
  /v1/partners/{partnerId}/devices:unclaimAsync:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Unclaims a batch of devices for a customer asynchronously. Removes
        thendevices from zero-touch enrollment. To learn more, read [Longu2011running
        batchnoperations](/zero-touch/guides/how-it-works#operations).
      operationId: partners.devices.unclaimAsync
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/UnclaimDevicesRequest'
      - description: Required. The reseller partner ID.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
      - partners
  /v1/partners/{partnerId}/devices:updateMetadataAsync:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Updates the reseller metadata attached to a batch of devices. This
        methodnupdates devices asynchronously and returns an `Operation` that can
        be usednto track progress. Read [Longu2011running batchnoperations](/zero-touch/guides/how-it-works#operations).
      operationId: partners.devices.updateMetadataAsync
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/UpdateDeviceMetadataInBatchRequest'
      - description: Required. The reseller partner ID.
        in: path
        name: partnerId
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
      - partners
  /v1/{name}:
    delete:
      description: Deletes an unused configuration. The API call fails if the customer
        hasndevices with the configuration applied.
      operationId: customers.configurations.delete
      parameters:
      - description: Required. The configuration to delete. An API resource name in
          the formatn`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.
          If thenconfiguration is applied to any devices, the API call fails.
        in: path
        name: name
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
      - customers
    get:
      description: Gets the latest state of a long-running operation.  Clients can
        use thisnmethod to poll the operation result at intervals as recommended by
        the APInservice.
      operationId: operations.get
      parameters:
      - description: The name of the operation resource.
        in: path
        name: name
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
      - operations
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    patch:
      description: Updates a configuration's field values.
      operationId: customers.configurations.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Configuration'
      - description: Output only. The API resource name in the formatn`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.
          Assigned bynthe server.
        in: path
        name: name
        required: true
        type: string
        x-reservedExpansion: true
      - description: Required. The field mask applied to the target `Configuration`
          beforenupdating the fields. To learn more about using field masks, readn[FieldMask](/protocol-buffers/docs/reference/google.protobuf#fieldmask)
          innthe Protocol Buffers documentation.
        in: query
        name: updateMask
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Configuration'
      tags:
      - customers
  /v1/{parent}/configurations:
    get:
      description: Lists a customer's configurations.
      operationId: customers.configurations.list
      parameters:
      - description: Required. The customer that manages the listed configurations.
          An APInresource name in the format `customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListConfigurationsResponse'
      tags:
      - customers
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a new configuration. Once created, a customer can apply
        thenconfiguration to devices.
      operationId: customers.configurations.create
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Configuration'
      - description: Required. The customer that manages the configuration. An API
          resource namenin the format `customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Configuration'
      tags:
      - customers
  /v1/{parent}/customers:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a customer for zero-touch enrollment. After the method
        returnsnsuccessfully, admin and owner roles can manage devices and EMM configsnby
        calling API methods or using their zero-touch enrollment portal. The APIndoesn't
        notify the customer that they have access.
      operationId: partners.customers.create
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CreateCustomerRequest'
      - description: Required. The parent resource ID in the format `partners/[PARTNER_ID]`
          thatnidentifies the reseller.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Company'
      tags:
      - partners
  /v1/{parent}/devices:
    get:
      description: Lists a customer's devices.
      operationId: customers.devices.list
      parameters:
      - description: The maximum number of devices to show in a page of results.nMust
          be between 1 and 100 inclusive.
        in: query
        name: pageSize
        type: string
      - description: A token specifying which result page to return.
        in: query
        name: pageToken
        type: string
      - description: Required. The customer managing the devices. An API resource
          name in thenformat `customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListDevicesResponse'
      tags:
      - customers
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
  /v1/{parent}/devices:applyConfiguration:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Applies a Configuration to the device to register the device for
        zero-touchnenrollment. After applying a configuration to a device, the devicenautomatically
        provisions itself on first boot, or next factory reset.
      operationId: customers.devices.applyConfiguration
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CustomerApplyConfigurationRequest'
      - description: Required. The customer managing the device. An API resource name
          in thenformat `customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
      - customers
  /v1/{parent}/devices:removeConfiguration:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Removes a configuration from device.
      operationId: customers.devices.removeConfiguration
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CustomerRemoveConfigurationRequest'
      - description: Required. The customer managing the device in the formatn`customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
      - customers
  /v1/{parent}/devices:unclaim:
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
    post:
      description: Unclaims a device from a customer and removes it from zero-touchnenrollment.nnAfter
        removing a device, a customer must contact their reseller to registernthe
        device into zero-touch enrollment again.
      operationId: customers.devices.unclaim
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CustomerUnclaimDeviceRequest'
      - description: Required. The customer managing the device. An API resource name
          in thenformat `customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
      - customers
  /v1/{parent}/dpcs:
    get:
      description: Lists the DPCs (device policy controllers) that support zero-touchnenrollment.
      operationId: customers.dpcs.list
      parameters:
      - description: Required. The customer that can use the DPCs in configurations.
          An APInresource name in the format `customers/[CUSTOMER_ID]`.
        in: path
        name: parent
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListDpcsResponse'
      tags:
      - customers
    parameters:
    - $ref: '#/parameters/$.xgafv'
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
schemes:
- https
definitions: !php/object "O:8:\"stdClass\":38:{s:18:\"ClaimDeviceRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"Request
  message to claim a device on behalf of a customer.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:10:\"customerId\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"Required.
  The ID of the customer for whom the device is being claimed.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:55:\"Required.
  The device identifier of the device to claim.\";}s:11:\"sectionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"Required.
  The section type of the device's provisioning record.\";s:4:\"enum\";a:2:{i:0;s:24:\"SECTION_TYPE_UNSPECIFIED\";i:1;s:23:\"SECTION_TYPE_ZERO_TOUCH\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"ClaimDeviceResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"Response
  message containing device id of the claim.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"The
  device ID of the claimed device.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:10:\"deviceName\";O:8:\"stdClass\":2:{s:11:\"description\";s:90:\"The
  resource name of the device in the format\n`partners/[PARTNER_ID]/devices/[DEVICE_ID]`.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:19:\"ClaimDevicesRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:167:\"Request
  to claim devices asynchronously in batch. Claiming a device adds the\ndevice to
  zero-touch enrollment and shows the device in the customer's view\nof the portal.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"claims\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Required.
  A list of device claims.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:26:\"#/definitions/PartnerClaim\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:7:\"Company\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"A
  customer resource in the zero-touch enrollment API.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:11:\"adminEmails\";O:8:\"stdClass\":3:{s:11:\"description\";s:135:\"Input
  only. Optional. Email address of customer's users in the admin role.\nEach email
  address must be associated with a Google Account.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:9:\"companyId\";O:8:\"stdClass\":3:{s:11:\"description\";s:59:\"Output
  only. The ID of the company. Assigned by the server.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:11:\"companyName\";O:8:\"stdClass\":2:{s:11:\"description\";s:203:\"Required.
  The name of the company. For example _XYZ Corp_. Characters\nallowed are: Latin
  letters, numerals, hyphens, and spaces. Displayed to the\ncustomer's employees in
  the zero-touch enrollment portal.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:136:\"Output
  only. The API resource name of the company in the format\n`partners/[PARTNER_ID]/customers/[CUSTOMER_ID]`.
  Assigned by the server.\";s:4:\"type\";s:6:\"string\";}s:11:\"ownerEmails\";O:8:\"stdClass\":3:{s:11:\"description\";s:273:\"Input
  only. Email address of customer's users in the owner role. At least\none `owner_email`
  is required. Each email address must be associated with a\nGoogle Account. Owners
  share the same access as admins but can also add,\ndelete, and edit your organization's
  portal users.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:11:\"termsStatus\";O:8:\"stdClass\":3:{s:11:\"description\";s:111:\"Output
  only. Whether any user from the company has accepted the latest\nTerms of Service
  (ToS). See\nTermsStatus.\";s:4:\"enum\";a:4:{i:0;s:24:\"TERMS_STATUS_UNSPECIFIED\";i:1;s:25:\"TERMS_STATUS_NOT_ACCEPTED\";i:2;s:21:\"TERMS_STATUS_ACCEPTED\";i:3;s:18:\"TERMS_STATUS_STALE\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:13:\"Configuration\";O:8:\"stdClass\":3:{s:11:\"description\";s:489:\"A
  configuration collects the provisioning options for Android devices. Each\nconfiguration
  combines the following:\n\n* The EMM device policy controller (DPC) installed on
  the devices.\n* EMM policies enforced on the devices.\n* Metadata displayed on the
  device to help users during setup.\n\nCustomers can add as many configurations as
  they need. However, zero-touch\nenrollment works best when a customer sets a default
  configuration that's\napplied to any new devices the organization purchases.\";s:10:\"properties\";O:8:\"stdClass\":10:{s:11:\"companyName\";O:8:\"stdClass\":2:{s:11:\"description\";s:134:\"Required.
  The name of the organization. Zero-touch enrollment shows this\norganization name
  to device users during device provisioning.\";s:4:\"type\";s:6:\"string\";}s:15:\"configurationId\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"Output
  only. The ID of the configuration. Assigned by the server.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:17:\"configurationName\";O:8:\"stdClass\":2:{s:11:\"description\";s:184:\"Required.
  A short name that describes the configuration's purpose. For\nexample, _Sales team_
  or _Temporary employees_. The zero-touch enrollment\nportal displays this name to
  IT admins.\";s:4:\"type\";s:6:\"string\";}s:12:\"contactEmail\";O:8:\"stdClass\":2:{s:11:\"description\";s:194:\"Required.
  The email address that device users can contact to get help.\nZero-touch enrollment
  shows this email address to device users before\ndevice provisioning. The value
  is validated on input.\";s:4:\"type\";s:6:\"string\";}s:12:\"contactPhone\";O:8:\"stdClass\":2:{s:11:\"description\";s:244:\"Required.
  The telephone number that device users can call, using another\ndevice, to get help.
  Zero-touch enrollment shows this number to device\nusers before device provisioning.
  Accepts numerals, spaces, the plus sign,\nhyphens, and parentheses.\";s:4:\"type\";s:6:\"string\";}s:13:\"customMessage\";O:8:\"stdClass\":2:{s:11:\"description\";s:216:\"A
  message, containing one or two sentences, to help device users get help\nor give
  them more details about what\u2019s happening to their device.\nZero-touch enrollment
  shows this message before the device is provisioned.\";s:4:\"type\";s:6:\"string\";}s:9:\"dpcExtras\";O:8:\"stdClass\":2:{s:11:\"description\";s:70:\"The
  JSON-formatted EMM provisioning extras that are passed to the DPC.\";s:4:\"type\";s:6:\"string\";}s:15:\"dpcResourcePath\";O:8:\"stdClass\":2:{s:11:\"description\";s:178:\"Required.
  The resource name of the selected DPC (device policy controller)\nin the format
  `customers/[CUSTOMER_ID]/dpcs/*`. To list the supported DPCs,\ncall\n`customers.dpcs.list`.\";s:4:\"type\";s:6:\"string\";}s:9:\"isDefault\";O:8:\"stdClass\":2:{s:11:\"description\";s:304:\"Required.
  Whether this is the default configuration that zero-touch\nenrollment applies to
  any new devices the organization purchases in the\nfuture. Only one customer configuration
  can be the default. Setting this\nvalue to `true`, changes the previous default
  configuration's `isDefault`\nvalue to `false`.\";s:4:\"type\";s:7:\"boolean\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:133:\"Output
  only. The API resource name in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.
  Assigned by\nthe server.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:21:\"CreateCustomerRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Request
  message to create a customer.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"customer\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:21:\"#/definitions/Company\";s:11:\"description\";s:220:\"Required.
  The company data to populate the new customer. Must contain a\nvalue for `companyName`
  and at least one `owner_email` that's associated\nwith a Google Account. The values
  for `companyId` and `name` must be empty.\";}}s:4:\"type\";s:6:\"object\";}s:33:\"CustomerApplyConfigurationRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:65:\"Request
  message for customer to assign a configuration to device.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:13:\"configuration\";O:8:\"stdClass\":2:{s:11:\"description\";s:124:\"Required.
  The configuration applied to the device in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.\";s:4:\"type\";s:6:\"string\";}s:6:\"device\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/DeviceReference\";s:11:\"description\";s:53:\"Required.
  The device the configuration is applied to.\";}}s:4:\"type\";s:6:\"object\";}s:34:\"CustomerListConfigurationsResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:53:\"Response
  message of customer's listing configuration.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"configurations\";O:8:\"stdClass\":3:{s:11:\"description\";s:19:\"The
  configurations.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:27:\"#/definitions/Configuration\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:29:\"CustomerListCustomersResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:42:\"Response
  message for listing my customers.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:9:\"customers\";O:8:\"stdClass\":3:{s:11:\"description\";s:54:\"The
  customer accounts the calling user is a member of.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Company\";}s:4:\"type\";s:5:\"array\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:93:\"A
  token used to access the next page of results. Omitted if no further\nresults are
  available.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:27:\"CustomerListDevicesResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:46:\"Response
  message of customer's liting devices.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"devices\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"The
  customer's devices.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Device\";}s:4:\"type\";s:5:\"array\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:93:\"A
  token used to access the next page of results. Omitted if no further\nresults are
  available.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:24:\"CustomerListDpcsResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:44:\"Response
  message of customer's listing DPCs.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:4:\"dpcs\";O:8:\"stdClass\":3:{s:11:\"description\";s:78:\"The
  list of DPCs available to the customer that support zero-touch\nenrollment.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:17:\"#/definitions/Dpc\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:34:\"CustomerRemoveConfigurationRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:69:\"Request
  message for customer to remove the configuration from device.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"device\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/DeviceReference\";s:11:\"description\";s:54:\"Required.
  The device to remove the configuration from.\";}}s:4:\"type\";s:6:\"object\";}s:28:\"CustomerUnclaimDeviceRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Request
  message for customer to unclaim a device.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:6:\"device\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:29:\"#/definitions/DeviceReference\";s:11:\"description\";s:32:\"Required.
  The device to unclaim.\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Device\";O:8:\"stdClass\":3:{s:11:\"description\";s:55:\"An
  Android device registered for zero-touch enrollment.\";s:10:\"properties\";O:8:\"stdClass\":6:{s:6:\"claims\";O:8:\"stdClass\":3:{s:11:\"description\";s:262:\"Output
  only. The provisioning claims for a device. Devices claimed for\nzero-touch enrollment
  have a claim with the type `SECTION_TYPE_ZERO_TOUCH`.\nCall\n`partners.devices.unclaim`\nor\n`partners.devices.unclaimAsync`\nto
  remove the device from zero-touch enrollment.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:25:\"#/definitions/DeviceClaim\";}s:4:\"type\";s:5:\"array\";}s:13:\"configuration\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"Not
  available to resellers.\";s:4:\"type\";s:6:\"string\";}s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"Output
  only. The ID of the device. Assigned by the server.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:120:\"The
  hardware IDs that identify a manufactured device. To learn more, read\n[Identifiers](/zero-touch/guides/identifiers).\";}s:14:\"deviceMetadata\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DeviceMetadata\";s:11:\"description\";s:135:\"The
  metadata attached to the device. Structured as key-value pairs. To\nlearn more,
  read [Device metadata](/zero-touch/guides/metadata).\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:117:\"Output
  only. The API resource name in the format\n`partners/[PARTNER_ID]/devices/[DEVICE_ID]`.
  Assigned by the server.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:11:\"DeviceClaim\";O:8:\"stdClass\":3:{s:11:\"description\";s:244:\"A
  record of a device claimed by a reseller for a customer. Devices claimed\nfor zero-touch
  enrollment have a claim with the type\n`SECTION_TYPE_ZERO_TOUCH`. To learn more,
  read\n[Claim devices for customers](/zero-touch/guides/how-it-works#claim).\";s:10:\"properties\";O:8:\"stdClass\":2:{s:14:\"ownerCompanyId\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"The
  ID of the Customer that purchased the device.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:11:\"sectionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:50:\"Output
  only. The type of claim made on the device.\";s:4:\"enum\";a:2:{i:0;s:24:\"SECTION_TYPE_UNSPECIFIED\";i:1;s:23:\"SECTION_TYPE_ZERO_TOUCH\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:16:\"DeviceIdentifier\";O:8:\"stdClass\":3:{s:11:\"description\";s:139:\"Encapsulates
  hardware and product IDs to identify a manufactured device. To\nlearn more, read
  [Identifiers](/zero-touch/guides/identifiers).\";s:10:\"properties\";O:8:\"stdClass\":4:{s:4:\"imei\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"The
  device\u2019s IMEI number. Validated on input.\";s:4:\"type\";s:6:\"string\";}s:12:\"manufacturer\";O:8:\"stdClass\":2:{s:11:\"description\";s:219:\"Required.
  The device manufacturer\u2019s name. Matches the device's built-in\nvalue returned
  from `android.os.Build.MANUFACTURER`. Allowed values are\nlisted in [manufacturer
  names](/zero-touch/resources/manufacturer-names).\";s:4:\"type\";s:6:\"string\";}s:4:\"meid\";O:8:\"stdClass\":2:{s:11:\"description\";s:27:\"The
  device\u2019s MEID number.\";s:4:\"type\";s:6:\"string\";}s:12:\"serialNumber\";O:8:\"stdClass\":2:{s:11:\"description\";s:80:\"The
  manufacturer's serial number for the device. This value might not be\nunique.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:14:\"DeviceMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:120:\"Metadata
  entries that can be attached to a `Device`. To learn more, read\n[Device metadata](/zero-touch/guides/metadata).\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"entries\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:4:\"type\";s:6:\"string\";}s:11:\"description\";s:45:\"Metadata
  entries recorded as key-value pairs.\";s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:15:\"DeviceReference\";O:8:\"stdClass\":3:{s:11:\"description\";s:470:\"A
  `DeviceReference` is an API abstraction that lets you supply a _device_\nargument
  to a method using one of the following identifier types:\n\n* A numeric API resource
  ID.\n* Real-world hardware IDs, such as IMEI number, belonging to the manufactured\n
  \ device.\n\nMethods that operate on devices take a `DeviceReference` as a parameter
  type\nbecause it's more flexible for the caller. To learn more about device\nidentifiers,
  read [Identifiers](/zero-touch/guides/identifiers).\";s:10:\"properties\";O:8:\"stdClass\":2:{s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:21:\"The
  ID of the device.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:31:\"The
  hardware IDs of the device.\";}}s:4:\"type\";s:6:\"object\";}s:35:\"DevicesLongRunningOperationMetadata\";O:8:\"stdClass\":3:{s:11:\"description\";s:219:\"Tracks
  the status of a long-running operation to asynchronously update a\nbatch of reseller
  metadata attached to devices. To learn more, read\n[Long\u2011running batch operations](/zero-touch/guides/how-it-works#operations).\";s:10:\"properties\";O:8:\"stdClass\":3:{s:12:\"devicesCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:158:\"The
  number of metadata updates in the operation. This might be different\nfrom the number
  of updates in the request if the API can't parse some of\nthe updates.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:16:\"processingStatus\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"The
  processing status of the operation.\";s:4:\"enum\";a:4:{i:0;s:32:\"BATCH_PROCESS_STATUS_UNSPECIFIED\";i:1;s:21:\"BATCH_PROCESS_PENDING\";i:2;s:25:\"BATCH_PROCESS_IN_PROGRESS\";i:3;s:23:\"BATCH_PROCESS_PROCESSED\";}s:4:\"type\";s:6:\"string\";}s:8:\"progress\";O:8:\"stdClass\":3:{s:11:\"description\";s:180:\"The
  processing progress of the operation. Measured as a number from 0 to\n100. A value
  of 10O doesnt always mean the operation completed\u2014check for\nthe inclusion
  of a `done` field.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:35:\"DevicesLongRunningOperationResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:194:\"Tracks
  the status of a long-running operation to claim, unclaim, or attach\nmetadata to
  devices. To learn more, read\n[Long\u2011running batch operations](/zero-touch/guides/how-it-works#operations).\";s:10:\"properties\";O:8:\"stdClass\":2:{s:15:\"perDeviceStatus\";O:8:\"stdClass\":3:{s:11:\"description\";s:147:\"The
  processing status for each device in the operation.\nOne `PerDeviceStatus` per device.
  The list order matches the items in the\noriginal request.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:32:\"#/definitions/OperationPerDevice\";}s:4:\"type\";s:5:\"array\";}s:12:\"successCount\";O:8:\"stdClass\":3:{s:11:\"description\";s:116:\"A
  summary of how many items in the operation the server processed\nsuccessfully. Updated
  as the operation progresses.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}}s:4:\"type\";s:6:\"object\";}s:3:\"Dpc\";O:8:\"stdClass\":3:{s:11:\"description\";s:316:\"An
  EMM's DPC ([device policy\ncontroller](http://developer.android.com/work/dpc/build-dpc.html)).\nZero-touch
  enrollment installs a DPC (listed in the `Configuration`) on a\ndevice to maintain
  the customer's mobile policies. All the DPCs listed by the\nAPI support zero-touch
  enrollment and are available in Google Play.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:7:\"dpcName\";O:8:\"stdClass\":2:{s:11:\"description\";s:138:\"Output
  only. The title of the DPC app in Google Play. For example, _Google\nApps Device
  Policy_. Useful in an application's user interface.\";s:4:\"type\";s:6:\"string\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:226:\"Output
  only. The API resource name in the format\n`customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`.
  Assigned by\nthe server. To maintain a reference to a DPC across customer accounts,\npersist
  and match the last path component (`DPC_ID`).\";s:4:\"type\";s:6:\"string\";}s:11:\"packageName\";O:8:\"stdClass\":2:{s:11:\"description\";s:162:\"Output
  only. The DPC's Android application ID that looks like a Java\npackage name. Zero-touch
  enrollment installs the DPC app onto a device\nusing this identifier.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:5:\"Empty\";O:8:\"stdClass\":3:{s:11:\"description\";s:359:\"A
  generic empty message that you can re-use to avoid defining duplicated\nempty messages
  in your APIs. A typical example is to use it as the request\nor the response type
  of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty)
  returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is
  empty JSON object `{}`.\";s:10:\"properties\";O:8:\"stdClass\":0:{}s:4:\"type\";s:6:\"object\";}s:36:\"FindDevicesByDeviceIdentifierRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Request
  to find devices.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:46:\"Required.
  The device identifier to search for.\";}s:5:\"limit\";O:8:\"stdClass\":3:{s:11:\"description\";s:106:\"Required.
  The maximum number of devices to show in a page of results. Must\nbe between 1 and
  100 inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:9:\"pageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"A
  token specifying which result page to return.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:37:\"FindDevicesByDeviceIdentifierResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Response
  containing found devices.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"devices\";O:8:\"stdClass\":3:{s:11:\"description\";s:14:\"Found
  devices.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Device\";}s:4:\"type\";s:5:\"array\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:93:\"A
  token used to access the next page of results. Omitted if no further\nresults are
  available.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:25:\"FindDevicesByOwnerRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Request
  to find devices by customers.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"customerId\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"Required.
  The list of customer IDs to search for.\";s:5:\"items\";O:8:\"stdClass\":2:{s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:4:\"type\";s:5:\"array\";}s:5:\"limit\";O:8:\"stdClass\":3:{s:11:\"description\";s:106:\"Required.
  The maximum number of devices to show in a page of results. Must\nbe between 1 and
  100 inclusive.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:9:\"pageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:47:\"A
  token specifying which result page to return.\";s:4:\"type\";s:6:\"string\";}s:11:\"sectionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"Required.
  The section type of the device's provisioning record.\";s:4:\"enum\";a:2:{i:0;s:24:\"SECTION_TYPE_UNSPECIFIED\";i:1;s:23:\"SECTION_TYPE_ZERO_TOUCH\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:26:\"FindDevicesByOwnerResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:34:\"Response
  containing found devices.\";s:10:\"properties\";O:8:\"stdClass\":2:{s:7:\"devices\";O:8:\"stdClass\":3:{s:11:\"description\";s:23:\"The
  customer's devices.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:20:\"#/definitions/Device\";}s:4:\"type\";s:5:\"array\";}s:13:\"nextPageToken\";O:8:\"stdClass\":2:{s:11:\"description\";s:93:\"A
  token used to access the next page of results.\nOmitted if no further results are
  available.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:21:\"ListCustomersResponse\";O:8:\"stdClass\":3:{s:11:\"description\";s:58:\"Response
  message of all customers related to this partner.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:9:\"customers\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"List
  of customers related to this reseller partner.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:21:\"#/definitions/Company\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:9:\"Operation\";O:8:\"stdClass\":3:{s:11:\"description\";s:91:\"This
  resource represents a long-running operation that is the result of a\nnetwork API
  call.\";s:10:\"properties\";O:8:\"stdClass\":5:{s:4:\"done\";O:8:\"stdClass\":2:{s:11:\"description\";s:155:\"If
  the value is `false`, it means the operation is still in progress.\nIf `true`, the
  operation is completed, and either `error` or `response` is\navailable.\";s:4:\"type\";s:7:\"boolean\";}s:5:\"error\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:20:\"#/definitions/Status\";s:11:\"description\";s:220:\"This
  field will always be not set if the operation is created by `claimAsync`, `unclaimAsync`,
  or `updateMetadataAsync`. In this case, error information for each device is set
  in `response.perDeviceStatus.result.status`.\";}s:8:\"metadata\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:11:\"description\";s:61:\"Properties
  of the object. Contains field @type with type URL.\";}s:11:\"description\";s:157:\"This
  field will contain a `DevicesLongRunningOperationMetadata` object if the operation
  is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.\";s:4:\"type\";s:6:\"object\";}s:4:\"name\";O:8:\"stdClass\":2:{s:11:\"description\";s:203:\"The
  server-assigned name, which is only unique within the same service that\noriginally
  returns it. If you use the default HTTP mapping, the\n`name` should have the format
  of `operations/some/unique/name`.\";s:4:\"type\";s:6:\"string\";}s:8:\"response\";O:8:\"stdClass\":3:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:11:\"description\";s:61:\"Properties
  of the object. Contains field @type with type URL.\";}s:11:\"description\";s:157:\"This
  field will contain a `DevicesLongRunningOperationResponse` object if the operation
  is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.\";s:4:\"type\";s:6:\"object\";}}s:4:\"type\";s:6:\"object\";}s:18:\"OperationPerDevice\";O:8:\"stdClass\":3:{s:11:\"description\";s:90:\"A
  task for each device in the operation. Corresponds to each device\nchange in the
  request.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:5:\"claim\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:26:\"#/definitions/PartnerClaim\";s:11:\"description\";s:67:\"A
  copy of the original device-claim request received by the server.\";}s:6:\"result\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:36:\"#/definitions/PerDeviceStatusInBatch\";s:11:\"description\";s:38:\"The
  processing result for each device.\";}s:7:\"unclaim\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/PartnerUnclaim\";s:11:\"description\";s:69:\"A
  copy of the original device-unclaim request received by the server.\";}s:14:\"updateMetadata\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:37:\"#/definitions/UpdateMetadataArguments\";s:11:\"description\";s:70:\"A
  copy of the original metadata-update request received by the server.\";}}s:4:\"type\";s:6:\"object\";}s:12:\"PartnerClaim\";O:8:\"stdClass\":3:{s:11:\"description\";s:29:\"Identifies
  one claim request.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:10:\"customerId\";O:8:\"stdClass\":3:{s:11:\"description\";s:70:\"Required.
  The ID of the customer for whom the device is being claimed.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:42:\"Required.
  Device identifier of the device.\";}s:14:\"deviceMetadata\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DeviceMetadata\";s:11:\"description\";s:56:\"Required.
  The metadata to attach to the device at claim.\";}s:11:\"sectionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"Required.
  The section type of the device's provisioning record.\";s:4:\"enum\";a:2:{i:0;s:24:\"SECTION_TYPE_UNSPECIFIED\";i:1;s:23:\"SECTION_TYPE_ZERO_TOUCH\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:14:\"PartnerUnclaim\";O:8:\"stdClass\":3:{s:11:\"description\";s:31:\"Identifies
  one unclaim request.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Device
  ID of the device.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:32:\"Device
  identifier of the device.\";}s:11:\"sectionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"Required.
  The section type of the device's provisioning record.\";s:4:\"enum\";a:2:{i:0;s:24:\"SECTION_TYPE_UNSPECIFIED\";i:1;s:23:\"SECTION_TYPE_ZERO_TOUCH\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:22:\"PerDeviceStatusInBatch\";O:8:\"stdClass\":3:{s:11:\"description\";s:64:\"Captures
  the processing status for each device in the operation.\";s:10:\"properties\";O:8:\"stdClass\":4:{s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:52:\"If
  processing succeeds, the device ID of the device.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:15:\"errorIdentifier\";O:8:\"stdClass\":2:{s:11:\"description\";s:36:\"If
  processing fails, the error type.\";s:4:\"type\";s:6:\"string\";}s:12:\"errorMessage\";O:8:\"stdClass\":2:{s:11:\"description\";s:68:\"If
  processing fails, a developer message explaining what went wrong.\";s:4:\"type\";s:6:\"string\";}s:6:\"status\";O:8:\"stdClass\":3:{s:11:\"description\";s:49:\"The
  result status of the device after processing.\";s:4:\"enum\";a:8:{i:0;s:32:\"SINGLE_DEVICE_STATUS_UNSPECIFIED\";i:1;s:34:\"SINGLE_DEVICE_STATUS_UNKNOWN_ERROR\";i:2;s:32:\"SINGLE_DEVICE_STATUS_OTHER_ERROR\";i:3;s:28:\"SINGLE_DEVICE_STATUS_SUCCESS\";i:4;s:38:\"SINGLE_DEVICE_STATUS_PERMISSION_DENIED\";i:5;s:46:\"SINGLE_DEVICE_STATUS_INVALID_DEVICE_IDENTIFIER\";i:6;s:41:\"SINGLE_DEVICE_STATUS_INVALID_SECTION_TYPE\";i:7;s:38:\"SINGLE_DEVICE_STATUS_SECTION_NOT_YOURS\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:6:\"Status\";O:8:\"stdClass\":3:{s:11:\"description\";s:2437:\"The
  `Status` type defines a logical error model that is suitable for different\nprogramming
  environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc).
  The error model is designed to be:\n\n- Simple to use and understand for most users\n-
  Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains
  three pieces of data: error code, error message,\nand error details. The error code
  should be an enum value of\ngoogle.rpc.Code, but it may accept additional error
  codes if needed.  The\nerror message should be a developer-facing English message
  that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror
  message is needed, put the localized message in the error details or\nlocalize it
  in the client. The optional error details may contain arbitrary\ninformation about
  the error. There is a predefined set of error detail types\nin the package `google.rpc`
  that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status`
  message is the logical representation of the error model, but it\nis not necessarily
  the actual wire format. When the `Status` message is\nexposed in different client
  libraries and different wire protocols, it can be\nmapped differently. For example,
  it will likely be mapped to some exceptions\nin Java, but more likely mapped to
  some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message
  can be used in a variety of\nenvironments, either with or without APIs, to provide
  a\nconsistent developer experience across different environments.\n\nExample uses
  of this error model include:\n\n- Partial errors. If a service needs to return partial
  errors to the client,\n    it may embed the `Status` in the normal response to indicate
  the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps.
  Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations.
  If a client uses batch request and batch response, the\n    `Status` message should
  be used directly inside batch response, one for\n    each error sub-response.\n\n-
  Asynchronous operations. If an API call embeds asynchronous operation\n    results
  in its response, the status of those operations should be\n    represented directly
  using the `Status` message.\n\n- Logging. If some API errors are stored in logs,
  the message `Status` could\n    be used directly after any stripping needed for
  security/privacy reasons.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:4:\"code\";O:8:\"stdClass\":3:{s:11:\"description\";s:66:\"The
  status code, which should be an enum value of google.rpc.Code.\";s:6:\"format\";s:5:\"int32\";s:4:\"type\";s:7:\"integer\";}s:7:\"details\";O:8:\"stdClass\":3:{s:11:\"description\";s:105:\"A
  list of messages that carry the error details.  There is a common set of\nmessage
  types for APIs to use.\";s:5:\"items\";O:8:\"stdClass\":2:{s:20:\"additionalProperties\";O:8:\"stdClass\":1:{s:11:\"description\";s:61:\"Properties
  of the object. Contains field @type with type URL.\";}s:4:\"type\";s:6:\"object\";}s:4:\"type\";s:5:\"array\";}s:7:\"message\";O:8:\"stdClass\":2:{s:11:\"description\";s:188:\"A
  developer-facing error message, which should be in English. Any\nuser-facing error
  message should be localized and sent in the\ngoogle.rpc.Status.details field, or
  localized by the client.\";s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:20:\"UnclaimDeviceRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:36:\"Request
  message to unclaim a device.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:40:\"The
  device ID returned by `ClaimDevice`.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:60:\"The
  device identifier you used when you claimed this device.\";}s:11:\"sectionType\";O:8:\"stdClass\":3:{s:11:\"description\";s:63:\"Required.
  The section type of the device's provisioning record.\";s:4:\"enum\";a:2:{i:0;s:24:\"SECTION_TYPE_UNSPECIFIED\";i:1;s:23:\"SECTION_TYPE_ZERO_TOUCH\";}s:4:\"type\";s:6:\"string\";}}s:4:\"type\";s:6:\"object\";}s:21:\"UnclaimDevicesRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:51:\"Request
  to unclaim devices asynchronously in batch.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:8:\"unclaims\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"Required.
  The list of devices to unclaim.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:28:\"#/definitions/PartnerUnclaim\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:34:\"UpdateDeviceMetadataInBatchRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:43:\"Request
  to update device metadata in batch.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:7:\"updates\";O:8:\"stdClass\":3:{s:11:\"description\";s:39:\"Required.
  The list of metadata updates.\";s:5:\"items\";O:8:\"stdClass\":1:{s:4:\"$ref\";s:37:\"#/definitions/UpdateMetadataArguments\";}s:4:\"type\";s:5:\"array\";}}s:4:\"type\";s:6:\"object\";}s:27:\"UpdateDeviceMetadataRequest\";O:8:\"stdClass\":3:{s:11:\"description\";s:37:\"Request
  to set metadata for a device.\";s:10:\"properties\";O:8:\"stdClass\":1:{s:14:\"deviceMetadata\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DeviceMetadata\";s:11:\"description\";s:46:\"Required.
  The metdata to attach to the device.\";}}s:4:\"type\";s:6:\"object\";}s:23:\"UpdateMetadataArguments\";O:8:\"stdClass\":3:{s:11:\"description\";s:41:\"Identifies
  metdata updates to one device.\";s:10:\"properties\";O:8:\"stdClass\":3:{s:8:\"deviceId\";O:8:\"stdClass\":3:{s:11:\"description\";s:24:\"Device
  ID of the device.\";s:6:\"format\";s:5:\"int64\";s:4:\"type\";s:6:\"string\";}s:16:\"deviceIdentifier\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:30:\"#/definitions/DeviceIdentifier\";s:11:\"description\";s:18:\"Device
  identifier.\";}s:14:\"deviceMetadata\";O:8:\"stdClass\":2:{s:4:\"$ref\";s:28:\"#/definitions/DeviceMetadata\";s:11:\"description\";s:33:\"Required.
  The metadata to update.\";}}s:4:\"type\";s:6:\"object\";}}"
...
